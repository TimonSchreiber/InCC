Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Grammar

Rule 0     S' -> expression
Rule 1     expression -> FOR expression SEPARATOR expression SEPARATOR expression DO expression
Rule 2     expression -> LOCAL IDENTIFIER ASSIGN expression IN expression
Rule 3     expression -> WHILE expression DO expression
Rule 4     expression -> expression LESS_THEN expression
Rule 5     expression -> expression GREATER_THEN expression
Rule 6     expression -> expression LESS_EQUALS expression
Rule 7     expression -> expression GREATER_EQUALS expression
Rule 8     expression -> expression EQUALS expression
Rule 9     expression -> expression NOT_EQUALS expression
Rule 10    expression -> LOCK IDENTIFIER IN expression
Rule 11    expression -> LOOP expression DO expression
Rule 12    expression -> BEGIN body END
Rule 13    expression -> IDENTIFIER
Rule 14    expression -> NOT expression
Rule 15    expression -> IF expression THEN expression
Rule 16    expression -> IDENTIFIER ARROW expression
Rule 17    body -> expression
Rule 18    body -> body SEPARATOR expression
Rule 19    expression -> NUMBER
Rule 20    expression -> FLOAT
Rule 21    expression -> IDENTIFIER ASSIGN expression
Rule 22    expression -> expression AND expression
Rule 23    expression -> expression NAND expression
Rule 24    expression -> expression OR expression
Rule 25    expression -> expression NOR expression
Rule 26    expression -> expression XOR expression
Rule 27    expression -> expression EQ expression
Rule 28    expression -> expression NEQ expression
Rule 29    expression -> expression IMPL expression
Rule 30    expression -> IF expression THEN expression ELSE expression
Rule 31    expression -> expression LPAREN expression RPAREN
Rule 32    expression -> MINUS expression
Rule 33    expression -> expression PLUS expression
Rule 34    expression -> expression MINUS expression
Rule 35    expression -> expression TIMES expression
Rule 36    expression -> expression DIVIDE expression
Rule 37    expression -> TRUE
Rule 38    expression -> FALSE
Rule 39    expression -> LPAREN expression RPAREN

Terminals, with rules where they appear

AND                  : 22
ARROW                : 16
ASSIGN               : 2 21
BEGIN                : 12
DIVIDE               : 36
DO                   : 1 3 11
ELSE                 : 30
END                  : 12
EQ                   : 27
EQUALS               : 8
FALSE                : 38
FLOAT                : 20
FOR                  : 1
GREATER_EQUALS       : 7
GREATER_THEN         : 5
IDENTIFIER           : 2 10 13 16 21
IF                   : 15 30
IMPL                 : 29
IN                   : 2 10
LESS_EQUALS          : 6
LESS_THEN            : 4
LOCAL                : 2
LOCK                 : 10
LOOP                 : 11
LPAREN               : 31 39
MINUS                : 32 34
NAND                 : 23
NEQ                  : 28
NOR                  : 25
NOT                  : 14
NOT_EQUALS           : 9
NUMBER               : 19
OR                   : 24
PLUS                 : 33
RPAREN               : 31 39
SEPARATOR            : 1 1 18
THEN                 : 15 30
TIMES                : 35
TRUE                 : 37
WHILE                : 3
XOR                  : 26
error                : 

Nonterminals, with rules where they appear

body                 : 12 18
expression           : 1 1 1 1 2 2 3 3 4 4 5 5 6 6 7 7 8 8 9 9 10 11 11 14 15 15 16 17 18 21 22 22 23 23 24 24 25 25 26 26 27 27 28 28 29 29 30 30 30 31 31 32 33 33 34 34 35 35 36 36 39 0

Parsing method: LALR

state 0

    (0) S' -> . expression
    (1) expression -> . FOR expression SEPARATOR expression SEPARATOR expression DO expression
    (2) expression -> . LOCAL IDENTIFIER ASSIGN expression IN expression
    (3) expression -> . WHILE expression DO expression
    (4) expression -> . expression LESS_THEN expression
    (5) expression -> . expression GREATER_THEN expression
    (6) expression -> . expression LESS_EQUALS expression
    (7) expression -> . expression GREATER_EQUALS expression
    (8) expression -> . expression EQUALS expression
    (9) expression -> . expression NOT_EQUALS expression
    (10) expression -> . LOCK IDENTIFIER IN expression
    (11) expression -> . LOOP expression DO expression
    (12) expression -> . BEGIN body END
    (13) expression -> . IDENTIFIER
    (14) expression -> . NOT expression
    (15) expression -> . IF expression THEN expression
    (16) expression -> . IDENTIFIER ARROW expression
    (19) expression -> . NUMBER
    (20) expression -> . FLOAT
    (21) expression -> . IDENTIFIER ASSIGN expression
    (22) expression -> . expression AND expression
    (23) expression -> . expression NAND expression
    (24) expression -> . expression OR expression
    (25) expression -> . expression NOR expression
    (26) expression -> . expression XOR expression
    (27) expression -> . expression EQ expression
    (28) expression -> . expression NEQ expression
    (29) expression -> . expression IMPL expression
    (30) expression -> . IF expression THEN expression ELSE expression
    (31) expression -> . expression LPAREN expression RPAREN
    (32) expression -> . MINUS expression
    (33) expression -> . expression PLUS expression
    (34) expression -> . expression MINUS expression
    (35) expression -> . expression TIMES expression
    (36) expression -> . expression DIVIDE expression
    (37) expression -> . TRUE
    (38) expression -> . FALSE
    (39) expression -> . LPAREN expression RPAREN

    FOR             shift and go to state 2
    LOCAL           shift and go to state 3
    WHILE           shift and go to state 5
    LOCK            shift and go to state 6
    LOOP            shift and go to state 7
    BEGIN           shift and go to state 8
    IDENTIFIER      shift and go to state 4
    NOT             shift and go to state 9
    IF              shift and go to state 10
    NUMBER          shift and go to state 11
    FLOAT           shift and go to state 12
    MINUS           shift and go to state 14
    TRUE            shift and go to state 15
    FALSE           shift and go to state 16
    LPAREN          shift and go to state 13

    expression                     shift and go to state 1

state 1

    (0) S' -> expression .
    (4) expression -> expression . LESS_THEN expression
    (5) expression -> expression . GREATER_THEN expression
    (6) expression -> expression . LESS_EQUALS expression
    (7) expression -> expression . GREATER_EQUALS expression
    (8) expression -> expression . EQUALS expression
    (9) expression -> expression . NOT_EQUALS expression
    (22) expression -> expression . AND expression
    (23) expression -> expression . NAND expression
    (24) expression -> expression . OR expression
    (25) expression -> expression . NOR expression
    (26) expression -> expression . XOR expression
    (27) expression -> expression . EQ expression
    (28) expression -> expression . NEQ expression
    (29) expression -> expression . IMPL expression
    (31) expression -> expression . LPAREN expression RPAREN
    (33) expression -> expression . PLUS expression
    (34) expression -> expression . MINUS expression
    (35) expression -> expression . TIMES expression
    (36) expression -> expression . DIVIDE expression

    LESS_THEN       shift and go to state 17
    GREATER_THEN    shift and go to state 18
    LESS_EQUALS     shift and go to state 19
    GREATER_EQUALS  shift and go to state 20
    EQUALS          shift and go to state 21
    NOT_EQUALS      shift and go to state 22
    AND             shift and go to state 23
    NAND            shift and go to state 24
    OR              shift and go to state 25
    NOR             shift and go to state 26
    XOR             shift and go to state 27
    EQ              shift and go to state 28
    NEQ             shift and go to state 29
    IMPL            shift and go to state 30
    LPAREN          shift and go to state 31
    PLUS            shift and go to state 32
    MINUS           shift and go to state 33
    TIMES           shift and go to state 34
    DIVIDE          shift and go to state 35


state 2

    (1) expression -> FOR . expression SEPARATOR expression SEPARATOR expression DO expression
    (1) expression -> . FOR expression SEPARATOR expression SEPARATOR expression DO expression
    (2) expression -> . LOCAL IDENTIFIER ASSIGN expression IN expression
    (3) expression -> . WHILE expression DO expression
    (4) expression -> . expression LESS_THEN expression
    (5) expression -> . expression GREATER_THEN expression
    (6) expression -> . expression LESS_EQUALS expression
    (7) expression -> . expression GREATER_EQUALS expression
    (8) expression -> . expression EQUALS expression
    (9) expression -> . expression NOT_EQUALS expression
    (10) expression -> . LOCK IDENTIFIER IN expression
    (11) expression -> . LOOP expression DO expression
    (12) expression -> . BEGIN body END
    (13) expression -> . IDENTIFIER
    (14) expression -> . NOT expression
    (15) expression -> . IF expression THEN expression
    (16) expression -> . IDENTIFIER ARROW expression
    (19) expression -> . NUMBER
    (20) expression -> . FLOAT
    (21) expression -> . IDENTIFIER ASSIGN expression
    (22) expression -> . expression AND expression
    (23) expression -> . expression NAND expression
    (24) expression -> . expression OR expression
    (25) expression -> . expression NOR expression
    (26) expression -> . expression XOR expression
    (27) expression -> . expression EQ expression
    (28) expression -> . expression NEQ expression
    (29) expression -> . expression IMPL expression
    (30) expression -> . IF expression THEN expression ELSE expression
    (31) expression -> . expression LPAREN expression RPAREN
    (32) expression -> . MINUS expression
    (33) expression -> . expression PLUS expression
    (34) expression -> . expression MINUS expression
    (35) expression -> . expression TIMES expression
    (36) expression -> . expression DIVIDE expression
    (37) expression -> . TRUE
    (38) expression -> . FALSE
    (39) expression -> . LPAREN expression RPAREN

    FOR             shift and go to state 2
    LOCAL           shift and go to state 3
    WHILE           shift and go to state 5
    LOCK            shift and go to state 6
    LOOP            shift and go to state 7
    BEGIN           shift and go to state 8
    IDENTIFIER      shift and go to state 4
    NOT             shift and go to state 9
    IF              shift and go to state 10
    NUMBER          shift and go to state 11
    FLOAT           shift and go to state 12
    MINUS           shift and go to state 14
    TRUE            shift and go to state 15
    FALSE           shift and go to state 16
    LPAREN          shift and go to state 13

    expression                     shift and go to state 36

state 3

    (2) expression -> LOCAL . IDENTIFIER ASSIGN expression IN expression

    IDENTIFIER      shift and go to state 37


state 4

    (13) expression -> IDENTIFIER .
    (16) expression -> IDENTIFIER . ARROW expression
    (21) expression -> IDENTIFIER . ASSIGN expression

    LESS_THEN       reduce using rule 13 (expression -> IDENTIFIER .)
    GREATER_THEN    reduce using rule 13 (expression -> IDENTIFIER .)
    LESS_EQUALS     reduce using rule 13 (expression -> IDENTIFIER .)
    GREATER_EQUALS  reduce using rule 13 (expression -> IDENTIFIER .)
    EQUALS          reduce using rule 13 (expression -> IDENTIFIER .)
    NOT_EQUALS      reduce using rule 13 (expression -> IDENTIFIER .)
    AND             reduce using rule 13 (expression -> IDENTIFIER .)
    NAND            reduce using rule 13 (expression -> IDENTIFIER .)
    OR              reduce using rule 13 (expression -> IDENTIFIER .)
    NOR             reduce using rule 13 (expression -> IDENTIFIER .)
    XOR             reduce using rule 13 (expression -> IDENTIFIER .)
    EQ              reduce using rule 13 (expression -> IDENTIFIER .)
    NEQ             reduce using rule 13 (expression -> IDENTIFIER .)
    IMPL            reduce using rule 13 (expression -> IDENTIFIER .)
    LPAREN          reduce using rule 13 (expression -> IDENTIFIER .)
    PLUS            reduce using rule 13 (expression -> IDENTIFIER .)
    MINUS           reduce using rule 13 (expression -> IDENTIFIER .)
    TIMES           reduce using rule 13 (expression -> IDENTIFIER .)
    DIVIDE          reduce using rule 13 (expression -> IDENTIFIER .)
    $end            reduce using rule 13 (expression -> IDENTIFIER .)
    SEPARATOR       reduce using rule 13 (expression -> IDENTIFIER .)
    DO              reduce using rule 13 (expression -> IDENTIFIER .)
    END             reduce using rule 13 (expression -> IDENTIFIER .)
    THEN            reduce using rule 13 (expression -> IDENTIFIER .)
    RPAREN          reduce using rule 13 (expression -> IDENTIFIER .)
    IN              reduce using rule 13 (expression -> IDENTIFIER .)
    ELSE            reduce using rule 13 (expression -> IDENTIFIER .)
    ARROW           shift and go to state 38
    ASSIGN          shift and go to state 39


state 5

    (3) expression -> WHILE . expression DO expression
    (1) expression -> . FOR expression SEPARATOR expression SEPARATOR expression DO expression
    (2) expression -> . LOCAL IDENTIFIER ASSIGN expression IN expression
    (3) expression -> . WHILE expression DO expression
    (4) expression -> . expression LESS_THEN expression
    (5) expression -> . expression GREATER_THEN expression
    (6) expression -> . expression LESS_EQUALS expression
    (7) expression -> . expression GREATER_EQUALS expression
    (8) expression -> . expression EQUALS expression
    (9) expression -> . expression NOT_EQUALS expression
    (10) expression -> . LOCK IDENTIFIER IN expression
    (11) expression -> . LOOP expression DO expression
    (12) expression -> . BEGIN body END
    (13) expression -> . IDENTIFIER
    (14) expression -> . NOT expression
    (15) expression -> . IF expression THEN expression
    (16) expression -> . IDENTIFIER ARROW expression
    (19) expression -> . NUMBER
    (20) expression -> . FLOAT
    (21) expression -> . IDENTIFIER ASSIGN expression
    (22) expression -> . expression AND expression
    (23) expression -> . expression NAND expression
    (24) expression -> . expression OR expression
    (25) expression -> . expression NOR expression
    (26) expression -> . expression XOR expression
    (27) expression -> . expression EQ expression
    (28) expression -> . expression NEQ expression
    (29) expression -> . expression IMPL expression
    (30) expression -> . IF expression THEN expression ELSE expression
    (31) expression -> . expression LPAREN expression RPAREN
    (32) expression -> . MINUS expression
    (33) expression -> . expression PLUS expression
    (34) expression -> . expression MINUS expression
    (35) expression -> . expression TIMES expression
    (36) expression -> . expression DIVIDE expression
    (37) expression -> . TRUE
    (38) expression -> . FALSE
    (39) expression -> . LPAREN expression RPAREN

    FOR             shift and go to state 2
    LOCAL           shift and go to state 3
    WHILE           shift and go to state 5
    LOCK            shift and go to state 6
    LOOP            shift and go to state 7
    BEGIN           shift and go to state 8
    IDENTIFIER      shift and go to state 4
    NOT             shift and go to state 9
    IF              shift and go to state 10
    NUMBER          shift and go to state 11
    FLOAT           shift and go to state 12
    MINUS           shift and go to state 14
    TRUE            shift and go to state 15
    FALSE           shift and go to state 16
    LPAREN          shift and go to state 13

    expression                     shift and go to state 40

state 6

    (10) expression -> LOCK . IDENTIFIER IN expression

    IDENTIFIER      shift and go to state 41


state 7

    (11) expression -> LOOP . expression DO expression
    (1) expression -> . FOR expression SEPARATOR expression SEPARATOR expression DO expression
    (2) expression -> . LOCAL IDENTIFIER ASSIGN expression IN expression
    (3) expression -> . WHILE expression DO expression
    (4) expression -> . expression LESS_THEN expression
    (5) expression -> . expression GREATER_THEN expression
    (6) expression -> . expression LESS_EQUALS expression
    (7) expression -> . expression GREATER_EQUALS expression
    (8) expression -> . expression EQUALS expression
    (9) expression -> . expression NOT_EQUALS expression
    (10) expression -> . LOCK IDENTIFIER IN expression
    (11) expression -> . LOOP expression DO expression
    (12) expression -> . BEGIN body END
    (13) expression -> . IDENTIFIER
    (14) expression -> . NOT expression
    (15) expression -> . IF expression THEN expression
    (16) expression -> . IDENTIFIER ARROW expression
    (19) expression -> . NUMBER
    (20) expression -> . FLOAT
    (21) expression -> . IDENTIFIER ASSIGN expression
    (22) expression -> . expression AND expression
    (23) expression -> . expression NAND expression
    (24) expression -> . expression OR expression
    (25) expression -> . expression NOR expression
    (26) expression -> . expression XOR expression
    (27) expression -> . expression EQ expression
    (28) expression -> . expression NEQ expression
    (29) expression -> . expression IMPL expression
    (30) expression -> . IF expression THEN expression ELSE expression
    (31) expression -> . expression LPAREN expression RPAREN
    (32) expression -> . MINUS expression
    (33) expression -> . expression PLUS expression
    (34) expression -> . expression MINUS expression
    (35) expression -> . expression TIMES expression
    (36) expression -> . expression DIVIDE expression
    (37) expression -> . TRUE
    (38) expression -> . FALSE
    (39) expression -> . LPAREN expression RPAREN

    FOR             shift and go to state 2
    LOCAL           shift and go to state 3
    WHILE           shift and go to state 5
    LOCK            shift and go to state 6
    LOOP            shift and go to state 7
    BEGIN           shift and go to state 8
    IDENTIFIER      shift and go to state 4
    NOT             shift and go to state 9
    IF              shift and go to state 10
    NUMBER          shift and go to state 11
    FLOAT           shift and go to state 12
    MINUS           shift and go to state 14
    TRUE            shift and go to state 15
    FALSE           shift and go to state 16
    LPAREN          shift and go to state 13

    expression                     shift and go to state 42

state 8

    (12) expression -> BEGIN . body END
    (17) body -> . expression
    (18) body -> . body SEPARATOR expression
    (1) expression -> . FOR expression SEPARATOR expression SEPARATOR expression DO expression
    (2) expression -> . LOCAL IDENTIFIER ASSIGN expression IN expression
    (3) expression -> . WHILE expression DO expression
    (4) expression -> . expression LESS_THEN expression
    (5) expression -> . expression GREATER_THEN expression
    (6) expression -> . expression LESS_EQUALS expression
    (7) expression -> . expression GREATER_EQUALS expression
    (8) expression -> . expression EQUALS expression
    (9) expression -> . expression NOT_EQUALS expression
    (10) expression -> . LOCK IDENTIFIER IN expression
    (11) expression -> . LOOP expression DO expression
    (12) expression -> . BEGIN body END
    (13) expression -> . IDENTIFIER
    (14) expression -> . NOT expression
    (15) expression -> . IF expression THEN expression
    (16) expression -> . IDENTIFIER ARROW expression
    (19) expression -> . NUMBER
    (20) expression -> . FLOAT
    (21) expression -> . IDENTIFIER ASSIGN expression
    (22) expression -> . expression AND expression
    (23) expression -> . expression NAND expression
    (24) expression -> . expression OR expression
    (25) expression -> . expression NOR expression
    (26) expression -> . expression XOR expression
    (27) expression -> . expression EQ expression
    (28) expression -> . expression NEQ expression
    (29) expression -> . expression IMPL expression
    (30) expression -> . IF expression THEN expression ELSE expression
    (31) expression -> . expression LPAREN expression RPAREN
    (32) expression -> . MINUS expression
    (33) expression -> . expression PLUS expression
    (34) expression -> . expression MINUS expression
    (35) expression -> . expression TIMES expression
    (36) expression -> . expression DIVIDE expression
    (37) expression -> . TRUE
    (38) expression -> . FALSE
    (39) expression -> . LPAREN expression RPAREN

    FOR             shift and go to state 2
    LOCAL           shift and go to state 3
    WHILE           shift and go to state 5
    LOCK            shift and go to state 6
    LOOP            shift and go to state 7
    BEGIN           shift and go to state 8
    IDENTIFIER      shift and go to state 4
    NOT             shift and go to state 9
    IF              shift and go to state 10
    NUMBER          shift and go to state 11
    FLOAT           shift and go to state 12
    MINUS           shift and go to state 14
    TRUE            shift and go to state 15
    FALSE           shift and go to state 16
    LPAREN          shift and go to state 13

    body                           shift and go to state 43
    expression                     shift and go to state 44

state 9

    (14) expression -> NOT . expression
    (1) expression -> . FOR expression SEPARATOR expression SEPARATOR expression DO expression
    (2) expression -> . LOCAL IDENTIFIER ASSIGN expression IN expression
    (3) expression -> . WHILE expression DO expression
    (4) expression -> . expression LESS_THEN expression
    (5) expression -> . expression GREATER_THEN expression
    (6) expression -> . expression LESS_EQUALS expression
    (7) expression -> . expression GREATER_EQUALS expression
    (8) expression -> . expression EQUALS expression
    (9) expression -> . expression NOT_EQUALS expression
    (10) expression -> . LOCK IDENTIFIER IN expression
    (11) expression -> . LOOP expression DO expression
    (12) expression -> . BEGIN body END
    (13) expression -> . IDENTIFIER
    (14) expression -> . NOT expression
    (15) expression -> . IF expression THEN expression
    (16) expression -> . IDENTIFIER ARROW expression
    (19) expression -> . NUMBER
    (20) expression -> . FLOAT
    (21) expression -> . IDENTIFIER ASSIGN expression
    (22) expression -> . expression AND expression
    (23) expression -> . expression NAND expression
    (24) expression -> . expression OR expression
    (25) expression -> . expression NOR expression
    (26) expression -> . expression XOR expression
    (27) expression -> . expression EQ expression
    (28) expression -> . expression NEQ expression
    (29) expression -> . expression IMPL expression
    (30) expression -> . IF expression THEN expression ELSE expression
    (31) expression -> . expression LPAREN expression RPAREN
    (32) expression -> . MINUS expression
    (33) expression -> . expression PLUS expression
    (34) expression -> . expression MINUS expression
    (35) expression -> . expression TIMES expression
    (36) expression -> . expression DIVIDE expression
    (37) expression -> . TRUE
    (38) expression -> . FALSE
    (39) expression -> . LPAREN expression RPAREN

    FOR             shift and go to state 2
    LOCAL           shift and go to state 3
    WHILE           shift and go to state 5
    LOCK            shift and go to state 6
    LOOP            shift and go to state 7
    BEGIN           shift and go to state 8
    IDENTIFIER      shift and go to state 4
    NOT             shift and go to state 9
    IF              shift and go to state 10
    NUMBER          shift and go to state 11
    FLOAT           shift and go to state 12
    MINUS           shift and go to state 14
    TRUE            shift and go to state 15
    FALSE           shift and go to state 16
    LPAREN          shift and go to state 13

    expression                     shift and go to state 45

state 10

    (15) expression -> IF . expression THEN expression
    (30) expression -> IF . expression THEN expression ELSE expression
    (1) expression -> . FOR expression SEPARATOR expression SEPARATOR expression DO expression
    (2) expression -> . LOCAL IDENTIFIER ASSIGN expression IN expression
    (3) expression -> . WHILE expression DO expression
    (4) expression -> . expression LESS_THEN expression
    (5) expression -> . expression GREATER_THEN expression
    (6) expression -> . expression LESS_EQUALS expression
    (7) expression -> . expression GREATER_EQUALS expression
    (8) expression -> . expression EQUALS expression
    (9) expression -> . expression NOT_EQUALS expression
    (10) expression -> . LOCK IDENTIFIER IN expression
    (11) expression -> . LOOP expression DO expression
    (12) expression -> . BEGIN body END
    (13) expression -> . IDENTIFIER
    (14) expression -> . NOT expression
    (15) expression -> . IF expression THEN expression
    (16) expression -> . IDENTIFIER ARROW expression
    (19) expression -> . NUMBER
    (20) expression -> . FLOAT
    (21) expression -> . IDENTIFIER ASSIGN expression
    (22) expression -> . expression AND expression
    (23) expression -> . expression NAND expression
    (24) expression -> . expression OR expression
    (25) expression -> . expression NOR expression
    (26) expression -> . expression XOR expression
    (27) expression -> . expression EQ expression
    (28) expression -> . expression NEQ expression
    (29) expression -> . expression IMPL expression
    (30) expression -> . IF expression THEN expression ELSE expression
    (31) expression -> . expression LPAREN expression RPAREN
    (32) expression -> . MINUS expression
    (33) expression -> . expression PLUS expression
    (34) expression -> . expression MINUS expression
    (35) expression -> . expression TIMES expression
    (36) expression -> . expression DIVIDE expression
    (37) expression -> . TRUE
    (38) expression -> . FALSE
    (39) expression -> . LPAREN expression RPAREN

    FOR             shift and go to state 2
    LOCAL           shift and go to state 3
    WHILE           shift and go to state 5
    LOCK            shift and go to state 6
    LOOP            shift and go to state 7
    BEGIN           shift and go to state 8
    IDENTIFIER      shift and go to state 4
    NOT             shift and go to state 9
    IF              shift and go to state 10
    NUMBER          shift and go to state 11
    FLOAT           shift and go to state 12
    MINUS           shift and go to state 14
    TRUE            shift and go to state 15
    FALSE           shift and go to state 16
    LPAREN          shift and go to state 13

    expression                     shift and go to state 46

state 11

    (19) expression -> NUMBER .

    LESS_THEN       reduce using rule 19 (expression -> NUMBER .)
    GREATER_THEN    reduce using rule 19 (expression -> NUMBER .)
    LESS_EQUALS     reduce using rule 19 (expression -> NUMBER .)
    GREATER_EQUALS  reduce using rule 19 (expression -> NUMBER .)
    EQUALS          reduce using rule 19 (expression -> NUMBER .)
    NOT_EQUALS      reduce using rule 19 (expression -> NUMBER .)
    AND             reduce using rule 19 (expression -> NUMBER .)
    NAND            reduce using rule 19 (expression -> NUMBER .)
    OR              reduce using rule 19 (expression -> NUMBER .)
    NOR             reduce using rule 19 (expression -> NUMBER .)
    XOR             reduce using rule 19 (expression -> NUMBER .)
    EQ              reduce using rule 19 (expression -> NUMBER .)
    NEQ             reduce using rule 19 (expression -> NUMBER .)
    IMPL            reduce using rule 19 (expression -> NUMBER .)
    LPAREN          reduce using rule 19 (expression -> NUMBER .)
    PLUS            reduce using rule 19 (expression -> NUMBER .)
    MINUS           reduce using rule 19 (expression -> NUMBER .)
    TIMES           reduce using rule 19 (expression -> NUMBER .)
    DIVIDE          reduce using rule 19 (expression -> NUMBER .)
    $end            reduce using rule 19 (expression -> NUMBER .)
    SEPARATOR       reduce using rule 19 (expression -> NUMBER .)
    DO              reduce using rule 19 (expression -> NUMBER .)
    END             reduce using rule 19 (expression -> NUMBER .)
    THEN            reduce using rule 19 (expression -> NUMBER .)
    RPAREN          reduce using rule 19 (expression -> NUMBER .)
    IN              reduce using rule 19 (expression -> NUMBER .)
    ELSE            reduce using rule 19 (expression -> NUMBER .)


state 12

    (20) expression -> FLOAT .

    LESS_THEN       reduce using rule 20 (expression -> FLOAT .)
    GREATER_THEN    reduce using rule 20 (expression -> FLOAT .)
    LESS_EQUALS     reduce using rule 20 (expression -> FLOAT .)
    GREATER_EQUALS  reduce using rule 20 (expression -> FLOAT .)
    EQUALS          reduce using rule 20 (expression -> FLOAT .)
    NOT_EQUALS      reduce using rule 20 (expression -> FLOAT .)
    AND             reduce using rule 20 (expression -> FLOAT .)
    NAND            reduce using rule 20 (expression -> FLOAT .)
    OR              reduce using rule 20 (expression -> FLOAT .)
    NOR             reduce using rule 20 (expression -> FLOAT .)
    XOR             reduce using rule 20 (expression -> FLOAT .)
    EQ              reduce using rule 20 (expression -> FLOAT .)
    NEQ             reduce using rule 20 (expression -> FLOAT .)
    IMPL            reduce using rule 20 (expression -> FLOAT .)
    LPAREN          reduce using rule 20 (expression -> FLOAT .)
    PLUS            reduce using rule 20 (expression -> FLOAT .)
    MINUS           reduce using rule 20 (expression -> FLOAT .)
    TIMES           reduce using rule 20 (expression -> FLOAT .)
    DIVIDE          reduce using rule 20 (expression -> FLOAT .)
    $end            reduce using rule 20 (expression -> FLOAT .)
    SEPARATOR       reduce using rule 20 (expression -> FLOAT .)
    DO              reduce using rule 20 (expression -> FLOAT .)
    END             reduce using rule 20 (expression -> FLOAT .)
    THEN            reduce using rule 20 (expression -> FLOAT .)
    RPAREN          reduce using rule 20 (expression -> FLOAT .)
    IN              reduce using rule 20 (expression -> FLOAT .)
    ELSE            reduce using rule 20 (expression -> FLOAT .)


state 13

    (39) expression -> LPAREN . expression RPAREN
    (1) expression -> . FOR expression SEPARATOR expression SEPARATOR expression DO expression
    (2) expression -> . LOCAL IDENTIFIER ASSIGN expression IN expression
    (3) expression -> . WHILE expression DO expression
    (4) expression -> . expression LESS_THEN expression
    (5) expression -> . expression GREATER_THEN expression
    (6) expression -> . expression LESS_EQUALS expression
    (7) expression -> . expression GREATER_EQUALS expression
    (8) expression -> . expression EQUALS expression
    (9) expression -> . expression NOT_EQUALS expression
    (10) expression -> . LOCK IDENTIFIER IN expression
    (11) expression -> . LOOP expression DO expression
    (12) expression -> . BEGIN body END
    (13) expression -> . IDENTIFIER
    (14) expression -> . NOT expression
    (15) expression -> . IF expression THEN expression
    (16) expression -> . IDENTIFIER ARROW expression
    (19) expression -> . NUMBER
    (20) expression -> . FLOAT
    (21) expression -> . IDENTIFIER ASSIGN expression
    (22) expression -> . expression AND expression
    (23) expression -> . expression NAND expression
    (24) expression -> . expression OR expression
    (25) expression -> . expression NOR expression
    (26) expression -> . expression XOR expression
    (27) expression -> . expression EQ expression
    (28) expression -> . expression NEQ expression
    (29) expression -> . expression IMPL expression
    (30) expression -> . IF expression THEN expression ELSE expression
    (31) expression -> . expression LPAREN expression RPAREN
    (32) expression -> . MINUS expression
    (33) expression -> . expression PLUS expression
    (34) expression -> . expression MINUS expression
    (35) expression -> . expression TIMES expression
    (36) expression -> . expression DIVIDE expression
    (37) expression -> . TRUE
    (38) expression -> . FALSE
    (39) expression -> . LPAREN expression RPAREN

    FOR             shift and go to state 2
    LOCAL           shift and go to state 3
    WHILE           shift and go to state 5
    LOCK            shift and go to state 6
    LOOP            shift and go to state 7
    BEGIN           shift and go to state 8
    IDENTIFIER      shift and go to state 4
    NOT             shift and go to state 9
    IF              shift and go to state 10
    NUMBER          shift and go to state 11
    FLOAT           shift and go to state 12
    MINUS           shift and go to state 14
    TRUE            shift and go to state 15
    FALSE           shift and go to state 16
    LPAREN          shift and go to state 13

    expression                     shift and go to state 47

state 14

    (32) expression -> MINUS . expression
    (1) expression -> . FOR expression SEPARATOR expression SEPARATOR expression DO expression
    (2) expression -> . LOCAL IDENTIFIER ASSIGN expression IN expression
    (3) expression -> . WHILE expression DO expression
    (4) expression -> . expression LESS_THEN expression
    (5) expression -> . expression GREATER_THEN expression
    (6) expression -> . expression LESS_EQUALS expression
    (7) expression -> . expression GREATER_EQUALS expression
    (8) expression -> . expression EQUALS expression
    (9) expression -> . expression NOT_EQUALS expression
    (10) expression -> . LOCK IDENTIFIER IN expression
    (11) expression -> . LOOP expression DO expression
    (12) expression -> . BEGIN body END
    (13) expression -> . IDENTIFIER
    (14) expression -> . NOT expression
    (15) expression -> . IF expression THEN expression
    (16) expression -> . IDENTIFIER ARROW expression
    (19) expression -> . NUMBER
    (20) expression -> . FLOAT
    (21) expression -> . IDENTIFIER ASSIGN expression
    (22) expression -> . expression AND expression
    (23) expression -> . expression NAND expression
    (24) expression -> . expression OR expression
    (25) expression -> . expression NOR expression
    (26) expression -> . expression XOR expression
    (27) expression -> . expression EQ expression
    (28) expression -> . expression NEQ expression
    (29) expression -> . expression IMPL expression
    (30) expression -> . IF expression THEN expression ELSE expression
    (31) expression -> . expression LPAREN expression RPAREN
    (32) expression -> . MINUS expression
    (33) expression -> . expression PLUS expression
    (34) expression -> . expression MINUS expression
    (35) expression -> . expression TIMES expression
    (36) expression -> . expression DIVIDE expression
    (37) expression -> . TRUE
    (38) expression -> . FALSE
    (39) expression -> . LPAREN expression RPAREN

    FOR             shift and go to state 2
    LOCAL           shift and go to state 3
    WHILE           shift and go to state 5
    LOCK            shift and go to state 6
    LOOP            shift and go to state 7
    BEGIN           shift and go to state 8
    IDENTIFIER      shift and go to state 4
    NOT             shift and go to state 9
    IF              shift and go to state 10
    NUMBER          shift and go to state 11
    FLOAT           shift and go to state 12
    MINUS           shift and go to state 14
    TRUE            shift and go to state 15
    FALSE           shift and go to state 16
    LPAREN          shift and go to state 13

    expression                     shift and go to state 48

state 15

    (37) expression -> TRUE .

    LESS_THEN       reduce using rule 37 (expression -> TRUE .)
    GREATER_THEN    reduce using rule 37 (expression -> TRUE .)
    LESS_EQUALS     reduce using rule 37 (expression -> TRUE .)
    GREATER_EQUALS  reduce using rule 37 (expression -> TRUE .)
    EQUALS          reduce using rule 37 (expression -> TRUE .)
    NOT_EQUALS      reduce using rule 37 (expression -> TRUE .)
    AND             reduce using rule 37 (expression -> TRUE .)
    NAND            reduce using rule 37 (expression -> TRUE .)
    OR              reduce using rule 37 (expression -> TRUE .)
    NOR             reduce using rule 37 (expression -> TRUE .)
    XOR             reduce using rule 37 (expression -> TRUE .)
    EQ              reduce using rule 37 (expression -> TRUE .)
    NEQ             reduce using rule 37 (expression -> TRUE .)
    IMPL            reduce using rule 37 (expression -> TRUE .)
    LPAREN          reduce using rule 37 (expression -> TRUE .)
    PLUS            reduce using rule 37 (expression -> TRUE .)
    MINUS           reduce using rule 37 (expression -> TRUE .)
    TIMES           reduce using rule 37 (expression -> TRUE .)
    DIVIDE          reduce using rule 37 (expression -> TRUE .)
    $end            reduce using rule 37 (expression -> TRUE .)
    SEPARATOR       reduce using rule 37 (expression -> TRUE .)
    DO              reduce using rule 37 (expression -> TRUE .)
    END             reduce using rule 37 (expression -> TRUE .)
    THEN            reduce using rule 37 (expression -> TRUE .)
    RPAREN          reduce using rule 37 (expression -> TRUE .)
    IN              reduce using rule 37 (expression -> TRUE .)
    ELSE            reduce using rule 37 (expression -> TRUE .)


state 16

    (38) expression -> FALSE .

    LESS_THEN       reduce using rule 38 (expression -> FALSE .)
    GREATER_THEN    reduce using rule 38 (expression -> FALSE .)
    LESS_EQUALS     reduce using rule 38 (expression -> FALSE .)
    GREATER_EQUALS  reduce using rule 38 (expression -> FALSE .)
    EQUALS          reduce using rule 38 (expression -> FALSE .)
    NOT_EQUALS      reduce using rule 38 (expression -> FALSE .)
    AND             reduce using rule 38 (expression -> FALSE .)
    NAND            reduce using rule 38 (expression -> FALSE .)
    OR              reduce using rule 38 (expression -> FALSE .)
    NOR             reduce using rule 38 (expression -> FALSE .)
    XOR             reduce using rule 38 (expression -> FALSE .)
    EQ              reduce using rule 38 (expression -> FALSE .)
    NEQ             reduce using rule 38 (expression -> FALSE .)
    IMPL            reduce using rule 38 (expression -> FALSE .)
    LPAREN          reduce using rule 38 (expression -> FALSE .)
    PLUS            reduce using rule 38 (expression -> FALSE .)
    MINUS           reduce using rule 38 (expression -> FALSE .)
    TIMES           reduce using rule 38 (expression -> FALSE .)
    DIVIDE          reduce using rule 38 (expression -> FALSE .)
    $end            reduce using rule 38 (expression -> FALSE .)
    SEPARATOR       reduce using rule 38 (expression -> FALSE .)
    DO              reduce using rule 38 (expression -> FALSE .)
    END             reduce using rule 38 (expression -> FALSE .)
    THEN            reduce using rule 38 (expression -> FALSE .)
    RPAREN          reduce using rule 38 (expression -> FALSE .)
    IN              reduce using rule 38 (expression -> FALSE .)
    ELSE            reduce using rule 38 (expression -> FALSE .)


state 17

    (4) expression -> expression LESS_THEN . expression
    (1) expression -> . FOR expression SEPARATOR expression SEPARATOR expression DO expression
    (2) expression -> . LOCAL IDENTIFIER ASSIGN expression IN expression
    (3) expression -> . WHILE expression DO expression
    (4) expression -> . expression LESS_THEN expression
    (5) expression -> . expression GREATER_THEN expression
    (6) expression -> . expression LESS_EQUALS expression
    (7) expression -> . expression GREATER_EQUALS expression
    (8) expression -> . expression EQUALS expression
    (9) expression -> . expression NOT_EQUALS expression
    (10) expression -> . LOCK IDENTIFIER IN expression
    (11) expression -> . LOOP expression DO expression
    (12) expression -> . BEGIN body END
    (13) expression -> . IDENTIFIER
    (14) expression -> . NOT expression
    (15) expression -> . IF expression THEN expression
    (16) expression -> . IDENTIFIER ARROW expression
    (19) expression -> . NUMBER
    (20) expression -> . FLOAT
    (21) expression -> . IDENTIFIER ASSIGN expression
    (22) expression -> . expression AND expression
    (23) expression -> . expression NAND expression
    (24) expression -> . expression OR expression
    (25) expression -> . expression NOR expression
    (26) expression -> . expression XOR expression
    (27) expression -> . expression EQ expression
    (28) expression -> . expression NEQ expression
    (29) expression -> . expression IMPL expression
    (30) expression -> . IF expression THEN expression ELSE expression
    (31) expression -> . expression LPAREN expression RPAREN
    (32) expression -> . MINUS expression
    (33) expression -> . expression PLUS expression
    (34) expression -> . expression MINUS expression
    (35) expression -> . expression TIMES expression
    (36) expression -> . expression DIVIDE expression
    (37) expression -> . TRUE
    (38) expression -> . FALSE
    (39) expression -> . LPAREN expression RPAREN

    FOR             shift and go to state 2
    LOCAL           shift and go to state 3
    WHILE           shift and go to state 5
    LOCK            shift and go to state 6
    LOOP            shift and go to state 7
    BEGIN           shift and go to state 8
    IDENTIFIER      shift and go to state 4
    NOT             shift and go to state 9
    IF              shift and go to state 10
    NUMBER          shift and go to state 11
    FLOAT           shift and go to state 12
    MINUS           shift and go to state 14
    TRUE            shift and go to state 15
    FALSE           shift and go to state 16
    LPAREN          shift and go to state 13

    expression                     shift and go to state 49

state 18

    (5) expression -> expression GREATER_THEN . expression
    (1) expression -> . FOR expression SEPARATOR expression SEPARATOR expression DO expression
    (2) expression -> . LOCAL IDENTIFIER ASSIGN expression IN expression
    (3) expression -> . WHILE expression DO expression
    (4) expression -> . expression LESS_THEN expression
    (5) expression -> . expression GREATER_THEN expression
    (6) expression -> . expression LESS_EQUALS expression
    (7) expression -> . expression GREATER_EQUALS expression
    (8) expression -> . expression EQUALS expression
    (9) expression -> . expression NOT_EQUALS expression
    (10) expression -> . LOCK IDENTIFIER IN expression
    (11) expression -> . LOOP expression DO expression
    (12) expression -> . BEGIN body END
    (13) expression -> . IDENTIFIER
    (14) expression -> . NOT expression
    (15) expression -> . IF expression THEN expression
    (16) expression -> . IDENTIFIER ARROW expression
    (19) expression -> . NUMBER
    (20) expression -> . FLOAT
    (21) expression -> . IDENTIFIER ASSIGN expression
    (22) expression -> . expression AND expression
    (23) expression -> . expression NAND expression
    (24) expression -> . expression OR expression
    (25) expression -> . expression NOR expression
    (26) expression -> . expression XOR expression
    (27) expression -> . expression EQ expression
    (28) expression -> . expression NEQ expression
    (29) expression -> . expression IMPL expression
    (30) expression -> . IF expression THEN expression ELSE expression
    (31) expression -> . expression LPAREN expression RPAREN
    (32) expression -> . MINUS expression
    (33) expression -> . expression PLUS expression
    (34) expression -> . expression MINUS expression
    (35) expression -> . expression TIMES expression
    (36) expression -> . expression DIVIDE expression
    (37) expression -> . TRUE
    (38) expression -> . FALSE
    (39) expression -> . LPAREN expression RPAREN

    FOR             shift and go to state 2
    LOCAL           shift and go to state 3
    WHILE           shift and go to state 5
    LOCK            shift and go to state 6
    LOOP            shift and go to state 7
    BEGIN           shift and go to state 8
    IDENTIFIER      shift and go to state 4
    NOT             shift and go to state 9
    IF              shift and go to state 10
    NUMBER          shift and go to state 11
    FLOAT           shift and go to state 12
    MINUS           shift and go to state 14
    TRUE            shift and go to state 15
    FALSE           shift and go to state 16
    LPAREN          shift and go to state 13

    expression                     shift and go to state 50

state 19

    (6) expression -> expression LESS_EQUALS . expression
    (1) expression -> . FOR expression SEPARATOR expression SEPARATOR expression DO expression
    (2) expression -> . LOCAL IDENTIFIER ASSIGN expression IN expression
    (3) expression -> . WHILE expression DO expression
    (4) expression -> . expression LESS_THEN expression
    (5) expression -> . expression GREATER_THEN expression
    (6) expression -> . expression LESS_EQUALS expression
    (7) expression -> . expression GREATER_EQUALS expression
    (8) expression -> . expression EQUALS expression
    (9) expression -> . expression NOT_EQUALS expression
    (10) expression -> . LOCK IDENTIFIER IN expression
    (11) expression -> . LOOP expression DO expression
    (12) expression -> . BEGIN body END
    (13) expression -> . IDENTIFIER
    (14) expression -> . NOT expression
    (15) expression -> . IF expression THEN expression
    (16) expression -> . IDENTIFIER ARROW expression
    (19) expression -> . NUMBER
    (20) expression -> . FLOAT
    (21) expression -> . IDENTIFIER ASSIGN expression
    (22) expression -> . expression AND expression
    (23) expression -> . expression NAND expression
    (24) expression -> . expression OR expression
    (25) expression -> . expression NOR expression
    (26) expression -> . expression XOR expression
    (27) expression -> . expression EQ expression
    (28) expression -> . expression NEQ expression
    (29) expression -> . expression IMPL expression
    (30) expression -> . IF expression THEN expression ELSE expression
    (31) expression -> . expression LPAREN expression RPAREN
    (32) expression -> . MINUS expression
    (33) expression -> . expression PLUS expression
    (34) expression -> . expression MINUS expression
    (35) expression -> . expression TIMES expression
    (36) expression -> . expression DIVIDE expression
    (37) expression -> . TRUE
    (38) expression -> . FALSE
    (39) expression -> . LPAREN expression RPAREN

    FOR             shift and go to state 2
    LOCAL           shift and go to state 3
    WHILE           shift and go to state 5
    LOCK            shift and go to state 6
    LOOP            shift and go to state 7
    BEGIN           shift and go to state 8
    IDENTIFIER      shift and go to state 4
    NOT             shift and go to state 9
    IF              shift and go to state 10
    NUMBER          shift and go to state 11
    FLOAT           shift and go to state 12
    MINUS           shift and go to state 14
    TRUE            shift and go to state 15
    FALSE           shift and go to state 16
    LPAREN          shift and go to state 13

    expression                     shift and go to state 51

state 20

    (7) expression -> expression GREATER_EQUALS . expression
    (1) expression -> . FOR expression SEPARATOR expression SEPARATOR expression DO expression
    (2) expression -> . LOCAL IDENTIFIER ASSIGN expression IN expression
    (3) expression -> . WHILE expression DO expression
    (4) expression -> . expression LESS_THEN expression
    (5) expression -> . expression GREATER_THEN expression
    (6) expression -> . expression LESS_EQUALS expression
    (7) expression -> . expression GREATER_EQUALS expression
    (8) expression -> . expression EQUALS expression
    (9) expression -> . expression NOT_EQUALS expression
    (10) expression -> . LOCK IDENTIFIER IN expression
    (11) expression -> . LOOP expression DO expression
    (12) expression -> . BEGIN body END
    (13) expression -> . IDENTIFIER
    (14) expression -> . NOT expression
    (15) expression -> . IF expression THEN expression
    (16) expression -> . IDENTIFIER ARROW expression
    (19) expression -> . NUMBER
    (20) expression -> . FLOAT
    (21) expression -> . IDENTIFIER ASSIGN expression
    (22) expression -> . expression AND expression
    (23) expression -> . expression NAND expression
    (24) expression -> . expression OR expression
    (25) expression -> . expression NOR expression
    (26) expression -> . expression XOR expression
    (27) expression -> . expression EQ expression
    (28) expression -> . expression NEQ expression
    (29) expression -> . expression IMPL expression
    (30) expression -> . IF expression THEN expression ELSE expression
    (31) expression -> . expression LPAREN expression RPAREN
    (32) expression -> . MINUS expression
    (33) expression -> . expression PLUS expression
    (34) expression -> . expression MINUS expression
    (35) expression -> . expression TIMES expression
    (36) expression -> . expression DIVIDE expression
    (37) expression -> . TRUE
    (38) expression -> . FALSE
    (39) expression -> . LPAREN expression RPAREN

    FOR             shift and go to state 2
    LOCAL           shift and go to state 3
    WHILE           shift and go to state 5
    LOCK            shift and go to state 6
    LOOP            shift and go to state 7
    BEGIN           shift and go to state 8
    IDENTIFIER      shift and go to state 4
    NOT             shift and go to state 9
    IF              shift and go to state 10
    NUMBER          shift and go to state 11
    FLOAT           shift and go to state 12
    MINUS           shift and go to state 14
    TRUE            shift and go to state 15
    FALSE           shift and go to state 16
    LPAREN          shift and go to state 13

    expression                     shift and go to state 52

state 21

    (8) expression -> expression EQUALS . expression
    (1) expression -> . FOR expression SEPARATOR expression SEPARATOR expression DO expression
    (2) expression -> . LOCAL IDENTIFIER ASSIGN expression IN expression
    (3) expression -> . WHILE expression DO expression
    (4) expression -> . expression LESS_THEN expression
    (5) expression -> . expression GREATER_THEN expression
    (6) expression -> . expression LESS_EQUALS expression
    (7) expression -> . expression GREATER_EQUALS expression
    (8) expression -> . expression EQUALS expression
    (9) expression -> . expression NOT_EQUALS expression
    (10) expression -> . LOCK IDENTIFIER IN expression
    (11) expression -> . LOOP expression DO expression
    (12) expression -> . BEGIN body END
    (13) expression -> . IDENTIFIER
    (14) expression -> . NOT expression
    (15) expression -> . IF expression THEN expression
    (16) expression -> . IDENTIFIER ARROW expression
    (19) expression -> . NUMBER
    (20) expression -> . FLOAT
    (21) expression -> . IDENTIFIER ASSIGN expression
    (22) expression -> . expression AND expression
    (23) expression -> . expression NAND expression
    (24) expression -> . expression OR expression
    (25) expression -> . expression NOR expression
    (26) expression -> . expression XOR expression
    (27) expression -> . expression EQ expression
    (28) expression -> . expression NEQ expression
    (29) expression -> . expression IMPL expression
    (30) expression -> . IF expression THEN expression ELSE expression
    (31) expression -> . expression LPAREN expression RPAREN
    (32) expression -> . MINUS expression
    (33) expression -> . expression PLUS expression
    (34) expression -> . expression MINUS expression
    (35) expression -> . expression TIMES expression
    (36) expression -> . expression DIVIDE expression
    (37) expression -> . TRUE
    (38) expression -> . FALSE
    (39) expression -> . LPAREN expression RPAREN

    FOR             shift and go to state 2
    LOCAL           shift and go to state 3
    WHILE           shift and go to state 5
    LOCK            shift and go to state 6
    LOOP            shift and go to state 7
    BEGIN           shift and go to state 8
    IDENTIFIER      shift and go to state 4
    NOT             shift and go to state 9
    IF              shift and go to state 10
    NUMBER          shift and go to state 11
    FLOAT           shift and go to state 12
    MINUS           shift and go to state 14
    TRUE            shift and go to state 15
    FALSE           shift and go to state 16
    LPAREN          shift and go to state 13

    expression                     shift and go to state 53

state 22

    (9) expression -> expression NOT_EQUALS . expression
    (1) expression -> . FOR expression SEPARATOR expression SEPARATOR expression DO expression
    (2) expression -> . LOCAL IDENTIFIER ASSIGN expression IN expression
    (3) expression -> . WHILE expression DO expression
    (4) expression -> . expression LESS_THEN expression
    (5) expression -> . expression GREATER_THEN expression
    (6) expression -> . expression LESS_EQUALS expression
    (7) expression -> . expression GREATER_EQUALS expression
    (8) expression -> . expression EQUALS expression
    (9) expression -> . expression NOT_EQUALS expression
    (10) expression -> . LOCK IDENTIFIER IN expression
    (11) expression -> . LOOP expression DO expression
    (12) expression -> . BEGIN body END
    (13) expression -> . IDENTIFIER
    (14) expression -> . NOT expression
    (15) expression -> . IF expression THEN expression
    (16) expression -> . IDENTIFIER ARROW expression
    (19) expression -> . NUMBER
    (20) expression -> . FLOAT
    (21) expression -> . IDENTIFIER ASSIGN expression
    (22) expression -> . expression AND expression
    (23) expression -> . expression NAND expression
    (24) expression -> . expression OR expression
    (25) expression -> . expression NOR expression
    (26) expression -> . expression XOR expression
    (27) expression -> . expression EQ expression
    (28) expression -> . expression NEQ expression
    (29) expression -> . expression IMPL expression
    (30) expression -> . IF expression THEN expression ELSE expression
    (31) expression -> . expression LPAREN expression RPAREN
    (32) expression -> . MINUS expression
    (33) expression -> . expression PLUS expression
    (34) expression -> . expression MINUS expression
    (35) expression -> . expression TIMES expression
    (36) expression -> . expression DIVIDE expression
    (37) expression -> . TRUE
    (38) expression -> . FALSE
    (39) expression -> . LPAREN expression RPAREN

    FOR             shift and go to state 2
    LOCAL           shift and go to state 3
    WHILE           shift and go to state 5
    LOCK            shift and go to state 6
    LOOP            shift and go to state 7
    BEGIN           shift and go to state 8
    IDENTIFIER      shift and go to state 4
    NOT             shift and go to state 9
    IF              shift and go to state 10
    NUMBER          shift and go to state 11
    FLOAT           shift and go to state 12
    MINUS           shift and go to state 14
    TRUE            shift and go to state 15
    FALSE           shift and go to state 16
    LPAREN          shift and go to state 13

    expression                     shift and go to state 54

state 23

    (22) expression -> expression AND . expression
    (1) expression -> . FOR expression SEPARATOR expression SEPARATOR expression DO expression
    (2) expression -> . LOCAL IDENTIFIER ASSIGN expression IN expression
    (3) expression -> . WHILE expression DO expression
    (4) expression -> . expression LESS_THEN expression
    (5) expression -> . expression GREATER_THEN expression
    (6) expression -> . expression LESS_EQUALS expression
    (7) expression -> . expression GREATER_EQUALS expression
    (8) expression -> . expression EQUALS expression
    (9) expression -> . expression NOT_EQUALS expression
    (10) expression -> . LOCK IDENTIFIER IN expression
    (11) expression -> . LOOP expression DO expression
    (12) expression -> . BEGIN body END
    (13) expression -> . IDENTIFIER
    (14) expression -> . NOT expression
    (15) expression -> . IF expression THEN expression
    (16) expression -> . IDENTIFIER ARROW expression
    (19) expression -> . NUMBER
    (20) expression -> . FLOAT
    (21) expression -> . IDENTIFIER ASSIGN expression
    (22) expression -> . expression AND expression
    (23) expression -> . expression NAND expression
    (24) expression -> . expression OR expression
    (25) expression -> . expression NOR expression
    (26) expression -> . expression XOR expression
    (27) expression -> . expression EQ expression
    (28) expression -> . expression NEQ expression
    (29) expression -> . expression IMPL expression
    (30) expression -> . IF expression THEN expression ELSE expression
    (31) expression -> . expression LPAREN expression RPAREN
    (32) expression -> . MINUS expression
    (33) expression -> . expression PLUS expression
    (34) expression -> . expression MINUS expression
    (35) expression -> . expression TIMES expression
    (36) expression -> . expression DIVIDE expression
    (37) expression -> . TRUE
    (38) expression -> . FALSE
    (39) expression -> . LPAREN expression RPAREN

    FOR             shift and go to state 2
    LOCAL           shift and go to state 3
    WHILE           shift and go to state 5
    LOCK            shift and go to state 6
    LOOP            shift and go to state 7
    BEGIN           shift and go to state 8
    IDENTIFIER      shift and go to state 4
    NOT             shift and go to state 9
    IF              shift and go to state 10
    NUMBER          shift and go to state 11
    FLOAT           shift and go to state 12
    MINUS           shift and go to state 14
    TRUE            shift and go to state 15
    FALSE           shift and go to state 16
    LPAREN          shift and go to state 13

    expression                     shift and go to state 55

state 24

    (23) expression -> expression NAND . expression
    (1) expression -> . FOR expression SEPARATOR expression SEPARATOR expression DO expression
    (2) expression -> . LOCAL IDENTIFIER ASSIGN expression IN expression
    (3) expression -> . WHILE expression DO expression
    (4) expression -> . expression LESS_THEN expression
    (5) expression -> . expression GREATER_THEN expression
    (6) expression -> . expression LESS_EQUALS expression
    (7) expression -> . expression GREATER_EQUALS expression
    (8) expression -> . expression EQUALS expression
    (9) expression -> . expression NOT_EQUALS expression
    (10) expression -> . LOCK IDENTIFIER IN expression
    (11) expression -> . LOOP expression DO expression
    (12) expression -> . BEGIN body END
    (13) expression -> . IDENTIFIER
    (14) expression -> . NOT expression
    (15) expression -> . IF expression THEN expression
    (16) expression -> . IDENTIFIER ARROW expression
    (19) expression -> . NUMBER
    (20) expression -> . FLOAT
    (21) expression -> . IDENTIFIER ASSIGN expression
    (22) expression -> . expression AND expression
    (23) expression -> . expression NAND expression
    (24) expression -> . expression OR expression
    (25) expression -> . expression NOR expression
    (26) expression -> . expression XOR expression
    (27) expression -> . expression EQ expression
    (28) expression -> . expression NEQ expression
    (29) expression -> . expression IMPL expression
    (30) expression -> . IF expression THEN expression ELSE expression
    (31) expression -> . expression LPAREN expression RPAREN
    (32) expression -> . MINUS expression
    (33) expression -> . expression PLUS expression
    (34) expression -> . expression MINUS expression
    (35) expression -> . expression TIMES expression
    (36) expression -> . expression DIVIDE expression
    (37) expression -> . TRUE
    (38) expression -> . FALSE
    (39) expression -> . LPAREN expression RPAREN

    FOR             shift and go to state 2
    LOCAL           shift and go to state 3
    WHILE           shift and go to state 5
    LOCK            shift and go to state 6
    LOOP            shift and go to state 7
    BEGIN           shift and go to state 8
    IDENTIFIER      shift and go to state 4
    NOT             shift and go to state 9
    IF              shift and go to state 10
    NUMBER          shift and go to state 11
    FLOAT           shift and go to state 12
    MINUS           shift and go to state 14
    TRUE            shift and go to state 15
    FALSE           shift and go to state 16
    LPAREN          shift and go to state 13

    expression                     shift and go to state 56

state 25

    (24) expression -> expression OR . expression
    (1) expression -> . FOR expression SEPARATOR expression SEPARATOR expression DO expression
    (2) expression -> . LOCAL IDENTIFIER ASSIGN expression IN expression
    (3) expression -> . WHILE expression DO expression
    (4) expression -> . expression LESS_THEN expression
    (5) expression -> . expression GREATER_THEN expression
    (6) expression -> . expression LESS_EQUALS expression
    (7) expression -> . expression GREATER_EQUALS expression
    (8) expression -> . expression EQUALS expression
    (9) expression -> . expression NOT_EQUALS expression
    (10) expression -> . LOCK IDENTIFIER IN expression
    (11) expression -> . LOOP expression DO expression
    (12) expression -> . BEGIN body END
    (13) expression -> . IDENTIFIER
    (14) expression -> . NOT expression
    (15) expression -> . IF expression THEN expression
    (16) expression -> . IDENTIFIER ARROW expression
    (19) expression -> . NUMBER
    (20) expression -> . FLOAT
    (21) expression -> . IDENTIFIER ASSIGN expression
    (22) expression -> . expression AND expression
    (23) expression -> . expression NAND expression
    (24) expression -> . expression OR expression
    (25) expression -> . expression NOR expression
    (26) expression -> . expression XOR expression
    (27) expression -> . expression EQ expression
    (28) expression -> . expression NEQ expression
    (29) expression -> . expression IMPL expression
    (30) expression -> . IF expression THEN expression ELSE expression
    (31) expression -> . expression LPAREN expression RPAREN
    (32) expression -> . MINUS expression
    (33) expression -> . expression PLUS expression
    (34) expression -> . expression MINUS expression
    (35) expression -> . expression TIMES expression
    (36) expression -> . expression DIVIDE expression
    (37) expression -> . TRUE
    (38) expression -> . FALSE
    (39) expression -> . LPAREN expression RPAREN

    FOR             shift and go to state 2
    LOCAL           shift and go to state 3
    WHILE           shift and go to state 5
    LOCK            shift and go to state 6
    LOOP            shift and go to state 7
    BEGIN           shift and go to state 8
    IDENTIFIER      shift and go to state 4
    NOT             shift and go to state 9
    IF              shift and go to state 10
    NUMBER          shift and go to state 11
    FLOAT           shift and go to state 12
    MINUS           shift and go to state 14
    TRUE            shift and go to state 15
    FALSE           shift and go to state 16
    LPAREN          shift and go to state 13

    expression                     shift and go to state 57

state 26

    (25) expression -> expression NOR . expression
    (1) expression -> . FOR expression SEPARATOR expression SEPARATOR expression DO expression
    (2) expression -> . LOCAL IDENTIFIER ASSIGN expression IN expression
    (3) expression -> . WHILE expression DO expression
    (4) expression -> . expression LESS_THEN expression
    (5) expression -> . expression GREATER_THEN expression
    (6) expression -> . expression LESS_EQUALS expression
    (7) expression -> . expression GREATER_EQUALS expression
    (8) expression -> . expression EQUALS expression
    (9) expression -> . expression NOT_EQUALS expression
    (10) expression -> . LOCK IDENTIFIER IN expression
    (11) expression -> . LOOP expression DO expression
    (12) expression -> . BEGIN body END
    (13) expression -> . IDENTIFIER
    (14) expression -> . NOT expression
    (15) expression -> . IF expression THEN expression
    (16) expression -> . IDENTIFIER ARROW expression
    (19) expression -> . NUMBER
    (20) expression -> . FLOAT
    (21) expression -> . IDENTIFIER ASSIGN expression
    (22) expression -> . expression AND expression
    (23) expression -> . expression NAND expression
    (24) expression -> . expression OR expression
    (25) expression -> . expression NOR expression
    (26) expression -> . expression XOR expression
    (27) expression -> . expression EQ expression
    (28) expression -> . expression NEQ expression
    (29) expression -> . expression IMPL expression
    (30) expression -> . IF expression THEN expression ELSE expression
    (31) expression -> . expression LPAREN expression RPAREN
    (32) expression -> . MINUS expression
    (33) expression -> . expression PLUS expression
    (34) expression -> . expression MINUS expression
    (35) expression -> . expression TIMES expression
    (36) expression -> . expression DIVIDE expression
    (37) expression -> . TRUE
    (38) expression -> . FALSE
    (39) expression -> . LPAREN expression RPAREN

    FOR             shift and go to state 2
    LOCAL           shift and go to state 3
    WHILE           shift and go to state 5
    LOCK            shift and go to state 6
    LOOP            shift and go to state 7
    BEGIN           shift and go to state 8
    IDENTIFIER      shift and go to state 4
    NOT             shift and go to state 9
    IF              shift and go to state 10
    NUMBER          shift and go to state 11
    FLOAT           shift and go to state 12
    MINUS           shift and go to state 14
    TRUE            shift and go to state 15
    FALSE           shift and go to state 16
    LPAREN          shift and go to state 13

    expression                     shift and go to state 58

state 27

    (26) expression -> expression XOR . expression
    (1) expression -> . FOR expression SEPARATOR expression SEPARATOR expression DO expression
    (2) expression -> . LOCAL IDENTIFIER ASSIGN expression IN expression
    (3) expression -> . WHILE expression DO expression
    (4) expression -> . expression LESS_THEN expression
    (5) expression -> . expression GREATER_THEN expression
    (6) expression -> . expression LESS_EQUALS expression
    (7) expression -> . expression GREATER_EQUALS expression
    (8) expression -> . expression EQUALS expression
    (9) expression -> . expression NOT_EQUALS expression
    (10) expression -> . LOCK IDENTIFIER IN expression
    (11) expression -> . LOOP expression DO expression
    (12) expression -> . BEGIN body END
    (13) expression -> . IDENTIFIER
    (14) expression -> . NOT expression
    (15) expression -> . IF expression THEN expression
    (16) expression -> . IDENTIFIER ARROW expression
    (19) expression -> . NUMBER
    (20) expression -> . FLOAT
    (21) expression -> . IDENTIFIER ASSIGN expression
    (22) expression -> . expression AND expression
    (23) expression -> . expression NAND expression
    (24) expression -> . expression OR expression
    (25) expression -> . expression NOR expression
    (26) expression -> . expression XOR expression
    (27) expression -> . expression EQ expression
    (28) expression -> . expression NEQ expression
    (29) expression -> . expression IMPL expression
    (30) expression -> . IF expression THEN expression ELSE expression
    (31) expression -> . expression LPAREN expression RPAREN
    (32) expression -> . MINUS expression
    (33) expression -> . expression PLUS expression
    (34) expression -> . expression MINUS expression
    (35) expression -> . expression TIMES expression
    (36) expression -> . expression DIVIDE expression
    (37) expression -> . TRUE
    (38) expression -> . FALSE
    (39) expression -> . LPAREN expression RPAREN

    FOR             shift and go to state 2
    LOCAL           shift and go to state 3
    WHILE           shift and go to state 5
    LOCK            shift and go to state 6
    LOOP            shift and go to state 7
    BEGIN           shift and go to state 8
    IDENTIFIER      shift and go to state 4
    NOT             shift and go to state 9
    IF              shift and go to state 10
    NUMBER          shift and go to state 11
    FLOAT           shift and go to state 12
    MINUS           shift and go to state 14
    TRUE            shift and go to state 15
    FALSE           shift and go to state 16
    LPAREN          shift and go to state 13

    expression                     shift and go to state 59

state 28

    (27) expression -> expression EQ . expression
    (1) expression -> . FOR expression SEPARATOR expression SEPARATOR expression DO expression
    (2) expression -> . LOCAL IDENTIFIER ASSIGN expression IN expression
    (3) expression -> . WHILE expression DO expression
    (4) expression -> . expression LESS_THEN expression
    (5) expression -> . expression GREATER_THEN expression
    (6) expression -> . expression LESS_EQUALS expression
    (7) expression -> . expression GREATER_EQUALS expression
    (8) expression -> . expression EQUALS expression
    (9) expression -> . expression NOT_EQUALS expression
    (10) expression -> . LOCK IDENTIFIER IN expression
    (11) expression -> . LOOP expression DO expression
    (12) expression -> . BEGIN body END
    (13) expression -> . IDENTIFIER
    (14) expression -> . NOT expression
    (15) expression -> . IF expression THEN expression
    (16) expression -> . IDENTIFIER ARROW expression
    (19) expression -> . NUMBER
    (20) expression -> . FLOAT
    (21) expression -> . IDENTIFIER ASSIGN expression
    (22) expression -> . expression AND expression
    (23) expression -> . expression NAND expression
    (24) expression -> . expression OR expression
    (25) expression -> . expression NOR expression
    (26) expression -> . expression XOR expression
    (27) expression -> . expression EQ expression
    (28) expression -> . expression NEQ expression
    (29) expression -> . expression IMPL expression
    (30) expression -> . IF expression THEN expression ELSE expression
    (31) expression -> . expression LPAREN expression RPAREN
    (32) expression -> . MINUS expression
    (33) expression -> . expression PLUS expression
    (34) expression -> . expression MINUS expression
    (35) expression -> . expression TIMES expression
    (36) expression -> . expression DIVIDE expression
    (37) expression -> . TRUE
    (38) expression -> . FALSE
    (39) expression -> . LPAREN expression RPAREN

    FOR             shift and go to state 2
    LOCAL           shift and go to state 3
    WHILE           shift and go to state 5
    LOCK            shift and go to state 6
    LOOP            shift and go to state 7
    BEGIN           shift and go to state 8
    IDENTIFIER      shift and go to state 4
    NOT             shift and go to state 9
    IF              shift and go to state 10
    NUMBER          shift and go to state 11
    FLOAT           shift and go to state 12
    MINUS           shift and go to state 14
    TRUE            shift and go to state 15
    FALSE           shift and go to state 16
    LPAREN          shift and go to state 13

    expression                     shift and go to state 60

state 29

    (28) expression -> expression NEQ . expression
    (1) expression -> . FOR expression SEPARATOR expression SEPARATOR expression DO expression
    (2) expression -> . LOCAL IDENTIFIER ASSIGN expression IN expression
    (3) expression -> . WHILE expression DO expression
    (4) expression -> . expression LESS_THEN expression
    (5) expression -> . expression GREATER_THEN expression
    (6) expression -> . expression LESS_EQUALS expression
    (7) expression -> . expression GREATER_EQUALS expression
    (8) expression -> . expression EQUALS expression
    (9) expression -> . expression NOT_EQUALS expression
    (10) expression -> . LOCK IDENTIFIER IN expression
    (11) expression -> . LOOP expression DO expression
    (12) expression -> . BEGIN body END
    (13) expression -> . IDENTIFIER
    (14) expression -> . NOT expression
    (15) expression -> . IF expression THEN expression
    (16) expression -> . IDENTIFIER ARROW expression
    (19) expression -> . NUMBER
    (20) expression -> . FLOAT
    (21) expression -> . IDENTIFIER ASSIGN expression
    (22) expression -> . expression AND expression
    (23) expression -> . expression NAND expression
    (24) expression -> . expression OR expression
    (25) expression -> . expression NOR expression
    (26) expression -> . expression XOR expression
    (27) expression -> . expression EQ expression
    (28) expression -> . expression NEQ expression
    (29) expression -> . expression IMPL expression
    (30) expression -> . IF expression THEN expression ELSE expression
    (31) expression -> . expression LPAREN expression RPAREN
    (32) expression -> . MINUS expression
    (33) expression -> . expression PLUS expression
    (34) expression -> . expression MINUS expression
    (35) expression -> . expression TIMES expression
    (36) expression -> . expression DIVIDE expression
    (37) expression -> . TRUE
    (38) expression -> . FALSE
    (39) expression -> . LPAREN expression RPAREN

    FOR             shift and go to state 2
    LOCAL           shift and go to state 3
    WHILE           shift and go to state 5
    LOCK            shift and go to state 6
    LOOP            shift and go to state 7
    BEGIN           shift and go to state 8
    IDENTIFIER      shift and go to state 4
    NOT             shift and go to state 9
    IF              shift and go to state 10
    NUMBER          shift and go to state 11
    FLOAT           shift and go to state 12
    MINUS           shift and go to state 14
    TRUE            shift and go to state 15
    FALSE           shift and go to state 16
    LPAREN          shift and go to state 13

    expression                     shift and go to state 61

state 30

    (29) expression -> expression IMPL . expression
    (1) expression -> . FOR expression SEPARATOR expression SEPARATOR expression DO expression
    (2) expression -> . LOCAL IDENTIFIER ASSIGN expression IN expression
    (3) expression -> . WHILE expression DO expression
    (4) expression -> . expression LESS_THEN expression
    (5) expression -> . expression GREATER_THEN expression
    (6) expression -> . expression LESS_EQUALS expression
    (7) expression -> . expression GREATER_EQUALS expression
    (8) expression -> . expression EQUALS expression
    (9) expression -> . expression NOT_EQUALS expression
    (10) expression -> . LOCK IDENTIFIER IN expression
    (11) expression -> . LOOP expression DO expression
    (12) expression -> . BEGIN body END
    (13) expression -> . IDENTIFIER
    (14) expression -> . NOT expression
    (15) expression -> . IF expression THEN expression
    (16) expression -> . IDENTIFIER ARROW expression
    (19) expression -> . NUMBER
    (20) expression -> . FLOAT
    (21) expression -> . IDENTIFIER ASSIGN expression
    (22) expression -> . expression AND expression
    (23) expression -> . expression NAND expression
    (24) expression -> . expression OR expression
    (25) expression -> . expression NOR expression
    (26) expression -> . expression XOR expression
    (27) expression -> . expression EQ expression
    (28) expression -> . expression NEQ expression
    (29) expression -> . expression IMPL expression
    (30) expression -> . IF expression THEN expression ELSE expression
    (31) expression -> . expression LPAREN expression RPAREN
    (32) expression -> . MINUS expression
    (33) expression -> . expression PLUS expression
    (34) expression -> . expression MINUS expression
    (35) expression -> . expression TIMES expression
    (36) expression -> . expression DIVIDE expression
    (37) expression -> . TRUE
    (38) expression -> . FALSE
    (39) expression -> . LPAREN expression RPAREN

    FOR             shift and go to state 2
    LOCAL           shift and go to state 3
    WHILE           shift and go to state 5
    LOCK            shift and go to state 6
    LOOP            shift and go to state 7
    BEGIN           shift and go to state 8
    IDENTIFIER      shift and go to state 4
    NOT             shift and go to state 9
    IF              shift and go to state 10
    NUMBER          shift and go to state 11
    FLOAT           shift and go to state 12
    MINUS           shift and go to state 14
    TRUE            shift and go to state 15
    FALSE           shift and go to state 16
    LPAREN          shift and go to state 13

    expression                     shift and go to state 62

state 31

    (31) expression -> expression LPAREN . expression RPAREN
    (1) expression -> . FOR expression SEPARATOR expression SEPARATOR expression DO expression
    (2) expression -> . LOCAL IDENTIFIER ASSIGN expression IN expression
    (3) expression -> . WHILE expression DO expression
    (4) expression -> . expression LESS_THEN expression
    (5) expression -> . expression GREATER_THEN expression
    (6) expression -> . expression LESS_EQUALS expression
    (7) expression -> . expression GREATER_EQUALS expression
    (8) expression -> . expression EQUALS expression
    (9) expression -> . expression NOT_EQUALS expression
    (10) expression -> . LOCK IDENTIFIER IN expression
    (11) expression -> . LOOP expression DO expression
    (12) expression -> . BEGIN body END
    (13) expression -> . IDENTIFIER
    (14) expression -> . NOT expression
    (15) expression -> . IF expression THEN expression
    (16) expression -> . IDENTIFIER ARROW expression
    (19) expression -> . NUMBER
    (20) expression -> . FLOAT
    (21) expression -> . IDENTIFIER ASSIGN expression
    (22) expression -> . expression AND expression
    (23) expression -> . expression NAND expression
    (24) expression -> . expression OR expression
    (25) expression -> . expression NOR expression
    (26) expression -> . expression XOR expression
    (27) expression -> . expression EQ expression
    (28) expression -> . expression NEQ expression
    (29) expression -> . expression IMPL expression
    (30) expression -> . IF expression THEN expression ELSE expression
    (31) expression -> . expression LPAREN expression RPAREN
    (32) expression -> . MINUS expression
    (33) expression -> . expression PLUS expression
    (34) expression -> . expression MINUS expression
    (35) expression -> . expression TIMES expression
    (36) expression -> . expression DIVIDE expression
    (37) expression -> . TRUE
    (38) expression -> . FALSE
    (39) expression -> . LPAREN expression RPAREN

    FOR             shift and go to state 2
    LOCAL           shift and go to state 3
    WHILE           shift and go to state 5
    LOCK            shift and go to state 6
    LOOP            shift and go to state 7
    BEGIN           shift and go to state 8
    IDENTIFIER      shift and go to state 4
    NOT             shift and go to state 9
    IF              shift and go to state 10
    NUMBER          shift and go to state 11
    FLOAT           shift and go to state 12
    MINUS           shift and go to state 14
    TRUE            shift and go to state 15
    FALSE           shift and go to state 16
    LPAREN          shift and go to state 13

    expression                     shift and go to state 63

state 32

    (33) expression -> expression PLUS . expression
    (1) expression -> . FOR expression SEPARATOR expression SEPARATOR expression DO expression
    (2) expression -> . LOCAL IDENTIFIER ASSIGN expression IN expression
    (3) expression -> . WHILE expression DO expression
    (4) expression -> . expression LESS_THEN expression
    (5) expression -> . expression GREATER_THEN expression
    (6) expression -> . expression LESS_EQUALS expression
    (7) expression -> . expression GREATER_EQUALS expression
    (8) expression -> . expression EQUALS expression
    (9) expression -> . expression NOT_EQUALS expression
    (10) expression -> . LOCK IDENTIFIER IN expression
    (11) expression -> . LOOP expression DO expression
    (12) expression -> . BEGIN body END
    (13) expression -> . IDENTIFIER
    (14) expression -> . NOT expression
    (15) expression -> . IF expression THEN expression
    (16) expression -> . IDENTIFIER ARROW expression
    (19) expression -> . NUMBER
    (20) expression -> . FLOAT
    (21) expression -> . IDENTIFIER ASSIGN expression
    (22) expression -> . expression AND expression
    (23) expression -> . expression NAND expression
    (24) expression -> . expression OR expression
    (25) expression -> . expression NOR expression
    (26) expression -> . expression XOR expression
    (27) expression -> . expression EQ expression
    (28) expression -> . expression NEQ expression
    (29) expression -> . expression IMPL expression
    (30) expression -> . IF expression THEN expression ELSE expression
    (31) expression -> . expression LPAREN expression RPAREN
    (32) expression -> . MINUS expression
    (33) expression -> . expression PLUS expression
    (34) expression -> . expression MINUS expression
    (35) expression -> . expression TIMES expression
    (36) expression -> . expression DIVIDE expression
    (37) expression -> . TRUE
    (38) expression -> . FALSE
    (39) expression -> . LPAREN expression RPAREN

    FOR             shift and go to state 2
    LOCAL           shift and go to state 3
    WHILE           shift and go to state 5
    LOCK            shift and go to state 6
    LOOP            shift and go to state 7
    BEGIN           shift and go to state 8
    IDENTIFIER      shift and go to state 4
    NOT             shift and go to state 9
    IF              shift and go to state 10
    NUMBER          shift and go to state 11
    FLOAT           shift and go to state 12
    MINUS           shift and go to state 14
    TRUE            shift and go to state 15
    FALSE           shift and go to state 16
    LPAREN          shift and go to state 13

    expression                     shift and go to state 64

state 33

    (34) expression -> expression MINUS . expression
    (1) expression -> . FOR expression SEPARATOR expression SEPARATOR expression DO expression
    (2) expression -> . LOCAL IDENTIFIER ASSIGN expression IN expression
    (3) expression -> . WHILE expression DO expression
    (4) expression -> . expression LESS_THEN expression
    (5) expression -> . expression GREATER_THEN expression
    (6) expression -> . expression LESS_EQUALS expression
    (7) expression -> . expression GREATER_EQUALS expression
    (8) expression -> . expression EQUALS expression
    (9) expression -> . expression NOT_EQUALS expression
    (10) expression -> . LOCK IDENTIFIER IN expression
    (11) expression -> . LOOP expression DO expression
    (12) expression -> . BEGIN body END
    (13) expression -> . IDENTIFIER
    (14) expression -> . NOT expression
    (15) expression -> . IF expression THEN expression
    (16) expression -> . IDENTIFIER ARROW expression
    (19) expression -> . NUMBER
    (20) expression -> . FLOAT
    (21) expression -> . IDENTIFIER ASSIGN expression
    (22) expression -> . expression AND expression
    (23) expression -> . expression NAND expression
    (24) expression -> . expression OR expression
    (25) expression -> . expression NOR expression
    (26) expression -> . expression XOR expression
    (27) expression -> . expression EQ expression
    (28) expression -> . expression NEQ expression
    (29) expression -> . expression IMPL expression
    (30) expression -> . IF expression THEN expression ELSE expression
    (31) expression -> . expression LPAREN expression RPAREN
    (32) expression -> . MINUS expression
    (33) expression -> . expression PLUS expression
    (34) expression -> . expression MINUS expression
    (35) expression -> . expression TIMES expression
    (36) expression -> . expression DIVIDE expression
    (37) expression -> . TRUE
    (38) expression -> . FALSE
    (39) expression -> . LPAREN expression RPAREN

    FOR             shift and go to state 2
    LOCAL           shift and go to state 3
    WHILE           shift and go to state 5
    LOCK            shift and go to state 6
    LOOP            shift and go to state 7
    BEGIN           shift and go to state 8
    IDENTIFIER      shift and go to state 4
    NOT             shift and go to state 9
    IF              shift and go to state 10
    NUMBER          shift and go to state 11
    FLOAT           shift and go to state 12
    MINUS           shift and go to state 14
    TRUE            shift and go to state 15
    FALSE           shift and go to state 16
    LPAREN          shift and go to state 13

    expression                     shift and go to state 65

state 34

    (35) expression -> expression TIMES . expression
    (1) expression -> . FOR expression SEPARATOR expression SEPARATOR expression DO expression
    (2) expression -> . LOCAL IDENTIFIER ASSIGN expression IN expression
    (3) expression -> . WHILE expression DO expression
    (4) expression -> . expression LESS_THEN expression
    (5) expression -> . expression GREATER_THEN expression
    (6) expression -> . expression LESS_EQUALS expression
    (7) expression -> . expression GREATER_EQUALS expression
    (8) expression -> . expression EQUALS expression
    (9) expression -> . expression NOT_EQUALS expression
    (10) expression -> . LOCK IDENTIFIER IN expression
    (11) expression -> . LOOP expression DO expression
    (12) expression -> . BEGIN body END
    (13) expression -> . IDENTIFIER
    (14) expression -> . NOT expression
    (15) expression -> . IF expression THEN expression
    (16) expression -> . IDENTIFIER ARROW expression
    (19) expression -> . NUMBER
    (20) expression -> . FLOAT
    (21) expression -> . IDENTIFIER ASSIGN expression
    (22) expression -> . expression AND expression
    (23) expression -> . expression NAND expression
    (24) expression -> . expression OR expression
    (25) expression -> . expression NOR expression
    (26) expression -> . expression XOR expression
    (27) expression -> . expression EQ expression
    (28) expression -> . expression NEQ expression
    (29) expression -> . expression IMPL expression
    (30) expression -> . IF expression THEN expression ELSE expression
    (31) expression -> . expression LPAREN expression RPAREN
    (32) expression -> . MINUS expression
    (33) expression -> . expression PLUS expression
    (34) expression -> . expression MINUS expression
    (35) expression -> . expression TIMES expression
    (36) expression -> . expression DIVIDE expression
    (37) expression -> . TRUE
    (38) expression -> . FALSE
    (39) expression -> . LPAREN expression RPAREN

    FOR             shift and go to state 2
    LOCAL           shift and go to state 3
    WHILE           shift and go to state 5
    LOCK            shift and go to state 6
    LOOP            shift and go to state 7
    BEGIN           shift and go to state 8
    IDENTIFIER      shift and go to state 4
    NOT             shift and go to state 9
    IF              shift and go to state 10
    NUMBER          shift and go to state 11
    FLOAT           shift and go to state 12
    MINUS           shift and go to state 14
    TRUE            shift and go to state 15
    FALSE           shift and go to state 16
    LPAREN          shift and go to state 13

    expression                     shift and go to state 66

state 35

    (36) expression -> expression DIVIDE . expression
    (1) expression -> . FOR expression SEPARATOR expression SEPARATOR expression DO expression
    (2) expression -> . LOCAL IDENTIFIER ASSIGN expression IN expression
    (3) expression -> . WHILE expression DO expression
    (4) expression -> . expression LESS_THEN expression
    (5) expression -> . expression GREATER_THEN expression
    (6) expression -> . expression LESS_EQUALS expression
    (7) expression -> . expression GREATER_EQUALS expression
    (8) expression -> . expression EQUALS expression
    (9) expression -> . expression NOT_EQUALS expression
    (10) expression -> . LOCK IDENTIFIER IN expression
    (11) expression -> . LOOP expression DO expression
    (12) expression -> . BEGIN body END
    (13) expression -> . IDENTIFIER
    (14) expression -> . NOT expression
    (15) expression -> . IF expression THEN expression
    (16) expression -> . IDENTIFIER ARROW expression
    (19) expression -> . NUMBER
    (20) expression -> . FLOAT
    (21) expression -> . IDENTIFIER ASSIGN expression
    (22) expression -> . expression AND expression
    (23) expression -> . expression NAND expression
    (24) expression -> . expression OR expression
    (25) expression -> . expression NOR expression
    (26) expression -> . expression XOR expression
    (27) expression -> . expression EQ expression
    (28) expression -> . expression NEQ expression
    (29) expression -> . expression IMPL expression
    (30) expression -> . IF expression THEN expression ELSE expression
    (31) expression -> . expression LPAREN expression RPAREN
    (32) expression -> . MINUS expression
    (33) expression -> . expression PLUS expression
    (34) expression -> . expression MINUS expression
    (35) expression -> . expression TIMES expression
    (36) expression -> . expression DIVIDE expression
    (37) expression -> . TRUE
    (38) expression -> . FALSE
    (39) expression -> . LPAREN expression RPAREN

    FOR             shift and go to state 2
    LOCAL           shift and go to state 3
    WHILE           shift and go to state 5
    LOCK            shift and go to state 6
    LOOP            shift and go to state 7
    BEGIN           shift and go to state 8
    IDENTIFIER      shift and go to state 4
    NOT             shift and go to state 9
    IF              shift and go to state 10
    NUMBER          shift and go to state 11
    FLOAT           shift and go to state 12
    MINUS           shift and go to state 14
    TRUE            shift and go to state 15
    FALSE           shift and go to state 16
    LPAREN          shift and go to state 13

    expression                     shift and go to state 67

state 36

    (1) expression -> FOR expression . SEPARATOR expression SEPARATOR expression DO expression
    (4) expression -> expression . LESS_THEN expression
    (5) expression -> expression . GREATER_THEN expression
    (6) expression -> expression . LESS_EQUALS expression
    (7) expression -> expression . GREATER_EQUALS expression
    (8) expression -> expression . EQUALS expression
    (9) expression -> expression . NOT_EQUALS expression
    (22) expression -> expression . AND expression
    (23) expression -> expression . NAND expression
    (24) expression -> expression . OR expression
    (25) expression -> expression . NOR expression
    (26) expression -> expression . XOR expression
    (27) expression -> expression . EQ expression
    (28) expression -> expression . NEQ expression
    (29) expression -> expression . IMPL expression
    (31) expression -> expression . LPAREN expression RPAREN
    (33) expression -> expression . PLUS expression
    (34) expression -> expression . MINUS expression
    (35) expression -> expression . TIMES expression
    (36) expression -> expression . DIVIDE expression

    SEPARATOR       shift and go to state 68
    LESS_THEN       shift and go to state 17
    GREATER_THEN    shift and go to state 18
    LESS_EQUALS     shift and go to state 19
    GREATER_EQUALS  shift and go to state 20
    EQUALS          shift and go to state 21
    NOT_EQUALS      shift and go to state 22
    AND             shift and go to state 23
    NAND            shift and go to state 24
    OR              shift and go to state 25
    NOR             shift and go to state 26
    XOR             shift and go to state 27
    EQ              shift and go to state 28
    NEQ             shift and go to state 29
    IMPL            shift and go to state 30
    LPAREN          shift and go to state 31
    PLUS            shift and go to state 32
    MINUS           shift and go to state 33
    TIMES           shift and go to state 34
    DIVIDE          shift and go to state 35


state 37

    (2) expression -> LOCAL IDENTIFIER . ASSIGN expression IN expression

    ASSIGN          shift and go to state 69


state 38

    (16) expression -> IDENTIFIER ARROW . expression
    (1) expression -> . FOR expression SEPARATOR expression SEPARATOR expression DO expression
    (2) expression -> . LOCAL IDENTIFIER ASSIGN expression IN expression
    (3) expression -> . WHILE expression DO expression
    (4) expression -> . expression LESS_THEN expression
    (5) expression -> . expression GREATER_THEN expression
    (6) expression -> . expression LESS_EQUALS expression
    (7) expression -> . expression GREATER_EQUALS expression
    (8) expression -> . expression EQUALS expression
    (9) expression -> . expression NOT_EQUALS expression
    (10) expression -> . LOCK IDENTIFIER IN expression
    (11) expression -> . LOOP expression DO expression
    (12) expression -> . BEGIN body END
    (13) expression -> . IDENTIFIER
    (14) expression -> . NOT expression
    (15) expression -> . IF expression THEN expression
    (16) expression -> . IDENTIFIER ARROW expression
    (19) expression -> . NUMBER
    (20) expression -> . FLOAT
    (21) expression -> . IDENTIFIER ASSIGN expression
    (22) expression -> . expression AND expression
    (23) expression -> . expression NAND expression
    (24) expression -> . expression OR expression
    (25) expression -> . expression NOR expression
    (26) expression -> . expression XOR expression
    (27) expression -> . expression EQ expression
    (28) expression -> . expression NEQ expression
    (29) expression -> . expression IMPL expression
    (30) expression -> . IF expression THEN expression ELSE expression
    (31) expression -> . expression LPAREN expression RPAREN
    (32) expression -> . MINUS expression
    (33) expression -> . expression PLUS expression
    (34) expression -> . expression MINUS expression
    (35) expression -> . expression TIMES expression
    (36) expression -> . expression DIVIDE expression
    (37) expression -> . TRUE
    (38) expression -> . FALSE
    (39) expression -> . LPAREN expression RPAREN

    FOR             shift and go to state 2
    LOCAL           shift and go to state 3
    WHILE           shift and go to state 5
    LOCK            shift and go to state 6
    LOOP            shift and go to state 7
    BEGIN           shift and go to state 8
    IDENTIFIER      shift and go to state 4
    NOT             shift and go to state 9
    IF              shift and go to state 10
    NUMBER          shift and go to state 11
    FLOAT           shift and go to state 12
    MINUS           shift and go to state 14
    TRUE            shift and go to state 15
    FALSE           shift and go to state 16
    LPAREN          shift and go to state 13

    expression                     shift and go to state 70

state 39

    (21) expression -> IDENTIFIER ASSIGN . expression
    (1) expression -> . FOR expression SEPARATOR expression SEPARATOR expression DO expression
    (2) expression -> . LOCAL IDENTIFIER ASSIGN expression IN expression
    (3) expression -> . WHILE expression DO expression
    (4) expression -> . expression LESS_THEN expression
    (5) expression -> . expression GREATER_THEN expression
    (6) expression -> . expression LESS_EQUALS expression
    (7) expression -> . expression GREATER_EQUALS expression
    (8) expression -> . expression EQUALS expression
    (9) expression -> . expression NOT_EQUALS expression
    (10) expression -> . LOCK IDENTIFIER IN expression
    (11) expression -> . LOOP expression DO expression
    (12) expression -> . BEGIN body END
    (13) expression -> . IDENTIFIER
    (14) expression -> . NOT expression
    (15) expression -> . IF expression THEN expression
    (16) expression -> . IDENTIFIER ARROW expression
    (19) expression -> . NUMBER
    (20) expression -> . FLOAT
    (21) expression -> . IDENTIFIER ASSIGN expression
    (22) expression -> . expression AND expression
    (23) expression -> . expression NAND expression
    (24) expression -> . expression OR expression
    (25) expression -> . expression NOR expression
    (26) expression -> . expression XOR expression
    (27) expression -> . expression EQ expression
    (28) expression -> . expression NEQ expression
    (29) expression -> . expression IMPL expression
    (30) expression -> . IF expression THEN expression ELSE expression
    (31) expression -> . expression LPAREN expression RPAREN
    (32) expression -> . MINUS expression
    (33) expression -> . expression PLUS expression
    (34) expression -> . expression MINUS expression
    (35) expression -> . expression TIMES expression
    (36) expression -> . expression DIVIDE expression
    (37) expression -> . TRUE
    (38) expression -> . FALSE
    (39) expression -> . LPAREN expression RPAREN

    FOR             shift and go to state 2
    LOCAL           shift and go to state 3
    WHILE           shift and go to state 5
    LOCK            shift and go to state 6
    LOOP            shift and go to state 7
    BEGIN           shift and go to state 8
    IDENTIFIER      shift and go to state 4
    NOT             shift and go to state 9
    IF              shift and go to state 10
    NUMBER          shift and go to state 11
    FLOAT           shift and go to state 12
    MINUS           shift and go to state 14
    TRUE            shift and go to state 15
    FALSE           shift and go to state 16
    LPAREN          shift and go to state 13

    expression                     shift and go to state 71

state 40

    (3) expression -> WHILE expression . DO expression
    (4) expression -> expression . LESS_THEN expression
    (5) expression -> expression . GREATER_THEN expression
    (6) expression -> expression . LESS_EQUALS expression
    (7) expression -> expression . GREATER_EQUALS expression
    (8) expression -> expression . EQUALS expression
    (9) expression -> expression . NOT_EQUALS expression
    (22) expression -> expression . AND expression
    (23) expression -> expression . NAND expression
    (24) expression -> expression . OR expression
    (25) expression -> expression . NOR expression
    (26) expression -> expression . XOR expression
    (27) expression -> expression . EQ expression
    (28) expression -> expression . NEQ expression
    (29) expression -> expression . IMPL expression
    (31) expression -> expression . LPAREN expression RPAREN
    (33) expression -> expression . PLUS expression
    (34) expression -> expression . MINUS expression
    (35) expression -> expression . TIMES expression
    (36) expression -> expression . DIVIDE expression

    DO              shift and go to state 72
    LESS_THEN       shift and go to state 17
    GREATER_THEN    shift and go to state 18
    LESS_EQUALS     shift and go to state 19
    GREATER_EQUALS  shift and go to state 20
    EQUALS          shift and go to state 21
    NOT_EQUALS      shift and go to state 22
    AND             shift and go to state 23
    NAND            shift and go to state 24
    OR              shift and go to state 25
    NOR             shift and go to state 26
    XOR             shift and go to state 27
    EQ              shift and go to state 28
    NEQ             shift and go to state 29
    IMPL            shift and go to state 30
    LPAREN          shift and go to state 31
    PLUS            shift and go to state 32
    MINUS           shift and go to state 33
    TIMES           shift and go to state 34
    DIVIDE          shift and go to state 35


state 41

    (10) expression -> LOCK IDENTIFIER . IN expression

    IN              shift and go to state 73


state 42

    (11) expression -> LOOP expression . DO expression
    (4) expression -> expression . LESS_THEN expression
    (5) expression -> expression . GREATER_THEN expression
    (6) expression -> expression . LESS_EQUALS expression
    (7) expression -> expression . GREATER_EQUALS expression
    (8) expression -> expression . EQUALS expression
    (9) expression -> expression . NOT_EQUALS expression
    (22) expression -> expression . AND expression
    (23) expression -> expression . NAND expression
    (24) expression -> expression . OR expression
    (25) expression -> expression . NOR expression
    (26) expression -> expression . XOR expression
    (27) expression -> expression . EQ expression
    (28) expression -> expression . NEQ expression
    (29) expression -> expression . IMPL expression
    (31) expression -> expression . LPAREN expression RPAREN
    (33) expression -> expression . PLUS expression
    (34) expression -> expression . MINUS expression
    (35) expression -> expression . TIMES expression
    (36) expression -> expression . DIVIDE expression

    DO              shift and go to state 74
    LESS_THEN       shift and go to state 17
    GREATER_THEN    shift and go to state 18
    LESS_EQUALS     shift and go to state 19
    GREATER_EQUALS  shift and go to state 20
    EQUALS          shift and go to state 21
    NOT_EQUALS      shift and go to state 22
    AND             shift and go to state 23
    NAND            shift and go to state 24
    OR              shift and go to state 25
    NOR             shift and go to state 26
    XOR             shift and go to state 27
    EQ              shift and go to state 28
    NEQ             shift and go to state 29
    IMPL            shift and go to state 30
    LPAREN          shift and go to state 31
    PLUS            shift and go to state 32
    MINUS           shift and go to state 33
    TIMES           shift and go to state 34
    DIVIDE          shift and go to state 35


state 43

    (12) expression -> BEGIN body . END
    (18) body -> body . SEPARATOR expression

    END             shift and go to state 75
    SEPARATOR       shift and go to state 76


state 44

    (17) body -> expression .
    (4) expression -> expression . LESS_THEN expression
    (5) expression -> expression . GREATER_THEN expression
    (6) expression -> expression . LESS_EQUALS expression
    (7) expression -> expression . GREATER_EQUALS expression
    (8) expression -> expression . EQUALS expression
    (9) expression -> expression . NOT_EQUALS expression
    (22) expression -> expression . AND expression
    (23) expression -> expression . NAND expression
    (24) expression -> expression . OR expression
    (25) expression -> expression . NOR expression
    (26) expression -> expression . XOR expression
    (27) expression -> expression . EQ expression
    (28) expression -> expression . NEQ expression
    (29) expression -> expression . IMPL expression
    (31) expression -> expression . LPAREN expression RPAREN
    (33) expression -> expression . PLUS expression
    (34) expression -> expression . MINUS expression
    (35) expression -> expression . TIMES expression
    (36) expression -> expression . DIVIDE expression

    END             reduce using rule 17 (body -> expression .)
    SEPARATOR       reduce using rule 17 (body -> expression .)
    LESS_THEN       shift and go to state 17
    GREATER_THEN    shift and go to state 18
    LESS_EQUALS     shift and go to state 19
    GREATER_EQUALS  shift and go to state 20
    EQUALS          shift and go to state 21
    NOT_EQUALS      shift and go to state 22
    AND             shift and go to state 23
    NAND            shift and go to state 24
    OR              shift and go to state 25
    NOR             shift and go to state 26
    XOR             shift and go to state 27
    EQ              shift and go to state 28
    NEQ             shift and go to state 29
    IMPL            shift and go to state 30
    LPAREN          shift and go to state 31
    PLUS            shift and go to state 32
    MINUS           shift and go to state 33
    TIMES           shift and go to state 34
    DIVIDE          shift and go to state 35


state 45

    (14) expression -> NOT expression .
    (4) expression -> expression . LESS_THEN expression
    (5) expression -> expression . GREATER_THEN expression
    (6) expression -> expression . LESS_EQUALS expression
    (7) expression -> expression . GREATER_EQUALS expression
    (8) expression -> expression . EQUALS expression
    (9) expression -> expression . NOT_EQUALS expression
    (22) expression -> expression . AND expression
    (23) expression -> expression . NAND expression
    (24) expression -> expression . OR expression
    (25) expression -> expression . NOR expression
    (26) expression -> expression . XOR expression
    (27) expression -> expression . EQ expression
    (28) expression -> expression . NEQ expression
    (29) expression -> expression . IMPL expression
    (31) expression -> expression . LPAREN expression RPAREN
    (33) expression -> expression . PLUS expression
    (34) expression -> expression . MINUS expression
    (35) expression -> expression . TIMES expression
    (36) expression -> expression . DIVIDE expression

    LESS_THEN       reduce using rule 14 (expression -> NOT expression .)
    GREATER_THEN    reduce using rule 14 (expression -> NOT expression .)
    LESS_EQUALS     reduce using rule 14 (expression -> NOT expression .)
    GREATER_EQUALS  reduce using rule 14 (expression -> NOT expression .)
    EQUALS          reduce using rule 14 (expression -> NOT expression .)
    NOT_EQUALS      reduce using rule 14 (expression -> NOT expression .)
    AND             reduce using rule 14 (expression -> NOT expression .)
    NAND            reduce using rule 14 (expression -> NOT expression .)
    OR              reduce using rule 14 (expression -> NOT expression .)
    NOR             reduce using rule 14 (expression -> NOT expression .)
    XOR             reduce using rule 14 (expression -> NOT expression .)
    EQ              reduce using rule 14 (expression -> NOT expression .)
    NEQ             reduce using rule 14 (expression -> NOT expression .)
    IMPL            reduce using rule 14 (expression -> NOT expression .)
    PLUS            reduce using rule 14 (expression -> NOT expression .)
    MINUS           reduce using rule 14 (expression -> NOT expression .)
    TIMES           reduce using rule 14 (expression -> NOT expression .)
    DIVIDE          reduce using rule 14 (expression -> NOT expression .)
    $end            reduce using rule 14 (expression -> NOT expression .)
    SEPARATOR       reduce using rule 14 (expression -> NOT expression .)
    DO              reduce using rule 14 (expression -> NOT expression .)
    END             reduce using rule 14 (expression -> NOT expression .)
    THEN            reduce using rule 14 (expression -> NOT expression .)
    RPAREN          reduce using rule 14 (expression -> NOT expression .)
    IN              reduce using rule 14 (expression -> NOT expression .)
    ELSE            reduce using rule 14 (expression -> NOT expression .)
    LPAREN          shift and go to state 31

  ! LPAREN          [ reduce using rule 14 (expression -> NOT expression .) ]
  ! LESS_THEN       [ shift and go to state 17 ]
  ! GREATER_THEN    [ shift and go to state 18 ]
  ! LESS_EQUALS     [ shift and go to state 19 ]
  ! GREATER_EQUALS  [ shift and go to state 20 ]
  ! EQUALS          [ shift and go to state 21 ]
  ! NOT_EQUALS      [ shift and go to state 22 ]
  ! AND             [ shift and go to state 23 ]
  ! NAND            [ shift and go to state 24 ]
  ! OR              [ shift and go to state 25 ]
  ! NOR             [ shift and go to state 26 ]
  ! XOR             [ shift and go to state 27 ]
  ! EQ              [ shift and go to state 28 ]
  ! NEQ             [ shift and go to state 29 ]
  ! IMPL            [ shift and go to state 30 ]
  ! PLUS            [ shift and go to state 32 ]
  ! MINUS           [ shift and go to state 33 ]
  ! TIMES           [ shift and go to state 34 ]
  ! DIVIDE          [ shift and go to state 35 ]


state 46

    (15) expression -> IF expression . THEN expression
    (30) expression -> IF expression . THEN expression ELSE expression
    (4) expression -> expression . LESS_THEN expression
    (5) expression -> expression . GREATER_THEN expression
    (6) expression -> expression . LESS_EQUALS expression
    (7) expression -> expression . GREATER_EQUALS expression
    (8) expression -> expression . EQUALS expression
    (9) expression -> expression . NOT_EQUALS expression
    (22) expression -> expression . AND expression
    (23) expression -> expression . NAND expression
    (24) expression -> expression . OR expression
    (25) expression -> expression . NOR expression
    (26) expression -> expression . XOR expression
    (27) expression -> expression . EQ expression
    (28) expression -> expression . NEQ expression
    (29) expression -> expression . IMPL expression
    (31) expression -> expression . LPAREN expression RPAREN
    (33) expression -> expression . PLUS expression
    (34) expression -> expression . MINUS expression
    (35) expression -> expression . TIMES expression
    (36) expression -> expression . DIVIDE expression

    THEN            shift and go to state 77
    LESS_THEN       shift and go to state 17
    GREATER_THEN    shift and go to state 18
    LESS_EQUALS     shift and go to state 19
    GREATER_EQUALS  shift and go to state 20
    EQUALS          shift and go to state 21
    NOT_EQUALS      shift and go to state 22
    AND             shift and go to state 23
    NAND            shift and go to state 24
    OR              shift and go to state 25
    NOR             shift and go to state 26
    XOR             shift and go to state 27
    EQ              shift and go to state 28
    NEQ             shift and go to state 29
    IMPL            shift and go to state 30
    LPAREN          shift and go to state 31
    PLUS            shift and go to state 32
    MINUS           shift and go to state 33
    TIMES           shift and go to state 34
    DIVIDE          shift and go to state 35


state 47

    (39) expression -> LPAREN expression . RPAREN
    (4) expression -> expression . LESS_THEN expression
    (5) expression -> expression . GREATER_THEN expression
    (6) expression -> expression . LESS_EQUALS expression
    (7) expression -> expression . GREATER_EQUALS expression
    (8) expression -> expression . EQUALS expression
    (9) expression -> expression . NOT_EQUALS expression
    (22) expression -> expression . AND expression
    (23) expression -> expression . NAND expression
    (24) expression -> expression . OR expression
    (25) expression -> expression . NOR expression
    (26) expression -> expression . XOR expression
    (27) expression -> expression . EQ expression
    (28) expression -> expression . NEQ expression
    (29) expression -> expression . IMPL expression
    (31) expression -> expression . LPAREN expression RPAREN
    (33) expression -> expression . PLUS expression
    (34) expression -> expression . MINUS expression
    (35) expression -> expression . TIMES expression
    (36) expression -> expression . DIVIDE expression

    RPAREN          shift and go to state 78
    LESS_THEN       shift and go to state 17
    GREATER_THEN    shift and go to state 18
    LESS_EQUALS     shift and go to state 19
    GREATER_EQUALS  shift and go to state 20
    EQUALS          shift and go to state 21
    NOT_EQUALS      shift and go to state 22
    AND             shift and go to state 23
    NAND            shift and go to state 24
    OR              shift and go to state 25
    NOR             shift and go to state 26
    XOR             shift and go to state 27
    EQ              shift and go to state 28
    NEQ             shift and go to state 29
    IMPL            shift and go to state 30
    LPAREN          shift and go to state 31
    PLUS            shift and go to state 32
    MINUS           shift and go to state 33
    TIMES           shift and go to state 34
    DIVIDE          shift and go to state 35


state 48

    (32) expression -> MINUS expression .
    (4) expression -> expression . LESS_THEN expression
    (5) expression -> expression . GREATER_THEN expression
    (6) expression -> expression . LESS_EQUALS expression
    (7) expression -> expression . GREATER_EQUALS expression
    (8) expression -> expression . EQUALS expression
    (9) expression -> expression . NOT_EQUALS expression
    (22) expression -> expression . AND expression
    (23) expression -> expression . NAND expression
    (24) expression -> expression . OR expression
    (25) expression -> expression . NOR expression
    (26) expression -> expression . XOR expression
    (27) expression -> expression . EQ expression
    (28) expression -> expression . NEQ expression
    (29) expression -> expression . IMPL expression
    (31) expression -> expression . LPAREN expression RPAREN
    (33) expression -> expression . PLUS expression
    (34) expression -> expression . MINUS expression
    (35) expression -> expression . TIMES expression
    (36) expression -> expression . DIVIDE expression

    LESS_THEN       reduce using rule 32 (expression -> MINUS expression .)
    GREATER_THEN    reduce using rule 32 (expression -> MINUS expression .)
    LESS_EQUALS     reduce using rule 32 (expression -> MINUS expression .)
    GREATER_EQUALS  reduce using rule 32 (expression -> MINUS expression .)
    EQUALS          reduce using rule 32 (expression -> MINUS expression .)
    NOT_EQUALS      reduce using rule 32 (expression -> MINUS expression .)
    AND             reduce using rule 32 (expression -> MINUS expression .)
    NAND            reduce using rule 32 (expression -> MINUS expression .)
    OR              reduce using rule 32 (expression -> MINUS expression .)
    NOR             reduce using rule 32 (expression -> MINUS expression .)
    XOR             reduce using rule 32 (expression -> MINUS expression .)
    EQ              reduce using rule 32 (expression -> MINUS expression .)
    NEQ             reduce using rule 32 (expression -> MINUS expression .)
    IMPL            reduce using rule 32 (expression -> MINUS expression .)
    PLUS            reduce using rule 32 (expression -> MINUS expression .)
    MINUS           reduce using rule 32 (expression -> MINUS expression .)
    TIMES           reduce using rule 32 (expression -> MINUS expression .)
    DIVIDE          reduce using rule 32 (expression -> MINUS expression .)
    $end            reduce using rule 32 (expression -> MINUS expression .)
    SEPARATOR       reduce using rule 32 (expression -> MINUS expression .)
    DO              reduce using rule 32 (expression -> MINUS expression .)
    END             reduce using rule 32 (expression -> MINUS expression .)
    THEN            reduce using rule 32 (expression -> MINUS expression .)
    RPAREN          reduce using rule 32 (expression -> MINUS expression .)
    IN              reduce using rule 32 (expression -> MINUS expression .)
    ELSE            reduce using rule 32 (expression -> MINUS expression .)
    LPAREN          shift and go to state 31

  ! LPAREN          [ reduce using rule 32 (expression -> MINUS expression .) ]
  ! LESS_THEN       [ shift and go to state 17 ]
  ! GREATER_THEN    [ shift and go to state 18 ]
  ! LESS_EQUALS     [ shift and go to state 19 ]
  ! GREATER_EQUALS  [ shift and go to state 20 ]
  ! EQUALS          [ shift and go to state 21 ]
  ! NOT_EQUALS      [ shift and go to state 22 ]
  ! AND             [ shift and go to state 23 ]
  ! NAND            [ shift and go to state 24 ]
  ! OR              [ shift and go to state 25 ]
  ! NOR             [ shift and go to state 26 ]
  ! XOR             [ shift and go to state 27 ]
  ! EQ              [ shift and go to state 28 ]
  ! NEQ             [ shift and go to state 29 ]
  ! IMPL            [ shift and go to state 30 ]
  ! PLUS            [ shift and go to state 32 ]
  ! MINUS           [ shift and go to state 33 ]
  ! TIMES           [ shift and go to state 34 ]
  ! DIVIDE          [ shift and go to state 35 ]


state 49

    (4) expression -> expression LESS_THEN expression .
    (4) expression -> expression . LESS_THEN expression
    (5) expression -> expression . GREATER_THEN expression
    (6) expression -> expression . LESS_EQUALS expression
    (7) expression -> expression . GREATER_EQUALS expression
    (8) expression -> expression . EQUALS expression
    (9) expression -> expression . NOT_EQUALS expression
    (22) expression -> expression . AND expression
    (23) expression -> expression . NAND expression
    (24) expression -> expression . OR expression
    (25) expression -> expression . NOR expression
    (26) expression -> expression . XOR expression
    (27) expression -> expression . EQ expression
    (28) expression -> expression . NEQ expression
    (29) expression -> expression . IMPL expression
    (31) expression -> expression . LPAREN expression RPAREN
    (33) expression -> expression . PLUS expression
    (34) expression -> expression . MINUS expression
    (35) expression -> expression . TIMES expression
    (36) expression -> expression . DIVIDE expression

    LESS_THEN       reduce using rule 4 (expression -> expression LESS_THEN expression .)
    GREATER_THEN    reduce using rule 4 (expression -> expression LESS_THEN expression .)
    LESS_EQUALS     reduce using rule 4 (expression -> expression LESS_THEN expression .)
    GREATER_EQUALS  reduce using rule 4 (expression -> expression LESS_THEN expression .)
    EQUALS          reduce using rule 4 (expression -> expression LESS_THEN expression .)
    NOT_EQUALS      reduce using rule 4 (expression -> expression LESS_THEN expression .)
    AND             reduce using rule 4 (expression -> expression LESS_THEN expression .)
    NAND            reduce using rule 4 (expression -> expression LESS_THEN expression .)
    OR              reduce using rule 4 (expression -> expression LESS_THEN expression .)
    NOR             reduce using rule 4 (expression -> expression LESS_THEN expression .)
    XOR             reduce using rule 4 (expression -> expression LESS_THEN expression .)
    EQ              reduce using rule 4 (expression -> expression LESS_THEN expression .)
    NEQ             reduce using rule 4 (expression -> expression LESS_THEN expression .)
    IMPL            reduce using rule 4 (expression -> expression LESS_THEN expression .)
    $end            reduce using rule 4 (expression -> expression LESS_THEN expression .)
    SEPARATOR       reduce using rule 4 (expression -> expression LESS_THEN expression .)
    DO              reduce using rule 4 (expression -> expression LESS_THEN expression .)
    END             reduce using rule 4 (expression -> expression LESS_THEN expression .)
    THEN            reduce using rule 4 (expression -> expression LESS_THEN expression .)
    RPAREN          reduce using rule 4 (expression -> expression LESS_THEN expression .)
    IN              reduce using rule 4 (expression -> expression LESS_THEN expression .)
    ELSE            reduce using rule 4 (expression -> expression LESS_THEN expression .)
    LPAREN          shift and go to state 31
    PLUS            shift and go to state 32
    MINUS           shift and go to state 33
    TIMES           shift and go to state 34
    DIVIDE          shift and go to state 35

  ! LPAREN          [ reduce using rule 4 (expression -> expression LESS_THEN expression .) ]
  ! PLUS            [ reduce using rule 4 (expression -> expression LESS_THEN expression .) ]
  ! MINUS           [ reduce using rule 4 (expression -> expression LESS_THEN expression .) ]
  ! TIMES           [ reduce using rule 4 (expression -> expression LESS_THEN expression .) ]
  ! DIVIDE          [ reduce using rule 4 (expression -> expression LESS_THEN expression .) ]
  ! LESS_THEN       [ shift and go to state 17 ]
  ! GREATER_THEN    [ shift and go to state 18 ]
  ! LESS_EQUALS     [ shift and go to state 19 ]
  ! GREATER_EQUALS  [ shift and go to state 20 ]
  ! EQUALS          [ shift and go to state 21 ]
  ! NOT_EQUALS      [ shift and go to state 22 ]
  ! AND             [ shift and go to state 23 ]
  ! NAND            [ shift and go to state 24 ]
  ! OR              [ shift and go to state 25 ]
  ! NOR             [ shift and go to state 26 ]
  ! XOR             [ shift and go to state 27 ]
  ! EQ              [ shift and go to state 28 ]
  ! NEQ             [ shift and go to state 29 ]
  ! IMPL            [ shift and go to state 30 ]


state 50

    (5) expression -> expression GREATER_THEN expression .
    (4) expression -> expression . LESS_THEN expression
    (5) expression -> expression . GREATER_THEN expression
    (6) expression -> expression . LESS_EQUALS expression
    (7) expression -> expression . GREATER_EQUALS expression
    (8) expression -> expression . EQUALS expression
    (9) expression -> expression . NOT_EQUALS expression
    (22) expression -> expression . AND expression
    (23) expression -> expression . NAND expression
    (24) expression -> expression . OR expression
    (25) expression -> expression . NOR expression
    (26) expression -> expression . XOR expression
    (27) expression -> expression . EQ expression
    (28) expression -> expression . NEQ expression
    (29) expression -> expression . IMPL expression
    (31) expression -> expression . LPAREN expression RPAREN
    (33) expression -> expression . PLUS expression
    (34) expression -> expression . MINUS expression
    (35) expression -> expression . TIMES expression
    (36) expression -> expression . DIVIDE expression

    LESS_THEN       reduce using rule 5 (expression -> expression GREATER_THEN expression .)
    GREATER_THEN    reduce using rule 5 (expression -> expression GREATER_THEN expression .)
    LESS_EQUALS     reduce using rule 5 (expression -> expression GREATER_THEN expression .)
    GREATER_EQUALS  reduce using rule 5 (expression -> expression GREATER_THEN expression .)
    EQUALS          reduce using rule 5 (expression -> expression GREATER_THEN expression .)
    NOT_EQUALS      reduce using rule 5 (expression -> expression GREATER_THEN expression .)
    AND             reduce using rule 5 (expression -> expression GREATER_THEN expression .)
    NAND            reduce using rule 5 (expression -> expression GREATER_THEN expression .)
    OR              reduce using rule 5 (expression -> expression GREATER_THEN expression .)
    NOR             reduce using rule 5 (expression -> expression GREATER_THEN expression .)
    XOR             reduce using rule 5 (expression -> expression GREATER_THEN expression .)
    EQ              reduce using rule 5 (expression -> expression GREATER_THEN expression .)
    NEQ             reduce using rule 5 (expression -> expression GREATER_THEN expression .)
    IMPL            reduce using rule 5 (expression -> expression GREATER_THEN expression .)
    $end            reduce using rule 5 (expression -> expression GREATER_THEN expression .)
    SEPARATOR       reduce using rule 5 (expression -> expression GREATER_THEN expression .)
    DO              reduce using rule 5 (expression -> expression GREATER_THEN expression .)
    END             reduce using rule 5 (expression -> expression GREATER_THEN expression .)
    THEN            reduce using rule 5 (expression -> expression GREATER_THEN expression .)
    RPAREN          reduce using rule 5 (expression -> expression GREATER_THEN expression .)
    IN              reduce using rule 5 (expression -> expression GREATER_THEN expression .)
    ELSE            reduce using rule 5 (expression -> expression GREATER_THEN expression .)
    LPAREN          shift and go to state 31
    PLUS            shift and go to state 32
    MINUS           shift and go to state 33
    TIMES           shift and go to state 34
    DIVIDE          shift and go to state 35

  ! LPAREN          [ reduce using rule 5 (expression -> expression GREATER_THEN expression .) ]
  ! PLUS            [ reduce using rule 5 (expression -> expression GREATER_THEN expression .) ]
  ! MINUS           [ reduce using rule 5 (expression -> expression GREATER_THEN expression .) ]
  ! TIMES           [ reduce using rule 5 (expression -> expression GREATER_THEN expression .) ]
  ! DIVIDE          [ reduce using rule 5 (expression -> expression GREATER_THEN expression .) ]
  ! LESS_THEN       [ shift and go to state 17 ]
  ! GREATER_THEN    [ shift and go to state 18 ]
  ! LESS_EQUALS     [ shift and go to state 19 ]
  ! GREATER_EQUALS  [ shift and go to state 20 ]
  ! EQUALS          [ shift and go to state 21 ]
  ! NOT_EQUALS      [ shift and go to state 22 ]
  ! AND             [ shift and go to state 23 ]
  ! NAND            [ shift and go to state 24 ]
  ! OR              [ shift and go to state 25 ]
  ! NOR             [ shift and go to state 26 ]
  ! XOR             [ shift and go to state 27 ]
  ! EQ              [ shift and go to state 28 ]
  ! NEQ             [ shift and go to state 29 ]
  ! IMPL            [ shift and go to state 30 ]


state 51

    (6) expression -> expression LESS_EQUALS expression .
    (4) expression -> expression . LESS_THEN expression
    (5) expression -> expression . GREATER_THEN expression
    (6) expression -> expression . LESS_EQUALS expression
    (7) expression -> expression . GREATER_EQUALS expression
    (8) expression -> expression . EQUALS expression
    (9) expression -> expression . NOT_EQUALS expression
    (22) expression -> expression . AND expression
    (23) expression -> expression . NAND expression
    (24) expression -> expression . OR expression
    (25) expression -> expression . NOR expression
    (26) expression -> expression . XOR expression
    (27) expression -> expression . EQ expression
    (28) expression -> expression . NEQ expression
    (29) expression -> expression . IMPL expression
    (31) expression -> expression . LPAREN expression RPAREN
    (33) expression -> expression . PLUS expression
    (34) expression -> expression . MINUS expression
    (35) expression -> expression . TIMES expression
    (36) expression -> expression . DIVIDE expression

    LESS_THEN       reduce using rule 6 (expression -> expression LESS_EQUALS expression .)
    GREATER_THEN    reduce using rule 6 (expression -> expression LESS_EQUALS expression .)
    LESS_EQUALS     reduce using rule 6 (expression -> expression LESS_EQUALS expression .)
    GREATER_EQUALS  reduce using rule 6 (expression -> expression LESS_EQUALS expression .)
    EQUALS          reduce using rule 6 (expression -> expression LESS_EQUALS expression .)
    NOT_EQUALS      reduce using rule 6 (expression -> expression LESS_EQUALS expression .)
    AND             reduce using rule 6 (expression -> expression LESS_EQUALS expression .)
    NAND            reduce using rule 6 (expression -> expression LESS_EQUALS expression .)
    OR              reduce using rule 6 (expression -> expression LESS_EQUALS expression .)
    NOR             reduce using rule 6 (expression -> expression LESS_EQUALS expression .)
    XOR             reduce using rule 6 (expression -> expression LESS_EQUALS expression .)
    EQ              reduce using rule 6 (expression -> expression LESS_EQUALS expression .)
    NEQ             reduce using rule 6 (expression -> expression LESS_EQUALS expression .)
    IMPL            reduce using rule 6 (expression -> expression LESS_EQUALS expression .)
    $end            reduce using rule 6 (expression -> expression LESS_EQUALS expression .)
    SEPARATOR       reduce using rule 6 (expression -> expression LESS_EQUALS expression .)
    DO              reduce using rule 6 (expression -> expression LESS_EQUALS expression .)
    END             reduce using rule 6 (expression -> expression LESS_EQUALS expression .)
    THEN            reduce using rule 6 (expression -> expression LESS_EQUALS expression .)
    RPAREN          reduce using rule 6 (expression -> expression LESS_EQUALS expression .)
    IN              reduce using rule 6 (expression -> expression LESS_EQUALS expression .)
    ELSE            reduce using rule 6 (expression -> expression LESS_EQUALS expression .)
    LPAREN          shift and go to state 31
    PLUS            shift and go to state 32
    MINUS           shift and go to state 33
    TIMES           shift and go to state 34
    DIVIDE          shift and go to state 35

  ! LPAREN          [ reduce using rule 6 (expression -> expression LESS_EQUALS expression .) ]
  ! PLUS            [ reduce using rule 6 (expression -> expression LESS_EQUALS expression .) ]
  ! MINUS           [ reduce using rule 6 (expression -> expression LESS_EQUALS expression .) ]
  ! TIMES           [ reduce using rule 6 (expression -> expression LESS_EQUALS expression .) ]
  ! DIVIDE          [ reduce using rule 6 (expression -> expression LESS_EQUALS expression .) ]
  ! LESS_THEN       [ shift and go to state 17 ]
  ! GREATER_THEN    [ shift and go to state 18 ]
  ! LESS_EQUALS     [ shift and go to state 19 ]
  ! GREATER_EQUALS  [ shift and go to state 20 ]
  ! EQUALS          [ shift and go to state 21 ]
  ! NOT_EQUALS      [ shift and go to state 22 ]
  ! AND             [ shift and go to state 23 ]
  ! NAND            [ shift and go to state 24 ]
  ! OR              [ shift and go to state 25 ]
  ! NOR             [ shift and go to state 26 ]
  ! XOR             [ shift and go to state 27 ]
  ! EQ              [ shift and go to state 28 ]
  ! NEQ             [ shift and go to state 29 ]
  ! IMPL            [ shift and go to state 30 ]


state 52

    (7) expression -> expression GREATER_EQUALS expression .
    (4) expression -> expression . LESS_THEN expression
    (5) expression -> expression . GREATER_THEN expression
    (6) expression -> expression . LESS_EQUALS expression
    (7) expression -> expression . GREATER_EQUALS expression
    (8) expression -> expression . EQUALS expression
    (9) expression -> expression . NOT_EQUALS expression
    (22) expression -> expression . AND expression
    (23) expression -> expression . NAND expression
    (24) expression -> expression . OR expression
    (25) expression -> expression . NOR expression
    (26) expression -> expression . XOR expression
    (27) expression -> expression . EQ expression
    (28) expression -> expression . NEQ expression
    (29) expression -> expression . IMPL expression
    (31) expression -> expression . LPAREN expression RPAREN
    (33) expression -> expression . PLUS expression
    (34) expression -> expression . MINUS expression
    (35) expression -> expression . TIMES expression
    (36) expression -> expression . DIVIDE expression

    LESS_THEN       reduce using rule 7 (expression -> expression GREATER_EQUALS expression .)
    GREATER_THEN    reduce using rule 7 (expression -> expression GREATER_EQUALS expression .)
    LESS_EQUALS     reduce using rule 7 (expression -> expression GREATER_EQUALS expression .)
    GREATER_EQUALS  reduce using rule 7 (expression -> expression GREATER_EQUALS expression .)
    EQUALS          reduce using rule 7 (expression -> expression GREATER_EQUALS expression .)
    NOT_EQUALS      reduce using rule 7 (expression -> expression GREATER_EQUALS expression .)
    AND             reduce using rule 7 (expression -> expression GREATER_EQUALS expression .)
    NAND            reduce using rule 7 (expression -> expression GREATER_EQUALS expression .)
    OR              reduce using rule 7 (expression -> expression GREATER_EQUALS expression .)
    NOR             reduce using rule 7 (expression -> expression GREATER_EQUALS expression .)
    XOR             reduce using rule 7 (expression -> expression GREATER_EQUALS expression .)
    EQ              reduce using rule 7 (expression -> expression GREATER_EQUALS expression .)
    NEQ             reduce using rule 7 (expression -> expression GREATER_EQUALS expression .)
    IMPL            reduce using rule 7 (expression -> expression GREATER_EQUALS expression .)
    $end            reduce using rule 7 (expression -> expression GREATER_EQUALS expression .)
    SEPARATOR       reduce using rule 7 (expression -> expression GREATER_EQUALS expression .)
    DO              reduce using rule 7 (expression -> expression GREATER_EQUALS expression .)
    END             reduce using rule 7 (expression -> expression GREATER_EQUALS expression .)
    THEN            reduce using rule 7 (expression -> expression GREATER_EQUALS expression .)
    RPAREN          reduce using rule 7 (expression -> expression GREATER_EQUALS expression .)
    IN              reduce using rule 7 (expression -> expression GREATER_EQUALS expression .)
    ELSE            reduce using rule 7 (expression -> expression GREATER_EQUALS expression .)
    LPAREN          shift and go to state 31
    PLUS            shift and go to state 32
    MINUS           shift and go to state 33
    TIMES           shift and go to state 34
    DIVIDE          shift and go to state 35

  ! LPAREN          [ reduce using rule 7 (expression -> expression GREATER_EQUALS expression .) ]
  ! PLUS            [ reduce using rule 7 (expression -> expression GREATER_EQUALS expression .) ]
  ! MINUS           [ reduce using rule 7 (expression -> expression GREATER_EQUALS expression .) ]
  ! TIMES           [ reduce using rule 7 (expression -> expression GREATER_EQUALS expression .) ]
  ! DIVIDE          [ reduce using rule 7 (expression -> expression GREATER_EQUALS expression .) ]
  ! LESS_THEN       [ shift and go to state 17 ]
  ! GREATER_THEN    [ shift and go to state 18 ]
  ! LESS_EQUALS     [ shift and go to state 19 ]
  ! GREATER_EQUALS  [ shift and go to state 20 ]
  ! EQUALS          [ shift and go to state 21 ]
  ! NOT_EQUALS      [ shift and go to state 22 ]
  ! AND             [ shift and go to state 23 ]
  ! NAND            [ shift and go to state 24 ]
  ! OR              [ shift and go to state 25 ]
  ! NOR             [ shift and go to state 26 ]
  ! XOR             [ shift and go to state 27 ]
  ! EQ              [ shift and go to state 28 ]
  ! NEQ             [ shift and go to state 29 ]
  ! IMPL            [ shift and go to state 30 ]


state 53

    (8) expression -> expression EQUALS expression .
    (4) expression -> expression . LESS_THEN expression
    (5) expression -> expression . GREATER_THEN expression
    (6) expression -> expression . LESS_EQUALS expression
    (7) expression -> expression . GREATER_EQUALS expression
    (8) expression -> expression . EQUALS expression
    (9) expression -> expression . NOT_EQUALS expression
    (22) expression -> expression . AND expression
    (23) expression -> expression . NAND expression
    (24) expression -> expression . OR expression
    (25) expression -> expression . NOR expression
    (26) expression -> expression . XOR expression
    (27) expression -> expression . EQ expression
    (28) expression -> expression . NEQ expression
    (29) expression -> expression . IMPL expression
    (31) expression -> expression . LPAREN expression RPAREN
    (33) expression -> expression . PLUS expression
    (34) expression -> expression . MINUS expression
    (35) expression -> expression . TIMES expression
    (36) expression -> expression . DIVIDE expression

    EQUALS          reduce using rule 8 (expression -> expression EQUALS expression .)
    NOT_EQUALS      reduce using rule 8 (expression -> expression EQUALS expression .)
    AND             reduce using rule 8 (expression -> expression EQUALS expression .)
    NAND            reduce using rule 8 (expression -> expression EQUALS expression .)
    OR              reduce using rule 8 (expression -> expression EQUALS expression .)
    NOR             reduce using rule 8 (expression -> expression EQUALS expression .)
    XOR             reduce using rule 8 (expression -> expression EQUALS expression .)
    EQ              reduce using rule 8 (expression -> expression EQUALS expression .)
    NEQ             reduce using rule 8 (expression -> expression EQUALS expression .)
    IMPL            reduce using rule 8 (expression -> expression EQUALS expression .)
    $end            reduce using rule 8 (expression -> expression EQUALS expression .)
    SEPARATOR       reduce using rule 8 (expression -> expression EQUALS expression .)
    DO              reduce using rule 8 (expression -> expression EQUALS expression .)
    END             reduce using rule 8 (expression -> expression EQUALS expression .)
    THEN            reduce using rule 8 (expression -> expression EQUALS expression .)
    RPAREN          reduce using rule 8 (expression -> expression EQUALS expression .)
    IN              reduce using rule 8 (expression -> expression EQUALS expression .)
    ELSE            reduce using rule 8 (expression -> expression EQUALS expression .)
    LESS_THEN       shift and go to state 17
    GREATER_THEN    shift and go to state 18
    LESS_EQUALS     shift and go to state 19
    GREATER_EQUALS  shift and go to state 20
    LPAREN          shift and go to state 31
    PLUS            shift and go to state 32
    MINUS           shift and go to state 33
    TIMES           shift and go to state 34
    DIVIDE          shift and go to state 35

  ! LESS_THEN       [ reduce using rule 8 (expression -> expression EQUALS expression .) ]
  ! GREATER_THEN    [ reduce using rule 8 (expression -> expression EQUALS expression .) ]
  ! LESS_EQUALS     [ reduce using rule 8 (expression -> expression EQUALS expression .) ]
  ! GREATER_EQUALS  [ reduce using rule 8 (expression -> expression EQUALS expression .) ]
  ! LPAREN          [ reduce using rule 8 (expression -> expression EQUALS expression .) ]
  ! PLUS            [ reduce using rule 8 (expression -> expression EQUALS expression .) ]
  ! MINUS           [ reduce using rule 8 (expression -> expression EQUALS expression .) ]
  ! TIMES           [ reduce using rule 8 (expression -> expression EQUALS expression .) ]
  ! DIVIDE          [ reduce using rule 8 (expression -> expression EQUALS expression .) ]
  ! EQUALS          [ shift and go to state 21 ]
  ! NOT_EQUALS      [ shift and go to state 22 ]
  ! AND             [ shift and go to state 23 ]
  ! NAND            [ shift and go to state 24 ]
  ! OR              [ shift and go to state 25 ]
  ! NOR             [ shift and go to state 26 ]
  ! XOR             [ shift and go to state 27 ]
  ! EQ              [ shift and go to state 28 ]
  ! NEQ             [ shift and go to state 29 ]
  ! IMPL            [ shift and go to state 30 ]


state 54

    (9) expression -> expression NOT_EQUALS expression .
    (4) expression -> expression . LESS_THEN expression
    (5) expression -> expression . GREATER_THEN expression
    (6) expression -> expression . LESS_EQUALS expression
    (7) expression -> expression . GREATER_EQUALS expression
    (8) expression -> expression . EQUALS expression
    (9) expression -> expression . NOT_EQUALS expression
    (22) expression -> expression . AND expression
    (23) expression -> expression . NAND expression
    (24) expression -> expression . OR expression
    (25) expression -> expression . NOR expression
    (26) expression -> expression . XOR expression
    (27) expression -> expression . EQ expression
    (28) expression -> expression . NEQ expression
    (29) expression -> expression . IMPL expression
    (31) expression -> expression . LPAREN expression RPAREN
    (33) expression -> expression . PLUS expression
    (34) expression -> expression . MINUS expression
    (35) expression -> expression . TIMES expression
    (36) expression -> expression . DIVIDE expression

    EQUALS          reduce using rule 9 (expression -> expression NOT_EQUALS expression .)
    NOT_EQUALS      reduce using rule 9 (expression -> expression NOT_EQUALS expression .)
    AND             reduce using rule 9 (expression -> expression NOT_EQUALS expression .)
    NAND            reduce using rule 9 (expression -> expression NOT_EQUALS expression .)
    OR              reduce using rule 9 (expression -> expression NOT_EQUALS expression .)
    NOR             reduce using rule 9 (expression -> expression NOT_EQUALS expression .)
    XOR             reduce using rule 9 (expression -> expression NOT_EQUALS expression .)
    EQ              reduce using rule 9 (expression -> expression NOT_EQUALS expression .)
    NEQ             reduce using rule 9 (expression -> expression NOT_EQUALS expression .)
    IMPL            reduce using rule 9 (expression -> expression NOT_EQUALS expression .)
    $end            reduce using rule 9 (expression -> expression NOT_EQUALS expression .)
    SEPARATOR       reduce using rule 9 (expression -> expression NOT_EQUALS expression .)
    DO              reduce using rule 9 (expression -> expression NOT_EQUALS expression .)
    END             reduce using rule 9 (expression -> expression NOT_EQUALS expression .)
    THEN            reduce using rule 9 (expression -> expression NOT_EQUALS expression .)
    RPAREN          reduce using rule 9 (expression -> expression NOT_EQUALS expression .)
    IN              reduce using rule 9 (expression -> expression NOT_EQUALS expression .)
    ELSE            reduce using rule 9 (expression -> expression NOT_EQUALS expression .)
    LESS_THEN       shift and go to state 17
    GREATER_THEN    shift and go to state 18
    LESS_EQUALS     shift and go to state 19
    GREATER_EQUALS  shift and go to state 20
    LPAREN          shift and go to state 31
    PLUS            shift and go to state 32
    MINUS           shift and go to state 33
    TIMES           shift and go to state 34
    DIVIDE          shift and go to state 35

  ! LESS_THEN       [ reduce using rule 9 (expression -> expression NOT_EQUALS expression .) ]
  ! GREATER_THEN    [ reduce using rule 9 (expression -> expression NOT_EQUALS expression .) ]
  ! LESS_EQUALS     [ reduce using rule 9 (expression -> expression NOT_EQUALS expression .) ]
  ! GREATER_EQUALS  [ reduce using rule 9 (expression -> expression NOT_EQUALS expression .) ]
  ! LPAREN          [ reduce using rule 9 (expression -> expression NOT_EQUALS expression .) ]
  ! PLUS            [ reduce using rule 9 (expression -> expression NOT_EQUALS expression .) ]
  ! MINUS           [ reduce using rule 9 (expression -> expression NOT_EQUALS expression .) ]
  ! TIMES           [ reduce using rule 9 (expression -> expression NOT_EQUALS expression .) ]
  ! DIVIDE          [ reduce using rule 9 (expression -> expression NOT_EQUALS expression .) ]
  ! EQUALS          [ shift and go to state 21 ]
  ! NOT_EQUALS      [ shift and go to state 22 ]
  ! AND             [ shift and go to state 23 ]
  ! NAND            [ shift and go to state 24 ]
  ! OR              [ shift and go to state 25 ]
  ! NOR             [ shift and go to state 26 ]
  ! XOR             [ shift and go to state 27 ]
  ! EQ              [ shift and go to state 28 ]
  ! NEQ             [ shift and go to state 29 ]
  ! IMPL            [ shift and go to state 30 ]


state 55

    (22) expression -> expression AND expression .
    (4) expression -> expression . LESS_THEN expression
    (5) expression -> expression . GREATER_THEN expression
    (6) expression -> expression . LESS_EQUALS expression
    (7) expression -> expression . GREATER_EQUALS expression
    (8) expression -> expression . EQUALS expression
    (9) expression -> expression . NOT_EQUALS expression
    (22) expression -> expression . AND expression
    (23) expression -> expression . NAND expression
    (24) expression -> expression . OR expression
    (25) expression -> expression . NOR expression
    (26) expression -> expression . XOR expression
    (27) expression -> expression . EQ expression
    (28) expression -> expression . NEQ expression
    (29) expression -> expression . IMPL expression
    (31) expression -> expression . LPAREN expression RPAREN
    (33) expression -> expression . PLUS expression
    (34) expression -> expression . MINUS expression
    (35) expression -> expression . TIMES expression
    (36) expression -> expression . DIVIDE expression

    AND             reduce using rule 22 (expression -> expression AND expression .)
    NAND            reduce using rule 22 (expression -> expression AND expression .)
    OR              reduce using rule 22 (expression -> expression AND expression .)
    NOR             reduce using rule 22 (expression -> expression AND expression .)
    $end            reduce using rule 22 (expression -> expression AND expression .)
    SEPARATOR       reduce using rule 22 (expression -> expression AND expression .)
    DO              reduce using rule 22 (expression -> expression AND expression .)
    END             reduce using rule 22 (expression -> expression AND expression .)
    THEN            reduce using rule 22 (expression -> expression AND expression .)
    RPAREN          reduce using rule 22 (expression -> expression AND expression .)
    IN              reduce using rule 22 (expression -> expression AND expression .)
    ELSE            reduce using rule 22 (expression -> expression AND expression .)
    LESS_THEN       shift and go to state 17
    GREATER_THEN    shift and go to state 18
    LESS_EQUALS     shift and go to state 19
    GREATER_EQUALS  shift and go to state 20
    EQUALS          shift and go to state 21
    NOT_EQUALS      shift and go to state 22
    XOR             shift and go to state 27
    EQ              shift and go to state 28
    NEQ             shift and go to state 29
    IMPL            shift and go to state 30
    LPAREN          shift and go to state 31
    PLUS            shift and go to state 32
    MINUS           shift and go to state 33
    TIMES           shift and go to state 34
    DIVIDE          shift and go to state 35

  ! LESS_THEN       [ reduce using rule 22 (expression -> expression AND expression .) ]
  ! GREATER_THEN    [ reduce using rule 22 (expression -> expression AND expression .) ]
  ! LESS_EQUALS     [ reduce using rule 22 (expression -> expression AND expression .) ]
  ! GREATER_EQUALS  [ reduce using rule 22 (expression -> expression AND expression .) ]
  ! EQUALS          [ reduce using rule 22 (expression -> expression AND expression .) ]
  ! NOT_EQUALS      [ reduce using rule 22 (expression -> expression AND expression .) ]
  ! XOR             [ reduce using rule 22 (expression -> expression AND expression .) ]
  ! EQ              [ reduce using rule 22 (expression -> expression AND expression .) ]
  ! NEQ             [ reduce using rule 22 (expression -> expression AND expression .) ]
  ! IMPL            [ reduce using rule 22 (expression -> expression AND expression .) ]
  ! LPAREN          [ reduce using rule 22 (expression -> expression AND expression .) ]
  ! PLUS            [ reduce using rule 22 (expression -> expression AND expression .) ]
  ! MINUS           [ reduce using rule 22 (expression -> expression AND expression .) ]
  ! TIMES           [ reduce using rule 22 (expression -> expression AND expression .) ]
  ! DIVIDE          [ reduce using rule 22 (expression -> expression AND expression .) ]
  ! AND             [ shift and go to state 23 ]
  ! NAND            [ shift and go to state 24 ]
  ! OR              [ shift and go to state 25 ]
  ! NOR             [ shift and go to state 26 ]


state 56

    (23) expression -> expression NAND expression .
    (4) expression -> expression . LESS_THEN expression
    (5) expression -> expression . GREATER_THEN expression
    (6) expression -> expression . LESS_EQUALS expression
    (7) expression -> expression . GREATER_EQUALS expression
    (8) expression -> expression . EQUALS expression
    (9) expression -> expression . NOT_EQUALS expression
    (22) expression -> expression . AND expression
    (23) expression -> expression . NAND expression
    (24) expression -> expression . OR expression
    (25) expression -> expression . NOR expression
    (26) expression -> expression . XOR expression
    (27) expression -> expression . EQ expression
    (28) expression -> expression . NEQ expression
    (29) expression -> expression . IMPL expression
    (31) expression -> expression . LPAREN expression RPAREN
    (33) expression -> expression . PLUS expression
    (34) expression -> expression . MINUS expression
    (35) expression -> expression . TIMES expression
    (36) expression -> expression . DIVIDE expression

    AND             reduce using rule 23 (expression -> expression NAND expression .)
    NAND            reduce using rule 23 (expression -> expression NAND expression .)
    OR              reduce using rule 23 (expression -> expression NAND expression .)
    NOR             reduce using rule 23 (expression -> expression NAND expression .)
    $end            reduce using rule 23 (expression -> expression NAND expression .)
    SEPARATOR       reduce using rule 23 (expression -> expression NAND expression .)
    DO              reduce using rule 23 (expression -> expression NAND expression .)
    END             reduce using rule 23 (expression -> expression NAND expression .)
    THEN            reduce using rule 23 (expression -> expression NAND expression .)
    RPAREN          reduce using rule 23 (expression -> expression NAND expression .)
    IN              reduce using rule 23 (expression -> expression NAND expression .)
    ELSE            reduce using rule 23 (expression -> expression NAND expression .)
    LESS_THEN       shift and go to state 17
    GREATER_THEN    shift and go to state 18
    LESS_EQUALS     shift and go to state 19
    GREATER_EQUALS  shift and go to state 20
    EQUALS          shift and go to state 21
    NOT_EQUALS      shift and go to state 22
    XOR             shift and go to state 27
    EQ              shift and go to state 28
    NEQ             shift and go to state 29
    IMPL            shift and go to state 30
    LPAREN          shift and go to state 31
    PLUS            shift and go to state 32
    MINUS           shift and go to state 33
    TIMES           shift and go to state 34
    DIVIDE          shift and go to state 35

  ! LESS_THEN       [ reduce using rule 23 (expression -> expression NAND expression .) ]
  ! GREATER_THEN    [ reduce using rule 23 (expression -> expression NAND expression .) ]
  ! LESS_EQUALS     [ reduce using rule 23 (expression -> expression NAND expression .) ]
  ! GREATER_EQUALS  [ reduce using rule 23 (expression -> expression NAND expression .) ]
  ! EQUALS          [ reduce using rule 23 (expression -> expression NAND expression .) ]
  ! NOT_EQUALS      [ reduce using rule 23 (expression -> expression NAND expression .) ]
  ! XOR             [ reduce using rule 23 (expression -> expression NAND expression .) ]
  ! EQ              [ reduce using rule 23 (expression -> expression NAND expression .) ]
  ! NEQ             [ reduce using rule 23 (expression -> expression NAND expression .) ]
  ! IMPL            [ reduce using rule 23 (expression -> expression NAND expression .) ]
  ! LPAREN          [ reduce using rule 23 (expression -> expression NAND expression .) ]
  ! PLUS            [ reduce using rule 23 (expression -> expression NAND expression .) ]
  ! MINUS           [ reduce using rule 23 (expression -> expression NAND expression .) ]
  ! TIMES           [ reduce using rule 23 (expression -> expression NAND expression .) ]
  ! DIVIDE          [ reduce using rule 23 (expression -> expression NAND expression .) ]
  ! AND             [ shift and go to state 23 ]
  ! NAND            [ shift and go to state 24 ]
  ! OR              [ shift and go to state 25 ]
  ! NOR             [ shift and go to state 26 ]


state 57

    (24) expression -> expression OR expression .
    (4) expression -> expression . LESS_THEN expression
    (5) expression -> expression . GREATER_THEN expression
    (6) expression -> expression . LESS_EQUALS expression
    (7) expression -> expression . GREATER_EQUALS expression
    (8) expression -> expression . EQUALS expression
    (9) expression -> expression . NOT_EQUALS expression
    (22) expression -> expression . AND expression
    (23) expression -> expression . NAND expression
    (24) expression -> expression . OR expression
    (25) expression -> expression . NOR expression
    (26) expression -> expression . XOR expression
    (27) expression -> expression . EQ expression
    (28) expression -> expression . NEQ expression
    (29) expression -> expression . IMPL expression
    (31) expression -> expression . LPAREN expression RPAREN
    (33) expression -> expression . PLUS expression
    (34) expression -> expression . MINUS expression
    (35) expression -> expression . TIMES expression
    (36) expression -> expression . DIVIDE expression

    OR              reduce using rule 24 (expression -> expression OR expression .)
    NOR             reduce using rule 24 (expression -> expression OR expression .)
    $end            reduce using rule 24 (expression -> expression OR expression .)
    SEPARATOR       reduce using rule 24 (expression -> expression OR expression .)
    DO              reduce using rule 24 (expression -> expression OR expression .)
    END             reduce using rule 24 (expression -> expression OR expression .)
    THEN            reduce using rule 24 (expression -> expression OR expression .)
    RPAREN          reduce using rule 24 (expression -> expression OR expression .)
    IN              reduce using rule 24 (expression -> expression OR expression .)
    ELSE            reduce using rule 24 (expression -> expression OR expression .)
    LESS_THEN       shift and go to state 17
    GREATER_THEN    shift and go to state 18
    LESS_EQUALS     shift and go to state 19
    GREATER_EQUALS  shift and go to state 20
    EQUALS          shift and go to state 21
    NOT_EQUALS      shift and go to state 22
    AND             shift and go to state 23
    NAND            shift and go to state 24
    XOR             shift and go to state 27
    EQ              shift and go to state 28
    NEQ             shift and go to state 29
    IMPL            shift and go to state 30
    LPAREN          shift and go to state 31
    PLUS            shift and go to state 32
    MINUS           shift and go to state 33
    TIMES           shift and go to state 34
    DIVIDE          shift and go to state 35

  ! LESS_THEN       [ reduce using rule 24 (expression -> expression OR expression .) ]
  ! GREATER_THEN    [ reduce using rule 24 (expression -> expression OR expression .) ]
  ! LESS_EQUALS     [ reduce using rule 24 (expression -> expression OR expression .) ]
  ! GREATER_EQUALS  [ reduce using rule 24 (expression -> expression OR expression .) ]
  ! EQUALS          [ reduce using rule 24 (expression -> expression OR expression .) ]
  ! NOT_EQUALS      [ reduce using rule 24 (expression -> expression OR expression .) ]
  ! AND             [ reduce using rule 24 (expression -> expression OR expression .) ]
  ! NAND            [ reduce using rule 24 (expression -> expression OR expression .) ]
  ! XOR             [ reduce using rule 24 (expression -> expression OR expression .) ]
  ! EQ              [ reduce using rule 24 (expression -> expression OR expression .) ]
  ! NEQ             [ reduce using rule 24 (expression -> expression OR expression .) ]
  ! IMPL            [ reduce using rule 24 (expression -> expression OR expression .) ]
  ! LPAREN          [ reduce using rule 24 (expression -> expression OR expression .) ]
  ! PLUS            [ reduce using rule 24 (expression -> expression OR expression .) ]
  ! MINUS           [ reduce using rule 24 (expression -> expression OR expression .) ]
  ! TIMES           [ reduce using rule 24 (expression -> expression OR expression .) ]
  ! DIVIDE          [ reduce using rule 24 (expression -> expression OR expression .) ]
  ! OR              [ shift and go to state 25 ]
  ! NOR             [ shift and go to state 26 ]


state 58

    (25) expression -> expression NOR expression .
    (4) expression -> expression . LESS_THEN expression
    (5) expression -> expression . GREATER_THEN expression
    (6) expression -> expression . LESS_EQUALS expression
    (7) expression -> expression . GREATER_EQUALS expression
    (8) expression -> expression . EQUALS expression
    (9) expression -> expression . NOT_EQUALS expression
    (22) expression -> expression . AND expression
    (23) expression -> expression . NAND expression
    (24) expression -> expression . OR expression
    (25) expression -> expression . NOR expression
    (26) expression -> expression . XOR expression
    (27) expression -> expression . EQ expression
    (28) expression -> expression . NEQ expression
    (29) expression -> expression . IMPL expression
    (31) expression -> expression . LPAREN expression RPAREN
    (33) expression -> expression . PLUS expression
    (34) expression -> expression . MINUS expression
    (35) expression -> expression . TIMES expression
    (36) expression -> expression . DIVIDE expression

    OR              reduce using rule 25 (expression -> expression NOR expression .)
    NOR             reduce using rule 25 (expression -> expression NOR expression .)
    $end            reduce using rule 25 (expression -> expression NOR expression .)
    SEPARATOR       reduce using rule 25 (expression -> expression NOR expression .)
    DO              reduce using rule 25 (expression -> expression NOR expression .)
    END             reduce using rule 25 (expression -> expression NOR expression .)
    THEN            reduce using rule 25 (expression -> expression NOR expression .)
    RPAREN          reduce using rule 25 (expression -> expression NOR expression .)
    IN              reduce using rule 25 (expression -> expression NOR expression .)
    ELSE            reduce using rule 25 (expression -> expression NOR expression .)
    LESS_THEN       shift and go to state 17
    GREATER_THEN    shift and go to state 18
    LESS_EQUALS     shift and go to state 19
    GREATER_EQUALS  shift and go to state 20
    EQUALS          shift and go to state 21
    NOT_EQUALS      shift and go to state 22
    AND             shift and go to state 23
    NAND            shift and go to state 24
    XOR             shift and go to state 27
    EQ              shift and go to state 28
    NEQ             shift and go to state 29
    IMPL            shift and go to state 30
    LPAREN          shift and go to state 31
    PLUS            shift and go to state 32
    MINUS           shift and go to state 33
    TIMES           shift and go to state 34
    DIVIDE          shift and go to state 35

  ! LESS_THEN       [ reduce using rule 25 (expression -> expression NOR expression .) ]
  ! GREATER_THEN    [ reduce using rule 25 (expression -> expression NOR expression .) ]
  ! LESS_EQUALS     [ reduce using rule 25 (expression -> expression NOR expression .) ]
  ! GREATER_EQUALS  [ reduce using rule 25 (expression -> expression NOR expression .) ]
  ! EQUALS          [ reduce using rule 25 (expression -> expression NOR expression .) ]
  ! NOT_EQUALS      [ reduce using rule 25 (expression -> expression NOR expression .) ]
  ! AND             [ reduce using rule 25 (expression -> expression NOR expression .) ]
  ! NAND            [ reduce using rule 25 (expression -> expression NOR expression .) ]
  ! XOR             [ reduce using rule 25 (expression -> expression NOR expression .) ]
  ! EQ              [ reduce using rule 25 (expression -> expression NOR expression .) ]
  ! NEQ             [ reduce using rule 25 (expression -> expression NOR expression .) ]
  ! IMPL            [ reduce using rule 25 (expression -> expression NOR expression .) ]
  ! LPAREN          [ reduce using rule 25 (expression -> expression NOR expression .) ]
  ! PLUS            [ reduce using rule 25 (expression -> expression NOR expression .) ]
  ! MINUS           [ reduce using rule 25 (expression -> expression NOR expression .) ]
  ! TIMES           [ reduce using rule 25 (expression -> expression NOR expression .) ]
  ! DIVIDE          [ reduce using rule 25 (expression -> expression NOR expression .) ]
  ! OR              [ shift and go to state 25 ]
  ! NOR             [ shift and go to state 26 ]


state 59

    (26) expression -> expression XOR expression .
    (4) expression -> expression . LESS_THEN expression
    (5) expression -> expression . GREATER_THEN expression
    (6) expression -> expression . LESS_EQUALS expression
    (7) expression -> expression . GREATER_EQUALS expression
    (8) expression -> expression . EQUALS expression
    (9) expression -> expression . NOT_EQUALS expression
    (22) expression -> expression . AND expression
    (23) expression -> expression . NAND expression
    (24) expression -> expression . OR expression
    (25) expression -> expression . NOR expression
    (26) expression -> expression . XOR expression
    (27) expression -> expression . EQ expression
    (28) expression -> expression . NEQ expression
    (29) expression -> expression . IMPL expression
    (31) expression -> expression . LPAREN expression RPAREN
    (33) expression -> expression . PLUS expression
    (34) expression -> expression . MINUS expression
    (35) expression -> expression . TIMES expression
    (36) expression -> expression . DIVIDE expression

    AND             reduce using rule 26 (expression -> expression XOR expression .)
    NAND            reduce using rule 26 (expression -> expression XOR expression .)
    OR              reduce using rule 26 (expression -> expression XOR expression .)
    NOR             reduce using rule 26 (expression -> expression XOR expression .)
    XOR             reduce using rule 26 (expression -> expression XOR expression .)
    EQ              reduce using rule 26 (expression -> expression XOR expression .)
    NEQ             reduce using rule 26 (expression -> expression XOR expression .)
    IMPL            reduce using rule 26 (expression -> expression XOR expression .)
    $end            reduce using rule 26 (expression -> expression XOR expression .)
    SEPARATOR       reduce using rule 26 (expression -> expression XOR expression .)
    DO              reduce using rule 26 (expression -> expression XOR expression .)
    END             reduce using rule 26 (expression -> expression XOR expression .)
    THEN            reduce using rule 26 (expression -> expression XOR expression .)
    RPAREN          reduce using rule 26 (expression -> expression XOR expression .)
    IN              reduce using rule 26 (expression -> expression XOR expression .)
    ELSE            reduce using rule 26 (expression -> expression XOR expression .)
    LESS_THEN       shift and go to state 17
    GREATER_THEN    shift and go to state 18
    LESS_EQUALS     shift and go to state 19
    GREATER_EQUALS  shift and go to state 20
    EQUALS          shift and go to state 21
    NOT_EQUALS      shift and go to state 22
    LPAREN          shift and go to state 31
    PLUS            shift and go to state 32
    MINUS           shift and go to state 33
    TIMES           shift and go to state 34
    DIVIDE          shift and go to state 35

  ! LESS_THEN       [ reduce using rule 26 (expression -> expression XOR expression .) ]
  ! GREATER_THEN    [ reduce using rule 26 (expression -> expression XOR expression .) ]
  ! LESS_EQUALS     [ reduce using rule 26 (expression -> expression XOR expression .) ]
  ! GREATER_EQUALS  [ reduce using rule 26 (expression -> expression XOR expression .) ]
  ! EQUALS          [ reduce using rule 26 (expression -> expression XOR expression .) ]
  ! NOT_EQUALS      [ reduce using rule 26 (expression -> expression XOR expression .) ]
  ! LPAREN          [ reduce using rule 26 (expression -> expression XOR expression .) ]
  ! PLUS            [ reduce using rule 26 (expression -> expression XOR expression .) ]
  ! MINUS           [ reduce using rule 26 (expression -> expression XOR expression .) ]
  ! TIMES           [ reduce using rule 26 (expression -> expression XOR expression .) ]
  ! DIVIDE          [ reduce using rule 26 (expression -> expression XOR expression .) ]
  ! AND             [ shift and go to state 23 ]
  ! NAND            [ shift and go to state 24 ]
  ! OR              [ shift and go to state 25 ]
  ! NOR             [ shift and go to state 26 ]
  ! XOR             [ shift and go to state 27 ]
  ! EQ              [ shift and go to state 28 ]
  ! NEQ             [ shift and go to state 29 ]
  ! IMPL            [ shift and go to state 30 ]


state 60

    (27) expression -> expression EQ expression .
    (4) expression -> expression . LESS_THEN expression
    (5) expression -> expression . GREATER_THEN expression
    (6) expression -> expression . LESS_EQUALS expression
    (7) expression -> expression . GREATER_EQUALS expression
    (8) expression -> expression . EQUALS expression
    (9) expression -> expression . NOT_EQUALS expression
    (22) expression -> expression . AND expression
    (23) expression -> expression . NAND expression
    (24) expression -> expression . OR expression
    (25) expression -> expression . NOR expression
    (26) expression -> expression . XOR expression
    (27) expression -> expression . EQ expression
    (28) expression -> expression . NEQ expression
    (29) expression -> expression . IMPL expression
    (31) expression -> expression . LPAREN expression RPAREN
    (33) expression -> expression . PLUS expression
    (34) expression -> expression . MINUS expression
    (35) expression -> expression . TIMES expression
    (36) expression -> expression . DIVIDE expression

    AND             reduce using rule 27 (expression -> expression EQ expression .)
    NAND            reduce using rule 27 (expression -> expression EQ expression .)
    OR              reduce using rule 27 (expression -> expression EQ expression .)
    NOR             reduce using rule 27 (expression -> expression EQ expression .)
    XOR             reduce using rule 27 (expression -> expression EQ expression .)
    EQ              reduce using rule 27 (expression -> expression EQ expression .)
    NEQ             reduce using rule 27 (expression -> expression EQ expression .)
    IMPL            reduce using rule 27 (expression -> expression EQ expression .)
    $end            reduce using rule 27 (expression -> expression EQ expression .)
    SEPARATOR       reduce using rule 27 (expression -> expression EQ expression .)
    DO              reduce using rule 27 (expression -> expression EQ expression .)
    END             reduce using rule 27 (expression -> expression EQ expression .)
    THEN            reduce using rule 27 (expression -> expression EQ expression .)
    RPAREN          reduce using rule 27 (expression -> expression EQ expression .)
    IN              reduce using rule 27 (expression -> expression EQ expression .)
    ELSE            reduce using rule 27 (expression -> expression EQ expression .)
    LESS_THEN       shift and go to state 17
    GREATER_THEN    shift and go to state 18
    LESS_EQUALS     shift and go to state 19
    GREATER_EQUALS  shift and go to state 20
    EQUALS          shift and go to state 21
    NOT_EQUALS      shift and go to state 22
    LPAREN          shift and go to state 31
    PLUS            shift and go to state 32
    MINUS           shift and go to state 33
    TIMES           shift and go to state 34
    DIVIDE          shift and go to state 35

  ! LESS_THEN       [ reduce using rule 27 (expression -> expression EQ expression .) ]
  ! GREATER_THEN    [ reduce using rule 27 (expression -> expression EQ expression .) ]
  ! LESS_EQUALS     [ reduce using rule 27 (expression -> expression EQ expression .) ]
  ! GREATER_EQUALS  [ reduce using rule 27 (expression -> expression EQ expression .) ]
  ! EQUALS          [ reduce using rule 27 (expression -> expression EQ expression .) ]
  ! NOT_EQUALS      [ reduce using rule 27 (expression -> expression EQ expression .) ]
  ! LPAREN          [ reduce using rule 27 (expression -> expression EQ expression .) ]
  ! PLUS            [ reduce using rule 27 (expression -> expression EQ expression .) ]
  ! MINUS           [ reduce using rule 27 (expression -> expression EQ expression .) ]
  ! TIMES           [ reduce using rule 27 (expression -> expression EQ expression .) ]
  ! DIVIDE          [ reduce using rule 27 (expression -> expression EQ expression .) ]
  ! AND             [ shift and go to state 23 ]
  ! NAND            [ shift and go to state 24 ]
  ! OR              [ shift and go to state 25 ]
  ! NOR             [ shift and go to state 26 ]
  ! XOR             [ shift and go to state 27 ]
  ! EQ              [ shift and go to state 28 ]
  ! NEQ             [ shift and go to state 29 ]
  ! IMPL            [ shift and go to state 30 ]


state 61

    (28) expression -> expression NEQ expression .
    (4) expression -> expression . LESS_THEN expression
    (5) expression -> expression . GREATER_THEN expression
    (6) expression -> expression . LESS_EQUALS expression
    (7) expression -> expression . GREATER_EQUALS expression
    (8) expression -> expression . EQUALS expression
    (9) expression -> expression . NOT_EQUALS expression
    (22) expression -> expression . AND expression
    (23) expression -> expression . NAND expression
    (24) expression -> expression . OR expression
    (25) expression -> expression . NOR expression
    (26) expression -> expression . XOR expression
    (27) expression -> expression . EQ expression
    (28) expression -> expression . NEQ expression
    (29) expression -> expression . IMPL expression
    (31) expression -> expression . LPAREN expression RPAREN
    (33) expression -> expression . PLUS expression
    (34) expression -> expression . MINUS expression
    (35) expression -> expression . TIMES expression
    (36) expression -> expression . DIVIDE expression

    AND             reduce using rule 28 (expression -> expression NEQ expression .)
    NAND            reduce using rule 28 (expression -> expression NEQ expression .)
    OR              reduce using rule 28 (expression -> expression NEQ expression .)
    NOR             reduce using rule 28 (expression -> expression NEQ expression .)
    XOR             reduce using rule 28 (expression -> expression NEQ expression .)
    EQ              reduce using rule 28 (expression -> expression NEQ expression .)
    NEQ             reduce using rule 28 (expression -> expression NEQ expression .)
    IMPL            reduce using rule 28 (expression -> expression NEQ expression .)
    $end            reduce using rule 28 (expression -> expression NEQ expression .)
    SEPARATOR       reduce using rule 28 (expression -> expression NEQ expression .)
    DO              reduce using rule 28 (expression -> expression NEQ expression .)
    END             reduce using rule 28 (expression -> expression NEQ expression .)
    THEN            reduce using rule 28 (expression -> expression NEQ expression .)
    RPAREN          reduce using rule 28 (expression -> expression NEQ expression .)
    IN              reduce using rule 28 (expression -> expression NEQ expression .)
    ELSE            reduce using rule 28 (expression -> expression NEQ expression .)
    LESS_THEN       shift and go to state 17
    GREATER_THEN    shift and go to state 18
    LESS_EQUALS     shift and go to state 19
    GREATER_EQUALS  shift and go to state 20
    EQUALS          shift and go to state 21
    NOT_EQUALS      shift and go to state 22
    LPAREN          shift and go to state 31
    PLUS            shift and go to state 32
    MINUS           shift and go to state 33
    TIMES           shift and go to state 34
    DIVIDE          shift and go to state 35

  ! LESS_THEN       [ reduce using rule 28 (expression -> expression NEQ expression .) ]
  ! GREATER_THEN    [ reduce using rule 28 (expression -> expression NEQ expression .) ]
  ! LESS_EQUALS     [ reduce using rule 28 (expression -> expression NEQ expression .) ]
  ! GREATER_EQUALS  [ reduce using rule 28 (expression -> expression NEQ expression .) ]
  ! EQUALS          [ reduce using rule 28 (expression -> expression NEQ expression .) ]
  ! NOT_EQUALS      [ reduce using rule 28 (expression -> expression NEQ expression .) ]
  ! LPAREN          [ reduce using rule 28 (expression -> expression NEQ expression .) ]
  ! PLUS            [ reduce using rule 28 (expression -> expression NEQ expression .) ]
  ! MINUS           [ reduce using rule 28 (expression -> expression NEQ expression .) ]
  ! TIMES           [ reduce using rule 28 (expression -> expression NEQ expression .) ]
  ! DIVIDE          [ reduce using rule 28 (expression -> expression NEQ expression .) ]
  ! AND             [ shift and go to state 23 ]
  ! NAND            [ shift and go to state 24 ]
  ! OR              [ shift and go to state 25 ]
  ! NOR             [ shift and go to state 26 ]
  ! XOR             [ shift and go to state 27 ]
  ! EQ              [ shift and go to state 28 ]
  ! NEQ             [ shift and go to state 29 ]
  ! IMPL            [ shift and go to state 30 ]


state 62

    (29) expression -> expression IMPL expression .
    (4) expression -> expression . LESS_THEN expression
    (5) expression -> expression . GREATER_THEN expression
    (6) expression -> expression . LESS_EQUALS expression
    (7) expression -> expression . GREATER_EQUALS expression
    (8) expression -> expression . EQUALS expression
    (9) expression -> expression . NOT_EQUALS expression
    (22) expression -> expression . AND expression
    (23) expression -> expression . NAND expression
    (24) expression -> expression . OR expression
    (25) expression -> expression . NOR expression
    (26) expression -> expression . XOR expression
    (27) expression -> expression . EQ expression
    (28) expression -> expression . NEQ expression
    (29) expression -> expression . IMPL expression
    (31) expression -> expression . LPAREN expression RPAREN
    (33) expression -> expression . PLUS expression
    (34) expression -> expression . MINUS expression
    (35) expression -> expression . TIMES expression
    (36) expression -> expression . DIVIDE expression

    AND             reduce using rule 29 (expression -> expression IMPL expression .)
    NAND            reduce using rule 29 (expression -> expression IMPL expression .)
    OR              reduce using rule 29 (expression -> expression IMPL expression .)
    NOR             reduce using rule 29 (expression -> expression IMPL expression .)
    XOR             reduce using rule 29 (expression -> expression IMPL expression .)
    EQ              reduce using rule 29 (expression -> expression IMPL expression .)
    NEQ             reduce using rule 29 (expression -> expression IMPL expression .)
    IMPL            reduce using rule 29 (expression -> expression IMPL expression .)
    $end            reduce using rule 29 (expression -> expression IMPL expression .)
    SEPARATOR       reduce using rule 29 (expression -> expression IMPL expression .)
    DO              reduce using rule 29 (expression -> expression IMPL expression .)
    END             reduce using rule 29 (expression -> expression IMPL expression .)
    THEN            reduce using rule 29 (expression -> expression IMPL expression .)
    RPAREN          reduce using rule 29 (expression -> expression IMPL expression .)
    IN              reduce using rule 29 (expression -> expression IMPL expression .)
    ELSE            reduce using rule 29 (expression -> expression IMPL expression .)
    LESS_THEN       shift and go to state 17
    GREATER_THEN    shift and go to state 18
    LESS_EQUALS     shift and go to state 19
    GREATER_EQUALS  shift and go to state 20
    EQUALS          shift and go to state 21
    NOT_EQUALS      shift and go to state 22
    LPAREN          shift and go to state 31
    PLUS            shift and go to state 32
    MINUS           shift and go to state 33
    TIMES           shift and go to state 34
    DIVIDE          shift and go to state 35

  ! LESS_THEN       [ reduce using rule 29 (expression -> expression IMPL expression .) ]
  ! GREATER_THEN    [ reduce using rule 29 (expression -> expression IMPL expression .) ]
  ! LESS_EQUALS     [ reduce using rule 29 (expression -> expression IMPL expression .) ]
  ! GREATER_EQUALS  [ reduce using rule 29 (expression -> expression IMPL expression .) ]
  ! EQUALS          [ reduce using rule 29 (expression -> expression IMPL expression .) ]
  ! NOT_EQUALS      [ reduce using rule 29 (expression -> expression IMPL expression .) ]
  ! LPAREN          [ reduce using rule 29 (expression -> expression IMPL expression .) ]
  ! PLUS            [ reduce using rule 29 (expression -> expression IMPL expression .) ]
  ! MINUS           [ reduce using rule 29 (expression -> expression IMPL expression .) ]
  ! TIMES           [ reduce using rule 29 (expression -> expression IMPL expression .) ]
  ! DIVIDE          [ reduce using rule 29 (expression -> expression IMPL expression .) ]
  ! AND             [ shift and go to state 23 ]
  ! NAND            [ shift and go to state 24 ]
  ! OR              [ shift and go to state 25 ]
  ! NOR             [ shift and go to state 26 ]
  ! XOR             [ shift and go to state 27 ]
  ! EQ              [ shift and go to state 28 ]
  ! NEQ             [ shift and go to state 29 ]
  ! IMPL            [ shift and go to state 30 ]


state 63

    (31) expression -> expression LPAREN expression . RPAREN
    (4) expression -> expression . LESS_THEN expression
    (5) expression -> expression . GREATER_THEN expression
    (6) expression -> expression . LESS_EQUALS expression
    (7) expression -> expression . GREATER_EQUALS expression
    (8) expression -> expression . EQUALS expression
    (9) expression -> expression . NOT_EQUALS expression
    (22) expression -> expression . AND expression
    (23) expression -> expression . NAND expression
    (24) expression -> expression . OR expression
    (25) expression -> expression . NOR expression
    (26) expression -> expression . XOR expression
    (27) expression -> expression . EQ expression
    (28) expression -> expression . NEQ expression
    (29) expression -> expression . IMPL expression
    (31) expression -> expression . LPAREN expression RPAREN
    (33) expression -> expression . PLUS expression
    (34) expression -> expression . MINUS expression
    (35) expression -> expression . TIMES expression
    (36) expression -> expression . DIVIDE expression

    RPAREN          shift and go to state 79
    LESS_THEN       shift and go to state 17
    GREATER_THEN    shift and go to state 18
    LESS_EQUALS     shift and go to state 19
    GREATER_EQUALS  shift and go to state 20
    EQUALS          shift and go to state 21
    NOT_EQUALS      shift and go to state 22
    AND             shift and go to state 23
    NAND            shift and go to state 24
    OR              shift and go to state 25
    NOR             shift and go to state 26
    XOR             shift and go to state 27
    EQ              shift and go to state 28
    NEQ             shift and go to state 29
    IMPL            shift and go to state 30
    LPAREN          shift and go to state 31
    PLUS            shift and go to state 32
    MINUS           shift and go to state 33
    TIMES           shift and go to state 34
    DIVIDE          shift and go to state 35


state 64

    (33) expression -> expression PLUS expression .
    (4) expression -> expression . LESS_THEN expression
    (5) expression -> expression . GREATER_THEN expression
    (6) expression -> expression . LESS_EQUALS expression
    (7) expression -> expression . GREATER_EQUALS expression
    (8) expression -> expression . EQUALS expression
    (9) expression -> expression . NOT_EQUALS expression
    (22) expression -> expression . AND expression
    (23) expression -> expression . NAND expression
    (24) expression -> expression . OR expression
    (25) expression -> expression . NOR expression
    (26) expression -> expression . XOR expression
    (27) expression -> expression . EQ expression
    (28) expression -> expression . NEQ expression
    (29) expression -> expression . IMPL expression
    (31) expression -> expression . LPAREN expression RPAREN
    (33) expression -> expression . PLUS expression
    (34) expression -> expression . MINUS expression
    (35) expression -> expression . TIMES expression
    (36) expression -> expression . DIVIDE expression

    LESS_THEN       reduce using rule 33 (expression -> expression PLUS expression .)
    GREATER_THEN    reduce using rule 33 (expression -> expression PLUS expression .)
    LESS_EQUALS     reduce using rule 33 (expression -> expression PLUS expression .)
    GREATER_EQUALS  reduce using rule 33 (expression -> expression PLUS expression .)
    EQUALS          reduce using rule 33 (expression -> expression PLUS expression .)
    NOT_EQUALS      reduce using rule 33 (expression -> expression PLUS expression .)
    AND             reduce using rule 33 (expression -> expression PLUS expression .)
    NAND            reduce using rule 33 (expression -> expression PLUS expression .)
    OR              reduce using rule 33 (expression -> expression PLUS expression .)
    NOR             reduce using rule 33 (expression -> expression PLUS expression .)
    XOR             reduce using rule 33 (expression -> expression PLUS expression .)
    EQ              reduce using rule 33 (expression -> expression PLUS expression .)
    NEQ             reduce using rule 33 (expression -> expression PLUS expression .)
    IMPL            reduce using rule 33 (expression -> expression PLUS expression .)
    PLUS            reduce using rule 33 (expression -> expression PLUS expression .)
    MINUS           reduce using rule 33 (expression -> expression PLUS expression .)
    $end            reduce using rule 33 (expression -> expression PLUS expression .)
    SEPARATOR       reduce using rule 33 (expression -> expression PLUS expression .)
    DO              reduce using rule 33 (expression -> expression PLUS expression .)
    END             reduce using rule 33 (expression -> expression PLUS expression .)
    THEN            reduce using rule 33 (expression -> expression PLUS expression .)
    RPAREN          reduce using rule 33 (expression -> expression PLUS expression .)
    IN              reduce using rule 33 (expression -> expression PLUS expression .)
    ELSE            reduce using rule 33 (expression -> expression PLUS expression .)
    LPAREN          shift and go to state 31
    TIMES           shift and go to state 34
    DIVIDE          shift and go to state 35

  ! LPAREN          [ reduce using rule 33 (expression -> expression PLUS expression .) ]
  ! TIMES           [ reduce using rule 33 (expression -> expression PLUS expression .) ]
  ! DIVIDE          [ reduce using rule 33 (expression -> expression PLUS expression .) ]
  ! LESS_THEN       [ shift and go to state 17 ]
  ! GREATER_THEN    [ shift and go to state 18 ]
  ! LESS_EQUALS     [ shift and go to state 19 ]
  ! GREATER_EQUALS  [ shift and go to state 20 ]
  ! EQUALS          [ shift and go to state 21 ]
  ! NOT_EQUALS      [ shift and go to state 22 ]
  ! AND             [ shift and go to state 23 ]
  ! NAND            [ shift and go to state 24 ]
  ! OR              [ shift and go to state 25 ]
  ! NOR             [ shift and go to state 26 ]
  ! XOR             [ shift and go to state 27 ]
  ! EQ              [ shift and go to state 28 ]
  ! NEQ             [ shift and go to state 29 ]
  ! IMPL            [ shift and go to state 30 ]
  ! PLUS            [ shift and go to state 32 ]
  ! MINUS           [ shift and go to state 33 ]


state 65

    (34) expression -> expression MINUS expression .
    (4) expression -> expression . LESS_THEN expression
    (5) expression -> expression . GREATER_THEN expression
    (6) expression -> expression . LESS_EQUALS expression
    (7) expression -> expression . GREATER_EQUALS expression
    (8) expression -> expression . EQUALS expression
    (9) expression -> expression . NOT_EQUALS expression
    (22) expression -> expression . AND expression
    (23) expression -> expression . NAND expression
    (24) expression -> expression . OR expression
    (25) expression -> expression . NOR expression
    (26) expression -> expression . XOR expression
    (27) expression -> expression . EQ expression
    (28) expression -> expression . NEQ expression
    (29) expression -> expression . IMPL expression
    (31) expression -> expression . LPAREN expression RPAREN
    (33) expression -> expression . PLUS expression
    (34) expression -> expression . MINUS expression
    (35) expression -> expression . TIMES expression
    (36) expression -> expression . DIVIDE expression

    LESS_THEN       reduce using rule 34 (expression -> expression MINUS expression .)
    GREATER_THEN    reduce using rule 34 (expression -> expression MINUS expression .)
    LESS_EQUALS     reduce using rule 34 (expression -> expression MINUS expression .)
    GREATER_EQUALS  reduce using rule 34 (expression -> expression MINUS expression .)
    EQUALS          reduce using rule 34 (expression -> expression MINUS expression .)
    NOT_EQUALS      reduce using rule 34 (expression -> expression MINUS expression .)
    AND             reduce using rule 34 (expression -> expression MINUS expression .)
    NAND            reduce using rule 34 (expression -> expression MINUS expression .)
    OR              reduce using rule 34 (expression -> expression MINUS expression .)
    NOR             reduce using rule 34 (expression -> expression MINUS expression .)
    XOR             reduce using rule 34 (expression -> expression MINUS expression .)
    EQ              reduce using rule 34 (expression -> expression MINUS expression .)
    NEQ             reduce using rule 34 (expression -> expression MINUS expression .)
    IMPL            reduce using rule 34 (expression -> expression MINUS expression .)
    PLUS            reduce using rule 34 (expression -> expression MINUS expression .)
    MINUS           reduce using rule 34 (expression -> expression MINUS expression .)
    $end            reduce using rule 34 (expression -> expression MINUS expression .)
    SEPARATOR       reduce using rule 34 (expression -> expression MINUS expression .)
    DO              reduce using rule 34 (expression -> expression MINUS expression .)
    END             reduce using rule 34 (expression -> expression MINUS expression .)
    THEN            reduce using rule 34 (expression -> expression MINUS expression .)
    RPAREN          reduce using rule 34 (expression -> expression MINUS expression .)
    IN              reduce using rule 34 (expression -> expression MINUS expression .)
    ELSE            reduce using rule 34 (expression -> expression MINUS expression .)
    LPAREN          shift and go to state 31
    TIMES           shift and go to state 34
    DIVIDE          shift and go to state 35

  ! LPAREN          [ reduce using rule 34 (expression -> expression MINUS expression .) ]
  ! TIMES           [ reduce using rule 34 (expression -> expression MINUS expression .) ]
  ! DIVIDE          [ reduce using rule 34 (expression -> expression MINUS expression .) ]
  ! LESS_THEN       [ shift and go to state 17 ]
  ! GREATER_THEN    [ shift and go to state 18 ]
  ! LESS_EQUALS     [ shift and go to state 19 ]
  ! GREATER_EQUALS  [ shift and go to state 20 ]
  ! EQUALS          [ shift and go to state 21 ]
  ! NOT_EQUALS      [ shift and go to state 22 ]
  ! AND             [ shift and go to state 23 ]
  ! NAND            [ shift and go to state 24 ]
  ! OR              [ shift and go to state 25 ]
  ! NOR             [ shift and go to state 26 ]
  ! XOR             [ shift and go to state 27 ]
  ! EQ              [ shift and go to state 28 ]
  ! NEQ             [ shift and go to state 29 ]
  ! IMPL            [ shift and go to state 30 ]
  ! PLUS            [ shift and go to state 32 ]
  ! MINUS           [ shift and go to state 33 ]


state 66

    (35) expression -> expression TIMES expression .
    (4) expression -> expression . LESS_THEN expression
    (5) expression -> expression . GREATER_THEN expression
    (6) expression -> expression . LESS_EQUALS expression
    (7) expression -> expression . GREATER_EQUALS expression
    (8) expression -> expression . EQUALS expression
    (9) expression -> expression . NOT_EQUALS expression
    (22) expression -> expression . AND expression
    (23) expression -> expression . NAND expression
    (24) expression -> expression . OR expression
    (25) expression -> expression . NOR expression
    (26) expression -> expression . XOR expression
    (27) expression -> expression . EQ expression
    (28) expression -> expression . NEQ expression
    (29) expression -> expression . IMPL expression
    (31) expression -> expression . LPAREN expression RPAREN
    (33) expression -> expression . PLUS expression
    (34) expression -> expression . MINUS expression
    (35) expression -> expression . TIMES expression
    (36) expression -> expression . DIVIDE expression

    LESS_THEN       reduce using rule 35 (expression -> expression TIMES expression .)
    GREATER_THEN    reduce using rule 35 (expression -> expression TIMES expression .)
    LESS_EQUALS     reduce using rule 35 (expression -> expression TIMES expression .)
    GREATER_EQUALS  reduce using rule 35 (expression -> expression TIMES expression .)
    EQUALS          reduce using rule 35 (expression -> expression TIMES expression .)
    NOT_EQUALS      reduce using rule 35 (expression -> expression TIMES expression .)
    AND             reduce using rule 35 (expression -> expression TIMES expression .)
    NAND            reduce using rule 35 (expression -> expression TIMES expression .)
    OR              reduce using rule 35 (expression -> expression TIMES expression .)
    NOR             reduce using rule 35 (expression -> expression TIMES expression .)
    XOR             reduce using rule 35 (expression -> expression TIMES expression .)
    EQ              reduce using rule 35 (expression -> expression TIMES expression .)
    NEQ             reduce using rule 35 (expression -> expression TIMES expression .)
    IMPL            reduce using rule 35 (expression -> expression TIMES expression .)
    PLUS            reduce using rule 35 (expression -> expression TIMES expression .)
    MINUS           reduce using rule 35 (expression -> expression TIMES expression .)
    TIMES           reduce using rule 35 (expression -> expression TIMES expression .)
    DIVIDE          reduce using rule 35 (expression -> expression TIMES expression .)
    $end            reduce using rule 35 (expression -> expression TIMES expression .)
    SEPARATOR       reduce using rule 35 (expression -> expression TIMES expression .)
    DO              reduce using rule 35 (expression -> expression TIMES expression .)
    END             reduce using rule 35 (expression -> expression TIMES expression .)
    THEN            reduce using rule 35 (expression -> expression TIMES expression .)
    RPAREN          reduce using rule 35 (expression -> expression TIMES expression .)
    IN              reduce using rule 35 (expression -> expression TIMES expression .)
    ELSE            reduce using rule 35 (expression -> expression TIMES expression .)
    LPAREN          shift and go to state 31

  ! LPAREN          [ reduce using rule 35 (expression -> expression TIMES expression .) ]
  ! LESS_THEN       [ shift and go to state 17 ]
  ! GREATER_THEN    [ shift and go to state 18 ]
  ! LESS_EQUALS     [ shift and go to state 19 ]
  ! GREATER_EQUALS  [ shift and go to state 20 ]
  ! EQUALS          [ shift and go to state 21 ]
  ! NOT_EQUALS      [ shift and go to state 22 ]
  ! AND             [ shift and go to state 23 ]
  ! NAND            [ shift and go to state 24 ]
  ! OR              [ shift and go to state 25 ]
  ! NOR             [ shift and go to state 26 ]
  ! XOR             [ shift and go to state 27 ]
  ! EQ              [ shift and go to state 28 ]
  ! NEQ             [ shift and go to state 29 ]
  ! IMPL            [ shift and go to state 30 ]
  ! PLUS            [ shift and go to state 32 ]
  ! MINUS           [ shift and go to state 33 ]
  ! TIMES           [ shift and go to state 34 ]
  ! DIVIDE          [ shift and go to state 35 ]


state 67

    (36) expression -> expression DIVIDE expression .
    (4) expression -> expression . LESS_THEN expression
    (5) expression -> expression . GREATER_THEN expression
    (6) expression -> expression . LESS_EQUALS expression
    (7) expression -> expression . GREATER_EQUALS expression
    (8) expression -> expression . EQUALS expression
    (9) expression -> expression . NOT_EQUALS expression
    (22) expression -> expression . AND expression
    (23) expression -> expression . NAND expression
    (24) expression -> expression . OR expression
    (25) expression -> expression . NOR expression
    (26) expression -> expression . XOR expression
    (27) expression -> expression . EQ expression
    (28) expression -> expression . NEQ expression
    (29) expression -> expression . IMPL expression
    (31) expression -> expression . LPAREN expression RPAREN
    (33) expression -> expression . PLUS expression
    (34) expression -> expression . MINUS expression
    (35) expression -> expression . TIMES expression
    (36) expression -> expression . DIVIDE expression

    LESS_THEN       reduce using rule 36 (expression -> expression DIVIDE expression .)
    GREATER_THEN    reduce using rule 36 (expression -> expression DIVIDE expression .)
    LESS_EQUALS     reduce using rule 36 (expression -> expression DIVIDE expression .)
    GREATER_EQUALS  reduce using rule 36 (expression -> expression DIVIDE expression .)
    EQUALS          reduce using rule 36 (expression -> expression DIVIDE expression .)
    NOT_EQUALS      reduce using rule 36 (expression -> expression DIVIDE expression .)
    AND             reduce using rule 36 (expression -> expression DIVIDE expression .)
    NAND            reduce using rule 36 (expression -> expression DIVIDE expression .)
    OR              reduce using rule 36 (expression -> expression DIVIDE expression .)
    NOR             reduce using rule 36 (expression -> expression DIVIDE expression .)
    XOR             reduce using rule 36 (expression -> expression DIVIDE expression .)
    EQ              reduce using rule 36 (expression -> expression DIVIDE expression .)
    NEQ             reduce using rule 36 (expression -> expression DIVIDE expression .)
    IMPL            reduce using rule 36 (expression -> expression DIVIDE expression .)
    PLUS            reduce using rule 36 (expression -> expression DIVIDE expression .)
    MINUS           reduce using rule 36 (expression -> expression DIVIDE expression .)
    TIMES           reduce using rule 36 (expression -> expression DIVIDE expression .)
    DIVIDE          reduce using rule 36 (expression -> expression DIVIDE expression .)
    $end            reduce using rule 36 (expression -> expression DIVIDE expression .)
    SEPARATOR       reduce using rule 36 (expression -> expression DIVIDE expression .)
    DO              reduce using rule 36 (expression -> expression DIVIDE expression .)
    END             reduce using rule 36 (expression -> expression DIVIDE expression .)
    THEN            reduce using rule 36 (expression -> expression DIVIDE expression .)
    RPAREN          reduce using rule 36 (expression -> expression DIVIDE expression .)
    IN              reduce using rule 36 (expression -> expression DIVIDE expression .)
    ELSE            reduce using rule 36 (expression -> expression DIVIDE expression .)
    LPAREN          shift and go to state 31

  ! LPAREN          [ reduce using rule 36 (expression -> expression DIVIDE expression .) ]
  ! LESS_THEN       [ shift and go to state 17 ]
  ! GREATER_THEN    [ shift and go to state 18 ]
  ! LESS_EQUALS     [ shift and go to state 19 ]
  ! GREATER_EQUALS  [ shift and go to state 20 ]
  ! EQUALS          [ shift and go to state 21 ]
  ! NOT_EQUALS      [ shift and go to state 22 ]
  ! AND             [ shift and go to state 23 ]
  ! NAND            [ shift and go to state 24 ]
  ! OR              [ shift and go to state 25 ]
  ! NOR             [ shift and go to state 26 ]
  ! XOR             [ shift and go to state 27 ]
  ! EQ              [ shift and go to state 28 ]
  ! NEQ             [ shift and go to state 29 ]
  ! IMPL            [ shift and go to state 30 ]
  ! PLUS            [ shift and go to state 32 ]
  ! MINUS           [ shift and go to state 33 ]
  ! TIMES           [ shift and go to state 34 ]
  ! DIVIDE          [ shift and go to state 35 ]


state 68

    (1) expression -> FOR expression SEPARATOR . expression SEPARATOR expression DO expression
    (1) expression -> . FOR expression SEPARATOR expression SEPARATOR expression DO expression
    (2) expression -> . LOCAL IDENTIFIER ASSIGN expression IN expression
    (3) expression -> . WHILE expression DO expression
    (4) expression -> . expression LESS_THEN expression
    (5) expression -> . expression GREATER_THEN expression
    (6) expression -> . expression LESS_EQUALS expression
    (7) expression -> . expression GREATER_EQUALS expression
    (8) expression -> . expression EQUALS expression
    (9) expression -> . expression NOT_EQUALS expression
    (10) expression -> . LOCK IDENTIFIER IN expression
    (11) expression -> . LOOP expression DO expression
    (12) expression -> . BEGIN body END
    (13) expression -> . IDENTIFIER
    (14) expression -> . NOT expression
    (15) expression -> . IF expression THEN expression
    (16) expression -> . IDENTIFIER ARROW expression
    (19) expression -> . NUMBER
    (20) expression -> . FLOAT
    (21) expression -> . IDENTIFIER ASSIGN expression
    (22) expression -> . expression AND expression
    (23) expression -> . expression NAND expression
    (24) expression -> . expression OR expression
    (25) expression -> . expression NOR expression
    (26) expression -> . expression XOR expression
    (27) expression -> . expression EQ expression
    (28) expression -> . expression NEQ expression
    (29) expression -> . expression IMPL expression
    (30) expression -> . IF expression THEN expression ELSE expression
    (31) expression -> . expression LPAREN expression RPAREN
    (32) expression -> . MINUS expression
    (33) expression -> . expression PLUS expression
    (34) expression -> . expression MINUS expression
    (35) expression -> . expression TIMES expression
    (36) expression -> . expression DIVIDE expression
    (37) expression -> . TRUE
    (38) expression -> . FALSE
    (39) expression -> . LPAREN expression RPAREN

    FOR             shift and go to state 2
    LOCAL           shift and go to state 3
    WHILE           shift and go to state 5
    LOCK            shift and go to state 6
    LOOP            shift and go to state 7
    BEGIN           shift and go to state 8
    IDENTIFIER      shift and go to state 4
    NOT             shift and go to state 9
    IF              shift and go to state 10
    NUMBER          shift and go to state 11
    FLOAT           shift and go to state 12
    MINUS           shift and go to state 14
    TRUE            shift and go to state 15
    FALSE           shift and go to state 16
    LPAREN          shift and go to state 13

    expression                     shift and go to state 80

state 69

    (2) expression -> LOCAL IDENTIFIER ASSIGN . expression IN expression
    (1) expression -> . FOR expression SEPARATOR expression SEPARATOR expression DO expression
    (2) expression -> . LOCAL IDENTIFIER ASSIGN expression IN expression
    (3) expression -> . WHILE expression DO expression
    (4) expression -> . expression LESS_THEN expression
    (5) expression -> . expression GREATER_THEN expression
    (6) expression -> . expression LESS_EQUALS expression
    (7) expression -> . expression GREATER_EQUALS expression
    (8) expression -> . expression EQUALS expression
    (9) expression -> . expression NOT_EQUALS expression
    (10) expression -> . LOCK IDENTIFIER IN expression
    (11) expression -> . LOOP expression DO expression
    (12) expression -> . BEGIN body END
    (13) expression -> . IDENTIFIER
    (14) expression -> . NOT expression
    (15) expression -> . IF expression THEN expression
    (16) expression -> . IDENTIFIER ARROW expression
    (19) expression -> . NUMBER
    (20) expression -> . FLOAT
    (21) expression -> . IDENTIFIER ASSIGN expression
    (22) expression -> . expression AND expression
    (23) expression -> . expression NAND expression
    (24) expression -> . expression OR expression
    (25) expression -> . expression NOR expression
    (26) expression -> . expression XOR expression
    (27) expression -> . expression EQ expression
    (28) expression -> . expression NEQ expression
    (29) expression -> . expression IMPL expression
    (30) expression -> . IF expression THEN expression ELSE expression
    (31) expression -> . expression LPAREN expression RPAREN
    (32) expression -> . MINUS expression
    (33) expression -> . expression PLUS expression
    (34) expression -> . expression MINUS expression
    (35) expression -> . expression TIMES expression
    (36) expression -> . expression DIVIDE expression
    (37) expression -> . TRUE
    (38) expression -> . FALSE
    (39) expression -> . LPAREN expression RPAREN

    FOR             shift and go to state 2
    LOCAL           shift and go to state 3
    WHILE           shift and go to state 5
    LOCK            shift and go to state 6
    LOOP            shift and go to state 7
    BEGIN           shift and go to state 8
    IDENTIFIER      shift and go to state 4
    NOT             shift and go to state 9
    IF              shift and go to state 10
    NUMBER          shift and go to state 11
    FLOAT           shift and go to state 12
    MINUS           shift and go to state 14
    TRUE            shift and go to state 15
    FALSE           shift and go to state 16
    LPAREN          shift and go to state 13

    expression                     shift and go to state 81

state 70

    (16) expression -> IDENTIFIER ARROW expression .
    (4) expression -> expression . LESS_THEN expression
    (5) expression -> expression . GREATER_THEN expression
    (6) expression -> expression . LESS_EQUALS expression
    (7) expression -> expression . GREATER_EQUALS expression
    (8) expression -> expression . EQUALS expression
    (9) expression -> expression . NOT_EQUALS expression
    (22) expression -> expression . AND expression
    (23) expression -> expression . NAND expression
    (24) expression -> expression . OR expression
    (25) expression -> expression . NOR expression
    (26) expression -> expression . XOR expression
    (27) expression -> expression . EQ expression
    (28) expression -> expression . NEQ expression
    (29) expression -> expression . IMPL expression
    (31) expression -> expression . LPAREN expression RPAREN
    (33) expression -> expression . PLUS expression
    (34) expression -> expression . MINUS expression
    (35) expression -> expression . TIMES expression
    (36) expression -> expression . DIVIDE expression

  ! shift/reduce conflict for LESS_THEN resolved as shift
  ! shift/reduce conflict for GREATER_THEN resolved as shift
  ! shift/reduce conflict for LESS_EQUALS resolved as shift
  ! shift/reduce conflict for GREATER_EQUALS resolved as shift
  ! shift/reduce conflict for EQUALS resolved as shift
  ! shift/reduce conflict for NOT_EQUALS resolved as shift
  ! shift/reduce conflict for AND resolved as shift
  ! shift/reduce conflict for NAND resolved as shift
  ! shift/reduce conflict for OR resolved as shift
  ! shift/reduce conflict for NOR resolved as shift
  ! shift/reduce conflict for XOR resolved as shift
  ! shift/reduce conflict for EQ resolved as shift
  ! shift/reduce conflict for NEQ resolved as shift
  ! shift/reduce conflict for IMPL resolved as shift
  ! shift/reduce conflict for LPAREN resolved as shift
  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for TIMES resolved as shift
  ! shift/reduce conflict for DIVIDE resolved as shift
    $end            reduce using rule 16 (expression -> IDENTIFIER ARROW expression .)
    SEPARATOR       reduce using rule 16 (expression -> IDENTIFIER ARROW expression .)
    DO              reduce using rule 16 (expression -> IDENTIFIER ARROW expression .)
    END             reduce using rule 16 (expression -> IDENTIFIER ARROW expression .)
    THEN            reduce using rule 16 (expression -> IDENTIFIER ARROW expression .)
    RPAREN          reduce using rule 16 (expression -> IDENTIFIER ARROW expression .)
    IN              reduce using rule 16 (expression -> IDENTIFIER ARROW expression .)
    ELSE            reduce using rule 16 (expression -> IDENTIFIER ARROW expression .)
    LESS_THEN       shift and go to state 17
    GREATER_THEN    shift and go to state 18
    LESS_EQUALS     shift and go to state 19
    GREATER_EQUALS  shift and go to state 20
    EQUALS          shift and go to state 21
    NOT_EQUALS      shift and go to state 22
    AND             shift and go to state 23
    NAND            shift and go to state 24
    OR              shift and go to state 25
    NOR             shift and go to state 26
    XOR             shift and go to state 27
    EQ              shift and go to state 28
    NEQ             shift and go to state 29
    IMPL            shift and go to state 30
    LPAREN          shift and go to state 31
    PLUS            shift and go to state 32
    MINUS           shift and go to state 33
    TIMES           shift and go to state 34
    DIVIDE          shift and go to state 35

  ! LESS_THEN       [ reduce using rule 16 (expression -> IDENTIFIER ARROW expression .) ]
  ! GREATER_THEN    [ reduce using rule 16 (expression -> IDENTIFIER ARROW expression .) ]
  ! LESS_EQUALS     [ reduce using rule 16 (expression -> IDENTIFIER ARROW expression .) ]
  ! GREATER_EQUALS  [ reduce using rule 16 (expression -> IDENTIFIER ARROW expression .) ]
  ! EQUALS          [ reduce using rule 16 (expression -> IDENTIFIER ARROW expression .) ]
  ! NOT_EQUALS      [ reduce using rule 16 (expression -> IDENTIFIER ARROW expression .) ]
  ! AND             [ reduce using rule 16 (expression -> IDENTIFIER ARROW expression .) ]
  ! NAND            [ reduce using rule 16 (expression -> IDENTIFIER ARROW expression .) ]
  ! OR              [ reduce using rule 16 (expression -> IDENTIFIER ARROW expression .) ]
  ! NOR             [ reduce using rule 16 (expression -> IDENTIFIER ARROW expression .) ]
  ! XOR             [ reduce using rule 16 (expression -> IDENTIFIER ARROW expression .) ]
  ! EQ              [ reduce using rule 16 (expression -> IDENTIFIER ARROW expression .) ]
  ! NEQ             [ reduce using rule 16 (expression -> IDENTIFIER ARROW expression .) ]
  ! IMPL            [ reduce using rule 16 (expression -> IDENTIFIER ARROW expression .) ]
  ! LPAREN          [ reduce using rule 16 (expression -> IDENTIFIER ARROW expression .) ]
  ! PLUS            [ reduce using rule 16 (expression -> IDENTIFIER ARROW expression .) ]
  ! MINUS           [ reduce using rule 16 (expression -> IDENTIFIER ARROW expression .) ]
  ! TIMES           [ reduce using rule 16 (expression -> IDENTIFIER ARROW expression .) ]
  ! DIVIDE          [ reduce using rule 16 (expression -> IDENTIFIER ARROW expression .) ]


state 71

    (21) expression -> IDENTIFIER ASSIGN expression .
    (4) expression -> expression . LESS_THEN expression
    (5) expression -> expression . GREATER_THEN expression
    (6) expression -> expression . LESS_EQUALS expression
    (7) expression -> expression . GREATER_EQUALS expression
    (8) expression -> expression . EQUALS expression
    (9) expression -> expression . NOT_EQUALS expression
    (22) expression -> expression . AND expression
    (23) expression -> expression . NAND expression
    (24) expression -> expression . OR expression
    (25) expression -> expression . NOR expression
    (26) expression -> expression . XOR expression
    (27) expression -> expression . EQ expression
    (28) expression -> expression . NEQ expression
    (29) expression -> expression . IMPL expression
    (31) expression -> expression . LPAREN expression RPAREN
    (33) expression -> expression . PLUS expression
    (34) expression -> expression . MINUS expression
    (35) expression -> expression . TIMES expression
    (36) expression -> expression . DIVIDE expression

    $end            reduce using rule 21 (expression -> IDENTIFIER ASSIGN expression .)
    SEPARATOR       reduce using rule 21 (expression -> IDENTIFIER ASSIGN expression .)
    DO              reduce using rule 21 (expression -> IDENTIFIER ASSIGN expression .)
    END             reduce using rule 21 (expression -> IDENTIFIER ASSIGN expression .)
    THEN            reduce using rule 21 (expression -> IDENTIFIER ASSIGN expression .)
    RPAREN          reduce using rule 21 (expression -> IDENTIFIER ASSIGN expression .)
    IN              reduce using rule 21 (expression -> IDENTIFIER ASSIGN expression .)
    ELSE            reduce using rule 21 (expression -> IDENTIFIER ASSIGN expression .)
    LESS_THEN       shift and go to state 17
    GREATER_THEN    shift and go to state 18
    LESS_EQUALS     shift and go to state 19
    GREATER_EQUALS  shift and go to state 20
    EQUALS          shift and go to state 21
    NOT_EQUALS      shift and go to state 22
    AND             shift and go to state 23
    NAND            shift and go to state 24
    OR              shift and go to state 25
    NOR             shift and go to state 26
    XOR             shift and go to state 27
    EQ              shift and go to state 28
    NEQ             shift and go to state 29
    IMPL            shift and go to state 30
    LPAREN          shift and go to state 31
    PLUS            shift and go to state 32
    MINUS           shift and go to state 33
    TIMES           shift and go to state 34
    DIVIDE          shift and go to state 35

  ! LESS_THEN       [ reduce using rule 21 (expression -> IDENTIFIER ASSIGN expression .) ]
  ! GREATER_THEN    [ reduce using rule 21 (expression -> IDENTIFIER ASSIGN expression .) ]
  ! LESS_EQUALS     [ reduce using rule 21 (expression -> IDENTIFIER ASSIGN expression .) ]
  ! GREATER_EQUALS  [ reduce using rule 21 (expression -> IDENTIFIER ASSIGN expression .) ]
  ! EQUALS          [ reduce using rule 21 (expression -> IDENTIFIER ASSIGN expression .) ]
  ! NOT_EQUALS      [ reduce using rule 21 (expression -> IDENTIFIER ASSIGN expression .) ]
  ! AND             [ reduce using rule 21 (expression -> IDENTIFIER ASSIGN expression .) ]
  ! NAND            [ reduce using rule 21 (expression -> IDENTIFIER ASSIGN expression .) ]
  ! OR              [ reduce using rule 21 (expression -> IDENTIFIER ASSIGN expression .) ]
  ! NOR             [ reduce using rule 21 (expression -> IDENTIFIER ASSIGN expression .) ]
  ! XOR             [ reduce using rule 21 (expression -> IDENTIFIER ASSIGN expression .) ]
  ! EQ              [ reduce using rule 21 (expression -> IDENTIFIER ASSIGN expression .) ]
  ! NEQ             [ reduce using rule 21 (expression -> IDENTIFIER ASSIGN expression .) ]
  ! IMPL            [ reduce using rule 21 (expression -> IDENTIFIER ASSIGN expression .) ]
  ! LPAREN          [ reduce using rule 21 (expression -> IDENTIFIER ASSIGN expression .) ]
  ! PLUS            [ reduce using rule 21 (expression -> IDENTIFIER ASSIGN expression .) ]
  ! MINUS           [ reduce using rule 21 (expression -> IDENTIFIER ASSIGN expression .) ]
  ! TIMES           [ reduce using rule 21 (expression -> IDENTIFIER ASSIGN expression .) ]
  ! DIVIDE          [ reduce using rule 21 (expression -> IDENTIFIER ASSIGN expression .) ]


state 72

    (3) expression -> WHILE expression DO . expression
    (1) expression -> . FOR expression SEPARATOR expression SEPARATOR expression DO expression
    (2) expression -> . LOCAL IDENTIFIER ASSIGN expression IN expression
    (3) expression -> . WHILE expression DO expression
    (4) expression -> . expression LESS_THEN expression
    (5) expression -> . expression GREATER_THEN expression
    (6) expression -> . expression LESS_EQUALS expression
    (7) expression -> . expression GREATER_EQUALS expression
    (8) expression -> . expression EQUALS expression
    (9) expression -> . expression NOT_EQUALS expression
    (10) expression -> . LOCK IDENTIFIER IN expression
    (11) expression -> . LOOP expression DO expression
    (12) expression -> . BEGIN body END
    (13) expression -> . IDENTIFIER
    (14) expression -> . NOT expression
    (15) expression -> . IF expression THEN expression
    (16) expression -> . IDENTIFIER ARROW expression
    (19) expression -> . NUMBER
    (20) expression -> . FLOAT
    (21) expression -> . IDENTIFIER ASSIGN expression
    (22) expression -> . expression AND expression
    (23) expression -> . expression NAND expression
    (24) expression -> . expression OR expression
    (25) expression -> . expression NOR expression
    (26) expression -> . expression XOR expression
    (27) expression -> . expression EQ expression
    (28) expression -> . expression NEQ expression
    (29) expression -> . expression IMPL expression
    (30) expression -> . IF expression THEN expression ELSE expression
    (31) expression -> . expression LPAREN expression RPAREN
    (32) expression -> . MINUS expression
    (33) expression -> . expression PLUS expression
    (34) expression -> . expression MINUS expression
    (35) expression -> . expression TIMES expression
    (36) expression -> . expression DIVIDE expression
    (37) expression -> . TRUE
    (38) expression -> . FALSE
    (39) expression -> . LPAREN expression RPAREN

    FOR             shift and go to state 2
    LOCAL           shift and go to state 3
    WHILE           shift and go to state 5
    LOCK            shift and go to state 6
    LOOP            shift and go to state 7
    BEGIN           shift and go to state 8
    IDENTIFIER      shift and go to state 4
    NOT             shift and go to state 9
    IF              shift and go to state 10
    NUMBER          shift and go to state 11
    FLOAT           shift and go to state 12
    MINUS           shift and go to state 14
    TRUE            shift and go to state 15
    FALSE           shift and go to state 16
    LPAREN          shift and go to state 13

    expression                     shift and go to state 82

state 73

    (10) expression -> LOCK IDENTIFIER IN . expression
    (1) expression -> . FOR expression SEPARATOR expression SEPARATOR expression DO expression
    (2) expression -> . LOCAL IDENTIFIER ASSIGN expression IN expression
    (3) expression -> . WHILE expression DO expression
    (4) expression -> . expression LESS_THEN expression
    (5) expression -> . expression GREATER_THEN expression
    (6) expression -> . expression LESS_EQUALS expression
    (7) expression -> . expression GREATER_EQUALS expression
    (8) expression -> . expression EQUALS expression
    (9) expression -> . expression NOT_EQUALS expression
    (10) expression -> . LOCK IDENTIFIER IN expression
    (11) expression -> . LOOP expression DO expression
    (12) expression -> . BEGIN body END
    (13) expression -> . IDENTIFIER
    (14) expression -> . NOT expression
    (15) expression -> . IF expression THEN expression
    (16) expression -> . IDENTIFIER ARROW expression
    (19) expression -> . NUMBER
    (20) expression -> . FLOAT
    (21) expression -> . IDENTIFIER ASSIGN expression
    (22) expression -> . expression AND expression
    (23) expression -> . expression NAND expression
    (24) expression -> . expression OR expression
    (25) expression -> . expression NOR expression
    (26) expression -> . expression XOR expression
    (27) expression -> . expression EQ expression
    (28) expression -> . expression NEQ expression
    (29) expression -> . expression IMPL expression
    (30) expression -> . IF expression THEN expression ELSE expression
    (31) expression -> . expression LPAREN expression RPAREN
    (32) expression -> . MINUS expression
    (33) expression -> . expression PLUS expression
    (34) expression -> . expression MINUS expression
    (35) expression -> . expression TIMES expression
    (36) expression -> . expression DIVIDE expression
    (37) expression -> . TRUE
    (38) expression -> . FALSE
    (39) expression -> . LPAREN expression RPAREN

    FOR             shift and go to state 2
    LOCAL           shift and go to state 3
    WHILE           shift and go to state 5
    LOCK            shift and go to state 6
    LOOP            shift and go to state 7
    BEGIN           shift and go to state 8
    IDENTIFIER      shift and go to state 4
    NOT             shift and go to state 9
    IF              shift and go to state 10
    NUMBER          shift and go to state 11
    FLOAT           shift and go to state 12
    MINUS           shift and go to state 14
    TRUE            shift and go to state 15
    FALSE           shift and go to state 16
    LPAREN          shift and go to state 13

    expression                     shift and go to state 83

state 74

    (11) expression -> LOOP expression DO . expression
    (1) expression -> . FOR expression SEPARATOR expression SEPARATOR expression DO expression
    (2) expression -> . LOCAL IDENTIFIER ASSIGN expression IN expression
    (3) expression -> . WHILE expression DO expression
    (4) expression -> . expression LESS_THEN expression
    (5) expression -> . expression GREATER_THEN expression
    (6) expression -> . expression LESS_EQUALS expression
    (7) expression -> . expression GREATER_EQUALS expression
    (8) expression -> . expression EQUALS expression
    (9) expression -> . expression NOT_EQUALS expression
    (10) expression -> . LOCK IDENTIFIER IN expression
    (11) expression -> . LOOP expression DO expression
    (12) expression -> . BEGIN body END
    (13) expression -> . IDENTIFIER
    (14) expression -> . NOT expression
    (15) expression -> . IF expression THEN expression
    (16) expression -> . IDENTIFIER ARROW expression
    (19) expression -> . NUMBER
    (20) expression -> . FLOAT
    (21) expression -> . IDENTIFIER ASSIGN expression
    (22) expression -> . expression AND expression
    (23) expression -> . expression NAND expression
    (24) expression -> . expression OR expression
    (25) expression -> . expression NOR expression
    (26) expression -> . expression XOR expression
    (27) expression -> . expression EQ expression
    (28) expression -> . expression NEQ expression
    (29) expression -> . expression IMPL expression
    (30) expression -> . IF expression THEN expression ELSE expression
    (31) expression -> . expression LPAREN expression RPAREN
    (32) expression -> . MINUS expression
    (33) expression -> . expression PLUS expression
    (34) expression -> . expression MINUS expression
    (35) expression -> . expression TIMES expression
    (36) expression -> . expression DIVIDE expression
    (37) expression -> . TRUE
    (38) expression -> . FALSE
    (39) expression -> . LPAREN expression RPAREN

    FOR             shift and go to state 2
    LOCAL           shift and go to state 3
    WHILE           shift and go to state 5
    LOCK            shift and go to state 6
    LOOP            shift and go to state 7
    BEGIN           shift and go to state 8
    IDENTIFIER      shift and go to state 4
    NOT             shift and go to state 9
    IF              shift and go to state 10
    NUMBER          shift and go to state 11
    FLOAT           shift and go to state 12
    MINUS           shift and go to state 14
    TRUE            shift and go to state 15
    FALSE           shift and go to state 16
    LPAREN          shift and go to state 13

    expression                     shift and go to state 84

state 75

    (12) expression -> BEGIN body END .

    LESS_THEN       reduce using rule 12 (expression -> BEGIN body END .)
    GREATER_THEN    reduce using rule 12 (expression -> BEGIN body END .)
    LESS_EQUALS     reduce using rule 12 (expression -> BEGIN body END .)
    GREATER_EQUALS  reduce using rule 12 (expression -> BEGIN body END .)
    EQUALS          reduce using rule 12 (expression -> BEGIN body END .)
    NOT_EQUALS      reduce using rule 12 (expression -> BEGIN body END .)
    AND             reduce using rule 12 (expression -> BEGIN body END .)
    NAND            reduce using rule 12 (expression -> BEGIN body END .)
    OR              reduce using rule 12 (expression -> BEGIN body END .)
    NOR             reduce using rule 12 (expression -> BEGIN body END .)
    XOR             reduce using rule 12 (expression -> BEGIN body END .)
    EQ              reduce using rule 12 (expression -> BEGIN body END .)
    NEQ             reduce using rule 12 (expression -> BEGIN body END .)
    IMPL            reduce using rule 12 (expression -> BEGIN body END .)
    LPAREN          reduce using rule 12 (expression -> BEGIN body END .)
    PLUS            reduce using rule 12 (expression -> BEGIN body END .)
    MINUS           reduce using rule 12 (expression -> BEGIN body END .)
    TIMES           reduce using rule 12 (expression -> BEGIN body END .)
    DIVIDE          reduce using rule 12 (expression -> BEGIN body END .)
    $end            reduce using rule 12 (expression -> BEGIN body END .)
    SEPARATOR       reduce using rule 12 (expression -> BEGIN body END .)
    DO              reduce using rule 12 (expression -> BEGIN body END .)
    END             reduce using rule 12 (expression -> BEGIN body END .)
    THEN            reduce using rule 12 (expression -> BEGIN body END .)
    RPAREN          reduce using rule 12 (expression -> BEGIN body END .)
    IN              reduce using rule 12 (expression -> BEGIN body END .)
    ELSE            reduce using rule 12 (expression -> BEGIN body END .)


state 76

    (18) body -> body SEPARATOR . expression
    (1) expression -> . FOR expression SEPARATOR expression SEPARATOR expression DO expression
    (2) expression -> . LOCAL IDENTIFIER ASSIGN expression IN expression
    (3) expression -> . WHILE expression DO expression
    (4) expression -> . expression LESS_THEN expression
    (5) expression -> . expression GREATER_THEN expression
    (6) expression -> . expression LESS_EQUALS expression
    (7) expression -> . expression GREATER_EQUALS expression
    (8) expression -> . expression EQUALS expression
    (9) expression -> . expression NOT_EQUALS expression
    (10) expression -> . LOCK IDENTIFIER IN expression
    (11) expression -> . LOOP expression DO expression
    (12) expression -> . BEGIN body END
    (13) expression -> . IDENTIFIER
    (14) expression -> . NOT expression
    (15) expression -> . IF expression THEN expression
    (16) expression -> . IDENTIFIER ARROW expression
    (19) expression -> . NUMBER
    (20) expression -> . FLOAT
    (21) expression -> . IDENTIFIER ASSIGN expression
    (22) expression -> . expression AND expression
    (23) expression -> . expression NAND expression
    (24) expression -> . expression OR expression
    (25) expression -> . expression NOR expression
    (26) expression -> . expression XOR expression
    (27) expression -> . expression EQ expression
    (28) expression -> . expression NEQ expression
    (29) expression -> . expression IMPL expression
    (30) expression -> . IF expression THEN expression ELSE expression
    (31) expression -> . expression LPAREN expression RPAREN
    (32) expression -> . MINUS expression
    (33) expression -> . expression PLUS expression
    (34) expression -> . expression MINUS expression
    (35) expression -> . expression TIMES expression
    (36) expression -> . expression DIVIDE expression
    (37) expression -> . TRUE
    (38) expression -> . FALSE
    (39) expression -> . LPAREN expression RPAREN

    FOR             shift and go to state 2
    LOCAL           shift and go to state 3
    WHILE           shift and go to state 5
    LOCK            shift and go to state 6
    LOOP            shift and go to state 7
    BEGIN           shift and go to state 8
    IDENTIFIER      shift and go to state 4
    NOT             shift and go to state 9
    IF              shift and go to state 10
    NUMBER          shift and go to state 11
    FLOAT           shift and go to state 12
    MINUS           shift and go to state 14
    TRUE            shift and go to state 15
    FALSE           shift and go to state 16
    LPAREN          shift and go to state 13

    expression                     shift and go to state 85

state 77

    (15) expression -> IF expression THEN . expression
    (30) expression -> IF expression THEN . expression ELSE expression
    (1) expression -> . FOR expression SEPARATOR expression SEPARATOR expression DO expression
    (2) expression -> . LOCAL IDENTIFIER ASSIGN expression IN expression
    (3) expression -> . WHILE expression DO expression
    (4) expression -> . expression LESS_THEN expression
    (5) expression -> . expression GREATER_THEN expression
    (6) expression -> . expression LESS_EQUALS expression
    (7) expression -> . expression GREATER_EQUALS expression
    (8) expression -> . expression EQUALS expression
    (9) expression -> . expression NOT_EQUALS expression
    (10) expression -> . LOCK IDENTIFIER IN expression
    (11) expression -> . LOOP expression DO expression
    (12) expression -> . BEGIN body END
    (13) expression -> . IDENTIFIER
    (14) expression -> . NOT expression
    (15) expression -> . IF expression THEN expression
    (16) expression -> . IDENTIFIER ARROW expression
    (19) expression -> . NUMBER
    (20) expression -> . FLOAT
    (21) expression -> . IDENTIFIER ASSIGN expression
    (22) expression -> . expression AND expression
    (23) expression -> . expression NAND expression
    (24) expression -> . expression OR expression
    (25) expression -> . expression NOR expression
    (26) expression -> . expression XOR expression
    (27) expression -> . expression EQ expression
    (28) expression -> . expression NEQ expression
    (29) expression -> . expression IMPL expression
    (30) expression -> . IF expression THEN expression ELSE expression
    (31) expression -> . expression LPAREN expression RPAREN
    (32) expression -> . MINUS expression
    (33) expression -> . expression PLUS expression
    (34) expression -> . expression MINUS expression
    (35) expression -> . expression TIMES expression
    (36) expression -> . expression DIVIDE expression
    (37) expression -> . TRUE
    (38) expression -> . FALSE
    (39) expression -> . LPAREN expression RPAREN

    FOR             shift and go to state 2
    LOCAL           shift and go to state 3
    WHILE           shift and go to state 5
    LOCK            shift and go to state 6
    LOOP            shift and go to state 7
    BEGIN           shift and go to state 8
    IDENTIFIER      shift and go to state 4
    NOT             shift and go to state 9
    IF              shift and go to state 10
    NUMBER          shift and go to state 11
    FLOAT           shift and go to state 12
    MINUS           shift and go to state 14
    TRUE            shift and go to state 15
    FALSE           shift and go to state 16
    LPAREN          shift and go to state 13

    expression                     shift and go to state 86

state 78

    (39) expression -> LPAREN expression RPAREN .

    LESS_THEN       reduce using rule 39 (expression -> LPAREN expression RPAREN .)
    GREATER_THEN    reduce using rule 39 (expression -> LPAREN expression RPAREN .)
    LESS_EQUALS     reduce using rule 39 (expression -> LPAREN expression RPAREN .)
    GREATER_EQUALS  reduce using rule 39 (expression -> LPAREN expression RPAREN .)
    EQUALS          reduce using rule 39 (expression -> LPAREN expression RPAREN .)
    NOT_EQUALS      reduce using rule 39 (expression -> LPAREN expression RPAREN .)
    AND             reduce using rule 39 (expression -> LPAREN expression RPAREN .)
    NAND            reduce using rule 39 (expression -> LPAREN expression RPAREN .)
    OR              reduce using rule 39 (expression -> LPAREN expression RPAREN .)
    NOR             reduce using rule 39 (expression -> LPAREN expression RPAREN .)
    XOR             reduce using rule 39 (expression -> LPAREN expression RPAREN .)
    EQ              reduce using rule 39 (expression -> LPAREN expression RPAREN .)
    NEQ             reduce using rule 39 (expression -> LPAREN expression RPAREN .)
    IMPL            reduce using rule 39 (expression -> LPAREN expression RPAREN .)
    LPAREN          reduce using rule 39 (expression -> LPAREN expression RPAREN .)
    PLUS            reduce using rule 39 (expression -> LPAREN expression RPAREN .)
    MINUS           reduce using rule 39 (expression -> LPAREN expression RPAREN .)
    TIMES           reduce using rule 39 (expression -> LPAREN expression RPAREN .)
    DIVIDE          reduce using rule 39 (expression -> LPAREN expression RPAREN .)
    $end            reduce using rule 39 (expression -> LPAREN expression RPAREN .)
    SEPARATOR       reduce using rule 39 (expression -> LPAREN expression RPAREN .)
    DO              reduce using rule 39 (expression -> LPAREN expression RPAREN .)
    END             reduce using rule 39 (expression -> LPAREN expression RPAREN .)
    THEN            reduce using rule 39 (expression -> LPAREN expression RPAREN .)
    RPAREN          reduce using rule 39 (expression -> LPAREN expression RPAREN .)
    IN              reduce using rule 39 (expression -> LPAREN expression RPAREN .)
    ELSE            reduce using rule 39 (expression -> LPAREN expression RPAREN .)


state 79

    (31) expression -> expression LPAREN expression RPAREN .

    LESS_THEN       reduce using rule 31 (expression -> expression LPAREN expression RPAREN .)
    GREATER_THEN    reduce using rule 31 (expression -> expression LPAREN expression RPAREN .)
    LESS_EQUALS     reduce using rule 31 (expression -> expression LPAREN expression RPAREN .)
    GREATER_EQUALS  reduce using rule 31 (expression -> expression LPAREN expression RPAREN .)
    EQUALS          reduce using rule 31 (expression -> expression LPAREN expression RPAREN .)
    NOT_EQUALS      reduce using rule 31 (expression -> expression LPAREN expression RPAREN .)
    AND             reduce using rule 31 (expression -> expression LPAREN expression RPAREN .)
    NAND            reduce using rule 31 (expression -> expression LPAREN expression RPAREN .)
    OR              reduce using rule 31 (expression -> expression LPAREN expression RPAREN .)
    NOR             reduce using rule 31 (expression -> expression LPAREN expression RPAREN .)
    XOR             reduce using rule 31 (expression -> expression LPAREN expression RPAREN .)
    EQ              reduce using rule 31 (expression -> expression LPAREN expression RPAREN .)
    NEQ             reduce using rule 31 (expression -> expression LPAREN expression RPAREN .)
    IMPL            reduce using rule 31 (expression -> expression LPAREN expression RPAREN .)
    LPAREN          reduce using rule 31 (expression -> expression LPAREN expression RPAREN .)
    PLUS            reduce using rule 31 (expression -> expression LPAREN expression RPAREN .)
    MINUS           reduce using rule 31 (expression -> expression LPAREN expression RPAREN .)
    TIMES           reduce using rule 31 (expression -> expression LPAREN expression RPAREN .)
    DIVIDE          reduce using rule 31 (expression -> expression LPAREN expression RPAREN .)
    $end            reduce using rule 31 (expression -> expression LPAREN expression RPAREN .)
    SEPARATOR       reduce using rule 31 (expression -> expression LPAREN expression RPAREN .)
    DO              reduce using rule 31 (expression -> expression LPAREN expression RPAREN .)
    END             reduce using rule 31 (expression -> expression LPAREN expression RPAREN .)
    THEN            reduce using rule 31 (expression -> expression LPAREN expression RPAREN .)
    RPAREN          reduce using rule 31 (expression -> expression LPAREN expression RPAREN .)
    IN              reduce using rule 31 (expression -> expression LPAREN expression RPAREN .)
    ELSE            reduce using rule 31 (expression -> expression LPAREN expression RPAREN .)


state 80

    (1) expression -> FOR expression SEPARATOR expression . SEPARATOR expression DO expression
    (4) expression -> expression . LESS_THEN expression
    (5) expression -> expression . GREATER_THEN expression
    (6) expression -> expression . LESS_EQUALS expression
    (7) expression -> expression . GREATER_EQUALS expression
    (8) expression -> expression . EQUALS expression
    (9) expression -> expression . NOT_EQUALS expression
    (22) expression -> expression . AND expression
    (23) expression -> expression . NAND expression
    (24) expression -> expression . OR expression
    (25) expression -> expression . NOR expression
    (26) expression -> expression . XOR expression
    (27) expression -> expression . EQ expression
    (28) expression -> expression . NEQ expression
    (29) expression -> expression . IMPL expression
    (31) expression -> expression . LPAREN expression RPAREN
    (33) expression -> expression . PLUS expression
    (34) expression -> expression . MINUS expression
    (35) expression -> expression . TIMES expression
    (36) expression -> expression . DIVIDE expression

    SEPARATOR       shift and go to state 87
    LESS_THEN       shift and go to state 17
    GREATER_THEN    shift and go to state 18
    LESS_EQUALS     shift and go to state 19
    GREATER_EQUALS  shift and go to state 20
    EQUALS          shift and go to state 21
    NOT_EQUALS      shift and go to state 22
    AND             shift and go to state 23
    NAND            shift and go to state 24
    OR              shift and go to state 25
    NOR             shift and go to state 26
    XOR             shift and go to state 27
    EQ              shift and go to state 28
    NEQ             shift and go to state 29
    IMPL            shift and go to state 30
    LPAREN          shift and go to state 31
    PLUS            shift and go to state 32
    MINUS           shift and go to state 33
    TIMES           shift and go to state 34
    DIVIDE          shift and go to state 35


state 81

    (2) expression -> LOCAL IDENTIFIER ASSIGN expression . IN expression
    (4) expression -> expression . LESS_THEN expression
    (5) expression -> expression . GREATER_THEN expression
    (6) expression -> expression . LESS_EQUALS expression
    (7) expression -> expression . GREATER_EQUALS expression
    (8) expression -> expression . EQUALS expression
    (9) expression -> expression . NOT_EQUALS expression
    (22) expression -> expression . AND expression
    (23) expression -> expression . NAND expression
    (24) expression -> expression . OR expression
    (25) expression -> expression . NOR expression
    (26) expression -> expression . XOR expression
    (27) expression -> expression . EQ expression
    (28) expression -> expression . NEQ expression
    (29) expression -> expression . IMPL expression
    (31) expression -> expression . LPAREN expression RPAREN
    (33) expression -> expression . PLUS expression
    (34) expression -> expression . MINUS expression
    (35) expression -> expression . TIMES expression
    (36) expression -> expression . DIVIDE expression

    IN              shift and go to state 88
    LESS_THEN       shift and go to state 17
    GREATER_THEN    shift and go to state 18
    LESS_EQUALS     shift and go to state 19
    GREATER_EQUALS  shift and go to state 20
    EQUALS          shift and go to state 21
    NOT_EQUALS      shift and go to state 22
    AND             shift and go to state 23
    NAND            shift and go to state 24
    OR              shift and go to state 25
    NOR             shift and go to state 26
    XOR             shift and go to state 27
    EQ              shift and go to state 28
    NEQ             shift and go to state 29
    IMPL            shift and go to state 30
    LPAREN          shift and go to state 31
    PLUS            shift and go to state 32
    MINUS           shift and go to state 33
    TIMES           shift and go to state 34
    DIVIDE          shift and go to state 35


state 82

    (3) expression -> WHILE expression DO expression .
    (4) expression -> expression . LESS_THEN expression
    (5) expression -> expression . GREATER_THEN expression
    (6) expression -> expression . LESS_EQUALS expression
    (7) expression -> expression . GREATER_EQUALS expression
    (8) expression -> expression . EQUALS expression
    (9) expression -> expression . NOT_EQUALS expression
    (22) expression -> expression . AND expression
    (23) expression -> expression . NAND expression
    (24) expression -> expression . OR expression
    (25) expression -> expression . NOR expression
    (26) expression -> expression . XOR expression
    (27) expression -> expression . EQ expression
    (28) expression -> expression . NEQ expression
    (29) expression -> expression . IMPL expression
    (31) expression -> expression . LPAREN expression RPAREN
    (33) expression -> expression . PLUS expression
    (34) expression -> expression . MINUS expression
    (35) expression -> expression . TIMES expression
    (36) expression -> expression . DIVIDE expression

    $end            reduce using rule 3 (expression -> WHILE expression DO expression .)
    SEPARATOR       reduce using rule 3 (expression -> WHILE expression DO expression .)
    DO              reduce using rule 3 (expression -> WHILE expression DO expression .)
    END             reduce using rule 3 (expression -> WHILE expression DO expression .)
    THEN            reduce using rule 3 (expression -> WHILE expression DO expression .)
    RPAREN          reduce using rule 3 (expression -> WHILE expression DO expression .)
    IN              reduce using rule 3 (expression -> WHILE expression DO expression .)
    ELSE            reduce using rule 3 (expression -> WHILE expression DO expression .)
    LESS_THEN       shift and go to state 17
    GREATER_THEN    shift and go to state 18
    LESS_EQUALS     shift and go to state 19
    GREATER_EQUALS  shift and go to state 20
    EQUALS          shift and go to state 21
    NOT_EQUALS      shift and go to state 22
    AND             shift and go to state 23
    NAND            shift and go to state 24
    OR              shift and go to state 25
    NOR             shift and go to state 26
    XOR             shift and go to state 27
    EQ              shift and go to state 28
    NEQ             shift and go to state 29
    IMPL            shift and go to state 30
    LPAREN          shift and go to state 31
    PLUS            shift and go to state 32
    MINUS           shift and go to state 33
    TIMES           shift and go to state 34
    DIVIDE          shift and go to state 35

  ! LESS_THEN       [ reduce using rule 3 (expression -> WHILE expression DO expression .) ]
  ! GREATER_THEN    [ reduce using rule 3 (expression -> WHILE expression DO expression .) ]
  ! LESS_EQUALS     [ reduce using rule 3 (expression -> WHILE expression DO expression .) ]
  ! GREATER_EQUALS  [ reduce using rule 3 (expression -> WHILE expression DO expression .) ]
  ! EQUALS          [ reduce using rule 3 (expression -> WHILE expression DO expression .) ]
  ! NOT_EQUALS      [ reduce using rule 3 (expression -> WHILE expression DO expression .) ]
  ! AND             [ reduce using rule 3 (expression -> WHILE expression DO expression .) ]
  ! NAND            [ reduce using rule 3 (expression -> WHILE expression DO expression .) ]
  ! OR              [ reduce using rule 3 (expression -> WHILE expression DO expression .) ]
  ! NOR             [ reduce using rule 3 (expression -> WHILE expression DO expression .) ]
  ! XOR             [ reduce using rule 3 (expression -> WHILE expression DO expression .) ]
  ! EQ              [ reduce using rule 3 (expression -> WHILE expression DO expression .) ]
  ! NEQ             [ reduce using rule 3 (expression -> WHILE expression DO expression .) ]
  ! IMPL            [ reduce using rule 3 (expression -> WHILE expression DO expression .) ]
  ! LPAREN          [ reduce using rule 3 (expression -> WHILE expression DO expression .) ]
  ! PLUS            [ reduce using rule 3 (expression -> WHILE expression DO expression .) ]
  ! MINUS           [ reduce using rule 3 (expression -> WHILE expression DO expression .) ]
  ! TIMES           [ reduce using rule 3 (expression -> WHILE expression DO expression .) ]
  ! DIVIDE          [ reduce using rule 3 (expression -> WHILE expression DO expression .) ]


state 83

    (10) expression -> LOCK IDENTIFIER IN expression .
    (4) expression -> expression . LESS_THEN expression
    (5) expression -> expression . GREATER_THEN expression
    (6) expression -> expression . LESS_EQUALS expression
    (7) expression -> expression . GREATER_EQUALS expression
    (8) expression -> expression . EQUALS expression
    (9) expression -> expression . NOT_EQUALS expression
    (22) expression -> expression . AND expression
    (23) expression -> expression . NAND expression
    (24) expression -> expression . OR expression
    (25) expression -> expression . NOR expression
    (26) expression -> expression . XOR expression
    (27) expression -> expression . EQ expression
    (28) expression -> expression . NEQ expression
    (29) expression -> expression . IMPL expression
    (31) expression -> expression . LPAREN expression RPAREN
    (33) expression -> expression . PLUS expression
    (34) expression -> expression . MINUS expression
    (35) expression -> expression . TIMES expression
    (36) expression -> expression . DIVIDE expression

    $end            reduce using rule 10 (expression -> LOCK IDENTIFIER IN expression .)
    SEPARATOR       reduce using rule 10 (expression -> LOCK IDENTIFIER IN expression .)
    DO              reduce using rule 10 (expression -> LOCK IDENTIFIER IN expression .)
    END             reduce using rule 10 (expression -> LOCK IDENTIFIER IN expression .)
    THEN            reduce using rule 10 (expression -> LOCK IDENTIFIER IN expression .)
    RPAREN          reduce using rule 10 (expression -> LOCK IDENTIFIER IN expression .)
    IN              reduce using rule 10 (expression -> LOCK IDENTIFIER IN expression .)
    ELSE            reduce using rule 10 (expression -> LOCK IDENTIFIER IN expression .)
    LESS_THEN       shift and go to state 17
    GREATER_THEN    shift and go to state 18
    LESS_EQUALS     shift and go to state 19
    GREATER_EQUALS  shift and go to state 20
    EQUALS          shift and go to state 21
    NOT_EQUALS      shift and go to state 22
    AND             shift and go to state 23
    NAND            shift and go to state 24
    OR              shift and go to state 25
    NOR             shift and go to state 26
    XOR             shift and go to state 27
    EQ              shift and go to state 28
    NEQ             shift and go to state 29
    IMPL            shift and go to state 30
    LPAREN          shift and go to state 31
    PLUS            shift and go to state 32
    MINUS           shift and go to state 33
    TIMES           shift and go to state 34
    DIVIDE          shift and go to state 35

  ! LESS_THEN       [ reduce using rule 10 (expression -> LOCK IDENTIFIER IN expression .) ]
  ! GREATER_THEN    [ reduce using rule 10 (expression -> LOCK IDENTIFIER IN expression .) ]
  ! LESS_EQUALS     [ reduce using rule 10 (expression -> LOCK IDENTIFIER IN expression .) ]
  ! GREATER_EQUALS  [ reduce using rule 10 (expression -> LOCK IDENTIFIER IN expression .) ]
  ! EQUALS          [ reduce using rule 10 (expression -> LOCK IDENTIFIER IN expression .) ]
  ! NOT_EQUALS      [ reduce using rule 10 (expression -> LOCK IDENTIFIER IN expression .) ]
  ! AND             [ reduce using rule 10 (expression -> LOCK IDENTIFIER IN expression .) ]
  ! NAND            [ reduce using rule 10 (expression -> LOCK IDENTIFIER IN expression .) ]
  ! OR              [ reduce using rule 10 (expression -> LOCK IDENTIFIER IN expression .) ]
  ! NOR             [ reduce using rule 10 (expression -> LOCK IDENTIFIER IN expression .) ]
  ! XOR             [ reduce using rule 10 (expression -> LOCK IDENTIFIER IN expression .) ]
  ! EQ              [ reduce using rule 10 (expression -> LOCK IDENTIFIER IN expression .) ]
  ! NEQ             [ reduce using rule 10 (expression -> LOCK IDENTIFIER IN expression .) ]
  ! IMPL            [ reduce using rule 10 (expression -> LOCK IDENTIFIER IN expression .) ]
  ! LPAREN          [ reduce using rule 10 (expression -> LOCK IDENTIFIER IN expression .) ]
  ! PLUS            [ reduce using rule 10 (expression -> LOCK IDENTIFIER IN expression .) ]
  ! MINUS           [ reduce using rule 10 (expression -> LOCK IDENTIFIER IN expression .) ]
  ! TIMES           [ reduce using rule 10 (expression -> LOCK IDENTIFIER IN expression .) ]
  ! DIVIDE          [ reduce using rule 10 (expression -> LOCK IDENTIFIER IN expression .) ]


state 84

    (11) expression -> LOOP expression DO expression .
    (4) expression -> expression . LESS_THEN expression
    (5) expression -> expression . GREATER_THEN expression
    (6) expression -> expression . LESS_EQUALS expression
    (7) expression -> expression . GREATER_EQUALS expression
    (8) expression -> expression . EQUALS expression
    (9) expression -> expression . NOT_EQUALS expression
    (22) expression -> expression . AND expression
    (23) expression -> expression . NAND expression
    (24) expression -> expression . OR expression
    (25) expression -> expression . NOR expression
    (26) expression -> expression . XOR expression
    (27) expression -> expression . EQ expression
    (28) expression -> expression . NEQ expression
    (29) expression -> expression . IMPL expression
    (31) expression -> expression . LPAREN expression RPAREN
    (33) expression -> expression . PLUS expression
    (34) expression -> expression . MINUS expression
    (35) expression -> expression . TIMES expression
    (36) expression -> expression . DIVIDE expression

    $end            reduce using rule 11 (expression -> LOOP expression DO expression .)
    SEPARATOR       reduce using rule 11 (expression -> LOOP expression DO expression .)
    DO              reduce using rule 11 (expression -> LOOP expression DO expression .)
    END             reduce using rule 11 (expression -> LOOP expression DO expression .)
    THEN            reduce using rule 11 (expression -> LOOP expression DO expression .)
    RPAREN          reduce using rule 11 (expression -> LOOP expression DO expression .)
    IN              reduce using rule 11 (expression -> LOOP expression DO expression .)
    ELSE            reduce using rule 11 (expression -> LOOP expression DO expression .)
    LESS_THEN       shift and go to state 17
    GREATER_THEN    shift and go to state 18
    LESS_EQUALS     shift and go to state 19
    GREATER_EQUALS  shift and go to state 20
    EQUALS          shift and go to state 21
    NOT_EQUALS      shift and go to state 22
    AND             shift and go to state 23
    NAND            shift and go to state 24
    OR              shift and go to state 25
    NOR             shift and go to state 26
    XOR             shift and go to state 27
    EQ              shift and go to state 28
    NEQ             shift and go to state 29
    IMPL            shift and go to state 30
    LPAREN          shift and go to state 31
    PLUS            shift and go to state 32
    MINUS           shift and go to state 33
    TIMES           shift and go to state 34
    DIVIDE          shift and go to state 35

  ! LESS_THEN       [ reduce using rule 11 (expression -> LOOP expression DO expression .) ]
  ! GREATER_THEN    [ reduce using rule 11 (expression -> LOOP expression DO expression .) ]
  ! LESS_EQUALS     [ reduce using rule 11 (expression -> LOOP expression DO expression .) ]
  ! GREATER_EQUALS  [ reduce using rule 11 (expression -> LOOP expression DO expression .) ]
  ! EQUALS          [ reduce using rule 11 (expression -> LOOP expression DO expression .) ]
  ! NOT_EQUALS      [ reduce using rule 11 (expression -> LOOP expression DO expression .) ]
  ! AND             [ reduce using rule 11 (expression -> LOOP expression DO expression .) ]
  ! NAND            [ reduce using rule 11 (expression -> LOOP expression DO expression .) ]
  ! OR              [ reduce using rule 11 (expression -> LOOP expression DO expression .) ]
  ! NOR             [ reduce using rule 11 (expression -> LOOP expression DO expression .) ]
  ! XOR             [ reduce using rule 11 (expression -> LOOP expression DO expression .) ]
  ! EQ              [ reduce using rule 11 (expression -> LOOP expression DO expression .) ]
  ! NEQ             [ reduce using rule 11 (expression -> LOOP expression DO expression .) ]
  ! IMPL            [ reduce using rule 11 (expression -> LOOP expression DO expression .) ]
  ! LPAREN          [ reduce using rule 11 (expression -> LOOP expression DO expression .) ]
  ! PLUS            [ reduce using rule 11 (expression -> LOOP expression DO expression .) ]
  ! MINUS           [ reduce using rule 11 (expression -> LOOP expression DO expression .) ]
  ! TIMES           [ reduce using rule 11 (expression -> LOOP expression DO expression .) ]
  ! DIVIDE          [ reduce using rule 11 (expression -> LOOP expression DO expression .) ]


state 85

    (18) body -> body SEPARATOR expression .
    (4) expression -> expression . LESS_THEN expression
    (5) expression -> expression . GREATER_THEN expression
    (6) expression -> expression . LESS_EQUALS expression
    (7) expression -> expression . GREATER_EQUALS expression
    (8) expression -> expression . EQUALS expression
    (9) expression -> expression . NOT_EQUALS expression
    (22) expression -> expression . AND expression
    (23) expression -> expression . NAND expression
    (24) expression -> expression . OR expression
    (25) expression -> expression . NOR expression
    (26) expression -> expression . XOR expression
    (27) expression -> expression . EQ expression
    (28) expression -> expression . NEQ expression
    (29) expression -> expression . IMPL expression
    (31) expression -> expression . LPAREN expression RPAREN
    (33) expression -> expression . PLUS expression
    (34) expression -> expression . MINUS expression
    (35) expression -> expression . TIMES expression
    (36) expression -> expression . DIVIDE expression

    END             reduce using rule 18 (body -> body SEPARATOR expression .)
    SEPARATOR       reduce using rule 18 (body -> body SEPARATOR expression .)
    LESS_THEN       shift and go to state 17
    GREATER_THEN    shift and go to state 18
    LESS_EQUALS     shift and go to state 19
    GREATER_EQUALS  shift and go to state 20
    EQUALS          shift and go to state 21
    NOT_EQUALS      shift and go to state 22
    AND             shift and go to state 23
    NAND            shift and go to state 24
    OR              shift and go to state 25
    NOR             shift and go to state 26
    XOR             shift and go to state 27
    EQ              shift and go to state 28
    NEQ             shift and go to state 29
    IMPL            shift and go to state 30
    LPAREN          shift and go to state 31
    PLUS            shift and go to state 32
    MINUS           shift and go to state 33
    TIMES           shift and go to state 34
    DIVIDE          shift and go to state 35


state 86

    (15) expression -> IF expression THEN expression .
    (30) expression -> IF expression THEN expression . ELSE expression
    (4) expression -> expression . LESS_THEN expression
    (5) expression -> expression . GREATER_THEN expression
    (6) expression -> expression . LESS_EQUALS expression
    (7) expression -> expression . GREATER_EQUALS expression
    (8) expression -> expression . EQUALS expression
    (9) expression -> expression . NOT_EQUALS expression
    (22) expression -> expression . AND expression
    (23) expression -> expression . NAND expression
    (24) expression -> expression . OR expression
    (25) expression -> expression . NOR expression
    (26) expression -> expression . XOR expression
    (27) expression -> expression . EQ expression
    (28) expression -> expression . NEQ expression
    (29) expression -> expression . IMPL expression
    (31) expression -> expression . LPAREN expression RPAREN
    (33) expression -> expression . PLUS expression
    (34) expression -> expression . MINUS expression
    (35) expression -> expression . TIMES expression
    (36) expression -> expression . DIVIDE expression

    $end            reduce using rule 15 (expression -> IF expression THEN expression .)
    SEPARATOR       reduce using rule 15 (expression -> IF expression THEN expression .)
    DO              reduce using rule 15 (expression -> IF expression THEN expression .)
    END             reduce using rule 15 (expression -> IF expression THEN expression .)
    THEN            reduce using rule 15 (expression -> IF expression THEN expression .)
    RPAREN          reduce using rule 15 (expression -> IF expression THEN expression .)
    IN              reduce using rule 15 (expression -> IF expression THEN expression .)
    ELSE            shift and go to state 89
    LESS_THEN       shift and go to state 17
    GREATER_THEN    shift and go to state 18
    LESS_EQUALS     shift and go to state 19
    GREATER_EQUALS  shift and go to state 20
    EQUALS          shift and go to state 21
    NOT_EQUALS      shift and go to state 22
    AND             shift and go to state 23
    NAND            shift and go to state 24
    OR              shift and go to state 25
    NOR             shift and go to state 26
    XOR             shift and go to state 27
    EQ              shift and go to state 28
    NEQ             shift and go to state 29
    IMPL            shift and go to state 30
    LPAREN          shift and go to state 31
    PLUS            shift and go to state 32
    MINUS           shift and go to state 33
    TIMES           shift and go to state 34
    DIVIDE          shift and go to state 35

  ! LESS_THEN       [ reduce using rule 15 (expression -> IF expression THEN expression .) ]
  ! GREATER_THEN    [ reduce using rule 15 (expression -> IF expression THEN expression .) ]
  ! LESS_EQUALS     [ reduce using rule 15 (expression -> IF expression THEN expression .) ]
  ! GREATER_EQUALS  [ reduce using rule 15 (expression -> IF expression THEN expression .) ]
  ! EQUALS          [ reduce using rule 15 (expression -> IF expression THEN expression .) ]
  ! NOT_EQUALS      [ reduce using rule 15 (expression -> IF expression THEN expression .) ]
  ! AND             [ reduce using rule 15 (expression -> IF expression THEN expression .) ]
  ! NAND            [ reduce using rule 15 (expression -> IF expression THEN expression .) ]
  ! OR              [ reduce using rule 15 (expression -> IF expression THEN expression .) ]
  ! NOR             [ reduce using rule 15 (expression -> IF expression THEN expression .) ]
  ! XOR             [ reduce using rule 15 (expression -> IF expression THEN expression .) ]
  ! EQ              [ reduce using rule 15 (expression -> IF expression THEN expression .) ]
  ! NEQ             [ reduce using rule 15 (expression -> IF expression THEN expression .) ]
  ! IMPL            [ reduce using rule 15 (expression -> IF expression THEN expression .) ]
  ! LPAREN          [ reduce using rule 15 (expression -> IF expression THEN expression .) ]
  ! PLUS            [ reduce using rule 15 (expression -> IF expression THEN expression .) ]
  ! MINUS           [ reduce using rule 15 (expression -> IF expression THEN expression .) ]
  ! TIMES           [ reduce using rule 15 (expression -> IF expression THEN expression .) ]
  ! DIVIDE          [ reduce using rule 15 (expression -> IF expression THEN expression .) ]
  ! ELSE            [ reduce using rule 15 (expression -> IF expression THEN expression .) ]


state 87

    (1) expression -> FOR expression SEPARATOR expression SEPARATOR . expression DO expression
    (1) expression -> . FOR expression SEPARATOR expression SEPARATOR expression DO expression
    (2) expression -> . LOCAL IDENTIFIER ASSIGN expression IN expression
    (3) expression -> . WHILE expression DO expression
    (4) expression -> . expression LESS_THEN expression
    (5) expression -> . expression GREATER_THEN expression
    (6) expression -> . expression LESS_EQUALS expression
    (7) expression -> . expression GREATER_EQUALS expression
    (8) expression -> . expression EQUALS expression
    (9) expression -> . expression NOT_EQUALS expression
    (10) expression -> . LOCK IDENTIFIER IN expression
    (11) expression -> . LOOP expression DO expression
    (12) expression -> . BEGIN body END
    (13) expression -> . IDENTIFIER
    (14) expression -> . NOT expression
    (15) expression -> . IF expression THEN expression
    (16) expression -> . IDENTIFIER ARROW expression
    (19) expression -> . NUMBER
    (20) expression -> . FLOAT
    (21) expression -> . IDENTIFIER ASSIGN expression
    (22) expression -> . expression AND expression
    (23) expression -> . expression NAND expression
    (24) expression -> . expression OR expression
    (25) expression -> . expression NOR expression
    (26) expression -> . expression XOR expression
    (27) expression -> . expression EQ expression
    (28) expression -> . expression NEQ expression
    (29) expression -> . expression IMPL expression
    (30) expression -> . IF expression THEN expression ELSE expression
    (31) expression -> . expression LPAREN expression RPAREN
    (32) expression -> . MINUS expression
    (33) expression -> . expression PLUS expression
    (34) expression -> . expression MINUS expression
    (35) expression -> . expression TIMES expression
    (36) expression -> . expression DIVIDE expression
    (37) expression -> . TRUE
    (38) expression -> . FALSE
    (39) expression -> . LPAREN expression RPAREN

    FOR             shift and go to state 2
    LOCAL           shift and go to state 3
    WHILE           shift and go to state 5
    LOCK            shift and go to state 6
    LOOP            shift and go to state 7
    BEGIN           shift and go to state 8
    IDENTIFIER      shift and go to state 4
    NOT             shift and go to state 9
    IF              shift and go to state 10
    NUMBER          shift and go to state 11
    FLOAT           shift and go to state 12
    MINUS           shift and go to state 14
    TRUE            shift and go to state 15
    FALSE           shift and go to state 16
    LPAREN          shift and go to state 13

    expression                     shift and go to state 90

state 88

    (2) expression -> LOCAL IDENTIFIER ASSIGN expression IN . expression
    (1) expression -> . FOR expression SEPARATOR expression SEPARATOR expression DO expression
    (2) expression -> . LOCAL IDENTIFIER ASSIGN expression IN expression
    (3) expression -> . WHILE expression DO expression
    (4) expression -> . expression LESS_THEN expression
    (5) expression -> . expression GREATER_THEN expression
    (6) expression -> . expression LESS_EQUALS expression
    (7) expression -> . expression GREATER_EQUALS expression
    (8) expression -> . expression EQUALS expression
    (9) expression -> . expression NOT_EQUALS expression
    (10) expression -> . LOCK IDENTIFIER IN expression
    (11) expression -> . LOOP expression DO expression
    (12) expression -> . BEGIN body END
    (13) expression -> . IDENTIFIER
    (14) expression -> . NOT expression
    (15) expression -> . IF expression THEN expression
    (16) expression -> . IDENTIFIER ARROW expression
    (19) expression -> . NUMBER
    (20) expression -> . FLOAT
    (21) expression -> . IDENTIFIER ASSIGN expression
    (22) expression -> . expression AND expression
    (23) expression -> . expression NAND expression
    (24) expression -> . expression OR expression
    (25) expression -> . expression NOR expression
    (26) expression -> . expression XOR expression
    (27) expression -> . expression EQ expression
    (28) expression -> . expression NEQ expression
    (29) expression -> . expression IMPL expression
    (30) expression -> . IF expression THEN expression ELSE expression
    (31) expression -> . expression LPAREN expression RPAREN
    (32) expression -> . MINUS expression
    (33) expression -> . expression PLUS expression
    (34) expression -> . expression MINUS expression
    (35) expression -> . expression TIMES expression
    (36) expression -> . expression DIVIDE expression
    (37) expression -> . TRUE
    (38) expression -> . FALSE
    (39) expression -> . LPAREN expression RPAREN

    FOR             shift and go to state 2
    LOCAL           shift and go to state 3
    WHILE           shift and go to state 5
    LOCK            shift and go to state 6
    LOOP            shift and go to state 7
    BEGIN           shift and go to state 8
    IDENTIFIER      shift and go to state 4
    NOT             shift and go to state 9
    IF              shift and go to state 10
    NUMBER          shift and go to state 11
    FLOAT           shift and go to state 12
    MINUS           shift and go to state 14
    TRUE            shift and go to state 15
    FALSE           shift and go to state 16
    LPAREN          shift and go to state 13

    expression                     shift and go to state 91

state 89

    (30) expression -> IF expression THEN expression ELSE . expression
    (1) expression -> . FOR expression SEPARATOR expression SEPARATOR expression DO expression
    (2) expression -> . LOCAL IDENTIFIER ASSIGN expression IN expression
    (3) expression -> . WHILE expression DO expression
    (4) expression -> . expression LESS_THEN expression
    (5) expression -> . expression GREATER_THEN expression
    (6) expression -> . expression LESS_EQUALS expression
    (7) expression -> . expression GREATER_EQUALS expression
    (8) expression -> . expression EQUALS expression
    (9) expression -> . expression NOT_EQUALS expression
    (10) expression -> . LOCK IDENTIFIER IN expression
    (11) expression -> . LOOP expression DO expression
    (12) expression -> . BEGIN body END
    (13) expression -> . IDENTIFIER
    (14) expression -> . NOT expression
    (15) expression -> . IF expression THEN expression
    (16) expression -> . IDENTIFIER ARROW expression
    (19) expression -> . NUMBER
    (20) expression -> . FLOAT
    (21) expression -> . IDENTIFIER ASSIGN expression
    (22) expression -> . expression AND expression
    (23) expression -> . expression NAND expression
    (24) expression -> . expression OR expression
    (25) expression -> . expression NOR expression
    (26) expression -> . expression XOR expression
    (27) expression -> . expression EQ expression
    (28) expression -> . expression NEQ expression
    (29) expression -> . expression IMPL expression
    (30) expression -> . IF expression THEN expression ELSE expression
    (31) expression -> . expression LPAREN expression RPAREN
    (32) expression -> . MINUS expression
    (33) expression -> . expression PLUS expression
    (34) expression -> . expression MINUS expression
    (35) expression -> . expression TIMES expression
    (36) expression -> . expression DIVIDE expression
    (37) expression -> . TRUE
    (38) expression -> . FALSE
    (39) expression -> . LPAREN expression RPAREN

    FOR             shift and go to state 2
    LOCAL           shift and go to state 3
    WHILE           shift and go to state 5
    LOCK            shift and go to state 6
    LOOP            shift and go to state 7
    BEGIN           shift and go to state 8
    IDENTIFIER      shift and go to state 4
    NOT             shift and go to state 9
    IF              shift and go to state 10
    NUMBER          shift and go to state 11
    FLOAT           shift and go to state 12
    MINUS           shift and go to state 14
    TRUE            shift and go to state 15
    FALSE           shift and go to state 16
    LPAREN          shift and go to state 13

    expression                     shift and go to state 92

state 90

    (1) expression -> FOR expression SEPARATOR expression SEPARATOR expression . DO expression
    (4) expression -> expression . LESS_THEN expression
    (5) expression -> expression . GREATER_THEN expression
    (6) expression -> expression . LESS_EQUALS expression
    (7) expression -> expression . GREATER_EQUALS expression
    (8) expression -> expression . EQUALS expression
    (9) expression -> expression . NOT_EQUALS expression
    (22) expression -> expression . AND expression
    (23) expression -> expression . NAND expression
    (24) expression -> expression . OR expression
    (25) expression -> expression . NOR expression
    (26) expression -> expression . XOR expression
    (27) expression -> expression . EQ expression
    (28) expression -> expression . NEQ expression
    (29) expression -> expression . IMPL expression
    (31) expression -> expression . LPAREN expression RPAREN
    (33) expression -> expression . PLUS expression
    (34) expression -> expression . MINUS expression
    (35) expression -> expression . TIMES expression
    (36) expression -> expression . DIVIDE expression

    DO              shift and go to state 93
    LESS_THEN       shift and go to state 17
    GREATER_THEN    shift and go to state 18
    LESS_EQUALS     shift and go to state 19
    GREATER_EQUALS  shift and go to state 20
    EQUALS          shift and go to state 21
    NOT_EQUALS      shift and go to state 22
    AND             shift and go to state 23
    NAND            shift and go to state 24
    OR              shift and go to state 25
    NOR             shift and go to state 26
    XOR             shift and go to state 27
    EQ              shift and go to state 28
    NEQ             shift and go to state 29
    IMPL            shift and go to state 30
    LPAREN          shift and go to state 31
    PLUS            shift and go to state 32
    MINUS           shift and go to state 33
    TIMES           shift and go to state 34
    DIVIDE          shift and go to state 35


state 91

    (2) expression -> LOCAL IDENTIFIER ASSIGN expression IN expression .
    (4) expression -> expression . LESS_THEN expression
    (5) expression -> expression . GREATER_THEN expression
    (6) expression -> expression . LESS_EQUALS expression
    (7) expression -> expression . GREATER_EQUALS expression
    (8) expression -> expression . EQUALS expression
    (9) expression -> expression . NOT_EQUALS expression
    (22) expression -> expression . AND expression
    (23) expression -> expression . NAND expression
    (24) expression -> expression . OR expression
    (25) expression -> expression . NOR expression
    (26) expression -> expression . XOR expression
    (27) expression -> expression . EQ expression
    (28) expression -> expression . NEQ expression
    (29) expression -> expression . IMPL expression
    (31) expression -> expression . LPAREN expression RPAREN
    (33) expression -> expression . PLUS expression
    (34) expression -> expression . MINUS expression
    (35) expression -> expression . TIMES expression
    (36) expression -> expression . DIVIDE expression

    $end            reduce using rule 2 (expression -> LOCAL IDENTIFIER ASSIGN expression IN expression .)
    SEPARATOR       reduce using rule 2 (expression -> LOCAL IDENTIFIER ASSIGN expression IN expression .)
    DO              reduce using rule 2 (expression -> LOCAL IDENTIFIER ASSIGN expression IN expression .)
    END             reduce using rule 2 (expression -> LOCAL IDENTIFIER ASSIGN expression IN expression .)
    THEN            reduce using rule 2 (expression -> LOCAL IDENTIFIER ASSIGN expression IN expression .)
    RPAREN          reduce using rule 2 (expression -> LOCAL IDENTIFIER ASSIGN expression IN expression .)
    IN              reduce using rule 2 (expression -> LOCAL IDENTIFIER ASSIGN expression IN expression .)
    ELSE            reduce using rule 2 (expression -> LOCAL IDENTIFIER ASSIGN expression IN expression .)
    LESS_THEN       shift and go to state 17
    GREATER_THEN    shift and go to state 18
    LESS_EQUALS     shift and go to state 19
    GREATER_EQUALS  shift and go to state 20
    EQUALS          shift and go to state 21
    NOT_EQUALS      shift and go to state 22
    AND             shift and go to state 23
    NAND            shift and go to state 24
    OR              shift and go to state 25
    NOR             shift and go to state 26
    XOR             shift and go to state 27
    EQ              shift and go to state 28
    NEQ             shift and go to state 29
    IMPL            shift and go to state 30
    LPAREN          shift and go to state 31
    PLUS            shift and go to state 32
    MINUS           shift and go to state 33
    TIMES           shift and go to state 34
    DIVIDE          shift and go to state 35

  ! LESS_THEN       [ reduce using rule 2 (expression -> LOCAL IDENTIFIER ASSIGN expression IN expression .) ]
  ! GREATER_THEN    [ reduce using rule 2 (expression -> LOCAL IDENTIFIER ASSIGN expression IN expression .) ]
  ! LESS_EQUALS     [ reduce using rule 2 (expression -> LOCAL IDENTIFIER ASSIGN expression IN expression .) ]
  ! GREATER_EQUALS  [ reduce using rule 2 (expression -> LOCAL IDENTIFIER ASSIGN expression IN expression .) ]
  ! EQUALS          [ reduce using rule 2 (expression -> LOCAL IDENTIFIER ASSIGN expression IN expression .) ]
  ! NOT_EQUALS      [ reduce using rule 2 (expression -> LOCAL IDENTIFIER ASSIGN expression IN expression .) ]
  ! AND             [ reduce using rule 2 (expression -> LOCAL IDENTIFIER ASSIGN expression IN expression .) ]
  ! NAND            [ reduce using rule 2 (expression -> LOCAL IDENTIFIER ASSIGN expression IN expression .) ]
  ! OR              [ reduce using rule 2 (expression -> LOCAL IDENTIFIER ASSIGN expression IN expression .) ]
  ! NOR             [ reduce using rule 2 (expression -> LOCAL IDENTIFIER ASSIGN expression IN expression .) ]
  ! XOR             [ reduce using rule 2 (expression -> LOCAL IDENTIFIER ASSIGN expression IN expression .) ]
  ! EQ              [ reduce using rule 2 (expression -> LOCAL IDENTIFIER ASSIGN expression IN expression .) ]
  ! NEQ             [ reduce using rule 2 (expression -> LOCAL IDENTIFIER ASSIGN expression IN expression .) ]
  ! IMPL            [ reduce using rule 2 (expression -> LOCAL IDENTIFIER ASSIGN expression IN expression .) ]
  ! LPAREN          [ reduce using rule 2 (expression -> LOCAL IDENTIFIER ASSIGN expression IN expression .) ]
  ! PLUS            [ reduce using rule 2 (expression -> LOCAL IDENTIFIER ASSIGN expression IN expression .) ]
  ! MINUS           [ reduce using rule 2 (expression -> LOCAL IDENTIFIER ASSIGN expression IN expression .) ]
  ! TIMES           [ reduce using rule 2 (expression -> LOCAL IDENTIFIER ASSIGN expression IN expression .) ]
  ! DIVIDE          [ reduce using rule 2 (expression -> LOCAL IDENTIFIER ASSIGN expression IN expression .) ]


state 92

    (30) expression -> IF expression THEN expression ELSE expression .
    (4) expression -> expression . LESS_THEN expression
    (5) expression -> expression . GREATER_THEN expression
    (6) expression -> expression . LESS_EQUALS expression
    (7) expression -> expression . GREATER_EQUALS expression
    (8) expression -> expression . EQUALS expression
    (9) expression -> expression . NOT_EQUALS expression
    (22) expression -> expression . AND expression
    (23) expression -> expression . NAND expression
    (24) expression -> expression . OR expression
    (25) expression -> expression . NOR expression
    (26) expression -> expression . XOR expression
    (27) expression -> expression . EQ expression
    (28) expression -> expression . NEQ expression
    (29) expression -> expression . IMPL expression
    (31) expression -> expression . LPAREN expression RPAREN
    (33) expression -> expression . PLUS expression
    (34) expression -> expression . MINUS expression
    (35) expression -> expression . TIMES expression
    (36) expression -> expression . DIVIDE expression

    $end            reduce using rule 30 (expression -> IF expression THEN expression ELSE expression .)
    SEPARATOR       reduce using rule 30 (expression -> IF expression THEN expression ELSE expression .)
    DO              reduce using rule 30 (expression -> IF expression THEN expression ELSE expression .)
    END             reduce using rule 30 (expression -> IF expression THEN expression ELSE expression .)
    THEN            reduce using rule 30 (expression -> IF expression THEN expression ELSE expression .)
    RPAREN          reduce using rule 30 (expression -> IF expression THEN expression ELSE expression .)
    IN              reduce using rule 30 (expression -> IF expression THEN expression ELSE expression .)
    ELSE            reduce using rule 30 (expression -> IF expression THEN expression ELSE expression .)
    LESS_THEN       shift and go to state 17
    GREATER_THEN    shift and go to state 18
    LESS_EQUALS     shift and go to state 19
    GREATER_EQUALS  shift and go to state 20
    EQUALS          shift and go to state 21
    NOT_EQUALS      shift and go to state 22
    AND             shift and go to state 23
    NAND            shift and go to state 24
    OR              shift and go to state 25
    NOR             shift and go to state 26
    XOR             shift and go to state 27
    EQ              shift and go to state 28
    NEQ             shift and go to state 29
    IMPL            shift and go to state 30
    LPAREN          shift and go to state 31
    PLUS            shift and go to state 32
    MINUS           shift and go to state 33
    TIMES           shift and go to state 34
    DIVIDE          shift and go to state 35

  ! LESS_THEN       [ reduce using rule 30 (expression -> IF expression THEN expression ELSE expression .) ]
  ! GREATER_THEN    [ reduce using rule 30 (expression -> IF expression THEN expression ELSE expression .) ]
  ! LESS_EQUALS     [ reduce using rule 30 (expression -> IF expression THEN expression ELSE expression .) ]
  ! GREATER_EQUALS  [ reduce using rule 30 (expression -> IF expression THEN expression ELSE expression .) ]
  ! EQUALS          [ reduce using rule 30 (expression -> IF expression THEN expression ELSE expression .) ]
  ! NOT_EQUALS      [ reduce using rule 30 (expression -> IF expression THEN expression ELSE expression .) ]
  ! AND             [ reduce using rule 30 (expression -> IF expression THEN expression ELSE expression .) ]
  ! NAND            [ reduce using rule 30 (expression -> IF expression THEN expression ELSE expression .) ]
  ! OR              [ reduce using rule 30 (expression -> IF expression THEN expression ELSE expression .) ]
  ! NOR             [ reduce using rule 30 (expression -> IF expression THEN expression ELSE expression .) ]
  ! XOR             [ reduce using rule 30 (expression -> IF expression THEN expression ELSE expression .) ]
  ! EQ              [ reduce using rule 30 (expression -> IF expression THEN expression ELSE expression .) ]
  ! NEQ             [ reduce using rule 30 (expression -> IF expression THEN expression ELSE expression .) ]
  ! IMPL            [ reduce using rule 30 (expression -> IF expression THEN expression ELSE expression .) ]
  ! LPAREN          [ reduce using rule 30 (expression -> IF expression THEN expression ELSE expression .) ]
  ! PLUS            [ reduce using rule 30 (expression -> IF expression THEN expression ELSE expression .) ]
  ! MINUS           [ reduce using rule 30 (expression -> IF expression THEN expression ELSE expression .) ]
  ! TIMES           [ reduce using rule 30 (expression -> IF expression THEN expression ELSE expression .) ]
  ! DIVIDE          [ reduce using rule 30 (expression -> IF expression THEN expression ELSE expression .) ]


state 93

    (1) expression -> FOR expression SEPARATOR expression SEPARATOR expression DO . expression
    (1) expression -> . FOR expression SEPARATOR expression SEPARATOR expression DO expression
    (2) expression -> . LOCAL IDENTIFIER ASSIGN expression IN expression
    (3) expression -> . WHILE expression DO expression
    (4) expression -> . expression LESS_THEN expression
    (5) expression -> . expression GREATER_THEN expression
    (6) expression -> . expression LESS_EQUALS expression
    (7) expression -> . expression GREATER_EQUALS expression
    (8) expression -> . expression EQUALS expression
    (9) expression -> . expression NOT_EQUALS expression
    (10) expression -> . LOCK IDENTIFIER IN expression
    (11) expression -> . LOOP expression DO expression
    (12) expression -> . BEGIN body END
    (13) expression -> . IDENTIFIER
    (14) expression -> . NOT expression
    (15) expression -> . IF expression THEN expression
    (16) expression -> . IDENTIFIER ARROW expression
    (19) expression -> . NUMBER
    (20) expression -> . FLOAT
    (21) expression -> . IDENTIFIER ASSIGN expression
    (22) expression -> . expression AND expression
    (23) expression -> . expression NAND expression
    (24) expression -> . expression OR expression
    (25) expression -> . expression NOR expression
    (26) expression -> . expression XOR expression
    (27) expression -> . expression EQ expression
    (28) expression -> . expression NEQ expression
    (29) expression -> . expression IMPL expression
    (30) expression -> . IF expression THEN expression ELSE expression
    (31) expression -> . expression LPAREN expression RPAREN
    (32) expression -> . MINUS expression
    (33) expression -> . expression PLUS expression
    (34) expression -> . expression MINUS expression
    (35) expression -> . expression TIMES expression
    (36) expression -> . expression DIVIDE expression
    (37) expression -> . TRUE
    (38) expression -> . FALSE
    (39) expression -> . LPAREN expression RPAREN

    FOR             shift and go to state 2
    LOCAL           shift and go to state 3
    WHILE           shift and go to state 5
    LOCK            shift and go to state 6
    LOOP            shift and go to state 7
    BEGIN           shift and go to state 8
    IDENTIFIER      shift and go to state 4
    NOT             shift and go to state 9
    IF              shift and go to state 10
    NUMBER          shift and go to state 11
    FLOAT           shift and go to state 12
    MINUS           shift and go to state 14
    TRUE            shift and go to state 15
    FALSE           shift and go to state 16
    LPAREN          shift and go to state 13

    expression                     shift and go to state 94

state 94

    (1) expression -> FOR expression SEPARATOR expression SEPARATOR expression DO expression .
    (4) expression -> expression . LESS_THEN expression
    (5) expression -> expression . GREATER_THEN expression
    (6) expression -> expression . LESS_EQUALS expression
    (7) expression -> expression . GREATER_EQUALS expression
    (8) expression -> expression . EQUALS expression
    (9) expression -> expression . NOT_EQUALS expression
    (22) expression -> expression . AND expression
    (23) expression -> expression . NAND expression
    (24) expression -> expression . OR expression
    (25) expression -> expression . NOR expression
    (26) expression -> expression . XOR expression
    (27) expression -> expression . EQ expression
    (28) expression -> expression . NEQ expression
    (29) expression -> expression . IMPL expression
    (31) expression -> expression . LPAREN expression RPAREN
    (33) expression -> expression . PLUS expression
    (34) expression -> expression . MINUS expression
    (35) expression -> expression . TIMES expression
    (36) expression -> expression . DIVIDE expression

    $end            reduce using rule 1 (expression -> FOR expression SEPARATOR expression SEPARATOR expression DO expression .)
    SEPARATOR       reduce using rule 1 (expression -> FOR expression SEPARATOR expression SEPARATOR expression DO expression .)
    DO              reduce using rule 1 (expression -> FOR expression SEPARATOR expression SEPARATOR expression DO expression .)
    END             reduce using rule 1 (expression -> FOR expression SEPARATOR expression SEPARATOR expression DO expression .)
    THEN            reduce using rule 1 (expression -> FOR expression SEPARATOR expression SEPARATOR expression DO expression .)
    RPAREN          reduce using rule 1 (expression -> FOR expression SEPARATOR expression SEPARATOR expression DO expression .)
    IN              reduce using rule 1 (expression -> FOR expression SEPARATOR expression SEPARATOR expression DO expression .)
    ELSE            reduce using rule 1 (expression -> FOR expression SEPARATOR expression SEPARATOR expression DO expression .)
    LESS_THEN       shift and go to state 17
    GREATER_THEN    shift and go to state 18
    LESS_EQUALS     shift and go to state 19
    GREATER_EQUALS  shift and go to state 20
    EQUALS          shift and go to state 21
    NOT_EQUALS      shift and go to state 22
    AND             shift and go to state 23
    NAND            shift and go to state 24
    OR              shift and go to state 25
    NOR             shift and go to state 26
    XOR             shift and go to state 27
    EQ              shift and go to state 28
    NEQ             shift and go to state 29
    IMPL            shift and go to state 30
    LPAREN          shift and go to state 31
    PLUS            shift and go to state 32
    MINUS           shift and go to state 33
    TIMES           shift and go to state 34
    DIVIDE          shift and go to state 35

  ! LESS_THEN       [ reduce using rule 1 (expression -> FOR expression SEPARATOR expression SEPARATOR expression DO expression .) ]
  ! GREATER_THEN    [ reduce using rule 1 (expression -> FOR expression SEPARATOR expression SEPARATOR expression DO expression .) ]
  ! LESS_EQUALS     [ reduce using rule 1 (expression -> FOR expression SEPARATOR expression SEPARATOR expression DO expression .) ]
  ! GREATER_EQUALS  [ reduce using rule 1 (expression -> FOR expression SEPARATOR expression SEPARATOR expression DO expression .) ]
  ! EQUALS          [ reduce using rule 1 (expression -> FOR expression SEPARATOR expression SEPARATOR expression DO expression .) ]
  ! NOT_EQUALS      [ reduce using rule 1 (expression -> FOR expression SEPARATOR expression SEPARATOR expression DO expression .) ]
  ! AND             [ reduce using rule 1 (expression -> FOR expression SEPARATOR expression SEPARATOR expression DO expression .) ]
  ! NAND            [ reduce using rule 1 (expression -> FOR expression SEPARATOR expression SEPARATOR expression DO expression .) ]
  ! OR              [ reduce using rule 1 (expression -> FOR expression SEPARATOR expression SEPARATOR expression DO expression .) ]
  ! NOR             [ reduce using rule 1 (expression -> FOR expression SEPARATOR expression SEPARATOR expression DO expression .) ]
  ! XOR             [ reduce using rule 1 (expression -> FOR expression SEPARATOR expression SEPARATOR expression DO expression .) ]
  ! EQ              [ reduce using rule 1 (expression -> FOR expression SEPARATOR expression SEPARATOR expression DO expression .) ]
  ! NEQ             [ reduce using rule 1 (expression -> FOR expression SEPARATOR expression SEPARATOR expression DO expression .) ]
  ! IMPL            [ reduce using rule 1 (expression -> FOR expression SEPARATOR expression SEPARATOR expression DO expression .) ]
  ! LPAREN          [ reduce using rule 1 (expression -> FOR expression SEPARATOR expression SEPARATOR expression DO expression .) ]
  ! PLUS            [ reduce using rule 1 (expression -> FOR expression SEPARATOR expression SEPARATOR expression DO expression .) ]
  ! MINUS           [ reduce using rule 1 (expression -> FOR expression SEPARATOR expression SEPARATOR expression DO expression .) ]
  ! TIMES           [ reduce using rule 1 (expression -> FOR expression SEPARATOR expression SEPARATOR expression DO expression .) ]
  ! DIVIDE          [ reduce using rule 1 (expression -> FOR expression SEPARATOR expression SEPARATOR expression DO expression .) ]

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for LESS_THEN in state 70 resolved as shift
WARNING: shift/reduce conflict for GREATER_THEN in state 70 resolved as shift
WARNING: shift/reduce conflict for LESS_EQUALS in state 70 resolved as shift
WARNING: shift/reduce conflict for GREATER_EQUALS in state 70 resolved as shift
WARNING: shift/reduce conflict for EQUALS in state 70 resolved as shift
WARNING: shift/reduce conflict for NOT_EQUALS in state 70 resolved as shift
WARNING: shift/reduce conflict for AND in state 70 resolved as shift
WARNING: shift/reduce conflict for NAND in state 70 resolved as shift
WARNING: shift/reduce conflict for OR in state 70 resolved as shift
WARNING: shift/reduce conflict for NOR in state 70 resolved as shift
WARNING: shift/reduce conflict for XOR in state 70 resolved as shift
WARNING: shift/reduce conflict for EQ in state 70 resolved as shift
WARNING: shift/reduce conflict for NEQ in state 70 resolved as shift
WARNING: shift/reduce conflict for IMPL in state 70 resolved as shift
WARNING: shift/reduce conflict for LPAREN in state 70 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 70 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 70 resolved as shift
WARNING: shift/reduce conflict for TIMES in state 70 resolved as shift
WARNING: shift/reduce conflict for DIVIDE in state 70 resolved as shift
