
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'expressionleftEXTENDleftSTRUCTleftCOMMAleftARROWleftINleftTHENleftELSEleftDOrightASSIGNleftORNORleftANDNANDleftXORNEQEQIMPLleftEQUALSNOT_EQUALSleftLESS_THENGREATER_THENLESS_EQUALSGREATER_EQUALSleftPLUSMINUSleftTIMESDIVIDErightUMINUSrightLPARENleftSEPARATORleftDOTAND ARRAY ARROW ASSIGN BEGIN CHAR COMMA DIVIDE DO DOT ELSE END EQ EQUALS EXTEND FALSE FLOAT FOR GREATER_EQUALS GREATER_THEN IDENTIFIER IF IMPL IN LAMBDA LBRACKET LESS_EQUALS LESS_THEN LIST LOCAL LOCK LOOP LPAREN MINUS NAND NEQ NOR NOT NOT_EQUALS NUMBER OR PLUS PROC RBRACKET RPAREN SEPARATOR STRING STRUCT THEN TIMES TRUE WHILE XORexpression : FOR expression SEPARATOR expression SEPARATOR expression DO expressionexpression : LOCAL IDENTIFIER ASSIGN expression IN expressionexpression : PROC LPAREN identifier_list RPAREN identifier_list ARROW expressionexpression : WHILE expression DO expressionexpression : expression LESS_THEN expression\n                  | expression GREATER_THEN expression\n                  | expression LESS_EQUALS expression\n                  | expression GREATER_EQUALS expression\n                  | expression EQUALS expression\n                  | expression NOT_EQUALS expressionexpression : NUMBER\n                  | FLOAT\n                  | CHAR\n                  | STRINGidentifier_list : IDENTIFIER\n                       | IDENTIFIER COMMA identifier_listexpression : LOOP expression DO expressionexpression : PROC LPAREN RPAREN identifier_list ARROW expressionexpression : BEGIN body ENDexpression : IDENTIFIERexpression : NOT expression %prec UMINUSexpression : IF expression THEN expressionexpression_list : expression\n                       | expression COMMA expression_listexpression : PROC LPAREN identifier_list RPAREN ARROW expressionbody : expression\n            | body SEPARATOR expressionexpression : MINUS expression %prec UMINUSexpression : IDENTIFIER ASSIGN expressionexpression : expression AND expression\n                  | expression NAND expression\n                  | expression OR expression\n                  | expression NOR expression\n                  | expression XOR expression\n                  | expression EQ expression\n                  | expression NEQ expression\n                  | expression IMPL expressionexpression : IF expression THEN expression ELSE expressionexpression : LOCK identifier_list IN expressiondots : DOT\n            | dots DOTexpression : LIST LPAREN expression_list RPARENexpression : LAMBDA identifier_list ARROW expressionexpression : PROC LPAREN RPAREN ARROW expressionexpression : expression PLUS expression\n                  | expression MINUS expression\n                  | expression TIMES expression\n                  | expression DIVIDE expressionexpression : LIST LPAREN RPARENexpression : LAMBDA ARROW expressionstruct_body : IDENTIFIER ASSIGN expression\n                   | struct_body SEPARATOR IDENTIFIER ASSIGN expressionexpression : LBRACKET expression_list RBRACKET\n                  | ARRAY LPAREN expression_list RPARENexpression : expression LPAREN expression_list RPARENexpression : LPAREN expression RPARENexpression : TRUE\n                  | FALSEexpression : STRUCT BEGIN struct_body ENDexpression : expression LPAREN RPARENexpression : LBRACKET RBRACKET\n                  | ARRAY LPAREN RPARENexpression : expression dots IDENTIFIERexpression : dots IDENTIFIERexpression : IDENTIFIER LBRACKET expression RBRACKETexpression : EXTEND expression BEGIN struct_body END'
    
_lr_action_items = {'FOR':([0,2,6,7,12,13,14,15,16,20,26,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,50,51,63,65,69,95,96,102,103,105,106,107,111,114,126,139,141,142,144,145,147,153,157,158,],[2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,]),'LOCAL':([0,2,6,7,12,13,14,15,16,20,26,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,50,51,63,65,69,95,96,102,103,105,106,107,111,114,126,139,141,142,144,145,147,153,157,158,],[3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,]),'PROC':([0,2,6,7,12,13,14,15,16,20,26,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,50,51,63,65,69,95,96,102,103,105,106,107,111,114,126,139,141,142,144,145,147,153,157,158,],[5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,]),'WHILE':([0,2,6,7,12,13,14,15,16,20,26,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,50,51,63,65,69,95,96,102,103,105,106,107,111,114,126,139,141,142,144,145,147,153,157,158,],[7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,]),'NUMBER':([0,2,6,7,12,13,14,15,16,20,26,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,50,51,63,65,69,95,96,102,103,105,106,107,111,114,126,139,141,142,144,145,147,153,157,158,],[8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,]),'FLOAT':([0,2,6,7,12,13,14,15,16,20,26,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,50,51,63,65,69,95,96,102,103,105,106,107,111,114,126,139,141,142,144,145,147,153,157,158,],[9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,]),'CHAR':([0,2,6,7,12,13,14,15,16,20,26,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,50,51,63,65,69,95,96,102,103,105,106,107,111,114,126,139,141,142,144,145,147,153,157,158,],[10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,]),'STRING':([0,2,6,7,12,13,14,15,16,20,26,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,50,51,63,65,69,95,96,102,103,105,106,107,111,114,126,139,141,142,144,145,147,153,157,158,],[11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,]),'LOOP':([0,2,6,7,12,13,14,15,16,20,26,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,50,51,63,65,69,95,96,102,103,105,106,107,111,114,126,139,141,142,144,145,147,153,157,158,],[12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,]),'BEGIN':([0,2,4,6,7,8,9,10,11,12,13,14,15,16,20,22,23,24,26,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,50,51,58,60,63,65,67,69,71,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,93,94,95,96,97,101,102,103,104,105,106,107,110,111,112,113,114,116,120,123,126,127,128,130,131,133,134,136,137,139,141,142,144,145,146,147,150,152,153,154,155,156,157,158,159,161,],[13,13,-20,13,13,-11,-12,-13,-14,13,13,13,13,13,13,-57,-58,70,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,-21,-28,13,13,-61,13,-64,119,-5,-6,-7,-8,-9,-10,-30,-31,-32,-33,-34,-35,-36,-37,-45,-46,-47,-48,-60,-63,13,13,-29,-56,13,13,-19,13,13,13,-49,13,-50,-53,13,-62,-55,-65,13,-4,-17,-22,-39,-42,-43,-54,-59,13,13,13,13,13,-44,13,-66,-2,13,-25,-18,-38,13,13,-3,-1,]),'IDENTIFIER':([0,2,3,6,7,12,13,14,15,16,17,19,20,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,50,51,52,63,65,69,70,72,95,96,100,102,103,105,106,107,108,111,114,119,124,126,138,139,141,142,144,145,147,153,157,158,],[4,4,49,4,4,4,4,4,4,4,62,62,4,71,4,-40,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,94,4,4,62,4,4,4,118,-41,4,4,62,4,4,4,4,4,62,4,4,118,62,4,148,4,4,4,4,4,4,4,4,4,]),'NOT':([0,2,6,7,12,13,14,15,16,20,26,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,50,51,63,65,69,95,96,102,103,105,106,107,111,114,126,139,141,142,144,145,147,153,157,158,],[14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,]),'IF':([0,2,6,7,12,13,14,15,16,20,26,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,50,51,63,65,69,95,96,102,103,105,106,107,111,114,126,139,141,142,144,145,147,153,157,158,],[15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,]),'MINUS':([0,1,2,4,6,7,8,9,10,11,12,13,14,15,16,20,22,23,26,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,48,50,51,53,54,55,57,58,59,60,63,65,67,68,69,71,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,93,94,95,96,97,98,101,102,103,104,105,106,107,110,111,112,113,114,116,120,121,122,123,126,127,128,129,130,131,133,134,136,137,139,141,142,144,145,146,147,149,150,151,152,153,154,155,156,157,158,159,160,161,],[16,43,16,-20,16,16,-11,-12,-13,-14,16,16,16,16,16,16,-57,-58,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,43,16,16,43,43,43,43,-21,43,-28,16,16,-61,43,16,-64,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,-45,-46,-47,-48,-60,-63,16,16,43,43,-56,16,16,-19,16,16,16,-49,16,43,-53,16,-62,-55,43,43,-65,16,43,43,43,43,43,-42,43,-54,-59,16,16,16,16,16,43,16,43,-66,43,43,16,43,43,43,16,16,43,43,43,]),'LOCK':([0,2,6,7,12,13,14,15,16,20,26,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,50,51,63,65,69,95,96,102,103,105,106,107,111,114,126,139,141,142,144,145,147,153,157,158,],[17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,]),'LIST':([0,2,6,7,12,13,14,15,16,20,26,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,50,51,63,65,69,95,96,102,103,105,106,107,111,114,126,139,141,142,144,145,147,153,157,158,],[18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,]),'LAMBDA':([0,2,6,7,12,13,14,15,16,20,26,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,50,51,63,65,69,95,96,102,103,105,106,107,111,114,126,139,141,142,144,145,147,153,157,158,],[19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,]),'LBRACKET':([0,2,4,6,7,12,13,14,15,16,20,26,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,50,51,63,65,69,95,96,102,103,105,106,107,111,114,126,139,141,142,144,145,147,153,157,158,],[20,20,51,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,]),'ARRAY':([0,2,6,7,12,13,14,15,16,20,26,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,50,51,63,65,69,95,96,102,103,105,106,107,111,114,126,139,141,142,144,145,147,153,157,158,],[21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,]),'LPAREN':([0,1,2,4,5,6,7,8,9,10,11,12,13,14,15,16,18,20,21,22,23,26,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,48,50,51,53,54,55,57,58,59,60,63,65,67,68,69,71,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,93,94,95,96,97,98,101,102,103,104,105,106,107,110,111,112,113,114,116,120,121,122,123,126,127,128,129,130,131,133,134,136,137,139,141,142,144,145,146,147,149,150,151,152,153,154,155,156,157,158,159,160,161,],[6,46,6,-20,52,6,6,-11,-12,-13,-14,6,6,6,6,6,63,6,69,-57,-58,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,46,6,6,46,46,46,46,46,46,46,6,6,-61,46,6,-64,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,-60,-63,6,6,46,46,-56,6,6,-19,6,6,6,-49,6,46,-53,6,-62,-55,46,46,-65,6,46,46,46,46,46,-42,46,-54,-59,6,6,6,6,6,46,6,46,-66,46,46,6,46,46,46,6,6,46,46,46,]),'TRUE':([0,2,6,7,12,13,14,15,16,20,26,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,50,51,63,65,69,95,96,102,103,105,106,107,111,114,126,139,141,142,144,145,147,153,157,158,],[22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,]),'FALSE':([0,2,6,7,12,13,14,15,16,20,26,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,50,51,63,65,69,95,96,102,103,105,106,107,111,114,126,139,141,142,144,145,147,153,157,158,],[23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,]),'STRUCT':([0,2,6,7,12,13,14,15,16,20,26,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,50,51,63,65,69,95,96,102,103,105,106,107,111,114,126,139,141,142,144,145,147,153,157,158,],[24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,]),'EXTEND':([0,2,6,7,12,13,14,15,16,20,26,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,50,51,63,65,69,95,96,102,103,105,106,107,111,114,126,139,141,142,144,145,147,153,157,158,],[26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,]),'DOT':([0,1,2,4,6,7,8,9,10,11,12,13,14,15,16,20,22,23,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,50,51,53,54,55,57,58,59,60,63,65,67,68,69,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,93,94,95,96,97,98,101,102,103,104,105,106,107,110,111,112,113,114,116,120,121,122,123,126,127,128,129,130,131,133,134,136,137,139,141,142,144,145,146,147,149,150,151,152,153,154,155,156,157,158,159,160,161,],[27,27,27,-20,27,27,-11,-12,-13,-14,27,27,27,27,27,27,-57,-58,72,27,-40,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,72,27,27,27,27,27,27,27,27,27,27,27,27,-61,27,27,-64,-41,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,-60,-63,27,27,27,27,-56,27,27,-19,27,27,27,-49,27,27,-53,27,-62,-55,27,27,-65,27,27,27,27,27,27,-42,27,-54,-59,27,27,27,27,27,27,27,27,-66,27,27,27,27,27,27,27,27,27,27,27,]),'$end':([1,4,8,9,10,11,22,23,58,60,67,71,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,93,94,97,101,104,110,112,113,116,120,123,127,128,130,131,133,134,136,137,146,150,152,154,155,156,159,161,],[0,-20,-11,-12,-13,-14,-57,-58,-21,-28,-61,-64,-5,-6,-7,-8,-9,-10,-30,-31,-32,-33,-34,-35,-36,-37,-45,-46,-47,-48,-60,-63,-29,-56,-19,-49,-50,-53,-62,-55,-65,-4,-17,-22,-39,-42,-43,-54,-59,-44,-66,-2,-25,-18,-38,-3,-1,]),'LESS_THEN':([1,4,8,9,10,11,22,23,48,53,54,55,57,58,59,60,67,68,71,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,93,94,97,98,101,104,110,112,113,116,120,121,122,123,127,128,129,130,131,133,134,136,137,146,149,150,151,152,154,155,156,159,160,161,],[28,-20,-11,-12,-13,-14,-57,-58,28,28,28,28,28,-21,28,-28,-61,28,-64,28,-5,-6,-7,-8,28,28,28,28,28,28,28,28,28,28,-45,-46,-47,-48,-60,-63,28,28,-56,-19,-49,28,-53,-62,-55,28,28,-65,28,28,28,28,28,-42,28,-54,-59,28,28,-66,28,28,28,28,28,28,28,28,]),'GREATER_THEN':([1,4,8,9,10,11,22,23,48,53,54,55,57,58,59,60,67,68,71,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,93,94,97,98,101,104,110,112,113,116,120,121,122,123,127,128,129,130,131,133,134,136,137,146,149,150,151,152,154,155,156,159,160,161,],[29,-20,-11,-12,-13,-14,-57,-58,29,29,29,29,29,-21,29,-28,-61,29,-64,29,-5,-6,-7,-8,29,29,29,29,29,29,29,29,29,29,-45,-46,-47,-48,-60,-63,29,29,-56,-19,-49,29,-53,-62,-55,29,29,-65,29,29,29,29,29,-42,29,-54,-59,29,29,-66,29,29,29,29,29,29,29,29,]),'LESS_EQUALS':([1,4,8,9,10,11,22,23,48,53,54,55,57,58,59,60,67,68,71,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,93,94,97,98,101,104,110,112,113,116,120,121,122,123,127,128,129,130,131,133,134,136,137,146,149,150,151,152,154,155,156,159,160,161,],[30,-20,-11,-12,-13,-14,-57,-58,30,30,30,30,30,-21,30,-28,-61,30,-64,30,-5,-6,-7,-8,30,30,30,30,30,30,30,30,30,30,-45,-46,-47,-48,-60,-63,30,30,-56,-19,-49,30,-53,-62,-55,30,30,-65,30,30,30,30,30,-42,30,-54,-59,30,30,-66,30,30,30,30,30,30,30,30,]),'GREATER_EQUALS':([1,4,8,9,10,11,22,23,48,53,54,55,57,58,59,60,67,68,71,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,93,94,97,98,101,104,110,112,113,116,120,121,122,123,127,128,129,130,131,133,134,136,137,146,149,150,151,152,154,155,156,159,160,161,],[31,-20,-11,-12,-13,-14,-57,-58,31,31,31,31,31,-21,31,-28,-61,31,-64,31,-5,-6,-7,-8,31,31,31,31,31,31,31,31,31,31,-45,-46,-47,-48,-60,-63,31,31,-56,-19,-49,31,-53,-62,-55,31,31,-65,31,31,31,31,31,-42,31,-54,-59,31,31,-66,31,31,31,31,31,31,31,31,]),'EQUALS':([1,4,8,9,10,11,22,23,48,53,54,55,57,58,59,60,67,68,71,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,93,94,97,98,101,104,110,112,113,116,120,121,122,123,127,128,129,130,131,133,134,136,137,146,149,150,151,152,154,155,156,159,160,161,],[32,-20,-11,-12,-13,-14,-57,-58,32,32,32,32,32,-21,32,-28,-61,32,-64,32,-5,-6,-7,-8,-9,-10,32,32,32,32,32,32,32,32,-45,-46,-47,-48,-60,-63,32,32,-56,-19,-49,32,-53,-62,-55,32,32,-65,32,32,32,32,32,-42,32,-54,-59,32,32,-66,32,32,32,32,32,32,32,32,]),'NOT_EQUALS':([1,4,8,9,10,11,22,23,48,53,54,55,57,58,59,60,67,68,71,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,93,94,97,98,101,104,110,112,113,116,120,121,122,123,127,128,129,130,131,133,134,136,137,146,149,150,151,152,154,155,156,159,160,161,],[33,-20,-11,-12,-13,-14,-57,-58,33,33,33,33,33,-21,33,-28,-61,33,-64,33,-5,-6,-7,-8,-9,-10,33,33,33,33,33,33,33,33,-45,-46,-47,-48,-60,-63,33,33,-56,-19,-49,33,-53,-62,-55,33,33,-65,33,33,33,33,33,-42,33,-54,-59,33,33,-66,33,33,33,33,33,33,33,33,]),'AND':([1,4,8,9,10,11,22,23,48,53,54,55,57,58,59,60,67,68,71,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,93,94,97,98,101,104,110,112,113,116,120,121,122,123,127,128,129,130,131,133,134,136,137,146,149,150,151,152,154,155,156,159,160,161,],[34,-20,-11,-12,-13,-14,-57,-58,34,34,34,34,34,-21,34,-28,-61,34,-64,34,-5,-6,-7,-8,-9,-10,-30,-31,34,34,-34,-35,-36,-37,-45,-46,-47,-48,-60,-63,34,34,-56,-19,-49,34,-53,-62,-55,34,34,-65,34,34,34,34,34,-42,34,-54,-59,34,34,-66,34,34,34,34,34,34,34,34,]),'NAND':([1,4,8,9,10,11,22,23,48,53,54,55,57,58,59,60,67,68,71,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,93,94,97,98,101,104,110,112,113,116,120,121,122,123,127,128,129,130,131,133,134,136,137,146,149,150,151,152,154,155,156,159,160,161,],[35,-20,-11,-12,-13,-14,-57,-58,35,35,35,35,35,-21,35,-28,-61,35,-64,35,-5,-6,-7,-8,-9,-10,-30,-31,35,35,-34,-35,-36,-37,-45,-46,-47,-48,-60,-63,35,35,-56,-19,-49,35,-53,-62,-55,35,35,-65,35,35,35,35,35,-42,35,-54,-59,35,35,-66,35,35,35,35,35,35,35,35,]),'OR':([1,4,8,9,10,11,22,23,48,53,54,55,57,58,59,60,67,68,71,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,93,94,97,98,101,104,110,112,113,116,120,121,122,123,127,128,129,130,131,133,134,136,137,146,149,150,151,152,154,155,156,159,160,161,],[36,-20,-11,-12,-13,-14,-57,-58,36,36,36,36,36,-21,36,-28,-61,36,-64,36,-5,-6,-7,-8,-9,-10,-30,-31,-32,-33,-34,-35,-36,-37,-45,-46,-47,-48,-60,-63,36,36,-56,-19,-49,36,-53,-62,-55,36,36,-65,36,36,36,36,36,-42,36,-54,-59,36,36,-66,36,36,36,36,36,36,36,36,]),'NOR':([1,4,8,9,10,11,22,23,48,53,54,55,57,58,59,60,67,68,71,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,93,94,97,98,101,104,110,112,113,116,120,121,122,123,127,128,129,130,131,133,134,136,137,146,149,150,151,152,154,155,156,159,160,161,],[37,-20,-11,-12,-13,-14,-57,-58,37,37,37,37,37,-21,37,-28,-61,37,-64,37,-5,-6,-7,-8,-9,-10,-30,-31,-32,-33,-34,-35,-36,-37,-45,-46,-47,-48,-60,-63,37,37,-56,-19,-49,37,-53,-62,-55,37,37,-65,37,37,37,37,37,-42,37,-54,-59,37,37,-66,37,37,37,37,37,37,37,37,]),'XOR':([1,4,8,9,10,11,22,23,48,53,54,55,57,58,59,60,67,68,71,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,93,94,97,98,101,104,110,112,113,116,120,121,122,123,127,128,129,130,131,133,134,136,137,146,149,150,151,152,154,155,156,159,160,161,],[38,-20,-11,-12,-13,-14,-57,-58,38,38,38,38,38,-21,38,-28,-61,38,-64,38,-5,-6,-7,-8,-9,-10,38,38,38,38,-34,-35,-36,-37,-45,-46,-47,-48,-60,-63,38,38,-56,-19,-49,38,-53,-62,-55,38,38,-65,38,38,38,38,38,-42,38,-54,-59,38,38,-66,38,38,38,38,38,38,38,38,]),'EQ':([1,4,8,9,10,11,22,23,48,53,54,55,57,58,59,60,67,68,71,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,93,94,97,98,101,104,110,112,113,116,120,121,122,123,127,128,129,130,131,133,134,136,137,146,149,150,151,152,154,155,156,159,160,161,],[39,-20,-11,-12,-13,-14,-57,-58,39,39,39,39,39,-21,39,-28,-61,39,-64,39,-5,-6,-7,-8,-9,-10,39,39,39,39,-34,-35,-36,-37,-45,-46,-47,-48,-60,-63,39,39,-56,-19,-49,39,-53,-62,-55,39,39,-65,39,39,39,39,39,-42,39,-54,-59,39,39,-66,39,39,39,39,39,39,39,39,]),'NEQ':([1,4,8,9,10,11,22,23,48,53,54,55,57,58,59,60,67,68,71,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,93,94,97,98,101,104,110,112,113,116,120,121,122,123,127,128,129,130,131,133,134,136,137,146,149,150,151,152,154,155,156,159,160,161,],[40,-20,-11,-12,-13,-14,-57,-58,40,40,40,40,40,-21,40,-28,-61,40,-64,40,-5,-6,-7,-8,-9,-10,40,40,40,40,-34,-35,-36,-37,-45,-46,-47,-48,-60,-63,40,40,-56,-19,-49,40,-53,-62,-55,40,40,-65,40,40,40,40,40,-42,40,-54,-59,40,40,-66,40,40,40,40,40,40,40,40,]),'IMPL':([1,4,8,9,10,11,22,23,48,53,54,55,57,58,59,60,67,68,71,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,93,94,97,98,101,104,110,112,113,116,120,121,122,123,127,128,129,130,131,133,134,136,137,146,149,150,151,152,154,155,156,159,160,161,],[41,-20,-11,-12,-13,-14,-57,-58,41,41,41,41,41,-21,41,-28,-61,41,-64,41,-5,-6,-7,-8,-9,-10,41,41,41,41,-34,-35,-36,-37,-45,-46,-47,-48,-60,-63,41,41,-56,-19,-49,41,-53,-62,-55,41,41,-65,41,41,41,41,41,-42,41,-54,-59,41,41,-66,41,41,41,41,41,41,41,41,]),'PLUS':([1,4,8,9,10,11,22,23,48,53,54,55,57,58,59,60,67,68,71,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,93,94,97,98,101,104,110,112,113,116,120,121,122,123,127,128,129,130,131,133,134,136,137,146,149,150,151,152,154,155,156,159,160,161,],[42,-20,-11,-12,-13,-14,-57,-58,42,42,42,42,42,-21,42,-28,-61,42,-64,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,-45,-46,-47,-48,-60,-63,42,42,-56,-19,-49,42,-53,-62,-55,42,42,-65,42,42,42,42,42,-42,42,-54,-59,42,42,-66,42,42,42,42,42,42,42,42,]),'TIMES':([1,4,8,9,10,11,22,23,48,53,54,55,57,58,59,60,67,68,71,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,93,94,97,98,101,104,110,112,113,116,120,121,122,123,127,128,129,130,131,133,134,136,137,146,149,150,151,152,154,155,156,159,160,161,],[44,-20,-11,-12,-13,-14,-57,-58,44,44,44,44,44,-21,44,-28,-61,44,-64,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,-47,-48,-60,-63,44,44,-56,-19,-49,44,-53,-62,-55,44,44,-65,44,44,44,44,44,-42,44,-54,-59,44,44,-66,44,44,44,44,44,44,44,44,]),'DIVIDE':([1,4,8,9,10,11,22,23,48,53,54,55,57,58,59,60,67,68,71,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,93,94,97,98,101,104,110,112,113,116,120,121,122,123,127,128,129,130,131,133,134,136,137,146,149,150,151,152,154,155,156,159,160,161,],[45,-20,-11,-12,-13,-14,-57,-58,45,45,45,45,45,-21,45,-28,-61,45,-64,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,-47,-48,-60,-63,45,45,-56,-19,-49,45,-53,-62,-55,45,45,-65,45,45,45,45,45,-42,45,-54,-59,45,45,-66,45,45,45,45,45,45,45,45,]),'SEPARATOR':([4,8,9,10,11,22,23,48,56,57,58,60,67,71,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,93,94,97,101,104,110,112,113,116,117,120,121,123,127,128,129,130,131,133,134,136,137,140,146,149,150,152,154,155,156,159,160,161,],[-20,-11,-12,-13,-14,-57,-58,95,105,-26,-21,-28,-61,-64,-5,-6,-7,-8,-9,-10,-30,-31,-32,-33,-34,-35,-36,-37,-45,-46,-47,-48,-60,-63,-29,-56,-19,-49,-50,-53,-62,138,-55,141,-65,-4,-17,-27,-22,-39,-42,-43,-54,-59,138,-44,-51,-66,-2,-25,-18,-38,-3,-52,-1,]),'RPAREN':([4,8,9,10,11,22,23,46,52,53,58,60,62,63,67,68,69,71,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,97,99,101,104,109,110,112,113,115,116,120,123,127,128,130,131,132,133,134,135,136,137,146,150,152,154,155,156,159,161,],[-20,-11,-12,-13,-14,-57,-58,93,100,101,-21,-28,-15,110,-61,-23,116,-64,-5,-6,-7,-8,-9,-10,-30,-31,-32,-33,-34,-35,-36,-37,-45,-46,-47,-48,120,-60,-63,-29,124,-56,-19,133,-49,-50,-53,136,-62,-55,-65,-4,-17,-22,-39,-16,-42,-43,-24,-54,-59,-44,-66,-2,-25,-18,-38,-3,-1,]),'DO':([4,8,9,10,11,22,23,54,55,58,60,67,71,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,93,94,97,101,104,110,112,113,116,120,123,127,128,130,131,133,134,136,137,146,150,151,152,154,155,156,159,161,],[-20,-11,-12,-13,-14,-57,-58,102,103,-21,-28,-61,-64,-5,-6,-7,-8,-9,-10,-30,-31,-32,-33,-34,-35,-36,-37,-45,-46,-47,-48,-60,-63,-29,-56,-19,-49,-50,-53,-62,-55,-65,-4,-17,-22,-39,-42,-43,-54,-59,-44,-66,158,-2,-25,-18,-38,-3,-1,]),'END':([4,8,9,10,11,22,23,56,57,58,60,67,71,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,93,94,97,101,104,110,112,113,116,117,120,123,127,128,129,130,131,133,134,136,137,140,146,149,150,152,154,155,156,159,160,161,],[-20,-11,-12,-13,-14,-57,-58,104,-26,-21,-28,-61,-64,-5,-6,-7,-8,-9,-10,-30,-31,-32,-33,-34,-35,-36,-37,-45,-46,-47,-48,-60,-63,-29,-56,-19,-49,-50,-53,-62,137,-55,-65,-4,-17,-27,-22,-39,-42,-43,-54,-59,150,-44,-51,-66,-2,-25,-18,-38,-3,-52,-1,]),'THEN':([4,8,9,10,11,22,23,58,59,60,67,71,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,93,94,97,101,104,110,112,113,116,120,123,127,128,130,131,133,134,136,137,146,150,152,154,155,156,159,161,],[-20,-11,-12,-13,-14,-57,-58,-21,106,-28,-61,-64,-5,-6,-7,-8,-9,-10,-30,-31,-32,-33,-34,-35,-36,-37,-45,-46,-47,-48,-60,-63,-29,-56,-19,-49,-50,-53,-62,-55,-65,-4,-17,-22,-39,-42,-43,-54,-59,-44,-66,-2,-25,-18,-38,-3,-1,]),'COMMA':([4,8,9,10,11,22,23,58,60,62,67,68,71,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,93,94,97,101,104,110,112,113,116,120,123,127,128,130,131,133,134,136,137,146,150,152,154,155,156,159,161,],[-20,-11,-12,-13,-14,-57,-58,-21,-28,108,-61,114,-64,-5,-6,-7,-8,-9,-10,-30,-31,-32,-33,-34,-35,-36,-37,-45,-46,-47,-48,-60,-63,-29,-56,-19,-49,-50,-53,-62,-55,-65,-4,-17,-22,-39,-42,-43,-54,-59,-44,-66,-2,-25,-18,-38,-3,-1,]),'RBRACKET':([4,8,9,10,11,20,22,23,58,60,66,67,68,71,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,93,94,97,98,101,104,110,112,113,116,120,123,127,128,130,131,133,134,135,136,137,146,150,152,154,155,156,159,161,],[-20,-11,-12,-13,-14,67,-57,-58,-21,-28,113,-61,-23,-64,-5,-6,-7,-8,-9,-10,-30,-31,-32,-33,-34,-35,-36,-37,-45,-46,-47,-48,-60,-63,-29,123,-56,-19,-49,-50,-53,-62,-55,-65,-4,-17,-22,-39,-42,-43,-24,-54,-59,-44,-66,-2,-25,-18,-38,-3,-1,]),'IN':([4,8,9,10,11,22,23,58,60,61,62,67,71,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,93,94,97,101,104,110,112,113,116,120,122,123,127,128,130,131,132,133,134,136,137,146,150,152,154,155,156,159,161,],[-20,-11,-12,-13,-14,-57,-58,-21,-28,107,-15,-61,-64,-5,-6,-7,-8,-9,-10,-30,-31,-32,-33,-34,-35,-36,-37,-45,-46,-47,-48,-60,-63,-29,-56,-19,-49,-50,-53,-62,-55,142,-65,-4,-17,-22,-39,-16,-42,-43,-54,-59,-44,-66,-2,-25,-18,-38,-3,-1,]),'ELSE':([4,8,9,10,11,22,23,58,60,67,71,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,93,94,97,101,104,110,112,113,116,120,123,127,128,130,131,133,134,136,137,146,150,152,154,155,156,159,161,],[-20,-11,-12,-13,-14,-57,-58,-21,-28,-61,-64,-5,-6,-7,-8,-9,-10,-30,-31,-32,-33,-34,-35,-36,-37,-45,-46,-47,-48,-60,-63,-29,-56,-19,-49,-50,-53,-62,-55,-65,-4,-17,147,-39,-42,-43,-54,-59,-44,-66,-2,-25,-18,-38,-3,-1,]),'ASSIGN':([4,49,118,148,],[50,96,139,157,]),'ARROW':([19,62,64,100,124,125,132,143,],[65,-15,111,126,144,145,-16,153,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'expression':([0,2,6,7,12,13,14,15,16,20,26,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,50,51,63,65,69,95,96,102,103,105,106,107,111,114,126,139,141,142,144,145,147,153,157,158,],[1,48,53,54,55,57,58,59,60,68,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,68,97,98,68,112,68,121,122,127,128,129,130,131,134,68,146,149,151,152,154,155,156,159,160,161,]),'dots':([0,1,2,6,7,12,13,14,15,16,20,26,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,48,50,51,53,54,55,57,58,59,60,63,65,68,69,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,95,96,97,98,102,103,105,106,107,111,112,114,121,122,126,127,128,129,130,131,134,139,141,142,144,145,146,147,149,151,152,153,154,155,156,157,158,159,160,161,],[25,47,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,47,25,25,47,47,47,47,47,47,47,25,25,47,25,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,25,25,47,47,25,25,25,25,25,25,47,25,47,47,25,47,47,47,47,47,47,25,25,25,25,25,47,25,47,47,47,25,47,47,47,25,25,47,47,47,]),'body':([13,],[56,]),'identifier_list':([17,19,52,100,108,124,],[61,64,99,125,132,143,]),'expression_list':([20,46,63,69,114,],[66,92,109,115,135,]),'struct_body':([70,119,],[117,140,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> expression","S'",1,None,None,None),
  ('expression -> FOR expression SEPARATOR expression SEPARATOR expression DO expression','expression',8,'p_expression_for','for_expr.py',10),
  ('expression -> LOCAL IDENTIFIER ASSIGN expression IN expression','expression',6,'p_expression_local','local_expr.py',10),
  ('expression -> PROC LPAREN identifier_list RPAREN identifier_list ARROW expression','expression',7,'p_expression_nm_proc','proc_expr.py',10),
  ('expression -> WHILE expression DO expression','expression',4,'p_expression_while','while_expr.py',10),
  ('expression -> expression LESS_THEN expression','expression',3,'p_expression_binary_comparison','comparison_expr.py',11),
  ('expression -> expression GREATER_THEN expression','expression',3,'p_expression_binary_comparison','comparison_expr.py',12),
  ('expression -> expression LESS_EQUALS expression','expression',3,'p_expression_binary_comparison','comparison_expr.py',13),
  ('expression -> expression GREATER_EQUALS expression','expression',3,'p_expression_binary_comparison','comparison_expr.py',14),
  ('expression -> expression EQUALS expression','expression',3,'p_expression_binary_comparison','comparison_expr.py',15),
  ('expression -> expression NOT_EQUALS expression','expression',3,'p_expression_binary_comparison','comparison_expr.py',16),
  ('expression -> NUMBER','expression',1,'p_expression_single_value','datatypes.py',14),
  ('expression -> FLOAT','expression',1,'p_expression_single_value','datatypes.py',15),
  ('expression -> CHAR','expression',1,'p_expression_single_value','datatypes.py',16),
  ('expression -> STRING','expression',1,'p_expression_single_value','datatypes.py',17),
  ('identifier_list -> IDENTIFIER','identifier_list',1,'p_identifier_list','lock_expr.py',14),
  ('identifier_list -> IDENTIFIER COMMA identifier_list','identifier_list',3,'p_identifier_list','lock_expr.py',15),
  ('expression -> LOOP expression DO expression','expression',4,'p_expression_loop','loop_expr.py',14),
  ('expression -> PROC LPAREN RPAREN identifier_list ARROW expression','expression',6,'p_expression_0m_proc','proc_expr.py',14),
  ('expression -> BEGIN body END','expression',3,'p_expression_sequences','sequence_expr.py',14),
  ('expression -> IDENTIFIER','expression',1,'p_expression_id','assignment_expr.py',15),
  ('expression -> NOT expression','expression',2,'p_expression_unary_not','boolean_expr.py',15),
  ('expression -> IF expression THEN expression','expression',4,'p_expression_it','ite_expr.py',15),
  ('expression_list -> expression','expression_list',1,'p_expression_list','lambda_expr.py',16),
  ('expression_list -> expression COMMA expression_list','expression_list',3,'p_expression_list','lambda_expr.py',17),
  ('expression -> PROC LPAREN identifier_list RPAREN ARROW expression','expression',6,'p_expression_n0_proc','proc_expr.py',18),
  ('body -> expression','body',1,'p_bodyn','sequence_expr.py',18),
  ('body -> body SEPARATOR expression','body',3,'p_bodyn','sequence_expr.py',19),
  ('expression -> MINUS expression','expression',2,'p_expression_unary_minus','arithmetic_expr.py',19),
  ('expression -> IDENTIFIER ASSIGN expression','expression',3,'p_expression_assign','assignment_expr.py',19),
  ('expression -> expression AND expression','expression',3,'p_expression_binary_boolean','boolean_expr.py',19),
  ('expression -> expression NAND expression','expression',3,'p_expression_binary_boolean','boolean_expr.py',20),
  ('expression -> expression OR expression','expression',3,'p_expression_binary_boolean','boolean_expr.py',21),
  ('expression -> expression NOR expression','expression',3,'p_expression_binary_boolean','boolean_expr.py',22),
  ('expression -> expression XOR expression','expression',3,'p_expression_binary_boolean','boolean_expr.py',23),
  ('expression -> expression EQ expression','expression',3,'p_expression_binary_boolean','boolean_expr.py',24),
  ('expression -> expression NEQ expression','expression',3,'p_expression_binary_boolean','boolean_expr.py',25),
  ('expression -> expression IMPL expression','expression',3,'p_expression_binary_boolean','boolean_expr.py',26),
  ('expression -> IF expression THEN expression ELSE expression','expression',6,'p_expression_ite','ite_expr.py',19),
  ('expression -> LOCK identifier_list IN expression','expression',4,'p_expression_lock','lock_expr.py',19),
  ('dots -> DOT','dots',1,'p_dots','struct_expr.py',20),
  ('dots -> dots DOT','dots',2,'p_dots','struct_expr.py',21),
  ('expression -> LIST LPAREN expression_list RPAREN','expression',4,'p_expression_list_non_empty','datatypes.py',21),
  ('expression -> LAMBDA identifier_list ARROW expression','expression',4,'p_expression_n_lambda','lambda_expr.py',21),
  ('expression -> PROC LPAREN RPAREN ARROW expression','expression',5,'p_expression_00_proc','proc_expr.py',22),
  ('expression -> expression PLUS expression','expression',3,'p_expression_binary_arithmetic','arithmetic_expr.py',23),
  ('expression -> expression MINUS expression','expression',3,'p_expression_binary_arithmetic','arithmetic_expr.py',24),
  ('expression -> expression TIMES expression','expression',3,'p_expression_binary_arithmetic','arithmetic_expr.py',25),
  ('expression -> expression DIVIDE expression','expression',3,'p_expression_binary_arithmetic','arithmetic_expr.py',26),
  ('expression -> LIST LPAREN RPAREN','expression',3,'p_expression_list_empty','datatypes.py',25),
  ('expression -> LAMBDA ARROW expression','expression',3,'p_expression_0_lambda','lambda_expr.py',25),
  ('struct_body -> IDENTIFIER ASSIGN expression','struct_body',3,'p_struct_body','struct_expr.py',25),
  ('struct_body -> struct_body SEPARATOR IDENTIFIER ASSIGN expression','struct_body',5,'p_struct_body','struct_expr.py',26),
  ('expression -> LBRACKET expression_list RBRACKET','expression',3,'p_expression_array_non_empty','datatypes.py',29),
  ('expression -> ARRAY LPAREN expression_list RPAREN','expression',4,'p_expression_array_non_empty','datatypes.py',30),
  ('expression -> expression LPAREN expression_list RPAREN','expression',4,'p_expression_call_n_args','lambda_expr.py',29),
  ('expression -> LPAREN expression RPAREN','expression',3,'p_expression_parenthesis','arithmetic_expr.py',30),
  ('expression -> TRUE','expression',1,'p_expression_boolean_value','boolean_expr.py',30),
  ('expression -> FALSE','expression',1,'p_expression_boolean_value','boolean_expr.py',31),
  ('expression -> STRUCT BEGIN struct_body END','expression',4,'p_expression_struct','struct_expr.py',30),
  ('expression -> expression LPAREN RPAREN','expression',3,'p_expression_call_0_args','lambda_expr.py',33),
  ('expression -> LBRACKET RBRACKET','expression',2,'p_expression_array_empty','datatypes.py',34),
  ('expression -> ARRAY LPAREN RPAREN','expression',3,'p_expression_array_empty','datatypes.py',35),
  ('expression -> expression dots IDENTIFIER','expression',3,'p_expression_struct_member_access','struct_expr.py',34),
  ('expression -> dots IDENTIFIER','expression',2,'p_expression_dots_id','struct_expr.py',38),
  ('expression -> IDENTIFIER LBRACKET expression RBRACKET','expression',4,'p_expression_array_access','datatypes.py',39),
  ('expression -> EXTEND expression BEGIN struct_body END','expression',5,'p_struct_extend_expression','struct_expr.py',42),
]
