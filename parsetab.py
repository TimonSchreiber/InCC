
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'expressionleftCOMMAleftARROWleftINleftTHENleftELSEleftDOrightASSIGNleftORNORleftANDNANDleftXORNEQEQIMPLleftEQUALSNOT_EQUALSleftLESS_THENGREATER_THENLESS_EQUALSGREATER_EQUALSleftPLUSMINUSleftTIMESDIVIDErightUMINUSrightLPARENleftSEPARATORleftEXTENDleftSTRUCTleftDOTAND ARRAY ARROW ASSIGN BEGIN CHAR COMMA DIVIDE DO DOT ELSE END EQ EQUALS EXTEND FALSE FLOAT FOR GREATER_EQUALS GREATER_THEN IDENTIFIER IF IMPL IN LAMBDA LBRACKET LESS_EQUALS LESS_THEN LIST LOCAL LOCK LOOP LPAREN MINUS NAND NEQ NOR NOT NOT_EQUALS NUMBER OR PLUS RBRACKET RPAREN SEPARATOR STRING STRUCT THEN TIMES TRUE WHILE XORexpression : FOR expression SEPARATOR expression SEPARATOR expression DO expressionexpression : LOCAL IDENTIFIER ASSIGN expression IN expressionexpression : WHILE expression DO expressionexpression : expression LESS_THEN expression\n                  | expression GREATER_THEN expression\n                  | expression LESS_EQUALS expression\n                  | expression GREATER_EQUALS expression\n                  | expression EQUALS expression\n                  | expression NOT_EQUALS expressionexpression : NUMBER\n                  | FLOAT\n                  | CHAR\n                  | STRINGexpression : LOCK IDENTIFIER IN expressionexpression : LOOP expression DO expressionexpression : BEGIN body ENDexpression : IDENTIFIERexpression : NOT expression %prec UMINUSexpression : IF expression THEN expressionexpression_list : expression\n                       | expression COMMA expression_listbody : expression\n            | body SEPARATOR expressionexpression : IDENTIFIER ASSIGN expressionexpression : expression AND expression\n                  | expression NAND expression\n                  | expression OR expression\n                  | expression NOR expression\n                  | expression XOR expression\n                  | expression EQ expression\n                  | expression NEQ expression\n                  | expression IMPL expressionexpression : IF expression THEN expression ELSE expressiondots : DOT\n            | dots DOTexpression : LIST LPAREN expression_list RPARENstruct_body : IDENTIFIER ASSIGN expression\n                   | struct_body SEPARATOR IDENTIFIER ASSIGN expressionexpression : MINUS expression %prec UMINUSexpression : LIST LPAREN RPARENidentifier_list : IDENTIFIER\n                       | IDENTIFIER COMMA identifier_listexpression : expression PLUS expression\n                  | expression MINUS expression\n                  | expression TIMES expression\n                  | expression DIVIDE expressionexpression : LBRACKET expression_list RBRACKET\n                  | ARRAY LPAREN expression_list RPARENexpression : STRUCT BEGIN struct_body ENDexpression : TRUE\n                  | FALSEexpression : LAMBDA identifier_list ARROW expressionexpression : IDENTIFIER dots IDENTIFIERexpression : LBRACKET RBRACKET\n                  | ARRAY LPAREN RPARENexpression : LPAREN expression RPARENexpression : LAMBDA ARROW expressionexpression : dots IDENTIFIERexpression : IDENTIFIER LBRACKET expression RBRACKETexpression : expression LPAREN expression_list RPARENexpression : EXTEND expression BEGIN struct_body ENDexpression : expression LPAREN RPAREN'
    
_lr_action_items = {'FOR':([0,2,5,11,12,13,14,16,17,18,25,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,48,50,58,64,67,92,93,97,98,99,101,102,107,112,130,134,135,136,143,144,],[2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,]),'LOCAL':([0,2,5,11,12,13,14,16,17,18,25,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,48,50,58,64,67,92,93,97,98,99,101,102,107,112,130,134,135,136,143,144,],[3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,]),'WHILE':([0,2,5,11,12,13,14,16,17,18,25,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,48,50,58,64,67,92,93,97,98,99,101,102,107,112,130,134,135,136,143,144,],[5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,]),'NUMBER':([0,2,5,11,12,13,14,16,17,18,25,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,48,50,58,64,67,92,93,97,98,99,101,102,107,112,130,134,135,136,143,144,],[6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,]),'FLOAT':([0,2,5,11,12,13,14,16,17,18,25,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,48,50,58,64,67,92,93,97,98,99,101,102,107,112,130,134,135,136,143,144,],[7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,]),'CHAR':([0,2,5,11,12,13,14,16,17,18,25,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,48,50,58,64,67,92,93,97,98,99,101,102,107,112,130,134,135,136,143,144,],[8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,]),'STRING':([0,2,5,11,12,13,14,16,17,18,25,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,48,50,58,64,67,92,93,97,98,99,101,102,107,112,130,134,135,136,143,144,],[9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,]),'LOCK':([0,2,5,11,12,13,14,16,17,18,25,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,48,50,58,64,67,92,93,97,98,99,101,102,107,112,130,134,135,136,143,144,],[10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,]),'LOOP':([0,2,5,11,12,13,14,16,17,18,25,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,48,50,58,64,67,92,93,97,98,99,101,102,107,112,130,134,135,136,143,144,],[11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,]),'BEGIN':([0,2,4,5,6,7,8,9,11,12,13,14,16,17,18,20,21,22,25,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,48,50,56,58,60,62,64,67,69,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,91,92,93,94,95,97,98,99,100,101,102,104,105,106,107,109,112,113,116,119,120,121,122,124,125,127,128,130,131,134,135,136,139,141,142,143,144,146,],[12,12,-17,12,-10,-11,-12,-13,12,12,12,12,12,12,12,65,-50,-51,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,-18,12,-39,-54,12,12,-58,115,-4,-5,-6,-7,-8,-9,-25,-26,-27,-28,-29,-30,-31,-32,-43,-44,-45,-46,-62,12,12,-24,-53,12,12,12,-16,12,12,-40,-56,-47,12,-55,12,-57,-60,-59,-3,-14,-15,-19,-36,-48,-49,12,-52,12,12,12,-61,-2,-33,12,12,-1,]),'IDENTIFIER':([0,2,3,5,10,11,12,13,14,16,17,18,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,48,49,50,58,64,65,67,70,92,93,97,98,99,101,102,107,112,114,115,129,130,134,135,136,143,144,],[4,4,47,4,52,4,4,4,4,4,4,4,68,69,4,-34,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,95,4,4,4,111,4,-35,4,4,4,4,4,4,4,4,4,68,111,137,4,4,4,4,4,4,]),'NOT':([0,2,5,11,12,13,14,16,17,18,25,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,48,50,58,64,67,92,93,97,98,99,101,102,107,112,130,134,135,136,143,144,],[13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,]),'IF':([0,2,5,11,12,13,14,16,17,18,25,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,48,50,58,64,67,92,93,97,98,99,101,102,107,112,130,134,135,136,143,144,],[14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,]),'LIST':([0,2,5,11,12,13,14,16,17,18,25,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,48,50,58,64,67,92,93,97,98,99,101,102,107,112,130,134,135,136,143,144,],[15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,]),'MINUS':([0,1,2,4,5,6,7,8,9,11,12,13,14,16,17,18,21,22,25,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,48,50,51,53,55,56,57,58,59,60,62,63,64,67,69,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,91,92,93,94,95,96,97,98,99,100,101,102,104,105,106,107,109,112,113,116,117,118,119,120,121,122,123,124,125,127,128,130,131,134,135,136,138,139,140,141,142,143,144,145,146,],[17,42,17,-17,17,-10,-11,-12,-13,17,17,17,17,17,17,17,-50,-51,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,42,17,17,42,42,42,-18,42,17,42,-39,-54,42,17,17,-58,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,-43,-44,-45,-46,-62,17,17,42,-53,42,17,17,17,-16,17,17,-40,-56,-47,17,-55,17,42,-60,42,42,-59,42,42,42,42,42,-36,-48,-49,17,42,17,17,17,42,-61,42,42,42,17,17,42,42,]),'LBRACKET':([0,2,4,5,11,12,13,14,16,17,18,25,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,48,50,58,64,67,92,93,97,98,99,101,102,107,112,130,134,135,136,143,144,],[18,18,50,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,]),'ARRAY':([0,2,5,11,12,13,14,16,17,18,25,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,48,50,58,64,67,92,93,97,98,99,101,102,107,112,130,134,135,136,143,144,],[19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,]),'STRUCT':([0,2,5,11,12,13,14,16,17,18,25,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,48,50,58,64,67,92,93,97,98,99,101,102,107,112,130,134,135,136,143,144,],[20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,]),'TRUE':([0,2,5,11,12,13,14,16,17,18,25,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,48,50,58,64,67,92,93,97,98,99,101,102,107,112,130,134,135,136,143,144,],[21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,]),'FALSE':([0,2,5,11,12,13,14,16,17,18,25,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,48,50,58,64,67,92,93,97,98,99,101,102,107,112,130,134,135,136,143,144,],[22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,]),'LAMBDA':([0,2,5,11,12,13,14,16,17,18,25,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,48,50,58,64,67,92,93,97,98,99,101,102,107,112,130,134,135,136,143,144,],[23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,]),'LPAREN':([0,1,2,4,5,6,7,8,9,11,12,13,14,15,16,17,18,19,21,22,25,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,48,50,51,53,55,56,57,58,59,60,62,63,64,67,69,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,91,92,93,94,95,96,97,98,99,100,101,102,104,105,106,107,109,112,113,116,117,118,119,120,121,122,123,124,125,127,128,130,131,134,135,136,138,139,140,141,142,143,144,145,146,],[16,45,16,-17,16,-10,-11,-12,-13,16,16,16,16,58,16,16,16,64,-50,-51,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,45,16,16,45,45,45,45,45,16,45,45,-54,45,16,16,-58,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,-62,16,16,45,-53,45,16,16,16,-16,16,16,-40,-56,-47,16,-55,16,45,-60,45,45,-59,45,45,45,45,45,-36,-48,-49,16,45,16,16,16,45,-61,45,45,45,16,16,45,45,]),'EXTEND':([0,2,5,11,12,13,14,16,17,18,25,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,48,50,58,64,67,92,93,97,98,99,101,102,107,112,130,134,135,136,143,144,],[25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,]),'DOT':([0,2,4,5,11,12,13,14,16,17,18,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,48,49,50,58,64,67,70,92,93,97,98,99,101,102,107,112,130,134,135,136,143,144,],[26,26,26,26,26,26,26,26,26,26,26,70,26,-34,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,70,26,26,26,26,-35,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,]),'$end':([1,4,6,7,8,9,21,22,56,60,62,69,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,91,94,95,100,104,105,106,109,113,116,119,120,121,122,124,125,127,128,131,139,141,142,146,],[0,-17,-10,-11,-12,-13,-50,-51,-18,-39,-54,-58,-4,-5,-6,-7,-8,-9,-25,-26,-27,-28,-29,-30,-31,-32,-43,-44,-45,-46,-62,-24,-53,-16,-40,-56,-47,-55,-57,-60,-59,-3,-14,-15,-19,-36,-48,-49,-52,-61,-2,-33,-1,]),'LESS_THEN':([1,4,6,7,8,9,21,22,46,51,53,55,56,57,59,60,62,63,69,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,91,94,95,96,100,104,105,106,109,113,116,117,118,119,120,121,122,123,124,125,127,128,131,138,139,140,141,142,145,146,],[27,-17,-10,-11,-12,-13,-50,-51,27,27,27,27,-18,27,27,-39,-54,27,-58,27,-4,-5,-6,-7,27,27,27,27,27,27,27,27,27,27,-43,-44,-45,-46,-62,27,-53,27,-16,-40,-56,-47,-55,27,-60,27,27,-59,27,27,27,27,27,-36,-48,-49,27,27,-61,27,27,27,27,27,]),'GREATER_THEN':([1,4,6,7,8,9,21,22,46,51,53,55,56,57,59,60,62,63,69,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,91,94,95,96,100,104,105,106,109,113,116,117,118,119,120,121,122,123,124,125,127,128,131,138,139,140,141,142,145,146,],[28,-17,-10,-11,-12,-13,-50,-51,28,28,28,28,-18,28,28,-39,-54,28,-58,28,-4,-5,-6,-7,28,28,28,28,28,28,28,28,28,28,-43,-44,-45,-46,-62,28,-53,28,-16,-40,-56,-47,-55,28,-60,28,28,-59,28,28,28,28,28,-36,-48,-49,28,28,-61,28,28,28,28,28,]),'LESS_EQUALS':([1,4,6,7,8,9,21,22,46,51,53,55,56,57,59,60,62,63,69,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,91,94,95,96,100,104,105,106,109,113,116,117,118,119,120,121,122,123,124,125,127,128,131,138,139,140,141,142,145,146,],[29,-17,-10,-11,-12,-13,-50,-51,29,29,29,29,-18,29,29,-39,-54,29,-58,29,-4,-5,-6,-7,29,29,29,29,29,29,29,29,29,29,-43,-44,-45,-46,-62,29,-53,29,-16,-40,-56,-47,-55,29,-60,29,29,-59,29,29,29,29,29,-36,-48,-49,29,29,-61,29,29,29,29,29,]),'GREATER_EQUALS':([1,4,6,7,8,9,21,22,46,51,53,55,56,57,59,60,62,63,69,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,91,94,95,96,100,104,105,106,109,113,116,117,118,119,120,121,122,123,124,125,127,128,131,138,139,140,141,142,145,146,],[30,-17,-10,-11,-12,-13,-50,-51,30,30,30,30,-18,30,30,-39,-54,30,-58,30,-4,-5,-6,-7,30,30,30,30,30,30,30,30,30,30,-43,-44,-45,-46,-62,30,-53,30,-16,-40,-56,-47,-55,30,-60,30,30,-59,30,30,30,30,30,-36,-48,-49,30,30,-61,30,30,30,30,30,]),'EQUALS':([1,4,6,7,8,9,21,22,46,51,53,55,56,57,59,60,62,63,69,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,91,94,95,96,100,104,105,106,109,113,116,117,118,119,120,121,122,123,124,125,127,128,131,138,139,140,141,142,145,146,],[31,-17,-10,-11,-12,-13,-50,-51,31,31,31,31,-18,31,31,-39,-54,31,-58,31,-4,-5,-6,-7,-8,-9,31,31,31,31,31,31,31,31,-43,-44,-45,-46,-62,31,-53,31,-16,-40,-56,-47,-55,31,-60,31,31,-59,31,31,31,31,31,-36,-48,-49,31,31,-61,31,31,31,31,31,]),'NOT_EQUALS':([1,4,6,7,8,9,21,22,46,51,53,55,56,57,59,60,62,63,69,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,91,94,95,96,100,104,105,106,109,113,116,117,118,119,120,121,122,123,124,125,127,128,131,138,139,140,141,142,145,146,],[32,-17,-10,-11,-12,-13,-50,-51,32,32,32,32,-18,32,32,-39,-54,32,-58,32,-4,-5,-6,-7,-8,-9,32,32,32,32,32,32,32,32,-43,-44,-45,-46,-62,32,-53,32,-16,-40,-56,-47,-55,32,-60,32,32,-59,32,32,32,32,32,-36,-48,-49,32,32,-61,32,32,32,32,32,]),'AND':([1,4,6,7,8,9,21,22,46,51,53,55,56,57,59,60,62,63,69,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,91,94,95,96,100,104,105,106,109,113,116,117,118,119,120,121,122,123,124,125,127,128,131,138,139,140,141,142,145,146,],[33,-17,-10,-11,-12,-13,-50,-51,33,33,33,33,-18,33,33,-39,-54,33,-58,33,-4,-5,-6,-7,-8,-9,-25,-26,33,33,-29,-30,-31,-32,-43,-44,-45,-46,-62,33,-53,33,-16,-40,-56,-47,-55,33,-60,33,33,-59,33,33,33,33,33,-36,-48,-49,33,33,-61,33,33,33,33,33,]),'NAND':([1,4,6,7,8,9,21,22,46,51,53,55,56,57,59,60,62,63,69,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,91,94,95,96,100,104,105,106,109,113,116,117,118,119,120,121,122,123,124,125,127,128,131,138,139,140,141,142,145,146,],[34,-17,-10,-11,-12,-13,-50,-51,34,34,34,34,-18,34,34,-39,-54,34,-58,34,-4,-5,-6,-7,-8,-9,-25,-26,34,34,-29,-30,-31,-32,-43,-44,-45,-46,-62,34,-53,34,-16,-40,-56,-47,-55,34,-60,34,34,-59,34,34,34,34,34,-36,-48,-49,34,34,-61,34,34,34,34,34,]),'OR':([1,4,6,7,8,9,21,22,46,51,53,55,56,57,59,60,62,63,69,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,91,94,95,96,100,104,105,106,109,113,116,117,118,119,120,121,122,123,124,125,127,128,131,138,139,140,141,142,145,146,],[35,-17,-10,-11,-12,-13,-50,-51,35,35,35,35,-18,35,35,-39,-54,35,-58,35,-4,-5,-6,-7,-8,-9,-25,-26,-27,-28,-29,-30,-31,-32,-43,-44,-45,-46,-62,35,-53,35,-16,-40,-56,-47,-55,35,-60,35,35,-59,35,35,35,35,35,-36,-48,-49,35,35,-61,35,35,35,35,35,]),'NOR':([1,4,6,7,8,9,21,22,46,51,53,55,56,57,59,60,62,63,69,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,91,94,95,96,100,104,105,106,109,113,116,117,118,119,120,121,122,123,124,125,127,128,131,138,139,140,141,142,145,146,],[36,-17,-10,-11,-12,-13,-50,-51,36,36,36,36,-18,36,36,-39,-54,36,-58,36,-4,-5,-6,-7,-8,-9,-25,-26,-27,-28,-29,-30,-31,-32,-43,-44,-45,-46,-62,36,-53,36,-16,-40,-56,-47,-55,36,-60,36,36,-59,36,36,36,36,36,-36,-48,-49,36,36,-61,36,36,36,36,36,]),'XOR':([1,4,6,7,8,9,21,22,46,51,53,55,56,57,59,60,62,63,69,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,91,94,95,96,100,104,105,106,109,113,116,117,118,119,120,121,122,123,124,125,127,128,131,138,139,140,141,142,145,146,],[37,-17,-10,-11,-12,-13,-50,-51,37,37,37,37,-18,37,37,-39,-54,37,-58,37,-4,-5,-6,-7,-8,-9,37,37,37,37,-29,-30,-31,-32,-43,-44,-45,-46,-62,37,-53,37,-16,-40,-56,-47,-55,37,-60,37,37,-59,37,37,37,37,37,-36,-48,-49,37,37,-61,37,37,37,37,37,]),'EQ':([1,4,6,7,8,9,21,22,46,51,53,55,56,57,59,60,62,63,69,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,91,94,95,96,100,104,105,106,109,113,116,117,118,119,120,121,122,123,124,125,127,128,131,138,139,140,141,142,145,146,],[38,-17,-10,-11,-12,-13,-50,-51,38,38,38,38,-18,38,38,-39,-54,38,-58,38,-4,-5,-6,-7,-8,-9,38,38,38,38,-29,-30,-31,-32,-43,-44,-45,-46,-62,38,-53,38,-16,-40,-56,-47,-55,38,-60,38,38,-59,38,38,38,38,38,-36,-48,-49,38,38,-61,38,38,38,38,38,]),'NEQ':([1,4,6,7,8,9,21,22,46,51,53,55,56,57,59,60,62,63,69,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,91,94,95,96,100,104,105,106,109,113,116,117,118,119,120,121,122,123,124,125,127,128,131,138,139,140,141,142,145,146,],[39,-17,-10,-11,-12,-13,-50,-51,39,39,39,39,-18,39,39,-39,-54,39,-58,39,-4,-5,-6,-7,-8,-9,39,39,39,39,-29,-30,-31,-32,-43,-44,-45,-46,-62,39,-53,39,-16,-40,-56,-47,-55,39,-60,39,39,-59,39,39,39,39,39,-36,-48,-49,39,39,-61,39,39,39,39,39,]),'IMPL':([1,4,6,7,8,9,21,22,46,51,53,55,56,57,59,60,62,63,69,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,91,94,95,96,100,104,105,106,109,113,116,117,118,119,120,121,122,123,124,125,127,128,131,138,139,140,141,142,145,146,],[40,-17,-10,-11,-12,-13,-50,-51,40,40,40,40,-18,40,40,-39,-54,40,-58,40,-4,-5,-6,-7,-8,-9,40,40,40,40,-29,-30,-31,-32,-43,-44,-45,-46,-62,40,-53,40,-16,-40,-56,-47,-55,40,-60,40,40,-59,40,40,40,40,40,-36,-48,-49,40,40,-61,40,40,40,40,40,]),'PLUS':([1,4,6,7,8,9,21,22,46,51,53,55,56,57,59,60,62,63,69,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,91,94,95,96,100,104,105,106,109,113,116,117,118,119,120,121,122,123,124,125,127,128,131,138,139,140,141,142,145,146,],[41,-17,-10,-11,-12,-13,-50,-51,41,41,41,41,-18,41,41,-39,-54,41,-58,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,-43,-44,-45,-46,-62,41,-53,41,-16,-40,-56,-47,-55,41,-60,41,41,-59,41,41,41,41,41,-36,-48,-49,41,41,-61,41,41,41,41,41,]),'TIMES':([1,4,6,7,8,9,21,22,46,51,53,55,56,57,59,60,62,63,69,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,91,94,95,96,100,104,105,106,109,113,116,117,118,119,120,121,122,123,124,125,127,128,131,138,139,140,141,142,145,146,],[43,-17,-10,-11,-12,-13,-50,-51,43,43,43,43,-18,43,43,-39,-54,43,-58,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,-45,-46,-62,43,-53,43,-16,-40,-56,-47,-55,43,-60,43,43,-59,43,43,43,43,43,-36,-48,-49,43,43,-61,43,43,43,43,43,]),'DIVIDE':([1,4,6,7,8,9,21,22,46,51,53,55,56,57,59,60,62,63,69,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,91,94,95,96,100,104,105,106,109,113,116,117,118,119,120,121,122,123,124,125,127,128,131,138,139,140,141,142,145,146,],[44,-17,-10,-11,-12,-13,-50,-51,44,44,44,44,-18,44,44,-39,-54,44,-58,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,-45,-46,-62,44,-53,44,-16,-40,-56,-47,-55,44,-60,44,44,-59,44,44,44,44,44,-36,-48,-49,44,44,-61,44,44,44,44,44,]),'SEPARATOR':([4,6,7,8,9,21,22,46,54,55,56,60,62,69,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,91,94,95,100,104,105,106,109,110,113,116,117,119,120,121,122,123,124,125,127,128,131,133,138,139,141,142,145,146,],[-17,-10,-11,-12,-13,-50,-51,92,101,-22,-18,-39,-54,-58,-4,-5,-6,-7,-8,-9,-25,-26,-27,-28,-29,-30,-31,-32,-43,-44,-45,-46,-62,-24,-53,-16,-40,-56,-47,-55,129,-57,-60,134,-59,-3,-14,-15,-23,-19,-36,-48,-49,-52,129,-37,-61,-2,-33,-38,-1,]),'DO':([4,6,7,8,9,21,22,51,53,56,60,62,69,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,91,94,95,100,104,105,106,109,113,116,119,120,121,122,124,125,127,128,131,139,140,141,142,146,],[-17,-10,-11,-12,-13,-50,-51,97,99,-18,-39,-54,-58,-4,-5,-6,-7,-8,-9,-25,-26,-27,-28,-29,-30,-31,-32,-43,-44,-45,-46,-62,-24,-53,-16,-40,-56,-47,-55,-57,-60,-59,-3,-14,-15,-19,-36,-48,-49,-52,-61,144,-2,-33,-1,]),'END':([4,6,7,8,9,21,22,54,55,56,60,62,69,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,91,94,95,100,104,105,106,109,110,113,116,119,120,121,122,123,124,125,127,128,131,133,138,139,141,142,145,146,],[-17,-10,-11,-12,-13,-50,-51,100,-22,-18,-39,-54,-58,-4,-5,-6,-7,-8,-9,-25,-26,-27,-28,-29,-30,-31,-32,-43,-44,-45,-46,-62,-24,-53,-16,-40,-56,-47,-55,128,-57,-60,-59,-3,-14,-15,-23,-19,-36,-48,-49,-52,139,-37,-61,-2,-33,-38,-1,]),'THEN':([4,6,7,8,9,21,22,56,57,60,62,69,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,91,94,95,100,104,105,106,109,113,116,119,120,121,122,124,125,127,128,131,139,141,142,146,],[-17,-10,-11,-12,-13,-50,-51,-18,102,-39,-54,-58,-4,-5,-6,-7,-8,-9,-25,-26,-27,-28,-29,-30,-31,-32,-43,-44,-45,-46,-62,-24,-53,-16,-40,-56,-47,-55,-57,-60,-59,-3,-14,-15,-19,-36,-48,-49,-52,-61,-2,-33,-1,]),'RPAREN':([4,6,7,8,9,21,22,45,56,58,59,60,62,63,64,69,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,94,95,100,103,104,105,106,108,109,113,116,119,120,121,122,124,125,126,127,128,131,139,141,142,146,],[-17,-10,-11,-12,-13,-50,-51,91,-18,104,105,-39,-54,-20,109,-58,-4,-5,-6,-7,-8,-9,-25,-26,-27,-28,-29,-30,-31,-32,-43,-44,-45,-46,116,-62,-24,-53,-16,125,-40,-56,-47,127,-55,-57,-60,-59,-3,-14,-15,-19,-36,-21,-48,-49,-52,-61,-2,-33,-1,]),'COMMA':([4,6,7,8,9,21,22,56,60,62,63,68,69,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,91,94,95,100,104,105,106,109,113,116,119,120,121,122,124,125,127,128,131,139,141,142,146,],[-17,-10,-11,-12,-13,-50,-51,-18,-39,-54,107,114,-58,-4,-5,-6,-7,-8,-9,-25,-26,-27,-28,-29,-30,-31,-32,-43,-44,-45,-46,-62,-24,-53,-16,-40,-56,-47,-55,-57,-60,-59,-3,-14,-15,-19,-36,-48,-49,-52,-61,-2,-33,-1,]),'RBRACKET':([4,6,7,8,9,18,21,22,56,60,61,62,63,69,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,91,94,95,96,100,104,105,106,109,113,116,119,120,121,122,124,125,126,127,128,131,139,141,142,146,],[-17,-10,-11,-12,-13,62,-50,-51,-18,-39,106,-54,-20,-58,-4,-5,-6,-7,-8,-9,-25,-26,-27,-28,-29,-30,-31,-32,-43,-44,-45,-46,-62,-24,-53,119,-16,-40,-56,-47,-55,-57,-60,-59,-3,-14,-15,-19,-36,-21,-48,-49,-52,-61,-2,-33,-1,]),'IN':([4,6,7,8,9,21,22,52,56,60,62,69,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,91,94,95,100,104,105,106,109,113,116,118,119,120,121,122,124,125,127,128,131,139,141,142,146,],[-17,-10,-11,-12,-13,-50,-51,98,-18,-39,-54,-58,-4,-5,-6,-7,-8,-9,-25,-26,-27,-28,-29,-30,-31,-32,-43,-44,-45,-46,-62,-24,-53,-16,-40,-56,-47,-55,-57,-60,135,-59,-3,-14,-15,-19,-36,-48,-49,-52,-61,-2,-33,-1,]),'ELSE':([4,6,7,8,9,21,22,56,60,62,69,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,91,94,95,100,104,105,106,109,113,116,119,120,121,122,124,125,127,128,131,139,141,142,146,],[-17,-10,-11,-12,-13,-50,-51,-18,-39,-54,-58,-4,-5,-6,-7,-8,-9,-25,-26,-27,-28,-29,-30,-31,-32,-43,-44,-45,-46,-62,-24,-53,-16,-40,-56,-47,-55,-57,-60,-59,-3,-14,-15,136,-36,-48,-49,-52,-61,-2,-33,-1,]),'ASSIGN':([4,47,111,137,],[48,93,130,143,]),'ARROW':([23,66,68,132,],[67,112,-41,-42,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'expression':([0,2,5,11,12,13,14,16,17,18,25,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,48,50,58,64,67,92,93,97,98,99,101,102,107,112,130,134,135,136,143,144,],[1,46,51,53,55,56,57,59,60,63,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,63,94,96,63,63,113,117,118,120,121,122,123,124,63,131,138,140,141,142,145,146,]),'dots':([0,2,4,5,11,12,13,14,16,17,18,25,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,48,50,58,64,67,92,93,97,98,99,101,102,107,112,130,134,135,136,143,144,],[24,24,49,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,]),'body':([12,],[54,]),'expression_list':([18,45,58,64,107,],[61,90,103,108,126,]),'identifier_list':([23,114,],[66,132,]),'struct_body':([65,115,],[110,133,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> expression","S'",1,None,None,None),
  ('expression -> FOR expression SEPARATOR expression SEPARATOR expression DO expression','expression',8,'p_expression_for','for_expr.py',10),
  ('expression -> LOCAL IDENTIFIER ASSIGN expression IN expression','expression',6,'p_expression_local','local_expr.py',10),
  ('expression -> WHILE expression DO expression','expression',4,'p_expression_while','while_expr.py',10),
  ('expression -> expression LESS_THEN expression','expression',3,'p_expression_binary_comparison','comparison_expr.py',11),
  ('expression -> expression GREATER_THEN expression','expression',3,'p_expression_binary_comparison','comparison_expr.py',12),
  ('expression -> expression LESS_EQUALS expression','expression',3,'p_expression_binary_comparison','comparison_expr.py',13),
  ('expression -> expression GREATER_EQUALS expression','expression',3,'p_expression_binary_comparison','comparison_expr.py',14),
  ('expression -> expression EQUALS expression','expression',3,'p_expression_binary_comparison','comparison_expr.py',15),
  ('expression -> expression NOT_EQUALS expression','expression',3,'p_expression_binary_comparison','comparison_expr.py',16),
  ('expression -> NUMBER','expression',1,'p_expression_single_value','datatypes.py',14),
  ('expression -> FLOAT','expression',1,'p_expression_single_value','datatypes.py',15),
  ('expression -> CHAR','expression',1,'p_expression_single_value','datatypes.py',16),
  ('expression -> STRING','expression',1,'p_expression_single_value','datatypes.py',17),
  ('expression -> LOCK IDENTIFIER IN expression','expression',4,'p_expression_lock','lock_expr.py',14),
  ('expression -> LOOP expression DO expression','expression',4,'p_expression_loop','loop_expr.py',14),
  ('expression -> BEGIN body END','expression',3,'p_expression_sequences','sequences_expr.py',14),
  ('expression -> IDENTIFIER','expression',1,'p_expression_id','assignment_expr.py',15),
  ('expression -> NOT expression','expression',2,'p_expression_unary_not','boolean_expr.py',15),
  ('expression -> IF expression THEN expression','expression',4,'p_expression_it','ite_expr.py',15),
  ('expression_list -> expression','expression_list',1,'p_argument_list','lambda_expr.py',17),
  ('expression_list -> expression COMMA expression_list','expression_list',3,'p_argument_list','lambda_expr.py',18),
  ('body -> expression','body',1,'p_bodyn','sequences_expr.py',18),
  ('body -> body SEPARATOR expression','body',3,'p_bodyn','sequences_expr.py',19),
  ('expression -> IDENTIFIER ASSIGN expression','expression',3,'p_expression_assign','assignment_expr.py',19),
  ('expression -> expression AND expression','expression',3,'p_expression_binary_boolean','boolean_expr.py',19),
  ('expression -> expression NAND expression','expression',3,'p_expression_binary_boolean','boolean_expr.py',20),
  ('expression -> expression OR expression','expression',3,'p_expression_binary_boolean','boolean_expr.py',21),
  ('expression -> expression NOR expression','expression',3,'p_expression_binary_boolean','boolean_expr.py',22),
  ('expression -> expression XOR expression','expression',3,'p_expression_binary_boolean','boolean_expr.py',23),
  ('expression -> expression EQ expression','expression',3,'p_expression_binary_boolean','boolean_expr.py',24),
  ('expression -> expression NEQ expression','expression',3,'p_expression_binary_boolean','boolean_expr.py',25),
  ('expression -> expression IMPL expression','expression',3,'p_expression_binary_boolean','boolean_expr.py',26),
  ('expression -> IF expression THEN expression ELSE expression','expression',6,'p_expression_ite','ite_expr.py',19),
  ('dots -> DOT','dots',1,'p_dot_notation','struct_expr.py',19),
  ('dots -> dots DOT','dots',2,'p_dot_notation','struct_expr.py',20),
  ('expression -> LIST LPAREN expression_list RPAREN','expression',4,'p_expression_list','datatypes.py',21),
  ('struct_body -> IDENTIFIER ASSIGN expression','struct_body',3,'p_struct_body','struct_expr.py',24),
  ('struct_body -> struct_body SEPARATOR IDENTIFIER ASSIGN expression','struct_body',5,'p_struct_body','struct_expr.py',25),
  ('expression -> MINUS expression','expression',2,'p_expression_unary_minus','arithmetic_expr.py',25),
  ('expression -> LIST LPAREN RPAREN','expression',3,'p_expression_list_empty','datatypes.py',25),
  ('identifier_list -> IDENTIFIER','identifier_list',1,'p_parameter_list','lambda_expr.py',28),
  ('identifier_list -> IDENTIFIER COMMA identifier_list','identifier_list',3,'p_parameter_list','lambda_expr.py',29),
  ('expression -> expression PLUS expression','expression',3,'p_expression_binary_arithmetic','arithmetic_expr.py',29),
  ('expression -> expression MINUS expression','expression',3,'p_expression_binary_arithmetic','arithmetic_expr.py',30),
  ('expression -> expression TIMES expression','expression',3,'p_expression_binary_arithmetic','arithmetic_expr.py',31),
  ('expression -> expression DIVIDE expression','expression',3,'p_expression_binary_arithmetic','arithmetic_expr.py',32),
  ('expression -> LBRACKET expression_list RBRACKET','expression',3,'p_expression_array','datatypes.py',29),
  ('expression -> ARRAY LPAREN expression_list RPAREN','expression',4,'p_expression_array','datatypes.py',30),
  ('expression -> STRUCT BEGIN struct_body END','expression',4,'p_expression_struct','struct_expr.py',29),
  ('expression -> TRUE','expression',1,'p_expression_boolean_value','boolean_expr.py',30),
  ('expression -> FALSE','expression',1,'p_expression_boolean_value','boolean_expr.py',31),
  ('expression -> LAMBDA identifier_list ARROW expression','expression',4,'p_expression_n_lambda','lambda_expr.py',33),
  ('expression -> IDENTIFIER dots IDENTIFIER','expression',3,'p_expression_struct_member_access','struct_expr.py',33),
  ('expression -> LBRACKET RBRACKET','expression',2,'p_expression_array_empty','datatypes.py',34),
  ('expression -> ARRAY LPAREN RPAREN','expression',3,'p_expression_array_empty','datatypes.py',35),
  ('expression -> LPAREN expression RPAREN','expression',3,'p_expression_parenthesis','arithmetic_expr.py',36),
  ('expression -> LAMBDA ARROW expression','expression',3,'p_expression_0_lambda','lambda_expr.py',37),
  ('expression -> dots IDENTIFIER','expression',2,'p_expression_dots_id','struct_expr.py',37),
  ('expression -> IDENTIFIER LBRACKET expression RBRACKET','expression',4,'p_expression_array_access','datatypes.py',39),
  ('expression -> expression LPAREN expression_list RPAREN','expression',4,'p_expression_call_n_args','lambda_expr.py',41),
  ('expression -> EXTEND expression BEGIN struct_body END','expression',5,'p_struct_extend_expression','struct_expr.py',41),
  ('expression -> expression LPAREN RPAREN','expression',3,'p_expression_call_0_args','lambda_expr.py',45),
]
