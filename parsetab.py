
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'expressionleftCOMMAleftARROWleftINleftTHENleftELSEleftDOrightASSIGNleftORNORleftANDNANDleftXORNEQEQIMPLleftEQUALSNOT_EQUALSleftLESS_THENGREATER_THENLESS_EQUALSGREATER_EQUALSleftPLUSMINUSleftTIMESDIVIDErightUMINUSrightLPARENleftSEPARATORleftDOTAND ARRAY ARROW ASSIGN BEGIN CHAR COMMA DIVIDE DO DOT ELSE END EQ EQUALS EXTEND FALSE FLOAT FOR GREATER_EQUALS GREATER_THEN IDENTIFIER IF IMPL IN LBRACKET LESS_EQUALS LESS_THEN LIST LOCAL LOCK LOOP LPAREN MINUS NAND NEQ NOR NOT NOT_EQUALS NUMBER OR PLUS RBRACKET RPAREN SEPARATOR STRING STRUCT THEN TIMES TRUE WHILE XORexpression : FOR expression SEPARATOR expression SEPARATOR expression DO expressionexpression : LOCAL IDENTIFIER ASSIGN expression IN expressionexpression : WHILE expression DO expressionexpression : expression LESS_THEN expression\n                  | expression GREATER_THEN expression\n                  | expression LESS_EQUALS expression\n                  | expression GREATER_EQUALS expression\n                  | expression EQUALS expression\n                  | expression NOT_EQUALS expressionexpression : NUMBER\n                  | FLOAT\n                  | CHAR\n                  | STRINGexpression : LOCK IDENTIFIER IN expressionexpression : LOOP expression DO expressionexpression : BEGIN body ENDexpression : IDENTIFIERexpression : NOT expression %prec UMINUSexpression : IF expression THEN expressionexpression : STRUCT BEGIN struct_body ENDexpression_list : expression\n                       | expression COMMA expression_listbody : expression\n            | body SEPARATOR expressionexpression : IDENTIFIER ASSIGN expressionexpression : expression AND expression\n                  | expression NAND expression\n                  | expression OR expression\n                  | expression NOR expression\n                  | expression XOR expression\n                  | expression EQ expression\n                  | expression NEQ expression\n                  | expression IMPL expressionexpression : IF expression THEN expression ELSE expressionstruct_body : IDENTIFIER ASSIGN expression\n                   | struct_body SEPARATOR IDENTIFIER ASSIGN expressionexpression : LIST LPAREN expression_list RPARENexpression_list : IDENTIFIER COMMA expression_listexpression : MINUS expression %prec UMINUSexpression : LIST LPAREN RPARENexpression : IDENTIFIER dots IDENTIFIERidentifier_list : IDENTIFIER\n                       | IDENTIFIER COMMA identifier_listexpression : expression PLUS expression\n                  | expression MINUS expression\n                  | expression TIMES expression\n                  | expression DIVIDE expressionexpression : LBRACKET expression_list RBRACKET\n                  | ARRAY LPAREN expression_list RPARENdots : DOT\n            | dots DOTexpression : TRUE\n                  | FALSEexpression : identifier_list ARROW expressionexpression : LBRACKET RBRACKET\n                  | ARRAY LPAREN RPARENexpression : EXTEND IDENTIFIER BEGIN struct_body ENDexpression : LPAREN expression RPARENexpression : ARROW expressionexpression : IDENTIFIER LBRACKET expression RBRACKETexpression : expression LPAREN expression_list RPARENexpression : expression LPAREN RPAREN'
    
_lr_action_items = {'FOR':([0,2,5,11,12,13,14,17,18,19,24,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,47,49,60,67,68,91,92,99,100,101,103,104,111,112,128,136,137,138,145,146,],[2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,]),'LOCAL':([0,2,5,11,12,13,14,17,18,19,24,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,47,49,60,67,68,91,92,99,100,101,103,104,111,112,128,136,137,138,145,146,],[3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,]),'WHILE':([0,2,5,11,12,13,14,17,18,19,24,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,47,49,60,67,68,91,92,99,100,101,103,104,111,112,128,136,137,138,145,146,],[5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,]),'NUMBER':([0,2,5,11,12,13,14,17,18,19,24,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,47,49,60,67,68,91,92,99,100,101,103,104,111,112,128,136,137,138,145,146,],[6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,]),'FLOAT':([0,2,5,11,12,13,14,17,18,19,24,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,47,49,60,67,68,91,92,99,100,101,103,104,111,112,128,136,137,138,145,146,],[7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,]),'CHAR':([0,2,5,11,12,13,14,17,18,19,24,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,47,49,60,67,68,91,92,99,100,101,103,104,111,112,128,136,137,138,145,146,],[8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,]),'STRING':([0,2,5,11,12,13,14,17,18,19,24,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,47,49,60,67,68,91,92,99,100,101,103,104,111,112,128,136,137,138,145,146,],[9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,]),'LOCK':([0,2,5,11,12,13,14,17,18,19,24,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,47,49,60,67,68,91,92,99,100,101,103,104,111,112,128,136,137,138,145,146,],[10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,]),'LOOP':([0,2,5,11,12,13,14,17,18,19,24,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,47,49,60,67,68,91,92,99,100,101,103,104,111,112,128,136,137,138,145,146,],[11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,]),'BEGIN':([0,2,5,11,12,13,14,15,17,18,19,24,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,47,49,60,67,68,70,91,92,99,100,101,103,104,111,112,128,136,137,138,145,146,],[12,12,12,12,12,12,12,59,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,116,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,]),'IDENTIFIER':([0,2,3,5,10,11,12,13,14,17,18,19,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,47,48,49,50,51,59,60,67,68,91,92,95,99,100,101,103,104,111,112,116,127,128,136,137,138,145,146,],[4,4,46,4,53,4,4,4,4,4,4,66,4,70,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,66,4,94,4,97,-50,106,66,66,4,4,4,-51,4,4,4,4,4,66,131,106,139,4,4,4,4,4,4,]),'NOT':([0,2,5,11,12,13,14,17,18,19,24,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,47,49,60,67,68,91,92,99,100,101,103,104,111,112,128,136,137,138,145,146,],[13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,]),'IF':([0,2,5,11,12,13,14,17,18,19,24,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,47,49,60,67,68,91,92,99,100,101,103,104,111,112,128,136,137,138,145,146,],[14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,]),'STRUCT':([0,2,5,11,12,13,14,17,18,19,24,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,47,49,60,67,68,91,92,99,100,101,103,104,111,112,128,136,137,138,145,146,],[15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,]),'LIST':([0,2,5,11,12,13,14,17,18,19,24,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,47,49,60,67,68,91,92,99,100,101,103,104,111,112,128,136,137,138,145,146,],[16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,]),'MINUS':([0,1,2,4,5,6,7,8,9,11,12,13,14,17,18,19,21,22,24,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,47,49,52,54,56,57,58,60,61,62,64,65,66,67,68,69,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,90,91,92,93,94,96,99,100,101,102,103,104,108,109,110,111,112,114,115,117,118,119,120,121,122,123,124,125,126,128,129,131,134,136,137,138,140,141,142,143,144,145,146,147,148,],[18,41,18,-17,18,-10,-11,-12,-13,18,18,18,18,18,18,18,-52,-53,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,41,18,18,41,41,41,-18,41,18,41,-39,-55,41,-17,18,18,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,-44,-45,-46,-47,-62,18,18,41,-41,41,18,18,18,-16,18,18,-40,-58,-48,18,18,-56,41,-61,41,41,-60,41,41,41,41,41,-20,18,-37,-17,-49,18,18,18,41,-57,41,41,41,18,18,41,41,]),'LBRACKET':([0,2,4,5,11,12,13,14,17,18,19,24,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,47,49,60,66,67,68,91,92,99,100,101,103,104,111,112,128,131,136,137,138,145,146,],[19,19,49,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,49,19,19,19,19,19,19,19,19,19,19,19,19,49,19,19,19,19,19,]),'ARRAY':([0,2,5,11,12,13,14,17,18,19,24,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,47,49,60,67,68,91,92,99,100,101,103,104,111,112,128,136,137,138,145,146,],[20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,]),'TRUE':([0,2,5,11,12,13,14,17,18,19,24,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,47,49,60,67,68,91,92,99,100,101,103,104,111,112,128,136,137,138,145,146,],[21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,]),'FALSE':([0,2,5,11,12,13,14,17,18,19,24,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,47,49,60,67,68,91,92,99,100,101,103,104,111,112,128,136,137,138,145,146,],[22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,]),'EXTEND':([0,2,5,11,12,13,14,17,18,19,24,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,47,49,60,67,68,91,92,99,100,101,103,104,111,112,128,136,137,138,145,146,],[25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,]),'LPAREN':([0,1,2,4,5,6,7,8,9,11,12,13,14,16,17,18,19,20,21,22,24,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,47,49,52,54,56,57,58,60,61,62,64,65,66,67,68,69,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,90,91,92,93,94,96,99,100,101,102,103,104,108,109,110,111,112,114,115,117,118,119,120,121,122,123,124,125,126,128,129,131,134,136,137,138,140,141,142,143,144,145,146,147,148,],[17,44,17,-17,17,-10,-11,-12,-13,17,17,17,17,60,17,17,17,67,-52,-53,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,44,17,17,44,44,44,44,44,17,44,44,-55,44,-17,17,17,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,-62,17,17,44,-41,44,17,17,17,-16,17,17,-40,-58,-48,17,17,-56,44,-61,44,44,-60,44,44,44,44,44,-20,17,-37,-17,-49,17,17,17,44,-57,44,44,44,17,17,44,44,]),'ARROW':([0,2,4,5,11,12,13,14,17,18,19,23,24,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,47,49,60,66,67,68,91,92,97,98,99,100,101,103,104,111,112,128,131,133,136,137,138,145,146,],[24,24,-42,24,24,24,24,24,24,24,24,68,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,-42,24,24,24,24,-42,-43,24,24,24,24,24,24,24,24,-42,68,24,24,24,24,24,]),'$end':([1,4,6,7,8,9,21,22,57,62,64,69,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,90,93,94,102,108,109,110,114,115,117,120,121,122,123,125,126,129,134,141,143,144,148,],[0,-17,-10,-11,-12,-13,-52,-53,-18,-39,-55,-59,-4,-5,-6,-7,-8,-9,-26,-27,-28,-29,-30,-31,-32,-33,-44,-45,-46,-47,-62,-25,-41,-16,-40,-58,-48,-56,-54,-61,-60,-3,-14,-15,-19,-20,-37,-49,-57,-2,-34,-1,]),'LESS_THEN':([1,4,6,7,8,9,21,22,45,52,54,56,57,58,61,62,64,65,66,69,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,90,93,94,96,102,108,109,110,114,115,117,118,119,120,121,122,123,124,125,126,129,131,134,140,141,142,143,144,147,148,],[26,-17,-10,-11,-12,-13,-52,-53,26,26,26,26,-18,26,26,-39,-55,26,-17,26,-4,-5,-6,-7,26,26,26,26,26,26,26,26,26,26,-44,-45,-46,-47,-62,26,-41,26,-16,-40,-58,-48,-56,26,-61,26,26,-60,26,26,26,26,26,-20,-37,-17,-49,26,-57,26,26,26,26,26,]),'GREATER_THEN':([1,4,6,7,8,9,21,22,45,52,54,56,57,58,61,62,64,65,66,69,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,90,93,94,96,102,108,109,110,114,115,117,118,119,120,121,122,123,124,125,126,129,131,134,140,141,142,143,144,147,148,],[27,-17,-10,-11,-12,-13,-52,-53,27,27,27,27,-18,27,27,-39,-55,27,-17,27,-4,-5,-6,-7,27,27,27,27,27,27,27,27,27,27,-44,-45,-46,-47,-62,27,-41,27,-16,-40,-58,-48,-56,27,-61,27,27,-60,27,27,27,27,27,-20,-37,-17,-49,27,-57,27,27,27,27,27,]),'LESS_EQUALS':([1,4,6,7,8,9,21,22,45,52,54,56,57,58,61,62,64,65,66,69,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,90,93,94,96,102,108,109,110,114,115,117,118,119,120,121,122,123,124,125,126,129,131,134,140,141,142,143,144,147,148,],[28,-17,-10,-11,-12,-13,-52,-53,28,28,28,28,-18,28,28,-39,-55,28,-17,28,-4,-5,-6,-7,28,28,28,28,28,28,28,28,28,28,-44,-45,-46,-47,-62,28,-41,28,-16,-40,-58,-48,-56,28,-61,28,28,-60,28,28,28,28,28,-20,-37,-17,-49,28,-57,28,28,28,28,28,]),'GREATER_EQUALS':([1,4,6,7,8,9,21,22,45,52,54,56,57,58,61,62,64,65,66,69,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,90,93,94,96,102,108,109,110,114,115,117,118,119,120,121,122,123,124,125,126,129,131,134,140,141,142,143,144,147,148,],[29,-17,-10,-11,-12,-13,-52,-53,29,29,29,29,-18,29,29,-39,-55,29,-17,29,-4,-5,-6,-7,29,29,29,29,29,29,29,29,29,29,-44,-45,-46,-47,-62,29,-41,29,-16,-40,-58,-48,-56,29,-61,29,29,-60,29,29,29,29,29,-20,-37,-17,-49,29,-57,29,29,29,29,29,]),'EQUALS':([1,4,6,7,8,9,21,22,45,52,54,56,57,58,61,62,64,65,66,69,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,90,93,94,96,102,108,109,110,114,115,117,118,119,120,121,122,123,124,125,126,129,131,134,140,141,142,143,144,147,148,],[30,-17,-10,-11,-12,-13,-52,-53,30,30,30,30,-18,30,30,-39,-55,30,-17,30,-4,-5,-6,-7,-8,-9,30,30,30,30,30,30,30,30,-44,-45,-46,-47,-62,30,-41,30,-16,-40,-58,-48,-56,30,-61,30,30,-60,30,30,30,30,30,-20,-37,-17,-49,30,-57,30,30,30,30,30,]),'NOT_EQUALS':([1,4,6,7,8,9,21,22,45,52,54,56,57,58,61,62,64,65,66,69,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,90,93,94,96,102,108,109,110,114,115,117,118,119,120,121,122,123,124,125,126,129,131,134,140,141,142,143,144,147,148,],[31,-17,-10,-11,-12,-13,-52,-53,31,31,31,31,-18,31,31,-39,-55,31,-17,31,-4,-5,-6,-7,-8,-9,31,31,31,31,31,31,31,31,-44,-45,-46,-47,-62,31,-41,31,-16,-40,-58,-48,-56,31,-61,31,31,-60,31,31,31,31,31,-20,-37,-17,-49,31,-57,31,31,31,31,31,]),'AND':([1,4,6,7,8,9,21,22,45,52,54,56,57,58,61,62,64,65,66,69,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,90,93,94,96,102,108,109,110,114,115,117,118,119,120,121,122,123,124,125,126,129,131,134,140,141,142,143,144,147,148,],[32,-17,-10,-11,-12,-13,-52,-53,32,32,32,32,-18,32,32,-39,-55,32,-17,32,-4,-5,-6,-7,-8,-9,-26,-27,32,32,-30,-31,-32,-33,-44,-45,-46,-47,-62,32,-41,32,-16,-40,-58,-48,-56,32,-61,32,32,-60,32,32,32,32,32,-20,-37,-17,-49,32,-57,32,32,32,32,32,]),'NAND':([1,4,6,7,8,9,21,22,45,52,54,56,57,58,61,62,64,65,66,69,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,90,93,94,96,102,108,109,110,114,115,117,118,119,120,121,122,123,124,125,126,129,131,134,140,141,142,143,144,147,148,],[33,-17,-10,-11,-12,-13,-52,-53,33,33,33,33,-18,33,33,-39,-55,33,-17,33,-4,-5,-6,-7,-8,-9,-26,-27,33,33,-30,-31,-32,-33,-44,-45,-46,-47,-62,33,-41,33,-16,-40,-58,-48,-56,33,-61,33,33,-60,33,33,33,33,33,-20,-37,-17,-49,33,-57,33,33,33,33,33,]),'OR':([1,4,6,7,8,9,21,22,45,52,54,56,57,58,61,62,64,65,66,69,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,90,93,94,96,102,108,109,110,114,115,117,118,119,120,121,122,123,124,125,126,129,131,134,140,141,142,143,144,147,148,],[34,-17,-10,-11,-12,-13,-52,-53,34,34,34,34,-18,34,34,-39,-55,34,-17,34,-4,-5,-6,-7,-8,-9,-26,-27,-28,-29,-30,-31,-32,-33,-44,-45,-46,-47,-62,34,-41,34,-16,-40,-58,-48,-56,34,-61,34,34,-60,34,34,34,34,34,-20,-37,-17,-49,34,-57,34,34,34,34,34,]),'NOR':([1,4,6,7,8,9,21,22,45,52,54,56,57,58,61,62,64,65,66,69,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,90,93,94,96,102,108,109,110,114,115,117,118,119,120,121,122,123,124,125,126,129,131,134,140,141,142,143,144,147,148,],[35,-17,-10,-11,-12,-13,-52,-53,35,35,35,35,-18,35,35,-39,-55,35,-17,35,-4,-5,-6,-7,-8,-9,-26,-27,-28,-29,-30,-31,-32,-33,-44,-45,-46,-47,-62,35,-41,35,-16,-40,-58,-48,-56,35,-61,35,35,-60,35,35,35,35,35,-20,-37,-17,-49,35,-57,35,35,35,35,35,]),'XOR':([1,4,6,7,8,9,21,22,45,52,54,56,57,58,61,62,64,65,66,69,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,90,93,94,96,102,108,109,110,114,115,117,118,119,120,121,122,123,124,125,126,129,131,134,140,141,142,143,144,147,148,],[36,-17,-10,-11,-12,-13,-52,-53,36,36,36,36,-18,36,36,-39,-55,36,-17,36,-4,-5,-6,-7,-8,-9,36,36,36,36,-30,-31,-32,-33,-44,-45,-46,-47,-62,36,-41,36,-16,-40,-58,-48,-56,36,-61,36,36,-60,36,36,36,36,36,-20,-37,-17,-49,36,-57,36,36,36,36,36,]),'EQ':([1,4,6,7,8,9,21,22,45,52,54,56,57,58,61,62,64,65,66,69,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,90,93,94,96,102,108,109,110,114,115,117,118,119,120,121,122,123,124,125,126,129,131,134,140,141,142,143,144,147,148,],[37,-17,-10,-11,-12,-13,-52,-53,37,37,37,37,-18,37,37,-39,-55,37,-17,37,-4,-5,-6,-7,-8,-9,37,37,37,37,-30,-31,-32,-33,-44,-45,-46,-47,-62,37,-41,37,-16,-40,-58,-48,-56,37,-61,37,37,-60,37,37,37,37,37,-20,-37,-17,-49,37,-57,37,37,37,37,37,]),'NEQ':([1,4,6,7,8,9,21,22,45,52,54,56,57,58,61,62,64,65,66,69,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,90,93,94,96,102,108,109,110,114,115,117,118,119,120,121,122,123,124,125,126,129,131,134,140,141,142,143,144,147,148,],[38,-17,-10,-11,-12,-13,-52,-53,38,38,38,38,-18,38,38,-39,-55,38,-17,38,-4,-5,-6,-7,-8,-9,38,38,38,38,-30,-31,-32,-33,-44,-45,-46,-47,-62,38,-41,38,-16,-40,-58,-48,-56,38,-61,38,38,-60,38,38,38,38,38,-20,-37,-17,-49,38,-57,38,38,38,38,38,]),'IMPL':([1,4,6,7,8,9,21,22,45,52,54,56,57,58,61,62,64,65,66,69,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,90,93,94,96,102,108,109,110,114,115,117,118,119,120,121,122,123,124,125,126,129,131,134,140,141,142,143,144,147,148,],[39,-17,-10,-11,-12,-13,-52,-53,39,39,39,39,-18,39,39,-39,-55,39,-17,39,-4,-5,-6,-7,-8,-9,39,39,39,39,-30,-31,-32,-33,-44,-45,-46,-47,-62,39,-41,39,-16,-40,-58,-48,-56,39,-61,39,39,-60,39,39,39,39,39,-20,-37,-17,-49,39,-57,39,39,39,39,39,]),'PLUS':([1,4,6,7,8,9,21,22,45,52,54,56,57,58,61,62,64,65,66,69,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,90,93,94,96,102,108,109,110,114,115,117,118,119,120,121,122,123,124,125,126,129,131,134,140,141,142,143,144,147,148,],[40,-17,-10,-11,-12,-13,-52,-53,40,40,40,40,-18,40,40,-39,-55,40,-17,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,-44,-45,-46,-47,-62,40,-41,40,-16,-40,-58,-48,-56,40,-61,40,40,-60,40,40,40,40,40,-20,-37,-17,-49,40,-57,40,40,40,40,40,]),'TIMES':([1,4,6,7,8,9,21,22,45,52,54,56,57,58,61,62,64,65,66,69,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,90,93,94,96,102,108,109,110,114,115,117,118,119,120,121,122,123,124,125,126,129,131,134,140,141,142,143,144,147,148,],[42,-17,-10,-11,-12,-13,-52,-53,42,42,42,42,-18,42,42,-39,-55,42,-17,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,-46,-47,-62,42,-41,42,-16,-40,-58,-48,-56,42,-61,42,42,-60,42,42,42,42,42,-20,-37,-17,-49,42,-57,42,42,42,42,42,]),'DIVIDE':([1,4,6,7,8,9,21,22,45,52,54,56,57,58,61,62,64,65,66,69,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,90,93,94,96,102,108,109,110,114,115,117,118,119,120,121,122,123,124,125,126,129,131,134,140,141,142,143,144,147,148,],[43,-17,-10,-11,-12,-13,-52,-53,43,43,43,43,-18,43,43,-39,-55,43,-17,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,-46,-47,-62,43,-41,43,-16,-40,-58,-48,-56,43,-61,43,43,-60,43,43,43,43,43,-20,-37,-17,-49,43,-57,43,43,43,43,43,]),'SEPARATOR':([4,6,7,8,9,21,22,45,55,56,57,62,64,69,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,90,93,94,102,105,108,109,110,114,115,117,118,120,121,122,123,124,125,126,129,134,135,140,141,143,144,147,148,],[-17,-10,-11,-12,-13,-52,-53,91,103,-23,-18,-39,-55,-59,-4,-5,-6,-7,-8,-9,-26,-27,-28,-29,-30,-31,-32,-33,-44,-45,-46,-47,-62,-25,-41,-16,127,-40,-58,-48,-56,-54,-61,136,-60,-3,-14,-15,-24,-19,-20,-37,-49,127,-35,-57,-2,-34,-36,-1,]),'DO':([4,6,7,8,9,21,22,52,54,57,62,64,69,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,90,93,94,102,108,109,110,114,115,117,120,121,122,123,125,126,129,134,141,142,143,144,148,],[-17,-10,-11,-12,-13,-52,-53,99,101,-18,-39,-55,-59,-4,-5,-6,-7,-8,-9,-26,-27,-28,-29,-30,-31,-32,-33,-44,-45,-46,-47,-62,-25,-41,-16,-40,-58,-48,-56,-54,-61,-60,-3,-14,-15,-19,-20,-37,-49,-57,146,-2,-34,-1,]),'END':([4,6,7,8,9,21,22,55,56,57,62,64,69,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,90,93,94,102,105,108,109,110,114,115,117,120,121,122,123,124,125,126,129,134,135,140,141,143,144,147,148,],[-17,-10,-11,-12,-13,-52,-53,102,-23,-18,-39,-55,-59,-4,-5,-6,-7,-8,-9,-26,-27,-28,-29,-30,-31,-32,-33,-44,-45,-46,-47,-62,-25,-41,-16,126,-40,-58,-48,-56,-54,-61,-60,-3,-14,-15,-24,-19,-20,-37,-49,141,-35,-57,-2,-34,-36,-1,]),'THEN':([4,6,7,8,9,21,22,57,58,62,64,69,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,90,93,94,102,108,109,110,114,115,117,120,121,122,123,125,126,129,134,141,143,144,148,],[-17,-10,-11,-12,-13,-52,-53,-18,104,-39,-55,-59,-4,-5,-6,-7,-8,-9,-26,-27,-28,-29,-30,-31,-32,-33,-44,-45,-46,-47,-62,-25,-41,-16,-40,-58,-48,-56,-54,-61,-60,-3,-14,-15,-19,-20,-37,-49,-57,-2,-34,-1,]),'RPAREN':([4,6,7,8,9,21,22,44,57,60,61,62,64,65,66,67,69,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,93,94,102,107,108,109,110,113,114,115,117,120,121,122,123,125,126,129,130,131,132,134,141,143,144,148,],[-17,-10,-11,-12,-13,-52,-53,90,-18,108,109,-39,-55,-21,-17,114,-59,-4,-5,-6,-7,-8,-9,-26,-27,-28,-29,-30,-31,-32,-33,-44,-45,-46,-47,117,-62,-25,-41,-16,129,-40,-58,-48,134,-56,-54,-61,-60,-3,-14,-15,-19,-20,-37,-22,-17,-38,-49,-57,-2,-34,-1,]),'COMMA':([4,6,7,8,9,21,22,57,62,64,65,66,69,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,90,93,94,97,102,108,109,110,114,115,117,120,121,122,123,125,126,129,131,134,141,143,144,148,],[50,-10,-11,-12,-13,-52,-53,-18,-39,-55,111,112,-59,-4,-5,-6,-7,-8,-9,-26,-27,-28,-29,-30,-31,-32,-33,-44,-45,-46,-47,-62,-25,-41,50,-16,-40,-58,-48,-56,-54,-61,-60,-3,-14,-15,-19,-20,-37,112,-49,-57,-2,-34,-1,]),'RBRACKET':([4,6,7,8,9,19,21,22,57,62,63,64,65,66,69,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,90,93,94,96,102,108,109,110,114,115,117,120,121,122,123,125,126,129,130,131,132,134,141,143,144,148,],[-17,-10,-11,-12,-13,64,-52,-53,-18,-39,110,-55,-21,-17,-59,-4,-5,-6,-7,-8,-9,-26,-27,-28,-29,-30,-31,-32,-33,-44,-45,-46,-47,-62,-25,-41,120,-16,-40,-58,-48,-56,-54,-61,-60,-3,-14,-15,-19,-20,-37,-22,-17,-38,-49,-57,-2,-34,-1,]),'IN':([4,6,7,8,9,21,22,53,57,62,64,69,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,90,93,94,102,108,109,110,114,115,117,119,120,121,122,123,125,126,129,134,141,143,144,148,],[-17,-10,-11,-12,-13,-52,-53,100,-18,-39,-55,-59,-4,-5,-6,-7,-8,-9,-26,-27,-28,-29,-30,-31,-32,-33,-44,-45,-46,-47,-62,-25,-41,-16,-40,-58,-48,-56,-54,-61,137,-60,-3,-14,-15,-19,-20,-37,-49,-57,-2,-34,-1,]),'ELSE':([4,6,7,8,9,21,22,57,62,64,69,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,90,93,94,102,108,109,110,114,115,117,120,121,122,123,125,126,129,134,141,143,144,148,],[-17,-10,-11,-12,-13,-52,-53,-18,-39,-55,-59,-4,-5,-6,-7,-8,-9,-26,-27,-28,-29,-30,-31,-32,-33,-44,-45,-46,-47,-62,-25,-41,-16,-40,-58,-48,-56,-54,-61,-60,-3,-14,-15,138,-20,-37,-49,-57,-2,-34,-1,]),'ASSIGN':([4,46,66,106,131,139,],[47,92,47,128,47,145,]),'DOT':([4,48,51,66,95,131,],[51,95,-50,51,-51,51,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'expression':([0,2,5,11,12,13,14,17,18,19,24,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,47,49,60,67,68,91,92,99,100,101,103,104,111,112,128,136,137,138,145,146,],[1,45,52,54,56,57,58,61,62,65,69,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,65,93,96,65,65,115,118,119,121,122,123,124,125,65,65,140,142,143,144,147,148,]),'identifier_list':([0,2,5,11,12,13,14,17,18,19,24,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,47,49,50,60,67,68,91,92,99,100,101,103,104,111,112,128,136,137,138,145,146,],[23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,98,23,23,23,23,23,23,23,23,23,23,23,133,23,23,23,23,23,23,]),'dots':([4,66,131,],[48,48,48,]),'body':([12,],[55,]),'expression_list':([19,44,60,67,111,112,],[63,89,107,113,130,132,]),'struct_body':([59,116,],[105,135,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> expression","S'",1,None,None,None),
  ('expression -> FOR expression SEPARATOR expression SEPARATOR expression DO expression','expression',8,'p_expression_for','for_expr.py',10),
  ('expression -> LOCAL IDENTIFIER ASSIGN expression IN expression','expression',6,'p_expression_local','local_expr.py',10),
  ('expression -> WHILE expression DO expression','expression',4,'p_expression_while','while_expr.py',10),
  ('expression -> expression LESS_THEN expression','expression',3,'p_expression_binary_comparison','comparison_expr.py',11),
  ('expression -> expression GREATER_THEN expression','expression',3,'p_expression_binary_comparison','comparison_expr.py',12),
  ('expression -> expression LESS_EQUALS expression','expression',3,'p_expression_binary_comparison','comparison_expr.py',13),
  ('expression -> expression GREATER_EQUALS expression','expression',3,'p_expression_binary_comparison','comparison_expr.py',14),
  ('expression -> expression EQUALS expression','expression',3,'p_expression_binary_comparison','comparison_expr.py',15),
  ('expression -> expression NOT_EQUALS expression','expression',3,'p_expression_binary_comparison','comparison_expr.py',16),
  ('expression -> NUMBER','expression',1,'p_expression_single_value','datatypes.py',14),
  ('expression -> FLOAT','expression',1,'p_expression_single_value','datatypes.py',15),
  ('expression -> CHAR','expression',1,'p_expression_single_value','datatypes.py',16),
  ('expression -> STRING','expression',1,'p_expression_single_value','datatypes.py',17),
  ('expression -> LOCK IDENTIFIER IN expression','expression',4,'p_expression_lock','lock_expr.py',14),
  ('expression -> LOOP expression DO expression','expression',4,'p_expression_loop','loop_expr.py',14),
  ('expression -> BEGIN body END','expression',3,'p_expression_sequences','sequences_expr.py',14),
  ('expression -> IDENTIFIER','expression',1,'p_expression_id','assignment_expr.py',15),
  ('expression -> NOT expression','expression',2,'p_expression_unary_not','boolean_expr.py',15),
  ('expression -> IF expression THEN expression','expression',4,'p_expression_it','ite_expr.py',15),
  ('expression -> STRUCT BEGIN struct_body END','expression',4,'p_expression_struct','struct_expr.py',16),
  ('expression_list -> expression','expression_list',1,'p_argument_list','lambda_expr.py',17),
  ('expression_list -> expression COMMA expression_list','expression_list',3,'p_argument_list','lambda_expr.py',18),
  ('body -> expression','body',1,'p_bodyn','sequences_expr.py',18),
  ('body -> body SEPARATOR expression','body',3,'p_bodyn','sequences_expr.py',19),
  ('expression -> IDENTIFIER ASSIGN expression','expression',3,'p_expression_assign','assignment_expr.py',19),
  ('expression -> expression AND expression','expression',3,'p_expression_binary_boolean','boolean_expr.py',19),
  ('expression -> expression NAND expression','expression',3,'p_expression_binary_boolean','boolean_expr.py',20),
  ('expression -> expression OR expression','expression',3,'p_expression_binary_boolean','boolean_expr.py',21),
  ('expression -> expression NOR expression','expression',3,'p_expression_binary_boolean','boolean_expr.py',22),
  ('expression -> expression XOR expression','expression',3,'p_expression_binary_boolean','boolean_expr.py',23),
  ('expression -> expression EQ expression','expression',3,'p_expression_binary_boolean','boolean_expr.py',24),
  ('expression -> expression NEQ expression','expression',3,'p_expression_binary_boolean','boolean_expr.py',25),
  ('expression -> expression IMPL expression','expression',3,'p_expression_binary_boolean','boolean_expr.py',26),
  ('expression -> IF expression THEN expression ELSE expression','expression',6,'p_expression_ite','ite_expr.py',19),
  ('struct_body -> IDENTIFIER ASSIGN expression','struct_body',3,'p_struct_body','struct_expr.py',20),
  ('struct_body -> struct_body SEPARATOR IDENTIFIER ASSIGN expression','struct_body',5,'p_struct_body','struct_expr.py',21),
  ('expression -> LIST LPAREN expression_list RPAREN','expression',4,'p_expression_list','datatypes.py',21),
  ('expression_list -> IDENTIFIER COMMA expression_list','expression_list',3,'p_argument_list_ID','lambda_expr.py',22),
  ('expression -> MINUS expression','expression',2,'p_expression_unary_minus','arithmetic_expr.py',25),
  ('expression -> LIST LPAREN RPAREN','expression',3,'p_expression_list_empty','datatypes.py',25),
  ('expression -> IDENTIFIER dots IDENTIFIER','expression',3,'p_expression_struct_member_access','struct_expr.py',25),
  ('identifier_list -> IDENTIFIER','identifier_list',1,'p_parameter_list','lambda_expr.py',27),
  ('identifier_list -> IDENTIFIER COMMA identifier_list','identifier_list',3,'p_parameter_list','lambda_expr.py',28),
  ('expression -> expression PLUS expression','expression',3,'p_expression_binary_arithmetic','arithmetic_expr.py',29),
  ('expression -> expression MINUS expression','expression',3,'p_expression_binary_arithmetic','arithmetic_expr.py',30),
  ('expression -> expression TIMES expression','expression',3,'p_expression_binary_arithmetic','arithmetic_expr.py',31),
  ('expression -> expression DIVIDE expression','expression',3,'p_expression_binary_arithmetic','arithmetic_expr.py',32),
  ('expression -> LBRACKET expression_list RBRACKET','expression',3,'p_expression_array','datatypes.py',29),
  ('expression -> ARRAY LPAREN expression_list RPAREN','expression',4,'p_expression_array','datatypes.py',30),
  ('dots -> DOT','dots',1,'p_dot_notation','struct_expr.py',29),
  ('dots -> dots DOT','dots',2,'p_dot_notation','struct_expr.py',30),
  ('expression -> TRUE','expression',1,'p_expression_boolean_value','boolean_expr.py',30),
  ('expression -> FALSE','expression',1,'p_expression_boolean_value','boolean_expr.py',31),
  ('expression -> identifier_list ARROW expression','expression',3,'p_expression_n_lambda','lambda_expr.py',32),
  ('expression -> LBRACKET RBRACKET','expression',2,'p_expression_array_empty','datatypes.py',34),
  ('expression -> ARRAY LPAREN RPAREN','expression',3,'p_expression_array_empty','datatypes.py',35),
  ('expression -> EXTEND IDENTIFIER BEGIN struct_body END','expression',5,'p_struct_extend_expression','struct_expr.py',34),
  ('expression -> LPAREN expression RPAREN','expression',3,'p_expression_parenthesis','arithmetic_expr.py',36),
  ('expression -> ARROW expression','expression',2,'p_expression_0_lambda','lambda_expr.py',36),
  ('expression -> IDENTIFIER LBRACKET expression RBRACKET','expression',4,'p_expression_array_access','datatypes.py',39),
  ('expression -> expression LPAREN expression_list RPAREN','expression',4,'p_expression_call_n_args','lambda_expr.py',40),
  ('expression -> expression LPAREN RPAREN','expression',3,'p_expression_call_0_args','lambda_expr.py',44),
]
