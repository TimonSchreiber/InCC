
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'expressionleftEXTENDleftSTRUCTleftCOMMAleftARROWleftINleftTHENleftELSEleftDOrightASSIGNleftORNORleftANDNANDleftXORNEQEQIMPLleftEQUALSNOT_EQUALSleftLESS_THENGREATER_THENLESS_EQUALSGREATER_EQUALSleftPLUSMINUSleftTIMESDIVIDErightUMINUSrightLPARENleftSEPARATORleftDOTAND ARRAY ARROW ASSIGN BEGIN CHAR COMMA DIVIDE DO DOT ELSE END EQ EQUALS EXTEND FALSE FLOAT FOR GREATER_EQUALS GREATER_THEN IDENTIFIER IF IMPL IN LAMBDA LBRACKET LESS_EQUALS LESS_THEN LIST LOCAL LOCK LOOP LPAREN MINUS NAND NEQ NOR NOT NOT_EQUALS NUMBER OR PLUS RBRACKET RPAREN SEPARATOR STRING STRUCT THEN TIMES TRUE WHILE XORexpression : FOR expression SEPARATOR expression SEPARATOR expression DO expressionexpression : LOCAL IDENTIFIER ASSIGN expression IN expressionexpression : WHILE expression DO expressionexpression : expression LESS_THEN expression\n                  | expression GREATER_THEN expression\n                  | expression LESS_EQUALS expression\n                  | expression GREATER_EQUALS expression\n                  | expression EQUALS expression\n                  | expression NOT_EQUALS expressionexpression : NUMBER\n                  | FLOAT\n                  | CHAR\n                  | STRINGidentifier_list : IDENTIFIER\n                       | IDENTIFIER COMMA identifier_listexpression : LOOP expression DO expressionexpression : BEGIN body ENDexpression : IDENTIFIERexpression : NOT expression %prec UMINUSexpression : IF expression THEN expressionexpression_list : expression\n                       | expression COMMA expression_listbody : expression\n            | body SEPARATOR expressionexpression : MINUS expression %prec UMINUSexpression : IDENTIFIER ASSIGN expressionexpression : expression AND expression\n                  | expression NAND expression\n                  | expression OR expression\n                  | expression NOR expression\n                  | expression XOR expression\n                  | expression EQ expression\n                  | expression NEQ expression\n                  | expression IMPL expressionexpression : IF expression THEN expression ELSE expressionexpression : LOCK identifier_list IN expressiondots : DOT\n            | dots DOTexpression : LIST LPAREN expression_list RPARENexpression : LAMBDA identifier_list ARROW expressionexpression : expression PLUS expression\n                  | expression MINUS expression\n                  | expression TIMES expression\n                  | expression DIVIDE expressionexpression : LIST LPAREN RPARENexpression : LAMBDA ARROW expressionstruct_body : IDENTIFIER ASSIGN expression\n                   | struct_body SEPARATOR IDENTIFIER ASSIGN expressionexpression : LBRACKET expression_list RBRACKET\n                  | ARRAY LPAREN expression_list RPARENexpression : expression LPAREN expression_list RPARENexpression : LPAREN expression RPARENexpression : TRUE\n                  | FALSEexpression : STRUCT BEGIN struct_body ENDexpression : expression LPAREN RPARENexpression : LBRACKET RBRACKET\n                  | ARRAY LPAREN RPARENexpression : expression dots IDENTIFIERexpression : dots IDENTIFIERexpression : IDENTIFIER LBRACKET expression RBRACKETexpression : EXTEND expression BEGIN struct_body END'
    
_lr_action_items = {'FOR':([0,2,5,10,11,12,13,14,17,19,25,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,49,50,60,63,67,93,94,97,98,100,101,102,107,110,132,134,135,136,143,144,],[2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,]),'LOCAL':([0,2,5,10,11,12,13,14,17,19,25,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,49,50,60,63,67,93,94,97,98,100,101,102,107,110,132,134,135,136,143,144,],[3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,]),'WHILE':([0,2,5,10,11,12,13,14,17,19,25,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,49,50,60,63,67,93,94,97,98,100,101,102,107,110,132,134,135,136,143,144,],[5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,]),'NUMBER':([0,2,5,10,11,12,13,14,17,19,25,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,49,50,60,63,67,93,94,97,98,100,101,102,107,110,132,134,135,136,143,144,],[6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,]),'FLOAT':([0,2,5,10,11,12,13,14,17,19,25,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,49,50,60,63,67,93,94,97,98,100,101,102,107,110,132,134,135,136,143,144,],[7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,]),'CHAR':([0,2,5,10,11,12,13,14,17,19,25,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,49,50,60,63,67,93,94,97,98,100,101,102,107,110,132,134,135,136,143,144,],[8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,]),'STRING':([0,2,5,10,11,12,13,14,17,19,25,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,49,50,60,63,67,93,94,97,98,100,101,102,107,110,132,134,135,136,143,144,],[9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,]),'LOOP':([0,2,5,10,11,12,13,14,17,19,25,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,49,50,60,63,67,93,94,97,98,100,101,102,107,110,132,134,135,136,143,144,],[10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,]),'BEGIN':([0,2,4,5,6,7,8,9,10,11,12,13,14,17,19,21,22,23,25,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,49,50,55,57,60,63,65,67,69,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,91,92,93,94,95,97,98,99,100,101,102,105,106,107,108,109,110,112,116,119,120,121,123,124,126,127,129,130,132,134,135,136,139,141,142,143,144,146,],[11,11,-18,11,-10,-11,-12,-13,11,11,11,11,11,11,11,-53,-54,68,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,-19,-25,11,11,-57,11,-60,115,-4,-5,-6,-7,-8,-9,-27,-28,-29,-30,-31,-32,-33,-34,-41,-42,-43,-44,-56,-59,11,11,-26,11,11,-17,11,11,11,-45,-52,11,-46,-49,11,-58,-51,-61,-3,-16,-20,-36,-39,-40,-50,-55,11,11,11,11,-62,-2,-35,11,11,-1,]),'IDENTIFIER':([0,2,3,5,10,11,12,13,14,15,17,18,19,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,49,50,60,63,67,68,70,93,94,97,98,100,101,102,103,107,110,115,131,132,134,135,136,143,144,],[4,4,48,4,4,4,4,4,4,59,4,59,4,69,4,-37,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,92,4,4,4,4,4,114,-38,4,4,4,4,4,4,4,59,4,4,114,137,4,4,4,4,4,4,]),'NOT':([0,2,5,10,11,12,13,14,17,19,25,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,49,50,60,63,67,93,94,97,98,100,101,102,107,110,132,134,135,136,143,144,],[12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,]),'IF':([0,2,5,10,11,12,13,14,17,19,25,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,49,50,60,63,67,93,94,97,98,100,101,102,107,110,132,134,135,136,143,144,],[13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,]),'MINUS':([0,1,2,4,5,6,7,8,9,10,11,12,13,14,17,19,21,22,25,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,47,49,50,51,52,54,55,56,57,60,61,63,65,66,67,69,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,91,92,93,94,95,96,97,98,99,100,101,102,105,106,107,108,109,110,112,116,117,118,119,120,121,122,123,124,126,127,129,130,132,134,135,136,138,139,140,141,142,143,144,145,146,],[14,42,14,-18,14,-10,-11,-12,-13,14,14,14,14,14,14,14,-53,-54,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,42,14,14,42,42,42,-19,42,-25,14,42,14,-57,42,14,-60,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,-41,-42,-43,-44,-56,-59,14,14,42,42,14,14,-17,14,14,14,-45,-52,14,42,-49,14,-58,-51,42,42,-61,42,42,42,42,42,-39,42,-50,-55,14,14,14,14,42,-62,42,42,42,14,14,42,42,]),'LOCK':([0,2,5,10,11,12,13,14,17,19,25,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,49,50,60,63,67,93,94,97,98,100,101,102,107,110,132,134,135,136,143,144,],[15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,]),'LIST':([0,2,5,10,11,12,13,14,17,19,25,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,49,50,60,63,67,93,94,97,98,100,101,102,107,110,132,134,135,136,143,144,],[16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,]),'LAMBDA':([0,2,5,10,11,12,13,14,17,19,25,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,49,50,60,63,67,93,94,97,98,100,101,102,107,110,132,134,135,136,143,144,],[18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,]),'LBRACKET':([0,2,4,5,10,11,12,13,14,17,19,25,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,49,50,60,63,67,93,94,97,98,100,101,102,107,110,132,134,135,136,143,144,],[19,19,50,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,]),'ARRAY':([0,2,5,10,11,12,13,14,17,19,25,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,49,50,60,63,67,93,94,97,98,100,101,102,107,110,132,134,135,136,143,144,],[20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,]),'LPAREN':([0,1,2,4,5,6,7,8,9,10,11,12,13,14,16,17,19,20,21,22,25,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,47,49,50,51,52,54,55,56,57,60,61,63,65,66,67,69,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,91,92,93,94,95,96,97,98,99,100,101,102,105,106,107,108,109,110,112,116,117,118,119,120,121,122,123,124,126,127,129,130,132,134,135,136,138,139,140,141,142,143,144,145,146,],[17,45,17,-18,17,-10,-11,-12,-13,17,17,17,17,17,60,17,17,67,-53,-54,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,45,17,17,45,45,45,45,45,45,17,45,17,-57,45,17,-60,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,-56,-59,17,17,45,45,17,17,-17,17,17,17,-45,-52,17,45,-49,17,-58,-51,45,45,-61,45,45,45,45,45,-39,45,-50,-55,17,17,17,17,45,-62,45,45,45,17,17,45,45,]),'TRUE':([0,2,5,10,11,12,13,14,17,19,25,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,49,50,60,63,67,93,94,97,98,100,101,102,107,110,132,134,135,136,143,144,],[21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,]),'FALSE':([0,2,5,10,11,12,13,14,17,19,25,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,49,50,60,63,67,93,94,97,98,100,101,102,107,110,132,134,135,136,143,144,],[22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,]),'STRUCT':([0,2,5,10,11,12,13,14,17,19,25,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,49,50,60,63,67,93,94,97,98,100,101,102,107,110,132,134,135,136,143,144,],[23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,]),'EXTEND':([0,2,5,10,11,12,13,14,17,19,25,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,49,50,60,63,67,93,94,97,98,100,101,102,107,110,132,134,135,136,143,144,],[25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,]),'DOT':([0,1,2,4,5,6,7,8,9,10,11,12,13,14,17,19,21,22,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,49,50,51,52,54,55,56,57,60,61,63,65,66,67,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,91,92,93,94,95,96,97,98,99,100,101,102,105,106,107,108,109,110,112,116,117,118,119,120,121,122,123,124,126,127,129,130,132,134,135,136,138,139,140,141,142,143,144,145,146,],[26,26,26,-18,26,-10,-11,-12,-13,26,26,26,26,26,26,26,-53,-54,70,26,-37,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,70,26,26,26,26,26,26,26,26,26,26,26,26,-57,26,26,-60,-38,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,-56,-59,26,26,26,26,26,26,-17,26,26,26,-45,-52,26,26,-49,26,-58,-51,26,26,-61,26,26,26,26,26,-39,26,-50,-55,26,26,26,26,26,-62,26,26,26,26,26,26,26,]),'$end':([1,4,6,7,8,9,21,22,55,57,65,69,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,91,92,95,99,105,106,108,109,112,116,119,120,121,123,124,126,127,129,130,139,141,142,146,],[0,-18,-10,-11,-12,-13,-53,-54,-19,-25,-57,-60,-4,-5,-6,-7,-8,-9,-27,-28,-29,-30,-31,-32,-33,-34,-41,-42,-43,-44,-56,-59,-26,-17,-45,-52,-46,-49,-58,-51,-61,-3,-16,-20,-36,-39,-40,-50,-55,-62,-2,-35,-1,]),'LESS_THEN':([1,4,6,7,8,9,21,22,47,51,52,54,55,56,57,61,65,66,69,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,91,92,95,96,99,105,106,108,109,112,116,117,118,119,120,121,122,123,124,126,127,129,130,138,139,140,141,142,145,146,],[27,-18,-10,-11,-12,-13,-53,-54,27,27,27,27,-19,27,-25,27,-57,27,-60,27,-4,-5,-6,-7,27,27,27,27,27,27,27,27,27,27,-41,-42,-43,-44,-56,-59,27,27,-17,-45,-52,27,-49,-58,-51,27,27,-61,27,27,27,27,27,-39,27,-50,-55,27,-62,27,27,27,27,27,]),'GREATER_THEN':([1,4,6,7,8,9,21,22,47,51,52,54,55,56,57,61,65,66,69,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,91,92,95,96,99,105,106,108,109,112,116,117,118,119,120,121,122,123,124,126,127,129,130,138,139,140,141,142,145,146,],[28,-18,-10,-11,-12,-13,-53,-54,28,28,28,28,-19,28,-25,28,-57,28,-60,28,-4,-5,-6,-7,28,28,28,28,28,28,28,28,28,28,-41,-42,-43,-44,-56,-59,28,28,-17,-45,-52,28,-49,-58,-51,28,28,-61,28,28,28,28,28,-39,28,-50,-55,28,-62,28,28,28,28,28,]),'LESS_EQUALS':([1,4,6,7,8,9,21,22,47,51,52,54,55,56,57,61,65,66,69,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,91,92,95,96,99,105,106,108,109,112,116,117,118,119,120,121,122,123,124,126,127,129,130,138,139,140,141,142,145,146,],[29,-18,-10,-11,-12,-13,-53,-54,29,29,29,29,-19,29,-25,29,-57,29,-60,29,-4,-5,-6,-7,29,29,29,29,29,29,29,29,29,29,-41,-42,-43,-44,-56,-59,29,29,-17,-45,-52,29,-49,-58,-51,29,29,-61,29,29,29,29,29,-39,29,-50,-55,29,-62,29,29,29,29,29,]),'GREATER_EQUALS':([1,4,6,7,8,9,21,22,47,51,52,54,55,56,57,61,65,66,69,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,91,92,95,96,99,105,106,108,109,112,116,117,118,119,120,121,122,123,124,126,127,129,130,138,139,140,141,142,145,146,],[30,-18,-10,-11,-12,-13,-53,-54,30,30,30,30,-19,30,-25,30,-57,30,-60,30,-4,-5,-6,-7,30,30,30,30,30,30,30,30,30,30,-41,-42,-43,-44,-56,-59,30,30,-17,-45,-52,30,-49,-58,-51,30,30,-61,30,30,30,30,30,-39,30,-50,-55,30,-62,30,30,30,30,30,]),'EQUALS':([1,4,6,7,8,9,21,22,47,51,52,54,55,56,57,61,65,66,69,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,91,92,95,96,99,105,106,108,109,112,116,117,118,119,120,121,122,123,124,126,127,129,130,138,139,140,141,142,145,146,],[31,-18,-10,-11,-12,-13,-53,-54,31,31,31,31,-19,31,-25,31,-57,31,-60,31,-4,-5,-6,-7,-8,-9,31,31,31,31,31,31,31,31,-41,-42,-43,-44,-56,-59,31,31,-17,-45,-52,31,-49,-58,-51,31,31,-61,31,31,31,31,31,-39,31,-50,-55,31,-62,31,31,31,31,31,]),'NOT_EQUALS':([1,4,6,7,8,9,21,22,47,51,52,54,55,56,57,61,65,66,69,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,91,92,95,96,99,105,106,108,109,112,116,117,118,119,120,121,122,123,124,126,127,129,130,138,139,140,141,142,145,146,],[32,-18,-10,-11,-12,-13,-53,-54,32,32,32,32,-19,32,-25,32,-57,32,-60,32,-4,-5,-6,-7,-8,-9,32,32,32,32,32,32,32,32,-41,-42,-43,-44,-56,-59,32,32,-17,-45,-52,32,-49,-58,-51,32,32,-61,32,32,32,32,32,-39,32,-50,-55,32,-62,32,32,32,32,32,]),'AND':([1,4,6,7,8,9,21,22,47,51,52,54,55,56,57,61,65,66,69,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,91,92,95,96,99,105,106,108,109,112,116,117,118,119,120,121,122,123,124,126,127,129,130,138,139,140,141,142,145,146,],[33,-18,-10,-11,-12,-13,-53,-54,33,33,33,33,-19,33,-25,33,-57,33,-60,33,-4,-5,-6,-7,-8,-9,-27,-28,33,33,-31,-32,-33,-34,-41,-42,-43,-44,-56,-59,33,33,-17,-45,-52,33,-49,-58,-51,33,33,-61,33,33,33,33,33,-39,33,-50,-55,33,-62,33,33,33,33,33,]),'NAND':([1,4,6,7,8,9,21,22,47,51,52,54,55,56,57,61,65,66,69,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,91,92,95,96,99,105,106,108,109,112,116,117,118,119,120,121,122,123,124,126,127,129,130,138,139,140,141,142,145,146,],[34,-18,-10,-11,-12,-13,-53,-54,34,34,34,34,-19,34,-25,34,-57,34,-60,34,-4,-5,-6,-7,-8,-9,-27,-28,34,34,-31,-32,-33,-34,-41,-42,-43,-44,-56,-59,34,34,-17,-45,-52,34,-49,-58,-51,34,34,-61,34,34,34,34,34,-39,34,-50,-55,34,-62,34,34,34,34,34,]),'OR':([1,4,6,7,8,9,21,22,47,51,52,54,55,56,57,61,65,66,69,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,91,92,95,96,99,105,106,108,109,112,116,117,118,119,120,121,122,123,124,126,127,129,130,138,139,140,141,142,145,146,],[35,-18,-10,-11,-12,-13,-53,-54,35,35,35,35,-19,35,-25,35,-57,35,-60,35,-4,-5,-6,-7,-8,-9,-27,-28,-29,-30,-31,-32,-33,-34,-41,-42,-43,-44,-56,-59,35,35,-17,-45,-52,35,-49,-58,-51,35,35,-61,35,35,35,35,35,-39,35,-50,-55,35,-62,35,35,35,35,35,]),'NOR':([1,4,6,7,8,9,21,22,47,51,52,54,55,56,57,61,65,66,69,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,91,92,95,96,99,105,106,108,109,112,116,117,118,119,120,121,122,123,124,126,127,129,130,138,139,140,141,142,145,146,],[36,-18,-10,-11,-12,-13,-53,-54,36,36,36,36,-19,36,-25,36,-57,36,-60,36,-4,-5,-6,-7,-8,-9,-27,-28,-29,-30,-31,-32,-33,-34,-41,-42,-43,-44,-56,-59,36,36,-17,-45,-52,36,-49,-58,-51,36,36,-61,36,36,36,36,36,-39,36,-50,-55,36,-62,36,36,36,36,36,]),'XOR':([1,4,6,7,8,9,21,22,47,51,52,54,55,56,57,61,65,66,69,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,91,92,95,96,99,105,106,108,109,112,116,117,118,119,120,121,122,123,124,126,127,129,130,138,139,140,141,142,145,146,],[37,-18,-10,-11,-12,-13,-53,-54,37,37,37,37,-19,37,-25,37,-57,37,-60,37,-4,-5,-6,-7,-8,-9,37,37,37,37,-31,-32,-33,-34,-41,-42,-43,-44,-56,-59,37,37,-17,-45,-52,37,-49,-58,-51,37,37,-61,37,37,37,37,37,-39,37,-50,-55,37,-62,37,37,37,37,37,]),'EQ':([1,4,6,7,8,9,21,22,47,51,52,54,55,56,57,61,65,66,69,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,91,92,95,96,99,105,106,108,109,112,116,117,118,119,120,121,122,123,124,126,127,129,130,138,139,140,141,142,145,146,],[38,-18,-10,-11,-12,-13,-53,-54,38,38,38,38,-19,38,-25,38,-57,38,-60,38,-4,-5,-6,-7,-8,-9,38,38,38,38,-31,-32,-33,-34,-41,-42,-43,-44,-56,-59,38,38,-17,-45,-52,38,-49,-58,-51,38,38,-61,38,38,38,38,38,-39,38,-50,-55,38,-62,38,38,38,38,38,]),'NEQ':([1,4,6,7,8,9,21,22,47,51,52,54,55,56,57,61,65,66,69,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,91,92,95,96,99,105,106,108,109,112,116,117,118,119,120,121,122,123,124,126,127,129,130,138,139,140,141,142,145,146,],[39,-18,-10,-11,-12,-13,-53,-54,39,39,39,39,-19,39,-25,39,-57,39,-60,39,-4,-5,-6,-7,-8,-9,39,39,39,39,-31,-32,-33,-34,-41,-42,-43,-44,-56,-59,39,39,-17,-45,-52,39,-49,-58,-51,39,39,-61,39,39,39,39,39,-39,39,-50,-55,39,-62,39,39,39,39,39,]),'IMPL':([1,4,6,7,8,9,21,22,47,51,52,54,55,56,57,61,65,66,69,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,91,92,95,96,99,105,106,108,109,112,116,117,118,119,120,121,122,123,124,126,127,129,130,138,139,140,141,142,145,146,],[40,-18,-10,-11,-12,-13,-53,-54,40,40,40,40,-19,40,-25,40,-57,40,-60,40,-4,-5,-6,-7,-8,-9,40,40,40,40,-31,-32,-33,-34,-41,-42,-43,-44,-56,-59,40,40,-17,-45,-52,40,-49,-58,-51,40,40,-61,40,40,40,40,40,-39,40,-50,-55,40,-62,40,40,40,40,40,]),'PLUS':([1,4,6,7,8,9,21,22,47,51,52,54,55,56,57,61,65,66,69,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,91,92,95,96,99,105,106,108,109,112,116,117,118,119,120,121,122,123,124,126,127,129,130,138,139,140,141,142,145,146,],[41,-18,-10,-11,-12,-13,-53,-54,41,41,41,41,-19,41,-25,41,-57,41,-60,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,-41,-42,-43,-44,-56,-59,41,41,-17,-45,-52,41,-49,-58,-51,41,41,-61,41,41,41,41,41,-39,41,-50,-55,41,-62,41,41,41,41,41,]),'TIMES':([1,4,6,7,8,9,21,22,47,51,52,54,55,56,57,61,65,66,69,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,91,92,95,96,99,105,106,108,109,112,116,117,118,119,120,121,122,123,124,126,127,129,130,138,139,140,141,142,145,146,],[43,-18,-10,-11,-12,-13,-53,-54,43,43,43,43,-19,43,-25,43,-57,43,-60,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,-43,-44,-56,-59,43,43,-17,-45,-52,43,-49,-58,-51,43,43,-61,43,43,43,43,43,-39,43,-50,-55,43,-62,43,43,43,43,43,]),'DIVIDE':([1,4,6,7,8,9,21,22,47,51,52,54,55,56,57,61,65,66,69,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,91,92,95,96,99,105,106,108,109,112,116,117,118,119,120,121,122,123,124,126,127,129,130,138,139,140,141,142,145,146,],[44,-18,-10,-11,-12,-13,-53,-54,44,44,44,44,-19,44,-25,44,-57,44,-60,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,-43,-44,-56,-59,44,44,-17,-45,-52,44,-49,-58,-51,44,44,-61,44,44,44,44,44,-39,44,-50,-55,44,-62,44,44,44,44,44,]),'SEPARATOR':([4,6,7,8,9,21,22,47,53,54,55,57,65,69,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,91,92,95,99,105,106,108,109,112,113,116,117,119,120,121,122,123,124,126,127,129,130,133,138,139,141,142,145,146,],[-18,-10,-11,-12,-13,-53,-54,93,100,-23,-19,-25,-57,-60,-4,-5,-6,-7,-8,-9,-27,-28,-29,-30,-31,-32,-33,-34,-41,-42,-43,-44,-56,-59,-26,-17,-45,-52,-46,-49,-58,131,-51,134,-61,-3,-16,-24,-20,-36,-39,-40,-50,-55,131,-47,-62,-2,-35,-48,-1,]),'DO':([4,6,7,8,9,21,22,51,52,55,57,65,69,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,91,92,95,99,105,106,108,109,112,116,119,120,121,123,124,126,127,129,130,139,140,141,142,146,],[-18,-10,-11,-12,-13,-53,-54,97,98,-19,-25,-57,-60,-4,-5,-6,-7,-8,-9,-27,-28,-29,-30,-31,-32,-33,-34,-41,-42,-43,-44,-56,-59,-26,-17,-45,-52,-46,-49,-58,-51,-61,-3,-16,-20,-36,-39,-40,-50,-55,-62,144,-2,-35,-1,]),'END':([4,6,7,8,9,21,22,53,54,55,57,65,69,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,91,92,95,99,105,106,108,109,112,113,116,119,120,121,122,123,124,126,127,129,130,133,138,139,141,142,145,146,],[-18,-10,-11,-12,-13,-53,-54,99,-23,-19,-25,-57,-60,-4,-5,-6,-7,-8,-9,-27,-28,-29,-30,-31,-32,-33,-34,-41,-42,-43,-44,-56,-59,-26,-17,-45,-52,-46,-49,-58,130,-51,-61,-3,-16,-24,-20,-36,-39,-40,-50,-55,139,-47,-62,-2,-35,-48,-1,]),'THEN':([4,6,7,8,9,21,22,55,56,57,65,69,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,91,92,95,99,105,106,108,109,112,116,119,120,121,123,124,126,127,129,130,139,141,142,146,],[-18,-10,-11,-12,-13,-53,-54,-19,101,-25,-57,-60,-4,-5,-6,-7,-8,-9,-27,-28,-29,-30,-31,-32,-33,-34,-41,-42,-43,-44,-56,-59,-26,-17,-45,-52,-46,-49,-58,-51,-61,-3,-16,-20,-36,-39,-40,-50,-55,-62,-2,-35,-1,]),'RPAREN':([4,6,7,8,9,21,22,45,55,57,60,61,65,66,67,69,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,95,99,104,105,106,108,109,111,112,116,119,120,121,123,124,126,127,128,129,130,139,141,142,146,],[-18,-10,-11,-12,-13,-53,-54,91,-19,-25,105,106,-57,-21,112,-60,-4,-5,-6,-7,-8,-9,-27,-28,-29,-30,-31,-32,-33,-34,-41,-42,-43,-44,116,-56,-59,-26,-17,126,-45,-52,-46,-49,129,-58,-51,-61,-3,-16,-20,-36,-39,-40,-22,-50,-55,-62,-2,-35,-1,]),'COMMA':([4,6,7,8,9,21,22,55,57,59,65,66,69,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,91,92,95,99,105,106,108,109,112,116,119,120,121,123,124,126,127,129,130,139,141,142,146,],[-18,-10,-11,-12,-13,-53,-54,-19,-25,103,-57,110,-60,-4,-5,-6,-7,-8,-9,-27,-28,-29,-30,-31,-32,-33,-34,-41,-42,-43,-44,-56,-59,-26,-17,-45,-52,-46,-49,-58,-51,-61,-3,-16,-20,-36,-39,-40,-50,-55,-62,-2,-35,-1,]),'RBRACKET':([4,6,7,8,9,19,21,22,55,57,64,65,66,69,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,91,92,95,96,99,105,106,108,109,112,116,119,120,121,123,124,126,127,128,129,130,139,141,142,146,],[-18,-10,-11,-12,-13,65,-53,-54,-19,-25,109,-57,-21,-60,-4,-5,-6,-7,-8,-9,-27,-28,-29,-30,-31,-32,-33,-34,-41,-42,-43,-44,-56,-59,-26,119,-17,-45,-52,-46,-49,-58,-51,-61,-3,-16,-20,-36,-39,-40,-22,-50,-55,-62,-2,-35,-1,]),'IN':([4,6,7,8,9,21,22,55,57,58,59,65,69,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,91,92,95,99,105,106,108,109,112,116,118,119,120,121,123,124,125,126,127,129,130,139,141,142,146,],[-18,-10,-11,-12,-13,-53,-54,-19,-25,102,-14,-57,-60,-4,-5,-6,-7,-8,-9,-27,-28,-29,-30,-31,-32,-33,-34,-41,-42,-43,-44,-56,-59,-26,-17,-45,-52,-46,-49,-58,-51,135,-61,-3,-16,-20,-36,-15,-39,-40,-50,-55,-62,-2,-35,-1,]),'ELSE':([4,6,7,8,9,21,22,55,57,65,69,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,91,92,95,99,105,106,108,109,112,116,119,120,121,123,124,126,127,129,130,139,141,142,146,],[-18,-10,-11,-12,-13,-53,-54,-19,-25,-57,-60,-4,-5,-6,-7,-8,-9,-27,-28,-29,-30,-31,-32,-33,-34,-41,-42,-43,-44,-56,-59,-26,-17,-45,-52,-46,-49,-58,-51,-61,-3,-16,136,-36,-39,-40,-50,-55,-62,-2,-35,-1,]),'ASSIGN':([4,48,114,137,],[49,94,132,143,]),'ARROW':([18,59,62,125,],[63,-14,107,-15,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'expression':([0,2,5,10,11,12,13,14,17,19,25,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,49,50,60,63,67,93,94,97,98,100,101,102,107,110,132,134,135,136,143,144,],[1,47,51,52,54,55,56,57,61,66,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,66,95,96,66,108,66,117,118,120,121,122,123,124,127,66,138,140,141,142,145,146,]),'dots':([0,1,2,5,10,11,12,13,14,17,19,25,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,47,49,50,51,52,54,55,56,57,60,61,63,66,67,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,93,94,95,96,97,98,100,101,102,107,108,110,117,118,120,121,122,123,124,127,132,134,135,136,138,140,141,142,143,144,145,146,],[24,46,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,46,24,24,46,46,46,46,46,46,24,46,24,46,24,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,24,24,46,46,24,24,24,24,24,24,46,24,46,46,46,46,46,46,46,46,24,24,24,24,46,46,46,46,24,24,46,46,]),'body':([11,],[53,]),'identifier_list':([15,18,103,],[58,62,125,]),'expression_list':([19,45,60,67,110,],[64,90,104,111,128,]),'struct_body':([68,115,],[113,133,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> expression","S'",1,None,None,None),
  ('expression -> FOR expression SEPARATOR expression SEPARATOR expression DO expression','expression',8,'p_expression_for','for_expr.py',10),
  ('expression -> LOCAL IDENTIFIER ASSIGN expression IN expression','expression',6,'p_expression_local','local_expr.py',10),
  ('expression -> WHILE expression DO expression','expression',4,'p_expression_while','while_expr.py',10),
  ('expression -> expression LESS_THEN expression','expression',3,'p_expression_binary_comparison','comparison_expr.py',11),
  ('expression -> expression GREATER_THEN expression','expression',3,'p_expression_binary_comparison','comparison_expr.py',12),
  ('expression -> expression LESS_EQUALS expression','expression',3,'p_expression_binary_comparison','comparison_expr.py',13),
  ('expression -> expression GREATER_EQUALS expression','expression',3,'p_expression_binary_comparison','comparison_expr.py',14),
  ('expression -> expression EQUALS expression','expression',3,'p_expression_binary_comparison','comparison_expr.py',15),
  ('expression -> expression NOT_EQUALS expression','expression',3,'p_expression_binary_comparison','comparison_expr.py',16),
  ('expression -> NUMBER','expression',1,'p_expression_single_value','datatypes.py',14),
  ('expression -> FLOAT','expression',1,'p_expression_single_value','datatypes.py',15),
  ('expression -> CHAR','expression',1,'p_expression_single_value','datatypes.py',16),
  ('expression -> STRING','expression',1,'p_expression_single_value','datatypes.py',17),
  ('identifier_list -> IDENTIFIER','identifier_list',1,'p_identifier_list','lock_expr.py',14),
  ('identifier_list -> IDENTIFIER COMMA identifier_list','identifier_list',3,'p_identifier_list','lock_expr.py',15),
  ('expression -> LOOP expression DO expression','expression',4,'p_expression_loop','loop_expr.py',14),
  ('expression -> BEGIN body END','expression',3,'p_expression_sequences','sequence_expr.py',14),
  ('expression -> IDENTIFIER','expression',1,'p_expression_id','assignment_expr.py',15),
  ('expression -> NOT expression','expression',2,'p_expression_unary_not','boolean_expr.py',15),
  ('expression -> IF expression THEN expression','expression',4,'p_expression_it','ite_expr.py',15),
  ('expression_list -> expression','expression_list',1,'p_expression_list','lambda_expr.py',16),
  ('expression_list -> expression COMMA expression_list','expression_list',3,'p_expression_list','lambda_expr.py',17),
  ('body -> expression','body',1,'p_bodyn','sequence_expr.py',18),
  ('body -> body SEPARATOR expression','body',3,'p_bodyn','sequence_expr.py',19),
  ('expression -> MINUS expression','expression',2,'p_expression_unary_minus','arithmetic_expr.py',19),
  ('expression -> IDENTIFIER ASSIGN expression','expression',3,'p_expression_assign','assignment_expr.py',19),
  ('expression -> expression AND expression','expression',3,'p_expression_binary_boolean','boolean_expr.py',19),
  ('expression -> expression NAND expression','expression',3,'p_expression_binary_boolean','boolean_expr.py',20),
  ('expression -> expression OR expression','expression',3,'p_expression_binary_boolean','boolean_expr.py',21),
  ('expression -> expression NOR expression','expression',3,'p_expression_binary_boolean','boolean_expr.py',22),
  ('expression -> expression XOR expression','expression',3,'p_expression_binary_boolean','boolean_expr.py',23),
  ('expression -> expression EQ expression','expression',3,'p_expression_binary_boolean','boolean_expr.py',24),
  ('expression -> expression NEQ expression','expression',3,'p_expression_binary_boolean','boolean_expr.py',25),
  ('expression -> expression IMPL expression','expression',3,'p_expression_binary_boolean','boolean_expr.py',26),
  ('expression -> IF expression THEN expression ELSE expression','expression',6,'p_expression_ite','ite_expr.py',19),
  ('expression -> LOCK identifier_list IN expression','expression',4,'p_expression_lock','lock_expr.py',19),
  ('dots -> DOT','dots',1,'p_dots','struct_expr.py',20),
  ('dots -> dots DOT','dots',2,'p_dots','struct_expr.py',21),
  ('expression -> LIST LPAREN expression_list RPAREN','expression',4,'p_expression_list_non_empty','datatypes.py',21),
  ('expression -> LAMBDA identifier_list ARROW expression','expression',4,'p_expression_n_lambda','lambda_expr.py',21),
  ('expression -> expression PLUS expression','expression',3,'p_expression_binary_arithmetic','arithmetic_expr.py',23),
  ('expression -> expression MINUS expression','expression',3,'p_expression_binary_arithmetic','arithmetic_expr.py',24),
  ('expression -> expression TIMES expression','expression',3,'p_expression_binary_arithmetic','arithmetic_expr.py',25),
  ('expression -> expression DIVIDE expression','expression',3,'p_expression_binary_arithmetic','arithmetic_expr.py',26),
  ('expression -> LIST LPAREN RPAREN','expression',3,'p_expression_list_empty','datatypes.py',25),
  ('expression -> LAMBDA ARROW expression','expression',3,'p_expression_0_lambda','lambda_expr.py',25),
  ('struct_body -> IDENTIFIER ASSIGN expression','struct_body',3,'p_struct_body','struct_expr.py',25),
  ('struct_body -> struct_body SEPARATOR IDENTIFIER ASSIGN expression','struct_body',5,'p_struct_body','struct_expr.py',26),
  ('expression -> LBRACKET expression_list RBRACKET','expression',3,'p_expression_array_non_empty','datatypes.py',29),
  ('expression -> ARRAY LPAREN expression_list RPAREN','expression',4,'p_expression_array_non_empty','datatypes.py',30),
  ('expression -> expression LPAREN expression_list RPAREN','expression',4,'p_expression_call_n_args','lambda_expr.py',29),
  ('expression -> LPAREN expression RPAREN','expression',3,'p_expression_parenthesis','arithmetic_expr.py',30),
  ('expression -> TRUE','expression',1,'p_expression_boolean_value','boolean_expr.py',30),
  ('expression -> FALSE','expression',1,'p_expression_boolean_value','boolean_expr.py',31),
  ('expression -> STRUCT BEGIN struct_body END','expression',4,'p_expression_struct','struct_expr.py',30),
  ('expression -> expression LPAREN RPAREN','expression',3,'p_expression_call_0_args','lambda_expr.py',33),
  ('expression -> LBRACKET RBRACKET','expression',2,'p_expression_array_empty','datatypes.py',34),
  ('expression -> ARRAY LPAREN RPAREN','expression',3,'p_expression_array_empty','datatypes.py',35),
  ('expression -> expression dots IDENTIFIER','expression',3,'p_expression_struct_member_access','struct_expr.py',34),
  ('expression -> dots IDENTIFIER','expression',2,'p_expression_dots_id','struct_expr.py',38),
  ('expression -> IDENTIFIER LBRACKET expression RBRACKET','expression',4,'p_expression_array_access','datatypes.py',39),
  ('expression -> EXTEND expression BEGIN struct_body END','expression',5,'p_struct_extend_expression','struct_expr.py',42),
]
