
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'expressionleftCOMMAleftARROWleftINleftTHENleftELSEleftDOrightASSIGNleftORNORleftANDNANDleftXORNEQEQIMPLleftEQUALSNOT_EQUALSleftLESS_THENGREATER_THENLESS_EQUALSGREATER_EQUALSleftPLUSMINUSleftTIMESDIVIDErightUMINUSrightLPARENleftSEPARATORAND ARRAY ARROW ASSIGN BEGIN CHAR COMMA DIVIDE DO ELSE END EQ EQUALS FALSE FLOAT FOR GREATER_EQUALS GREATER_THEN IDENTIFIER IF IMPL IN LBRACKET LESS_EQUALS LESS_THEN LIST LOCAL LOCK LOOP LPAREN MINUS NAND NEQ NOR NOT NOT_EQUALS NUMBER OR PLUS RBRACKET RPAREN SEPARATOR STRING THEN TIMES TRUE WHILE XORexpression : FOR expression SEPARATOR expression SEPARATOR expression DO expressionexpression : LOCAL IDENTIFIER ASSIGN expression IN expressionexpression : WHILE expression DO expressionexpression : expression LESS_THEN expression\n                  | expression GREATER_THEN expression\n                  | expression LESS_EQUALS expression\n                  | expression GREATER_EQUALS expression\n                  | expression EQUALS expression\n                  | expression NOT_EQUALS expressionexpression : NUMBER\n                  | FLOAT\n                  | CHAR\n                  | STRINGexpression : LOCK IDENTIFIER IN expressionexpression : LOOP expression DO expressionexpression : BEGIN body ENDexpression : IDENTIFIERexpression : NOT expression %prec UMINUSexpression : IF expression THEN expressionexpression_list : expression\n                       | expression COMMA expression_listbody : expression\n            | body SEPARATOR expressionexpression : IDENTIFIER ASSIGN expressionexpression : expression AND expression\n                  | expression NAND expression\n                  | expression OR expression\n                  | expression NOR expression\n                  | expression XOR expression\n                  | expression EQ expression\n                  | expression NEQ expression\n                  | expression IMPL expressionexpression : IF expression THEN expression ELSE expressionexpression : LIST LPAREN expression_list RPARENexpression_list : IDENTIFIER COMMA expression_listexpression : MINUS expression %prec UMINUSexpression : LIST LPAREN RPARENidentifier_list : IDENTIFIER\n                       | IDENTIFIER COMMA identifier_listexpression : expression PLUS expression\n                  | expression MINUS expression\n                  | expression TIMES expression\n                  | expression DIVIDE expressionexpression : LBRACKET expression_list RBRACKET\n                  | ARRAY LPAREN expression_list RPARENexpression : TRUE\n                  | FALSEexpression : identifier_list ARROW expressionexpression : LBRACKET RBRACKET\n                  | ARRAY LPAREN RPARENexpression : LPAREN expression RPARENexpression : ARROW expressionexpression : IDENTIFIER LBRACKET expression RBRACKETexpression : expression LPAREN expression_list RPARENexpression : expression LPAREN RPAREN'
    
_lr_action_items = {'FOR':([0,2,5,11,12,13,14,16,17,18,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,45,46,55,62,63,85,86,91,92,93,95,96,101,102,121,122,123,127,],[2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,]),'LOCAL':([0,2,5,11,12,13,14,16,17,18,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,45,46,55,62,63,85,86,91,92,93,95,96,101,102,121,122,123,127,],[3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,]),'WHILE':([0,2,5,11,12,13,14,16,17,18,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,45,46,55,62,63,85,86,91,92,93,95,96,101,102,121,122,123,127,],[5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,]),'NUMBER':([0,2,5,11,12,13,14,16,17,18,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,45,46,55,62,63,85,86,91,92,93,95,96,101,102,121,122,123,127,],[6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,]),'FLOAT':([0,2,5,11,12,13,14,16,17,18,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,45,46,55,62,63,85,86,91,92,93,95,96,101,102,121,122,123,127,],[7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,]),'CHAR':([0,2,5,11,12,13,14,16,17,18,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,45,46,55,62,63,85,86,91,92,93,95,96,101,102,121,122,123,127,],[8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,]),'STRING':([0,2,5,11,12,13,14,16,17,18,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,45,46,55,62,63,85,86,91,92,93,95,96,101,102,121,122,123,127,],[9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,]),'LOCK':([0,2,5,11,12,13,14,16,17,18,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,45,46,55,62,63,85,86,91,92,93,95,96,101,102,121,122,123,127,],[10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,]),'LOOP':([0,2,5,11,12,13,14,16,17,18,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,45,46,55,62,63,85,86,91,92,93,95,96,101,102,121,122,123,127,],[11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,]),'BEGIN':([0,2,5,11,12,13,14,16,17,18,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,45,46,55,62,63,85,86,91,92,93,95,96,101,102,121,122,123,127,],[12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,]),'IDENTIFIER':([0,2,3,5,10,11,12,13,14,16,17,18,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,45,46,47,55,62,63,85,86,91,92,93,95,96,101,102,121,122,123,127,],[4,4,44,4,49,4,4,4,4,4,4,61,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,61,4,4,89,61,61,4,4,4,4,4,4,4,4,61,117,4,4,4,4,]),'NOT':([0,2,5,11,12,13,14,16,17,18,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,45,46,55,62,63,85,86,91,92,93,95,96,101,102,121,122,123,127,],[13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,]),'IF':([0,2,5,11,12,13,14,16,17,18,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,45,46,55,62,63,85,86,91,92,93,95,96,101,102,121,122,123,127,],[14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,]),'LIST':([0,2,5,11,12,13,14,16,17,18,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,45,46,55,62,63,85,86,91,92,93,95,96,101,102,121,122,123,127,],[15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,]),'MINUS':([0,1,2,4,5,6,7,8,9,11,12,13,14,16,17,18,20,21,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,45,46,48,50,52,53,54,55,56,57,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,84,85,86,87,88,91,92,93,94,95,96,98,99,100,101,102,104,105,106,107,108,109,110,111,112,113,114,115,117,120,121,122,123,124,125,126,127,128,],[17,39,17,-17,17,-10,-11,-12,-13,17,17,17,17,17,17,17,-46,-47,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,39,17,17,39,39,39,-18,39,17,39,-36,-49,39,-17,17,17,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,-40,-41,-42,-43,-55,17,17,39,39,17,17,17,-16,17,17,-37,-51,-44,17,17,-50,39,-54,39,39,-53,39,39,39,39,39,-34,-17,-45,17,17,17,39,39,39,17,39,]),'LBRACKET':([0,2,4,5,11,12,13,14,16,17,18,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,45,46,55,61,62,63,85,86,91,92,93,95,96,101,102,117,121,122,123,127,],[18,18,46,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,46,18,18,18,18,18,18,18,18,18,18,18,46,18,18,18,18,]),'ARRAY':([0,2,5,11,12,13,14,16,17,18,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,45,46,55,62,63,85,86,91,92,93,95,96,101,102,121,122,123,127,],[19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,]),'TRUE':([0,2,5,11,12,13,14,16,17,18,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,45,46,55,62,63,85,86,91,92,93,95,96,101,102,121,122,123,127,],[20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,]),'FALSE':([0,2,5,11,12,13,14,16,17,18,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,45,46,55,62,63,85,86,91,92,93,95,96,101,102,121,122,123,127,],[21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,]),'LPAREN':([0,1,2,4,5,6,7,8,9,11,12,13,14,15,16,17,18,19,20,21,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,45,46,48,50,52,53,54,55,56,57,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,84,85,86,87,88,91,92,93,94,95,96,98,99,100,101,102,104,105,106,107,108,109,110,111,112,113,114,115,117,120,121,122,123,124,125,126,127,128,],[16,42,16,-17,16,-10,-11,-12,-13,16,16,16,16,55,16,16,16,62,-46,-47,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,42,16,16,42,42,42,42,42,16,42,42,-49,42,-17,16,16,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,-55,16,16,42,42,16,16,16,-16,16,16,-37,-51,-44,16,16,-50,42,-54,42,42,-53,42,42,42,42,42,-34,-17,-45,16,16,16,42,42,42,16,42,]),'ARROW':([0,2,4,5,11,12,13,14,16,17,18,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,45,46,55,61,62,63,85,86,89,90,91,92,93,95,96,101,102,117,119,121,122,123,127,],[23,23,-38,23,23,23,23,23,23,23,23,63,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,-38,23,23,23,23,-38,-39,23,23,23,23,23,23,23,-38,63,23,23,23,23,]),'$end':([1,4,6,7,8,9,20,21,53,57,59,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,84,87,94,98,99,100,104,105,106,109,110,111,112,114,115,120,125,126,128,],[0,-17,-10,-11,-12,-13,-46,-47,-18,-36,-49,-52,-4,-5,-6,-7,-8,-9,-25,-26,-27,-28,-29,-30,-31,-32,-40,-41,-42,-43,-55,-24,-16,-37,-51,-44,-50,-48,-54,-53,-3,-14,-15,-19,-34,-45,-2,-33,-1,]),'LESS_THEN':([1,4,6,7,8,9,20,21,43,48,50,52,53,54,56,57,59,60,61,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,84,87,88,94,98,99,100,104,105,106,107,108,109,110,111,112,113,114,115,117,120,124,125,126,128,],[24,-17,-10,-11,-12,-13,-46,-47,24,24,24,24,-18,24,24,-36,-49,24,-17,24,-4,-5,-6,-7,24,24,24,24,24,24,24,24,24,24,-40,-41,-42,-43,-55,24,24,-16,-37,-51,-44,-50,24,-54,24,24,-53,24,24,24,24,24,-34,-17,-45,24,24,24,24,]),'GREATER_THEN':([1,4,6,7,8,9,20,21,43,48,50,52,53,54,56,57,59,60,61,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,84,87,88,94,98,99,100,104,105,106,107,108,109,110,111,112,113,114,115,117,120,124,125,126,128,],[25,-17,-10,-11,-12,-13,-46,-47,25,25,25,25,-18,25,25,-36,-49,25,-17,25,-4,-5,-6,-7,25,25,25,25,25,25,25,25,25,25,-40,-41,-42,-43,-55,25,25,-16,-37,-51,-44,-50,25,-54,25,25,-53,25,25,25,25,25,-34,-17,-45,25,25,25,25,]),'LESS_EQUALS':([1,4,6,7,8,9,20,21,43,48,50,52,53,54,56,57,59,60,61,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,84,87,88,94,98,99,100,104,105,106,107,108,109,110,111,112,113,114,115,117,120,124,125,126,128,],[26,-17,-10,-11,-12,-13,-46,-47,26,26,26,26,-18,26,26,-36,-49,26,-17,26,-4,-5,-6,-7,26,26,26,26,26,26,26,26,26,26,-40,-41,-42,-43,-55,26,26,-16,-37,-51,-44,-50,26,-54,26,26,-53,26,26,26,26,26,-34,-17,-45,26,26,26,26,]),'GREATER_EQUALS':([1,4,6,7,8,9,20,21,43,48,50,52,53,54,56,57,59,60,61,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,84,87,88,94,98,99,100,104,105,106,107,108,109,110,111,112,113,114,115,117,120,124,125,126,128,],[27,-17,-10,-11,-12,-13,-46,-47,27,27,27,27,-18,27,27,-36,-49,27,-17,27,-4,-5,-6,-7,27,27,27,27,27,27,27,27,27,27,-40,-41,-42,-43,-55,27,27,-16,-37,-51,-44,-50,27,-54,27,27,-53,27,27,27,27,27,-34,-17,-45,27,27,27,27,]),'EQUALS':([1,4,6,7,8,9,20,21,43,48,50,52,53,54,56,57,59,60,61,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,84,87,88,94,98,99,100,104,105,106,107,108,109,110,111,112,113,114,115,117,120,124,125,126,128,],[28,-17,-10,-11,-12,-13,-46,-47,28,28,28,28,-18,28,28,-36,-49,28,-17,28,-4,-5,-6,-7,-8,-9,28,28,28,28,28,28,28,28,-40,-41,-42,-43,-55,28,28,-16,-37,-51,-44,-50,28,-54,28,28,-53,28,28,28,28,28,-34,-17,-45,28,28,28,28,]),'NOT_EQUALS':([1,4,6,7,8,9,20,21,43,48,50,52,53,54,56,57,59,60,61,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,84,87,88,94,98,99,100,104,105,106,107,108,109,110,111,112,113,114,115,117,120,124,125,126,128,],[29,-17,-10,-11,-12,-13,-46,-47,29,29,29,29,-18,29,29,-36,-49,29,-17,29,-4,-5,-6,-7,-8,-9,29,29,29,29,29,29,29,29,-40,-41,-42,-43,-55,29,29,-16,-37,-51,-44,-50,29,-54,29,29,-53,29,29,29,29,29,-34,-17,-45,29,29,29,29,]),'AND':([1,4,6,7,8,9,20,21,43,48,50,52,53,54,56,57,59,60,61,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,84,87,88,94,98,99,100,104,105,106,107,108,109,110,111,112,113,114,115,117,120,124,125,126,128,],[30,-17,-10,-11,-12,-13,-46,-47,30,30,30,30,-18,30,30,-36,-49,30,-17,30,-4,-5,-6,-7,-8,-9,-25,-26,30,30,-29,-30,-31,-32,-40,-41,-42,-43,-55,30,30,-16,-37,-51,-44,-50,30,-54,30,30,-53,30,30,30,30,30,-34,-17,-45,30,30,30,30,]),'NAND':([1,4,6,7,8,9,20,21,43,48,50,52,53,54,56,57,59,60,61,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,84,87,88,94,98,99,100,104,105,106,107,108,109,110,111,112,113,114,115,117,120,124,125,126,128,],[31,-17,-10,-11,-12,-13,-46,-47,31,31,31,31,-18,31,31,-36,-49,31,-17,31,-4,-5,-6,-7,-8,-9,-25,-26,31,31,-29,-30,-31,-32,-40,-41,-42,-43,-55,31,31,-16,-37,-51,-44,-50,31,-54,31,31,-53,31,31,31,31,31,-34,-17,-45,31,31,31,31,]),'OR':([1,4,6,7,8,9,20,21,43,48,50,52,53,54,56,57,59,60,61,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,84,87,88,94,98,99,100,104,105,106,107,108,109,110,111,112,113,114,115,117,120,124,125,126,128,],[32,-17,-10,-11,-12,-13,-46,-47,32,32,32,32,-18,32,32,-36,-49,32,-17,32,-4,-5,-6,-7,-8,-9,-25,-26,-27,-28,-29,-30,-31,-32,-40,-41,-42,-43,-55,32,32,-16,-37,-51,-44,-50,32,-54,32,32,-53,32,32,32,32,32,-34,-17,-45,32,32,32,32,]),'NOR':([1,4,6,7,8,9,20,21,43,48,50,52,53,54,56,57,59,60,61,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,84,87,88,94,98,99,100,104,105,106,107,108,109,110,111,112,113,114,115,117,120,124,125,126,128,],[33,-17,-10,-11,-12,-13,-46,-47,33,33,33,33,-18,33,33,-36,-49,33,-17,33,-4,-5,-6,-7,-8,-9,-25,-26,-27,-28,-29,-30,-31,-32,-40,-41,-42,-43,-55,33,33,-16,-37,-51,-44,-50,33,-54,33,33,-53,33,33,33,33,33,-34,-17,-45,33,33,33,33,]),'XOR':([1,4,6,7,8,9,20,21,43,48,50,52,53,54,56,57,59,60,61,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,84,87,88,94,98,99,100,104,105,106,107,108,109,110,111,112,113,114,115,117,120,124,125,126,128,],[34,-17,-10,-11,-12,-13,-46,-47,34,34,34,34,-18,34,34,-36,-49,34,-17,34,-4,-5,-6,-7,-8,-9,34,34,34,34,-29,-30,-31,-32,-40,-41,-42,-43,-55,34,34,-16,-37,-51,-44,-50,34,-54,34,34,-53,34,34,34,34,34,-34,-17,-45,34,34,34,34,]),'EQ':([1,4,6,7,8,9,20,21,43,48,50,52,53,54,56,57,59,60,61,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,84,87,88,94,98,99,100,104,105,106,107,108,109,110,111,112,113,114,115,117,120,124,125,126,128,],[35,-17,-10,-11,-12,-13,-46,-47,35,35,35,35,-18,35,35,-36,-49,35,-17,35,-4,-5,-6,-7,-8,-9,35,35,35,35,-29,-30,-31,-32,-40,-41,-42,-43,-55,35,35,-16,-37,-51,-44,-50,35,-54,35,35,-53,35,35,35,35,35,-34,-17,-45,35,35,35,35,]),'NEQ':([1,4,6,7,8,9,20,21,43,48,50,52,53,54,56,57,59,60,61,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,84,87,88,94,98,99,100,104,105,106,107,108,109,110,111,112,113,114,115,117,120,124,125,126,128,],[36,-17,-10,-11,-12,-13,-46,-47,36,36,36,36,-18,36,36,-36,-49,36,-17,36,-4,-5,-6,-7,-8,-9,36,36,36,36,-29,-30,-31,-32,-40,-41,-42,-43,-55,36,36,-16,-37,-51,-44,-50,36,-54,36,36,-53,36,36,36,36,36,-34,-17,-45,36,36,36,36,]),'IMPL':([1,4,6,7,8,9,20,21,43,48,50,52,53,54,56,57,59,60,61,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,84,87,88,94,98,99,100,104,105,106,107,108,109,110,111,112,113,114,115,117,120,124,125,126,128,],[37,-17,-10,-11,-12,-13,-46,-47,37,37,37,37,-18,37,37,-36,-49,37,-17,37,-4,-5,-6,-7,-8,-9,37,37,37,37,-29,-30,-31,-32,-40,-41,-42,-43,-55,37,37,-16,-37,-51,-44,-50,37,-54,37,37,-53,37,37,37,37,37,-34,-17,-45,37,37,37,37,]),'PLUS':([1,4,6,7,8,9,20,21,43,48,50,52,53,54,56,57,59,60,61,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,84,87,88,94,98,99,100,104,105,106,107,108,109,110,111,112,113,114,115,117,120,124,125,126,128,],[38,-17,-10,-11,-12,-13,-46,-47,38,38,38,38,-18,38,38,-36,-49,38,-17,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,-40,-41,-42,-43,-55,38,38,-16,-37,-51,-44,-50,38,-54,38,38,-53,38,38,38,38,38,-34,-17,-45,38,38,38,38,]),'TIMES':([1,4,6,7,8,9,20,21,43,48,50,52,53,54,56,57,59,60,61,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,84,87,88,94,98,99,100,104,105,106,107,108,109,110,111,112,113,114,115,117,120,124,125,126,128,],[40,-17,-10,-11,-12,-13,-46,-47,40,40,40,40,-18,40,40,-36,-49,40,-17,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,-42,-43,-55,40,40,-16,-37,-51,-44,-50,40,-54,40,40,-53,40,40,40,40,40,-34,-17,-45,40,40,40,40,]),'DIVIDE':([1,4,6,7,8,9,20,21,43,48,50,52,53,54,56,57,59,60,61,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,84,87,88,94,98,99,100,104,105,106,107,108,109,110,111,112,113,114,115,117,120,124,125,126,128,],[41,-17,-10,-11,-12,-13,-46,-47,41,41,41,41,-18,41,41,-36,-49,41,-17,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,-42,-43,-55,41,41,-16,-37,-51,-44,-50,41,-54,41,41,-53,41,41,41,41,41,-34,-17,-45,41,41,41,41,]),'SEPARATOR':([4,6,7,8,9,20,21,43,51,52,53,57,59,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,84,87,94,98,99,100,104,105,106,107,109,110,111,112,113,114,115,120,125,126,128,],[-17,-10,-11,-12,-13,-46,-47,85,95,-22,-18,-36,-49,-52,-4,-5,-6,-7,-8,-9,-25,-26,-27,-28,-29,-30,-31,-32,-40,-41,-42,-43,-55,-24,-16,-37,-51,-44,-50,-48,-54,121,-53,-3,-14,-15,-23,-19,-34,-45,-2,-33,-1,]),'DO':([4,6,7,8,9,20,21,48,50,53,57,59,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,84,87,94,98,99,100,104,105,106,109,110,111,112,114,115,120,124,125,126,128,],[-17,-10,-11,-12,-13,-46,-47,91,93,-18,-36,-49,-52,-4,-5,-6,-7,-8,-9,-25,-26,-27,-28,-29,-30,-31,-32,-40,-41,-42,-43,-55,-24,-16,-37,-51,-44,-50,-48,-54,-53,-3,-14,-15,-19,-34,-45,127,-2,-33,-1,]),'END':([4,6,7,8,9,20,21,51,52,53,57,59,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,84,87,94,98,99,100,104,105,106,109,110,111,112,113,114,115,120,125,126,128,],[-17,-10,-11,-12,-13,-46,-47,94,-22,-18,-36,-49,-52,-4,-5,-6,-7,-8,-9,-25,-26,-27,-28,-29,-30,-31,-32,-40,-41,-42,-43,-55,-24,-16,-37,-51,-44,-50,-48,-54,-53,-3,-14,-15,-23,-19,-34,-45,-2,-33,-1,]),'THEN':([4,6,7,8,9,20,21,53,54,57,59,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,84,87,94,98,99,100,104,105,106,109,110,111,112,114,115,120,125,126,128,],[-17,-10,-11,-12,-13,-46,-47,-18,96,-36,-49,-52,-4,-5,-6,-7,-8,-9,-25,-26,-27,-28,-29,-30,-31,-32,-40,-41,-42,-43,-55,-24,-16,-37,-51,-44,-50,-48,-54,-53,-3,-14,-15,-19,-34,-45,-2,-33,-1,]),'RPAREN':([4,6,7,8,9,20,21,42,53,55,56,57,59,60,61,62,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,87,94,97,98,99,100,103,104,105,106,109,110,111,112,114,115,116,117,118,120,125,126,128,],[-17,-10,-11,-12,-13,-46,-47,84,-18,98,99,-36,-49,-20,-17,104,-52,-4,-5,-6,-7,-8,-9,-25,-26,-27,-28,-29,-30,-31,-32,-40,-41,-42,-43,106,-55,-24,-16,115,-37,-51,-44,120,-50,-48,-54,-53,-3,-14,-15,-19,-34,-21,-17,-35,-45,-2,-33,-1,]),'COMMA':([4,6,7,8,9,20,21,53,57,59,60,61,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,84,87,89,94,98,99,100,104,105,106,109,110,111,112,114,115,117,120,125,126,128,],[47,-10,-11,-12,-13,-46,-47,-18,-36,-49,101,102,-52,-4,-5,-6,-7,-8,-9,-25,-26,-27,-28,-29,-30,-31,-32,-40,-41,-42,-43,-55,-24,47,-16,-37,-51,-44,-50,-48,-54,-53,-3,-14,-15,-19,-34,102,-45,-2,-33,-1,]),'RBRACKET':([4,6,7,8,9,18,20,21,53,57,58,59,60,61,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,84,87,88,94,98,99,100,104,105,106,109,110,111,112,114,115,116,117,118,120,125,126,128,],[-17,-10,-11,-12,-13,59,-46,-47,-18,-36,100,-49,-20,-17,-52,-4,-5,-6,-7,-8,-9,-25,-26,-27,-28,-29,-30,-31,-32,-40,-41,-42,-43,-55,-24,109,-16,-37,-51,-44,-50,-48,-54,-53,-3,-14,-15,-19,-34,-21,-17,-35,-45,-2,-33,-1,]),'IN':([4,6,7,8,9,20,21,49,53,57,59,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,84,87,94,98,99,100,104,105,106,108,109,110,111,112,114,115,120,125,126,128,],[-17,-10,-11,-12,-13,-46,-47,92,-18,-36,-49,-52,-4,-5,-6,-7,-8,-9,-25,-26,-27,-28,-29,-30,-31,-32,-40,-41,-42,-43,-55,-24,-16,-37,-51,-44,-50,-48,-54,122,-53,-3,-14,-15,-19,-34,-45,-2,-33,-1,]),'ELSE':([4,6,7,8,9,20,21,53,57,59,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,84,87,94,98,99,100,104,105,106,109,110,111,112,114,115,120,125,126,128,],[-17,-10,-11,-12,-13,-46,-47,-18,-36,-49,-52,-4,-5,-6,-7,-8,-9,-25,-26,-27,-28,-29,-30,-31,-32,-40,-41,-42,-43,-55,-24,-16,-37,-51,-44,-50,-48,-54,-53,-3,-14,-15,123,-34,-45,-2,-33,-1,]),'ASSIGN':([4,44,61,117,],[45,86,45,45,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'expression':([0,2,5,11,12,13,14,16,17,18,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,45,46,55,62,63,85,86,91,92,93,95,96,101,102,121,122,123,127,],[1,43,48,50,52,53,54,56,57,60,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,60,87,88,60,60,105,107,108,110,111,112,113,114,60,60,124,125,126,128,]),'identifier_list':([0,2,5,11,12,13,14,16,17,18,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,45,46,47,55,62,63,85,86,91,92,93,95,96,101,102,121,122,123,127,],[22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,90,22,22,22,22,22,22,22,22,22,22,22,119,22,22,22,22,]),'body':([12,],[51,]),'expression_list':([18,42,55,62,101,102,],[58,83,97,103,116,118,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> expression","S'",1,None,None,None),
  ('expression -> FOR expression SEPARATOR expression SEPARATOR expression DO expression','expression',8,'p_expression_for','for_expr.py',10),
  ('expression -> LOCAL IDENTIFIER ASSIGN expression IN expression','expression',6,'p_expression_local','local_expr.py',10),
  ('expression -> WHILE expression DO expression','expression',4,'p_expression_while','while_expr.py',10),
  ('expression -> expression LESS_THEN expression','expression',3,'p_expression_binary_comparison','comparison_expr.py',11),
  ('expression -> expression GREATER_THEN expression','expression',3,'p_expression_binary_comparison','comparison_expr.py',12),
  ('expression -> expression LESS_EQUALS expression','expression',3,'p_expression_binary_comparison','comparison_expr.py',13),
  ('expression -> expression GREATER_EQUALS expression','expression',3,'p_expression_binary_comparison','comparison_expr.py',14),
  ('expression -> expression EQUALS expression','expression',3,'p_expression_binary_comparison','comparison_expr.py',15),
  ('expression -> expression NOT_EQUALS expression','expression',3,'p_expression_binary_comparison','comparison_expr.py',16),
  ('expression -> NUMBER','expression',1,'p_expression_single_value','datatypes.py',14),
  ('expression -> FLOAT','expression',1,'p_expression_single_value','datatypes.py',15),
  ('expression -> CHAR','expression',1,'p_expression_single_value','datatypes.py',16),
  ('expression -> STRING','expression',1,'p_expression_single_value','datatypes.py',17),
  ('expression -> LOCK IDENTIFIER IN expression','expression',4,'p_expression_lock','lock_expr.py',14),
  ('expression -> LOOP expression DO expression','expression',4,'p_expression_loop','loop_expr.py',14),
  ('expression -> BEGIN body END','expression',3,'p_expression_sequences','sequences_expr.py',14),
  ('expression -> IDENTIFIER','expression',1,'p_expression_id','assignment_expr.py',15),
  ('expression -> NOT expression','expression',2,'p_expression_unary_not','boolean_expr.py',15),
  ('expression -> IF expression THEN expression','expression',4,'p_expression_it','ite_expr.py',15),
  ('expression_list -> expression','expression_list',1,'p_argument_list','lambda_expr.py',17),
  ('expression_list -> expression COMMA expression_list','expression_list',3,'p_argument_list','lambda_expr.py',18),
  ('body -> expression','body',1,'p_bodyn','sequences_expr.py',18),
  ('body -> body SEPARATOR expression','body',3,'p_bodyn','sequences_expr.py',19),
  ('expression -> IDENTIFIER ASSIGN expression','expression',3,'p_expression_assign','assignment_expr.py',19),
  ('expression -> expression AND expression','expression',3,'p_expression_binary_boolean','boolean_expr.py',19),
  ('expression -> expression NAND expression','expression',3,'p_expression_binary_boolean','boolean_expr.py',20),
  ('expression -> expression OR expression','expression',3,'p_expression_binary_boolean','boolean_expr.py',21),
  ('expression -> expression NOR expression','expression',3,'p_expression_binary_boolean','boolean_expr.py',22),
  ('expression -> expression XOR expression','expression',3,'p_expression_binary_boolean','boolean_expr.py',23),
  ('expression -> expression EQ expression','expression',3,'p_expression_binary_boolean','boolean_expr.py',24),
  ('expression -> expression NEQ expression','expression',3,'p_expression_binary_boolean','boolean_expr.py',25),
  ('expression -> expression IMPL expression','expression',3,'p_expression_binary_boolean','boolean_expr.py',26),
  ('expression -> IF expression THEN expression ELSE expression','expression',6,'p_expression_ite','ite_expr.py',19),
  ('expression -> LIST LPAREN expression_list RPAREN','expression',4,'p_expression_list','datatypes.py',21),
  ('expression_list -> IDENTIFIER COMMA expression_list','expression_list',3,'p_argument_list_ID','lambda_expr.py',22),
  ('expression -> MINUS expression','expression',2,'p_expression_unary_minus','arithmetic_expr.py',25),
  ('expression -> LIST LPAREN RPAREN','expression',3,'p_expression_list_empty','datatypes.py',25),
  ('identifier_list -> IDENTIFIER','identifier_list',1,'p_parameter_list','lambda_expr.py',27),
  ('identifier_list -> IDENTIFIER COMMA identifier_list','identifier_list',3,'p_parameter_list','lambda_expr.py',28),
  ('expression -> expression PLUS expression','expression',3,'p_expression_binary_arithmetic','arithmetic_expr.py',29),
  ('expression -> expression MINUS expression','expression',3,'p_expression_binary_arithmetic','arithmetic_expr.py',30),
  ('expression -> expression TIMES expression','expression',3,'p_expression_binary_arithmetic','arithmetic_expr.py',31),
  ('expression -> expression DIVIDE expression','expression',3,'p_expression_binary_arithmetic','arithmetic_expr.py',32),
  ('expression -> LBRACKET expression_list RBRACKET','expression',3,'p_expression_array','datatypes.py',29),
  ('expression -> ARRAY LPAREN expression_list RPAREN','expression',4,'p_expression_array','datatypes.py',30),
  ('expression -> TRUE','expression',1,'p_expression_boolean_value','boolean_expr.py',30),
  ('expression -> FALSE','expression',1,'p_expression_boolean_value','boolean_expr.py',31),
  ('expression -> identifier_list ARROW expression','expression',3,'p_expression_n_lambda','lambda_expr.py',32),
  ('expression -> LBRACKET RBRACKET','expression',2,'p_expression_array_empty','datatypes.py',34),
  ('expression -> ARRAY LPAREN RPAREN','expression',3,'p_expression_array_empty','datatypes.py',35),
  ('expression -> LPAREN expression RPAREN','expression',3,'p_expression_parenthesis','arithmetic_expr.py',36),
  ('expression -> ARROW expression','expression',2,'p_expression_0_lambda','lambda_expr.py',36),
  ('expression -> IDENTIFIER LBRACKET expression RBRACKET','expression',4,'p_expression_array_access','datatypes.py',39),
  ('expression -> expression LPAREN expression_list RPAREN','expression',4,'p_expression_call_n_args','lambda_expr.py',40),
  ('expression -> expression LPAREN RPAREN','expression',3,'p_expression_call_0_args','lambda_expr.py',44),
]
