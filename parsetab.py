
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'expressionleftARROWleftINleftTHENleftELSEleftDOrightASSIGNleftORNORleftANDNANDleftXORNEQEQIMPLleftEQUALSNOT_EQUALSleftLESS_THENGREATER_THENLESS_EQUALSGREATER_EQUALSleftPLUSMINUSleftTIMESDIVIDErightUMINUSrightLPARENRPARENleftSEPARATORAND ARROW ASSIGN BEGIN DIVIDE DO ELSE END EQ EQUALS FALSE FLOAT FOR GREATER_EQUALS GREATER_THEN IDENTIFIER IF IMPL IN LESS_EQUALS LESS_THEN LOCAL LOCK LOOP LPAREN MINUS NAND NEQ NOR NOT NOT_EQUALS NUMBER OR PLUS RPAREN SEPARATOR THEN TIMES TRUE WHILE XORexpression : FOR expression SEPARATOR expression SEPARATOR expression DO expressionexpression : LOCAL IDENTIFIER ASSIGN expression IN expressionexpression : WHILE expression DO expressionexpression : expression LESS_THEN expression\n                  | expression GREATER_THEN expression\n                  | expression LESS_EQUALS expression\n                  | expression GREATER_EQUALS expression\n                  | expression EQUALS expression\n                  | expression NOT_EQUALS expressionexpression : LOCK IDENTIFIER IN expressionexpression : LOOP expression DO expressionexpression : BEGIN body ENDexpression : IDENTIFIERexpression : NOT expression %prec UMINUSexpression : IF expression THEN expressionexpression : IDENTIFIER ARROW expressionbody : expression\n            | body SEPARATOR expressionexpression : NUMBER\n                  | FLOATexpression : IDENTIFIER ASSIGN expressionexpression : expression AND expression\n                  | expression NAND expression\n                  | expression OR expression\n                  | expression NOR expression\n                  | expression XOR expression\n                  | expression EQ expression\n                  | expression NEQ expression\n                  | expression IMPL expressionexpression : IF expression THEN expression ELSE expressionexpression : expression LPAREN expression RPARENexpression : MINUS expression %prec UMINUSexpression : expression PLUS expression\n                  | expression MINUS expression\n                  | expression TIMES expression\n                  | expression DIVIDE expressionexpression : TRUE\n                  | FALSEexpression : LPAREN expression RPAREN'
    
_lr_action_items = {'FOR':([0,2,5,7,8,9,10,13,14,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,38,39,68,69,72,73,74,76,77,87,88,89,93,],[2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,]),'LOCAL':([0,2,5,7,8,9,10,13,14,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,38,39,68,69,72,73,74,76,77,87,88,89,93,],[3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,]),'WHILE':([0,2,5,7,8,9,10,13,14,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,38,39,68,69,72,73,74,76,77,87,88,89,93,],[5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,]),'LOCK':([0,2,5,7,8,9,10,13,14,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,38,39,68,69,72,73,74,76,77,87,88,89,93,],[6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,]),'LOOP':([0,2,5,7,8,9,10,13,14,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,38,39,68,69,72,73,74,76,77,87,88,89,93,],[7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,]),'BEGIN':([0,2,5,7,8,9,10,13,14,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,38,39,68,69,72,73,74,76,77,87,88,89,93,],[8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,]),'IDENTIFIER':([0,2,3,5,6,7,8,9,10,13,14,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,38,39,68,69,72,73,74,76,77,87,88,89,93,],[4,4,37,4,41,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,]),'NOT':([0,2,5,7,8,9,10,13,14,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,38,39,68,69,72,73,74,76,77,87,88,89,93,],[9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,]),'IF':([0,2,5,7,8,9,10,13,14,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,38,39,68,69,72,73,74,76,77,87,88,89,93,],[10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,]),'NUMBER':([0,2,5,7,8,9,10,13,14,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,38,39,68,69,72,73,74,76,77,87,88,89,93,],[11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,]),'FLOAT':([0,2,5,7,8,9,10,13,14,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,38,39,68,69,72,73,74,76,77,87,88,89,93,],[12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,]),'MINUS':([0,1,2,4,5,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,38,39,40,42,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,],[14,33,14,-13,14,14,14,14,14,-19,-20,14,14,-37,-38,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,33,14,14,33,33,33,-14,33,33,-32,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,-33,-34,-35,-36,14,14,33,33,14,14,14,-12,14,14,-39,-31,33,33,33,33,33,33,33,14,14,14,33,33,33,14,33,]),'TRUE':([0,2,5,7,8,9,10,13,14,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,38,39,68,69,72,73,74,76,77,87,88,89,93,],[15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,]),'FALSE':([0,2,5,7,8,9,10,13,14,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,38,39,68,69,72,73,74,76,77,87,88,89,93,],[16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,]),'LPAREN':([0,1,2,4,5,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,38,39,40,42,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,],[13,31,13,-13,13,13,13,13,13,-19,-20,13,13,-37,-38,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,31,13,13,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,13,13,31,31,13,13,13,-12,13,13,-39,-31,31,31,31,31,31,31,31,13,13,13,31,31,31,13,31,]),'$end':([1,4,11,12,15,16,45,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,64,65,66,67,70,71,75,78,79,82,83,84,86,91,92,94,],[0,-13,-19,-20,-37,-38,-14,-32,-4,-5,-6,-7,-8,-9,-22,-23,-24,-25,-26,-27,-28,-29,-33,-34,-35,-36,-16,-21,-12,-39,-31,-3,-10,-11,-15,-2,-30,-1,]),'LESS_THEN':([1,4,11,12,15,16,36,40,42,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,70,71,75,78,79,80,81,82,83,84,85,86,90,91,92,94,],[17,-13,-19,-20,-37,-38,17,17,17,17,-14,17,17,-32,-4,-5,-6,-7,17,17,17,17,17,17,17,17,17,17,17,-33,-34,-35,-36,17,17,-12,-39,-31,17,17,17,17,17,17,17,17,17,17,17,]),'GREATER_THEN':([1,4,11,12,15,16,36,40,42,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,70,71,75,78,79,80,81,82,83,84,85,86,90,91,92,94,],[18,-13,-19,-20,-37,-38,18,18,18,18,-14,18,18,-32,-4,-5,-6,-7,18,18,18,18,18,18,18,18,18,18,18,-33,-34,-35,-36,18,18,-12,-39,-31,18,18,18,18,18,18,18,18,18,18,18,]),'LESS_EQUALS':([1,4,11,12,15,16,36,40,42,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,70,71,75,78,79,80,81,82,83,84,85,86,90,91,92,94,],[19,-13,-19,-20,-37,-38,19,19,19,19,-14,19,19,-32,-4,-5,-6,-7,19,19,19,19,19,19,19,19,19,19,19,-33,-34,-35,-36,19,19,-12,-39,-31,19,19,19,19,19,19,19,19,19,19,19,]),'GREATER_EQUALS':([1,4,11,12,15,16,36,40,42,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,70,71,75,78,79,80,81,82,83,84,85,86,90,91,92,94,],[20,-13,-19,-20,-37,-38,20,20,20,20,-14,20,20,-32,-4,-5,-6,-7,20,20,20,20,20,20,20,20,20,20,20,-33,-34,-35,-36,20,20,-12,-39,-31,20,20,20,20,20,20,20,20,20,20,20,]),'EQUALS':([1,4,11,12,15,16,36,40,42,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,70,71,75,78,79,80,81,82,83,84,85,86,90,91,92,94,],[21,-13,-19,-20,-37,-38,21,21,21,21,-14,21,21,-32,-4,-5,-6,-7,-8,-9,21,21,21,21,21,21,21,21,21,-33,-34,-35,-36,21,21,-12,-39,-31,21,21,21,21,21,21,21,21,21,21,21,]),'NOT_EQUALS':([1,4,11,12,15,16,36,40,42,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,70,71,75,78,79,80,81,82,83,84,85,86,90,91,92,94,],[22,-13,-19,-20,-37,-38,22,22,22,22,-14,22,22,-32,-4,-5,-6,-7,-8,-9,22,22,22,22,22,22,22,22,22,-33,-34,-35,-36,22,22,-12,-39,-31,22,22,22,22,22,22,22,22,22,22,22,]),'AND':([1,4,11,12,15,16,36,40,42,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,70,71,75,78,79,80,81,82,83,84,85,86,90,91,92,94,],[23,-13,-19,-20,-37,-38,23,23,23,23,-14,23,23,-32,-4,-5,-6,-7,-8,-9,-22,-23,23,23,-26,-27,-28,-29,23,-33,-34,-35,-36,23,23,-12,-39,-31,23,23,23,23,23,23,23,23,23,23,23,]),'NAND':([1,4,11,12,15,16,36,40,42,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,70,71,75,78,79,80,81,82,83,84,85,86,90,91,92,94,],[24,-13,-19,-20,-37,-38,24,24,24,24,-14,24,24,-32,-4,-5,-6,-7,-8,-9,-22,-23,24,24,-26,-27,-28,-29,24,-33,-34,-35,-36,24,24,-12,-39,-31,24,24,24,24,24,24,24,24,24,24,24,]),'OR':([1,4,11,12,15,16,36,40,42,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,70,71,75,78,79,80,81,82,83,84,85,86,90,91,92,94,],[25,-13,-19,-20,-37,-38,25,25,25,25,-14,25,25,-32,-4,-5,-6,-7,-8,-9,-22,-23,-24,-25,-26,-27,-28,-29,25,-33,-34,-35,-36,25,25,-12,-39,-31,25,25,25,25,25,25,25,25,25,25,25,]),'NOR':([1,4,11,12,15,16,36,40,42,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,70,71,75,78,79,80,81,82,83,84,85,86,90,91,92,94,],[26,-13,-19,-20,-37,-38,26,26,26,26,-14,26,26,-32,-4,-5,-6,-7,-8,-9,-22,-23,-24,-25,-26,-27,-28,-29,26,-33,-34,-35,-36,26,26,-12,-39,-31,26,26,26,26,26,26,26,26,26,26,26,]),'XOR':([1,4,11,12,15,16,36,40,42,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,70,71,75,78,79,80,81,82,83,84,85,86,90,91,92,94,],[27,-13,-19,-20,-37,-38,27,27,27,27,-14,27,27,-32,-4,-5,-6,-7,-8,-9,27,27,27,27,-26,-27,-28,-29,27,-33,-34,-35,-36,27,27,-12,-39,-31,27,27,27,27,27,27,27,27,27,27,27,]),'EQ':([1,4,11,12,15,16,36,40,42,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,70,71,75,78,79,80,81,82,83,84,85,86,90,91,92,94,],[28,-13,-19,-20,-37,-38,28,28,28,28,-14,28,28,-32,-4,-5,-6,-7,-8,-9,28,28,28,28,-26,-27,-28,-29,28,-33,-34,-35,-36,28,28,-12,-39,-31,28,28,28,28,28,28,28,28,28,28,28,]),'NEQ':([1,4,11,12,15,16,36,40,42,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,70,71,75,78,79,80,81,82,83,84,85,86,90,91,92,94,],[29,-13,-19,-20,-37,-38,29,29,29,29,-14,29,29,-32,-4,-5,-6,-7,-8,-9,29,29,29,29,-26,-27,-28,-29,29,-33,-34,-35,-36,29,29,-12,-39,-31,29,29,29,29,29,29,29,29,29,29,29,]),'IMPL':([1,4,11,12,15,16,36,40,42,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,70,71,75,78,79,80,81,82,83,84,85,86,90,91,92,94,],[30,-13,-19,-20,-37,-38,30,30,30,30,-14,30,30,-32,-4,-5,-6,-7,-8,-9,30,30,30,30,-26,-27,-28,-29,30,-33,-34,-35,-36,30,30,-12,-39,-31,30,30,30,30,30,30,30,30,30,30,30,]),'PLUS':([1,4,11,12,15,16,36,40,42,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,70,71,75,78,79,80,81,82,83,84,85,86,90,91,92,94,],[32,-13,-19,-20,-37,-38,32,32,32,32,-14,32,32,-32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,-33,-34,-35,-36,32,32,-12,-39,-31,32,32,32,32,32,32,32,32,32,32,32,]),'TIMES':([1,4,11,12,15,16,36,40,42,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,70,71,75,78,79,80,81,82,83,84,85,86,90,91,92,94,],[34,-13,-19,-20,-37,-38,34,34,34,34,-14,34,34,-32,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,-35,-36,34,34,-12,-39,-31,34,34,34,34,34,34,34,34,34,34,34,]),'DIVIDE':([1,4,11,12,15,16,36,40,42,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,70,71,75,78,79,80,81,82,83,84,85,86,90,91,92,94,],[35,-13,-19,-20,-37,-38,35,35,35,35,-14,35,35,-32,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,-35,-36,35,35,-12,-39,-31,35,35,35,35,35,35,35,35,35,35,35,]),'SEPARATOR':([4,11,12,15,16,36,43,44,45,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,64,65,66,67,70,71,75,78,79,80,82,83,84,85,86,91,92,94,],[-13,-19,-20,-37,-38,68,76,-17,-14,-32,-4,-5,-6,-7,-8,-9,-22,-23,-24,-25,-26,-27,-28,-29,-33,-34,-35,-36,-16,-21,-12,-39,-31,87,-3,-10,-11,-18,-15,-2,-30,-1,]),'DO':([4,11,12,15,16,40,42,45,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,64,65,66,67,70,71,75,78,79,82,83,84,86,90,91,92,94,],[-13,-19,-20,-37,-38,72,74,-14,-32,-4,-5,-6,-7,-8,-9,-22,-23,-24,-25,-26,-27,-28,-29,-33,-34,-35,-36,-16,-21,-12,-39,-31,-3,-10,-11,-15,93,-2,-30,-1,]),'END':([4,11,12,15,16,43,44,45,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,64,65,66,67,70,71,75,78,79,82,83,84,85,86,91,92,94,],[-13,-19,-20,-37,-38,75,-17,-14,-32,-4,-5,-6,-7,-8,-9,-22,-23,-24,-25,-26,-27,-28,-29,-33,-34,-35,-36,-16,-21,-12,-39,-31,-3,-10,-11,-18,-15,-2,-30,-1,]),'THEN':([4,11,12,15,16,45,46,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,64,65,66,67,70,71,75,78,79,82,83,84,86,91,92,94,],[-13,-19,-20,-37,-38,-14,77,-32,-4,-5,-6,-7,-8,-9,-22,-23,-24,-25,-26,-27,-28,-29,-33,-34,-35,-36,-16,-21,-12,-39,-31,-3,-10,-11,-15,-2,-30,-1,]),'RPAREN':([4,11,12,15,16,45,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,70,71,75,78,79,82,83,84,86,91,92,94,],[-13,-19,-20,-37,-38,-14,78,-32,-4,-5,-6,-7,-8,-9,-22,-23,-24,-25,-26,-27,-28,-29,79,-33,-34,-35,-36,-16,-21,-12,-39,-31,-3,-10,-11,-15,-2,-30,-1,]),'IN':([4,11,12,15,16,41,45,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,64,65,66,67,70,71,75,78,79,81,82,83,84,86,91,92,94,],[-13,-19,-20,-37,-38,73,-14,-32,-4,-5,-6,-7,-8,-9,-22,-23,-24,-25,-26,-27,-28,-29,-33,-34,-35,-36,-16,-21,-12,-39,-31,88,-3,-10,-11,-15,-2,-30,-1,]),'ELSE':([4,11,12,15,16,45,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,64,65,66,67,70,71,75,78,79,82,83,84,86,91,92,94,],[-13,-19,-20,-37,-38,-14,-32,-4,-5,-6,-7,-8,-9,-22,-23,-24,-25,-26,-27,-28,-29,-33,-34,-35,-36,-16,-21,-12,-39,-31,-3,-10,-11,89,-2,-30,-1,]),'ARROW':([4,],[38,]),'ASSIGN':([4,37,],[39,69,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'expression':([0,2,5,7,8,9,10,13,14,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,38,39,68,69,72,73,74,76,77,87,88,89,93,],[1,36,40,42,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,70,71,80,81,82,83,84,85,86,90,91,92,94,]),'body':([8,],[43,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> expression","S'",1,None,None,None),
  ('expression -> FOR expression SEPARATOR expression SEPARATOR expression DO expression','expression',8,'p_expression_for','for_expr.py',10),
  ('expression -> LOCAL IDENTIFIER ASSIGN expression IN expression','expression',6,'p_expression_local','local_expr.py',10),
  ('expression -> WHILE expression DO expression','expression',4,'p_expression_while','while_expr.py',10),
  ('expression -> expression LESS_THEN expression','expression',3,'p_expression_binary_comparison','comparison_expr.py',11),
  ('expression -> expression GREATER_THEN expression','expression',3,'p_expression_binary_comparison','comparison_expr.py',12),
  ('expression -> expression LESS_EQUALS expression','expression',3,'p_expression_binary_comparison','comparison_expr.py',13),
  ('expression -> expression GREATER_EQUALS expression','expression',3,'p_expression_binary_comparison','comparison_expr.py',14),
  ('expression -> expression EQUALS expression','expression',3,'p_expression_binary_comparison','comparison_expr.py',15),
  ('expression -> expression NOT_EQUALS expression','expression',3,'p_expression_binary_comparison','comparison_expr.py',16),
  ('expression -> LOCK IDENTIFIER IN expression','expression',4,'p_expression_lock','lock_expr.py',14),
  ('expression -> LOOP expression DO expression','expression',4,'p_expression_loop','loop_expr.py',14),
  ('expression -> BEGIN body END','expression',3,'p_expression_sequences','sequences_expr.py',14),
  ('expression -> IDENTIFIER','expression',1,'p_expression_id','assignment_expr.py',15),
  ('expression -> NOT expression','expression',2,'p_expression_unary_not','boolean_expr.py',15),
  ('expression -> IF expression THEN expression','expression',4,'p_expression_it','ite_expr.py',15),
  ('expression -> IDENTIFIER ARROW expression','expression',3,'p_expression_lambda','lambda_expr.py',15),
  ('body -> expression','body',1,'p_bodyn','sequences_expr.py',18),
  ('body -> body SEPARATOR expression','body',3,'p_bodyn','sequences_expr.py',19),
  ('expression -> NUMBER','expression',1,'p_expression_number','arithmetic_expr.py',19),
  ('expression -> FLOAT','expression',1,'p_expression_number','arithmetic_expr.py',20),
  ('expression -> IDENTIFIER ASSIGN expression','expression',3,'p_expression_assign','assignment_expr.py',19),
  ('expression -> expression AND expression','expression',3,'p_expression_binary_boolean','boolean_expr.py',19),
  ('expression -> expression NAND expression','expression',3,'p_expression_binary_boolean','boolean_expr.py',20),
  ('expression -> expression OR expression','expression',3,'p_expression_binary_boolean','boolean_expr.py',21),
  ('expression -> expression NOR expression','expression',3,'p_expression_binary_boolean','boolean_expr.py',22),
  ('expression -> expression XOR expression','expression',3,'p_expression_binary_boolean','boolean_expr.py',23),
  ('expression -> expression EQ expression','expression',3,'p_expression_binary_boolean','boolean_expr.py',24),
  ('expression -> expression NEQ expression','expression',3,'p_expression_binary_boolean','boolean_expr.py',25),
  ('expression -> expression IMPL expression','expression',3,'p_expression_binary_boolean','boolean_expr.py',26),
  ('expression -> IF expression THEN expression ELSE expression','expression',6,'p_expression_ite','ite_expr.py',19),
  ('expression -> expression LPAREN expression RPAREN','expression',4,'p_expression_call','lambda_expr.py',19),
  ('expression -> MINUS expression','expression',2,'p_expression_unary_minus','arithmetic_expr.py',24),
  ('expression -> expression PLUS expression','expression',3,'p_expression_binary_arithmetic','arithmetic_expr.py',28),
  ('expression -> expression MINUS expression','expression',3,'p_expression_binary_arithmetic','arithmetic_expr.py',29),
  ('expression -> expression TIMES expression','expression',3,'p_expression_binary_arithmetic','arithmetic_expr.py',30),
  ('expression -> expression DIVIDE expression','expression',3,'p_expression_binary_arithmetic','arithmetic_expr.py',31),
  ('expression -> TRUE','expression',1,'p_expression_boolean_value','boolean_expr.py',30),
  ('expression -> FALSE','expression',1,'p_expression_boolean_value','boolean_expr.py',31),
  ('expression -> LPAREN expression RPAREN','expression',3,'p_expression_parenthesis','arithmetic_expr.py',35),
]
