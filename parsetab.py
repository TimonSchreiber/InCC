
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'expressionleftINleftTHENleftELSEleftDOrightASSIGNleftORNORleftANDNANDleftXORNEQEQIMPLleftEQUALSNOT_EQUALSleftLESS_THENGREATER_THENLESS_EQUALSGREATER_EQUALSleftPLUSMINUSleftTIMESDIVIDErightUMINUSleftSEPARATORAND ASSIGN BEGIN DIVIDE DO ELSE END EQ EQUALS FALSE FLOAT FOR GREATER_EQUALS GREATER_THEN IDENTIFIER IF IMPL IN LESS_EQUALS LESS_THEN LOCAL LOCK LOOP LPAREN MINUS NAND NEQ NOR NOT NOT_EQUALS NUMBER OR PLUS RPAREN SEPARATOR THEN TIMES TRUE WHILE XORexpression : FOR expression SEPARATOR expression SEPARATOR expression DO expressionexpression : LOCAL IDENTIFIER ASSIGN expression IN expressionexpression : WHILE expression DO expressionexpression : expression LESS_THEN expression\n                  | expression GREATER_THEN expression\n                  | expression LESS_EQUALS expression\n                  | expression GREATER_EQUALS expression\n                  | expression EQUALS expression\n                  | expression NOT_EQUALS expressionexpression : LOCK IDENTIFIER IN expressionexpression : LOOP expression DO expressionexpression : BEGIN body ENDexpression : IDENTIFIERexpression : NOT expression %prec UMINUSexpression : IF expression THEN expressionexpression : NUMBER\n                  | FLOATbody : expression\n            | body SEPARATOR expressionexpression : IDENTIFIER ASSIGN expressionexpression : expression AND expression\n                  | expression NAND expression\n                  | expression OR expression\n                  | expression NOR expression\n                  | expression XOR expression\n                  | expression EQ expression\n                  | expression NEQ expression\n                  | expression IMPL expressionexpression : IF expression THEN expression ELSE expressionexpression : MINUS expression %prec UMINUSexpression : expression PLUS expression\n                  | expression MINUS expression\n                  | expression TIMES expression\n                  | expression DIVIDE expressionexpression : TRUE\n                  | FALSEexpression : LPAREN expression RPAREN'
    
_lr_action_items = {'FOR':([0,2,5,7,8,9,10,13,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,37,65,66,68,69,70,72,73,82,83,84,88,],[2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,]),'LOCAL':([0,2,5,7,8,9,10,13,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,37,65,66,68,69,70,72,73,82,83,84,88,],[3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,]),'WHILE':([0,2,5,7,8,9,10,13,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,37,65,66,68,69,70,72,73,82,83,84,88,],[5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,]),'LOCK':([0,2,5,7,8,9,10,13,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,37,65,66,68,69,70,72,73,82,83,84,88,],[6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,]),'LOOP':([0,2,5,7,8,9,10,13,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,37,65,66,68,69,70,72,73,82,83,84,88,],[7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,]),'BEGIN':([0,2,5,7,8,9,10,13,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,37,65,66,68,69,70,72,73,82,83,84,88,],[8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,]),'IDENTIFIER':([0,2,3,5,6,7,8,9,10,13,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,37,65,66,68,69,70,72,73,82,83,84,88,],[4,4,36,4,39,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,]),'NOT':([0,2,5,7,8,9,10,13,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,37,65,66,68,69,70,72,73,82,83,84,88,],[9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,]),'IF':([0,2,5,7,8,9,10,13,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,37,65,66,68,69,70,72,73,82,83,84,88,],[10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,]),'NUMBER':([0,2,5,7,8,9,10,13,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,37,65,66,68,69,70,72,73,82,83,84,88,],[11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,]),'FLOAT':([0,2,5,7,8,9,10,13,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,37,65,66,68,69,70,72,73,82,83,84,88,],[12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,]),'MINUS':([0,1,2,4,5,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,37,38,40,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,],[13,32,13,-13,13,13,13,13,13,-16,-17,13,-35,-36,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,32,13,32,32,32,-14,32,-30,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,-31,-32,-33,-34,13,13,32,13,13,13,-12,13,13,-37,32,32,32,32,32,32,32,13,13,13,32,32,32,13,32,]),'TRUE':([0,2,5,7,8,9,10,13,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,37,65,66,68,69,70,72,73,82,83,84,88,],[14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,]),'FALSE':([0,2,5,7,8,9,10,13,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,37,65,66,68,69,70,72,73,82,83,84,88,],[15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,]),'LPAREN':([0,2,5,7,8,9,10,13,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,37,65,66,68,69,70,72,73,82,83,84,88,],[16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,]),'$end':([1,4,11,12,14,15,43,45,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,67,71,74,77,78,79,81,86,87,89,],[0,-13,-16,-17,-35,-36,-14,-30,-4,-5,-6,-7,-8,-9,-21,-22,-23,-24,-25,-26,-27,-28,-31,-32,-33,-34,-20,-12,-37,-3,-10,-11,-15,-2,-29,-1,]),'LESS_THEN':([1,4,11,12,14,15,35,38,40,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,67,71,74,75,76,77,78,79,80,81,85,86,87,89,],[17,-13,-16,-17,-35,-36,17,17,17,17,-14,17,-30,17,-4,-5,-6,-7,17,17,17,17,17,17,17,17,17,17,-31,-32,-33,-34,17,-12,-37,17,17,17,17,17,17,17,17,17,17,17,]),'GREATER_THEN':([1,4,11,12,14,15,35,38,40,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,67,71,74,75,76,77,78,79,80,81,85,86,87,89,],[18,-13,-16,-17,-35,-36,18,18,18,18,-14,18,-30,18,-4,-5,-6,-7,18,18,18,18,18,18,18,18,18,18,-31,-32,-33,-34,18,-12,-37,18,18,18,18,18,18,18,18,18,18,18,]),'LESS_EQUALS':([1,4,11,12,14,15,35,38,40,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,67,71,74,75,76,77,78,79,80,81,85,86,87,89,],[19,-13,-16,-17,-35,-36,19,19,19,19,-14,19,-30,19,-4,-5,-6,-7,19,19,19,19,19,19,19,19,19,19,-31,-32,-33,-34,19,-12,-37,19,19,19,19,19,19,19,19,19,19,19,]),'GREATER_EQUALS':([1,4,11,12,14,15,35,38,40,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,67,71,74,75,76,77,78,79,80,81,85,86,87,89,],[20,-13,-16,-17,-35,-36,20,20,20,20,-14,20,-30,20,-4,-5,-6,-7,20,20,20,20,20,20,20,20,20,20,-31,-32,-33,-34,20,-12,-37,20,20,20,20,20,20,20,20,20,20,20,]),'EQUALS':([1,4,11,12,14,15,35,38,40,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,67,71,74,75,76,77,78,79,80,81,85,86,87,89,],[21,-13,-16,-17,-35,-36,21,21,21,21,-14,21,-30,21,-4,-5,-6,-7,-8,-9,21,21,21,21,21,21,21,21,-31,-32,-33,-34,21,-12,-37,21,21,21,21,21,21,21,21,21,21,21,]),'NOT_EQUALS':([1,4,11,12,14,15,35,38,40,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,67,71,74,75,76,77,78,79,80,81,85,86,87,89,],[22,-13,-16,-17,-35,-36,22,22,22,22,-14,22,-30,22,-4,-5,-6,-7,-8,-9,22,22,22,22,22,22,22,22,-31,-32,-33,-34,22,-12,-37,22,22,22,22,22,22,22,22,22,22,22,]),'AND':([1,4,11,12,14,15,35,38,40,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,67,71,74,75,76,77,78,79,80,81,85,86,87,89,],[23,-13,-16,-17,-35,-36,23,23,23,23,-14,23,-30,23,-4,-5,-6,-7,-8,-9,-21,-22,23,23,-25,-26,-27,-28,-31,-32,-33,-34,23,-12,-37,23,23,23,23,23,23,23,23,23,23,23,]),'NAND':([1,4,11,12,14,15,35,38,40,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,67,71,74,75,76,77,78,79,80,81,85,86,87,89,],[24,-13,-16,-17,-35,-36,24,24,24,24,-14,24,-30,24,-4,-5,-6,-7,-8,-9,-21,-22,24,24,-25,-26,-27,-28,-31,-32,-33,-34,24,-12,-37,24,24,24,24,24,24,24,24,24,24,24,]),'OR':([1,4,11,12,14,15,35,38,40,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,67,71,74,75,76,77,78,79,80,81,85,86,87,89,],[25,-13,-16,-17,-35,-36,25,25,25,25,-14,25,-30,25,-4,-5,-6,-7,-8,-9,-21,-22,-23,-24,-25,-26,-27,-28,-31,-32,-33,-34,25,-12,-37,25,25,25,25,25,25,25,25,25,25,25,]),'NOR':([1,4,11,12,14,15,35,38,40,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,67,71,74,75,76,77,78,79,80,81,85,86,87,89,],[26,-13,-16,-17,-35,-36,26,26,26,26,-14,26,-30,26,-4,-5,-6,-7,-8,-9,-21,-22,-23,-24,-25,-26,-27,-28,-31,-32,-33,-34,26,-12,-37,26,26,26,26,26,26,26,26,26,26,26,]),'XOR':([1,4,11,12,14,15,35,38,40,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,67,71,74,75,76,77,78,79,80,81,85,86,87,89,],[27,-13,-16,-17,-35,-36,27,27,27,27,-14,27,-30,27,-4,-5,-6,-7,-8,-9,27,27,27,27,-25,-26,-27,-28,-31,-32,-33,-34,27,-12,-37,27,27,27,27,27,27,27,27,27,27,27,]),'EQ':([1,4,11,12,14,15,35,38,40,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,67,71,74,75,76,77,78,79,80,81,85,86,87,89,],[28,-13,-16,-17,-35,-36,28,28,28,28,-14,28,-30,28,-4,-5,-6,-7,-8,-9,28,28,28,28,-25,-26,-27,-28,-31,-32,-33,-34,28,-12,-37,28,28,28,28,28,28,28,28,28,28,28,]),'NEQ':([1,4,11,12,14,15,35,38,40,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,67,71,74,75,76,77,78,79,80,81,85,86,87,89,],[29,-13,-16,-17,-35,-36,29,29,29,29,-14,29,-30,29,-4,-5,-6,-7,-8,-9,29,29,29,29,-25,-26,-27,-28,-31,-32,-33,-34,29,-12,-37,29,29,29,29,29,29,29,29,29,29,29,]),'IMPL':([1,4,11,12,14,15,35,38,40,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,67,71,74,75,76,77,78,79,80,81,85,86,87,89,],[30,-13,-16,-17,-35,-36,30,30,30,30,-14,30,-30,30,-4,-5,-6,-7,-8,-9,30,30,30,30,-25,-26,-27,-28,-31,-32,-33,-34,30,-12,-37,30,30,30,30,30,30,30,30,30,30,30,]),'PLUS':([1,4,11,12,14,15,35,38,40,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,67,71,74,75,76,77,78,79,80,81,85,86,87,89,],[31,-13,-16,-17,-35,-36,31,31,31,31,-14,31,-30,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,-31,-32,-33,-34,31,-12,-37,31,31,31,31,31,31,31,31,31,31,31,]),'TIMES':([1,4,11,12,14,15,35,38,40,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,67,71,74,75,76,77,78,79,80,81,85,86,87,89,],[33,-13,-16,-17,-35,-36,33,33,33,33,-14,33,-30,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,-33,-34,33,-12,-37,33,33,33,33,33,33,33,33,33,33,33,]),'DIVIDE':([1,4,11,12,14,15,35,38,40,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,67,71,74,75,76,77,78,79,80,81,85,86,87,89,],[34,-13,-16,-17,-35,-36,34,34,34,34,-14,34,-30,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,-33,-34,34,-12,-37,34,34,34,34,34,34,34,34,34,34,34,]),'SEPARATOR':([4,11,12,14,15,35,41,42,43,45,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,67,71,74,75,77,78,79,80,81,86,87,89,],[-13,-16,-17,-35,-36,65,72,-18,-14,-30,-4,-5,-6,-7,-8,-9,-21,-22,-23,-24,-25,-26,-27,-28,-31,-32,-33,-34,-20,-12,-37,82,-3,-10,-11,-19,-15,-2,-29,-1,]),'DO':([4,11,12,14,15,38,40,43,45,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,67,71,74,77,78,79,81,85,86,87,89,],[-13,-16,-17,-35,-36,68,70,-14,-30,-4,-5,-6,-7,-8,-9,-21,-22,-23,-24,-25,-26,-27,-28,-31,-32,-33,-34,-20,-12,-37,-3,-10,-11,-15,88,-2,-29,-1,]),'END':([4,11,12,14,15,41,42,43,45,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,67,71,74,77,78,79,80,81,86,87,89,],[-13,-16,-17,-35,-36,71,-18,-14,-30,-4,-5,-6,-7,-8,-9,-21,-22,-23,-24,-25,-26,-27,-28,-31,-32,-33,-34,-20,-12,-37,-3,-10,-11,-19,-15,-2,-29,-1,]),'THEN':([4,11,12,14,15,43,44,45,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,67,71,74,77,78,79,81,86,87,89,],[-13,-16,-17,-35,-36,-14,73,-30,-4,-5,-6,-7,-8,-9,-21,-22,-23,-24,-25,-26,-27,-28,-31,-32,-33,-34,-20,-12,-37,-3,-10,-11,-15,-2,-29,-1,]),'RPAREN':([4,11,12,14,15,43,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,67,71,74,77,78,79,81,86,87,89,],[-13,-16,-17,-35,-36,-14,-30,74,-4,-5,-6,-7,-8,-9,-21,-22,-23,-24,-25,-26,-27,-28,-31,-32,-33,-34,-20,-12,-37,-3,-10,-11,-15,-2,-29,-1,]),'IN':([4,11,12,14,15,39,43,45,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,67,71,74,76,77,78,79,81,86,87,89,],[-13,-16,-17,-35,-36,69,-14,-30,-4,-5,-6,-7,-8,-9,-21,-22,-23,-24,-25,-26,-27,-28,-31,-32,-33,-34,-20,-12,-37,83,-3,-10,-11,-15,-2,-29,-1,]),'ELSE':([4,11,12,14,15,43,45,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,67,71,74,77,78,79,81,86,87,89,],[-13,-16,-17,-35,-36,-14,-30,-4,-5,-6,-7,-8,-9,-21,-22,-23,-24,-25,-26,-27,-28,-31,-32,-33,-34,-20,-12,-37,-3,-10,-11,84,-2,-29,-1,]),'ASSIGN':([4,36,],[37,66,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'expression':([0,2,5,7,8,9,10,13,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,37,65,66,68,69,70,72,73,82,83,84,88,],[1,35,38,40,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,67,75,76,77,78,79,80,81,85,86,87,89,]),'body':([8,],[41,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> expression","S'",1,None,None,None),
  ('expression -> FOR expression SEPARATOR expression SEPARATOR expression DO expression','expression',8,'p_expression_for','for_expr.py',10),
  ('expression -> LOCAL IDENTIFIER ASSIGN expression IN expression','expression',6,'p_expression_local','local_expr.py',10),
  ('expression -> WHILE expression DO expression','expression',4,'p_expression_while','while_expr.py',10),
  ('expression -> expression LESS_THEN expression','expression',3,'p_expression_binary_comparison','comp_expr.py',11),
  ('expression -> expression GREATER_THEN expression','expression',3,'p_expression_binary_comparison','comp_expr.py',12),
  ('expression -> expression LESS_EQUALS expression','expression',3,'p_expression_binary_comparison','comp_expr.py',13),
  ('expression -> expression GREATER_EQUALS expression','expression',3,'p_expression_binary_comparison','comp_expr.py',14),
  ('expression -> expression EQUALS expression','expression',3,'p_expression_binary_comparison','comp_expr.py',15),
  ('expression -> expression NOT_EQUALS expression','expression',3,'p_expression_binary_comparison','comp_expr.py',16),
  ('expression -> LOCK IDENTIFIER IN expression','expression',4,'p_expression_lock','lock_expr.py',14),
  ('expression -> LOOP expression DO expression','expression',4,'p_expression_loop','loop_expr.py',14),
  ('expression -> BEGIN body END','expression',3,'p_expression_sequence','seque_expr.py',14),
  ('expression -> IDENTIFIER','expression',1,'p_expression_id','assign_expr.py',15),
  ('expression -> NOT expression','expression',2,'p_expression_unary_not','bool_expr.py',15),
  ('expression -> IF expression THEN expression','expression',4,'p_expression_it','ite_expr.py',15),
  ('expression -> NUMBER','expression',1,'p_expression_number','arith_expr.py',18),
  ('expression -> FLOAT','expression',1,'p_expression_number','arith_expr.py',19),
  ('body -> expression','body',1,'p_bodyn','seque_expr.py',18),
  ('body -> body SEPARATOR expression','body',3,'p_bodyn','seque_expr.py',19),
  ('expression -> IDENTIFIER ASSIGN expression','expression',3,'p_expression_assign','assign_expr.py',19),
  ('expression -> expression AND expression','expression',3,'p_expression_binary_boolean','bool_expr.py',19),
  ('expression -> expression NAND expression','expression',3,'p_expression_binary_boolean','bool_expr.py',20),
  ('expression -> expression OR expression','expression',3,'p_expression_binary_boolean','bool_expr.py',21),
  ('expression -> expression NOR expression','expression',3,'p_expression_binary_boolean','bool_expr.py',22),
  ('expression -> expression XOR expression','expression',3,'p_expression_binary_boolean','bool_expr.py',23),
  ('expression -> expression EQ expression','expression',3,'p_expression_binary_boolean','bool_expr.py',24),
  ('expression -> expression NEQ expression','expression',3,'p_expression_binary_boolean','bool_expr.py',25),
  ('expression -> expression IMPL expression','expression',3,'p_expression_binary_boolean','bool_expr.py',26),
  ('expression -> IF expression THEN expression ELSE expression','expression',6,'p_expression_ite','ite_expr.py',19),
  ('expression -> MINUS expression','expression',2,'p_expression_unary_minus','arith_expr.py',23),
  ('expression -> expression PLUS expression','expression',3,'p_expression_binary_arithmetic','arith_expr.py',27),
  ('expression -> expression MINUS expression','expression',3,'p_expression_binary_arithmetic','arith_expr.py',28),
  ('expression -> expression TIMES expression','expression',3,'p_expression_binary_arithmetic','arith_expr.py',29),
  ('expression -> expression DIVIDE expression','expression',3,'p_expression_binary_arithmetic','arith_expr.py',30),
  ('expression -> TRUE','expression',1,'p_expression_boolean_value','bool_expr.py',30),
  ('expression -> FALSE','expression',1,'p_expression_boolean_value','bool_expr.py',31),
  ('expression -> LPAREN expression RPAREN','expression',3,'p_expression_parenthesis','arith_expr.py',34),
]
