
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'expressionleftCOMMAleftARROWleftINleftTHENleftELSEleftDOrightASSIGNleftORNORleftANDNANDleftXORNEQEQIMPLleftEQUALSNOT_EQUALSleftLESS_THENGREATER_THENLESS_EQUALSGREATER_EQUALSleftPLUSMINUSleftTIMESDIVIDErightUMINUSrightLPARENleftSEPARATORleftEXTENDleftSTRUCTleftDOTAND ARRAY ARROW ASSIGN BEGIN CHAR COMMA DIVIDE DO DOT ELSE END EQ EQUALS EXTEND FALSE FLOAT FOR GREATER_EQUALS GREATER_THEN IDENTIFIER IF IMPL IN LAMBDA LBRACKET LESS_EQUALS LESS_THEN LIST LOCAL LOCK LOOP LPAREN MINUS NAND NEQ NOR NOT NOT_EQUALS NUMBER OR PLUS RBRACKET RPAREN SEPARATOR STRING STRUCT THEN TIMES TRUE WHILE XORexpression : FOR expression SEPARATOR expression SEPARATOR expression DO expressionexpression : LOCAL IDENTIFIER ASSIGN expression IN expressionexpression : WHILE expression DO expressionexpression : expression LESS_THEN expression\n                  | expression GREATER_THEN expression\n                  | expression LESS_EQUALS expression\n                  | expression GREATER_EQUALS expression\n                  | expression EQUALS expression\n                  | expression NOT_EQUALS expressionexpression : NUMBER\n                  | FLOAT\n                  | CHAR\n                  | STRINGexpression : LOOP expression DO expressionexpression : BEGIN body ENDexpression : IDENTIFIERexpression : NOT expression %prec UMINUSexpression : IF expression THEN expressionexpression : LOCK identifier_list IN expressionexpression_list : expression\n                       | expression COMMA expression_listbody : expression\n            | body SEPARATOR expressionexpression : IDENTIFIER ASSIGN expressionexpression : expression AND expression\n                  | expression NAND expression\n                  | expression OR expression\n                  | expression NOR expression\n                  | expression XOR expression\n                  | expression EQ expression\n                  | expression NEQ expression\n                  | expression IMPL expressionexpression : IF expression THEN expression ELSE expressiondots : DOT\n            | dots DOTexpression : LIST LPAREN expression_list RPARENidentifier_list : IDENTIFIER\n                       | IDENTIFIER COMMA identifier_liststruct_body : IDENTIFIER ASSIGN expression\n                   | struct_body SEPARATOR IDENTIFIER ASSIGN expressionexpression : MINUS expression %prec UMINUSexpression : LIST LPAREN RPARENexpression : LAMBDA identifier_list ARROW expressionexpression : expression PLUS expression\n                  | expression MINUS expression\n                  | expression TIMES expression\n                  | expression DIVIDE expressionexpression : LBRACKET expression_list RBRACKET\n                  | ARRAY LPAREN expression_list RPARENexpression : STRUCT BEGIN struct_body ENDexpression : TRUE\n                  | FALSEexpression : LAMBDA ARROW expressionexpression : IDENTIFIER dots IDENTIFIERexpression : LBRACKET RBRACKET\n                  | ARRAY LPAREN RPARENexpression : LPAREN expression RPARENexpression : expression LPAREN expression_list RPARENexpression : dots IDENTIFIERexpression : IDENTIFIER LBRACKET expression RBRACKETexpression : expression LPAREN RPARENexpression : EXTEND expression BEGIN struct_body END'
    
_lr_action_items = {'FOR':([0,2,5,10,11,12,13,16,17,19,25,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,48,50,59,63,67,92,93,97,98,100,101,102,107,110,132,134,135,136,143,144,],[2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,]),'LOCAL':([0,2,5,10,11,12,13,16,17,19,25,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,48,50,59,63,67,92,93,97,98,100,101,102,107,110,132,134,135,136,143,144,],[3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,]),'WHILE':([0,2,5,10,11,12,13,16,17,19,25,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,48,50,59,63,67,92,93,97,98,100,101,102,107,110,132,134,135,136,143,144,],[5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,]),'NUMBER':([0,2,5,10,11,12,13,16,17,19,25,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,48,50,59,63,67,92,93,97,98,100,101,102,107,110,132,134,135,136,143,144,],[6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,]),'FLOAT':([0,2,5,10,11,12,13,16,17,19,25,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,48,50,59,63,67,92,93,97,98,100,101,102,107,110,132,134,135,136,143,144,],[7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,]),'CHAR':([0,2,5,10,11,12,13,16,17,19,25,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,48,50,59,63,67,92,93,97,98,100,101,102,107,110,132,134,135,136,143,144,],[8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,]),'STRING':([0,2,5,10,11,12,13,16,17,19,25,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,48,50,59,63,67,92,93,97,98,100,101,102,107,110,132,134,135,136,143,144,],[9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,]),'LOOP':([0,2,5,10,11,12,13,16,17,19,25,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,48,50,59,63,67,92,93,97,98,100,101,102,107,110,132,134,135,136,143,144,],[10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,]),'BEGIN':([0,2,4,5,6,7,8,9,10,11,12,13,16,17,19,21,22,23,25,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,48,50,55,59,61,63,65,67,69,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,91,92,93,94,95,97,98,99,100,101,102,105,106,107,108,109,110,112,116,119,120,121,123,124,126,127,129,130,132,134,135,136,139,141,142,143,144,146,],[11,11,-16,11,-10,-11,-12,-13,11,11,11,11,11,11,11,68,-51,-52,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,-17,11,-41,11,-55,11,-59,115,-4,-5,-6,-7,-8,-9,-25,-26,-27,-28,-29,-30,-31,-32,-44,-45,-46,-47,-61,11,11,-24,-54,11,11,-15,11,11,11,-42,-57,11,-53,-48,11,-56,-58,-60,-3,-14,-18,-19,-36,-43,-49,-50,11,11,11,11,-62,-2,-33,11,11,-1,]),'IDENTIFIER':([0,2,3,5,10,11,12,13,14,16,17,18,19,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,48,49,50,59,63,67,68,70,92,93,97,98,100,101,102,103,107,110,115,131,132,134,135,136,143,144,],[4,4,47,4,4,4,4,4,58,4,4,58,4,69,4,-34,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,95,4,4,4,4,114,-35,4,4,4,4,4,4,4,58,4,4,114,137,4,4,4,4,4,4,]),'NOT':([0,2,5,10,11,12,13,16,17,19,25,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,48,50,59,63,67,92,93,97,98,100,101,102,107,110,132,134,135,136,143,144,],[12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,]),'IF':([0,2,5,10,11,12,13,16,17,19,25,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,48,50,59,63,67,92,93,97,98,100,101,102,107,110,132,134,135,136,143,144,],[13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,]),'LOCK':([0,2,5,10,11,12,13,16,17,19,25,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,48,50,59,63,67,92,93,97,98,100,101,102,107,110,132,134,135,136,143,144,],[14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,]),'LIST':([0,2,5,10,11,12,13,16,17,19,25,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,48,50,59,63,67,92,93,97,98,100,101,102,107,110,132,134,135,136,143,144,],[15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,]),'MINUS':([0,1,2,4,5,6,7,8,9,10,11,12,13,16,17,19,22,23,25,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,48,50,51,52,54,55,56,59,60,61,63,65,66,67,69,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,91,92,93,94,95,96,97,98,99,100,101,102,105,106,107,108,109,110,112,116,117,118,119,120,121,122,123,124,126,127,129,130,132,134,135,136,138,139,140,141,142,143,144,145,146,],[17,42,17,-16,17,-10,-11,-12,-13,17,17,17,17,17,17,17,-51,-52,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,42,17,17,42,42,42,-17,42,17,42,-41,17,-55,42,17,-59,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,-44,-45,-46,-47,-61,17,17,42,-54,42,17,17,-15,17,17,17,-42,-57,17,42,-48,17,-56,-58,42,42,-60,42,42,42,42,42,-36,42,-49,-50,17,17,17,17,42,-62,42,42,42,17,17,42,42,]),'LAMBDA':([0,2,5,10,11,12,13,16,17,19,25,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,48,50,59,63,67,92,93,97,98,100,101,102,107,110,132,134,135,136,143,144,],[18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,]),'LBRACKET':([0,2,4,5,10,11,12,13,16,17,19,25,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,48,50,59,63,67,92,93,97,98,100,101,102,107,110,132,134,135,136,143,144,],[19,19,50,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,]),'ARRAY':([0,2,5,10,11,12,13,16,17,19,25,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,48,50,59,63,67,92,93,97,98,100,101,102,107,110,132,134,135,136,143,144,],[20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,]),'STRUCT':([0,2,5,10,11,12,13,16,17,19,25,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,48,50,59,63,67,92,93,97,98,100,101,102,107,110,132,134,135,136,143,144,],[21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,]),'TRUE':([0,2,5,10,11,12,13,16,17,19,25,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,48,50,59,63,67,92,93,97,98,100,101,102,107,110,132,134,135,136,143,144,],[22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,]),'FALSE':([0,2,5,10,11,12,13,16,17,19,25,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,48,50,59,63,67,92,93,97,98,100,101,102,107,110,132,134,135,136,143,144,],[23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,]),'LPAREN':([0,1,2,4,5,6,7,8,9,10,11,12,13,15,16,17,19,20,22,23,25,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,48,50,51,52,54,55,56,59,60,61,63,65,66,67,69,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,91,92,93,94,95,96,97,98,99,100,101,102,105,106,107,108,109,110,112,116,117,118,119,120,121,122,123,124,126,127,129,130,132,134,135,136,138,139,140,141,142,143,144,145,146,],[16,45,16,-16,16,-10,-11,-12,-13,16,16,16,16,59,16,16,16,67,-51,-52,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,45,16,16,45,45,45,45,45,16,45,45,16,-55,45,16,-59,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,-61,16,16,45,-54,45,16,16,-15,16,16,16,-42,-57,16,45,-48,16,-56,-58,45,45,-60,45,45,45,45,45,-36,45,-49,-50,16,16,16,16,45,-62,45,45,45,16,16,45,45,]),'EXTEND':([0,2,5,10,11,12,13,16,17,19,25,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,48,50,59,63,67,92,93,97,98,100,101,102,107,110,132,134,135,136,143,144,],[25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,]),'DOT':([0,2,4,5,10,11,12,13,16,17,19,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,48,49,50,59,63,67,70,92,93,97,98,100,101,102,107,110,132,134,135,136,143,144,],[26,26,26,26,26,26,26,26,26,26,26,70,26,-34,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,70,26,26,26,26,-35,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,]),'$end':([1,4,6,7,8,9,22,23,55,61,65,69,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,91,94,95,99,105,106,108,109,112,116,119,120,121,123,124,126,127,129,130,139,141,142,146,],[0,-16,-10,-11,-12,-13,-51,-52,-17,-41,-55,-59,-4,-5,-6,-7,-8,-9,-25,-26,-27,-28,-29,-30,-31,-32,-44,-45,-46,-47,-61,-24,-54,-15,-42,-57,-53,-48,-56,-58,-60,-3,-14,-18,-19,-36,-43,-49,-50,-62,-2,-33,-1,]),'LESS_THEN':([1,4,6,7,8,9,22,23,46,51,52,54,55,56,60,61,65,66,69,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,91,94,95,96,99,105,106,108,109,112,116,117,118,119,120,121,122,123,124,126,127,129,130,138,139,140,141,142,145,146,],[27,-16,-10,-11,-12,-13,-51,-52,27,27,27,27,-17,27,27,-41,-55,27,-59,27,-4,-5,-6,-7,27,27,27,27,27,27,27,27,27,27,-44,-45,-46,-47,-61,27,-54,27,-15,-42,-57,27,-48,-56,-58,27,27,-60,27,27,27,27,27,-36,27,-49,-50,27,-62,27,27,27,27,27,]),'GREATER_THEN':([1,4,6,7,8,9,22,23,46,51,52,54,55,56,60,61,65,66,69,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,91,94,95,96,99,105,106,108,109,112,116,117,118,119,120,121,122,123,124,126,127,129,130,138,139,140,141,142,145,146,],[28,-16,-10,-11,-12,-13,-51,-52,28,28,28,28,-17,28,28,-41,-55,28,-59,28,-4,-5,-6,-7,28,28,28,28,28,28,28,28,28,28,-44,-45,-46,-47,-61,28,-54,28,-15,-42,-57,28,-48,-56,-58,28,28,-60,28,28,28,28,28,-36,28,-49,-50,28,-62,28,28,28,28,28,]),'LESS_EQUALS':([1,4,6,7,8,9,22,23,46,51,52,54,55,56,60,61,65,66,69,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,91,94,95,96,99,105,106,108,109,112,116,117,118,119,120,121,122,123,124,126,127,129,130,138,139,140,141,142,145,146,],[29,-16,-10,-11,-12,-13,-51,-52,29,29,29,29,-17,29,29,-41,-55,29,-59,29,-4,-5,-6,-7,29,29,29,29,29,29,29,29,29,29,-44,-45,-46,-47,-61,29,-54,29,-15,-42,-57,29,-48,-56,-58,29,29,-60,29,29,29,29,29,-36,29,-49,-50,29,-62,29,29,29,29,29,]),'GREATER_EQUALS':([1,4,6,7,8,9,22,23,46,51,52,54,55,56,60,61,65,66,69,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,91,94,95,96,99,105,106,108,109,112,116,117,118,119,120,121,122,123,124,126,127,129,130,138,139,140,141,142,145,146,],[30,-16,-10,-11,-12,-13,-51,-52,30,30,30,30,-17,30,30,-41,-55,30,-59,30,-4,-5,-6,-7,30,30,30,30,30,30,30,30,30,30,-44,-45,-46,-47,-61,30,-54,30,-15,-42,-57,30,-48,-56,-58,30,30,-60,30,30,30,30,30,-36,30,-49,-50,30,-62,30,30,30,30,30,]),'EQUALS':([1,4,6,7,8,9,22,23,46,51,52,54,55,56,60,61,65,66,69,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,91,94,95,96,99,105,106,108,109,112,116,117,118,119,120,121,122,123,124,126,127,129,130,138,139,140,141,142,145,146,],[31,-16,-10,-11,-12,-13,-51,-52,31,31,31,31,-17,31,31,-41,-55,31,-59,31,-4,-5,-6,-7,-8,-9,31,31,31,31,31,31,31,31,-44,-45,-46,-47,-61,31,-54,31,-15,-42,-57,31,-48,-56,-58,31,31,-60,31,31,31,31,31,-36,31,-49,-50,31,-62,31,31,31,31,31,]),'NOT_EQUALS':([1,4,6,7,8,9,22,23,46,51,52,54,55,56,60,61,65,66,69,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,91,94,95,96,99,105,106,108,109,112,116,117,118,119,120,121,122,123,124,126,127,129,130,138,139,140,141,142,145,146,],[32,-16,-10,-11,-12,-13,-51,-52,32,32,32,32,-17,32,32,-41,-55,32,-59,32,-4,-5,-6,-7,-8,-9,32,32,32,32,32,32,32,32,-44,-45,-46,-47,-61,32,-54,32,-15,-42,-57,32,-48,-56,-58,32,32,-60,32,32,32,32,32,-36,32,-49,-50,32,-62,32,32,32,32,32,]),'AND':([1,4,6,7,8,9,22,23,46,51,52,54,55,56,60,61,65,66,69,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,91,94,95,96,99,105,106,108,109,112,116,117,118,119,120,121,122,123,124,126,127,129,130,138,139,140,141,142,145,146,],[33,-16,-10,-11,-12,-13,-51,-52,33,33,33,33,-17,33,33,-41,-55,33,-59,33,-4,-5,-6,-7,-8,-9,-25,-26,33,33,-29,-30,-31,-32,-44,-45,-46,-47,-61,33,-54,33,-15,-42,-57,33,-48,-56,-58,33,33,-60,33,33,33,33,33,-36,33,-49,-50,33,-62,33,33,33,33,33,]),'NAND':([1,4,6,7,8,9,22,23,46,51,52,54,55,56,60,61,65,66,69,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,91,94,95,96,99,105,106,108,109,112,116,117,118,119,120,121,122,123,124,126,127,129,130,138,139,140,141,142,145,146,],[34,-16,-10,-11,-12,-13,-51,-52,34,34,34,34,-17,34,34,-41,-55,34,-59,34,-4,-5,-6,-7,-8,-9,-25,-26,34,34,-29,-30,-31,-32,-44,-45,-46,-47,-61,34,-54,34,-15,-42,-57,34,-48,-56,-58,34,34,-60,34,34,34,34,34,-36,34,-49,-50,34,-62,34,34,34,34,34,]),'OR':([1,4,6,7,8,9,22,23,46,51,52,54,55,56,60,61,65,66,69,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,91,94,95,96,99,105,106,108,109,112,116,117,118,119,120,121,122,123,124,126,127,129,130,138,139,140,141,142,145,146,],[35,-16,-10,-11,-12,-13,-51,-52,35,35,35,35,-17,35,35,-41,-55,35,-59,35,-4,-5,-6,-7,-8,-9,-25,-26,-27,-28,-29,-30,-31,-32,-44,-45,-46,-47,-61,35,-54,35,-15,-42,-57,35,-48,-56,-58,35,35,-60,35,35,35,35,35,-36,35,-49,-50,35,-62,35,35,35,35,35,]),'NOR':([1,4,6,7,8,9,22,23,46,51,52,54,55,56,60,61,65,66,69,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,91,94,95,96,99,105,106,108,109,112,116,117,118,119,120,121,122,123,124,126,127,129,130,138,139,140,141,142,145,146,],[36,-16,-10,-11,-12,-13,-51,-52,36,36,36,36,-17,36,36,-41,-55,36,-59,36,-4,-5,-6,-7,-8,-9,-25,-26,-27,-28,-29,-30,-31,-32,-44,-45,-46,-47,-61,36,-54,36,-15,-42,-57,36,-48,-56,-58,36,36,-60,36,36,36,36,36,-36,36,-49,-50,36,-62,36,36,36,36,36,]),'XOR':([1,4,6,7,8,9,22,23,46,51,52,54,55,56,60,61,65,66,69,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,91,94,95,96,99,105,106,108,109,112,116,117,118,119,120,121,122,123,124,126,127,129,130,138,139,140,141,142,145,146,],[37,-16,-10,-11,-12,-13,-51,-52,37,37,37,37,-17,37,37,-41,-55,37,-59,37,-4,-5,-6,-7,-8,-9,37,37,37,37,-29,-30,-31,-32,-44,-45,-46,-47,-61,37,-54,37,-15,-42,-57,37,-48,-56,-58,37,37,-60,37,37,37,37,37,-36,37,-49,-50,37,-62,37,37,37,37,37,]),'EQ':([1,4,6,7,8,9,22,23,46,51,52,54,55,56,60,61,65,66,69,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,91,94,95,96,99,105,106,108,109,112,116,117,118,119,120,121,122,123,124,126,127,129,130,138,139,140,141,142,145,146,],[38,-16,-10,-11,-12,-13,-51,-52,38,38,38,38,-17,38,38,-41,-55,38,-59,38,-4,-5,-6,-7,-8,-9,38,38,38,38,-29,-30,-31,-32,-44,-45,-46,-47,-61,38,-54,38,-15,-42,-57,38,-48,-56,-58,38,38,-60,38,38,38,38,38,-36,38,-49,-50,38,-62,38,38,38,38,38,]),'NEQ':([1,4,6,7,8,9,22,23,46,51,52,54,55,56,60,61,65,66,69,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,91,94,95,96,99,105,106,108,109,112,116,117,118,119,120,121,122,123,124,126,127,129,130,138,139,140,141,142,145,146,],[39,-16,-10,-11,-12,-13,-51,-52,39,39,39,39,-17,39,39,-41,-55,39,-59,39,-4,-5,-6,-7,-8,-9,39,39,39,39,-29,-30,-31,-32,-44,-45,-46,-47,-61,39,-54,39,-15,-42,-57,39,-48,-56,-58,39,39,-60,39,39,39,39,39,-36,39,-49,-50,39,-62,39,39,39,39,39,]),'IMPL':([1,4,6,7,8,9,22,23,46,51,52,54,55,56,60,61,65,66,69,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,91,94,95,96,99,105,106,108,109,112,116,117,118,119,120,121,122,123,124,126,127,129,130,138,139,140,141,142,145,146,],[40,-16,-10,-11,-12,-13,-51,-52,40,40,40,40,-17,40,40,-41,-55,40,-59,40,-4,-5,-6,-7,-8,-9,40,40,40,40,-29,-30,-31,-32,-44,-45,-46,-47,-61,40,-54,40,-15,-42,-57,40,-48,-56,-58,40,40,-60,40,40,40,40,40,-36,40,-49,-50,40,-62,40,40,40,40,40,]),'PLUS':([1,4,6,7,8,9,22,23,46,51,52,54,55,56,60,61,65,66,69,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,91,94,95,96,99,105,106,108,109,112,116,117,118,119,120,121,122,123,124,126,127,129,130,138,139,140,141,142,145,146,],[41,-16,-10,-11,-12,-13,-51,-52,41,41,41,41,-17,41,41,-41,-55,41,-59,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,-44,-45,-46,-47,-61,41,-54,41,-15,-42,-57,41,-48,-56,-58,41,41,-60,41,41,41,41,41,-36,41,-49,-50,41,-62,41,41,41,41,41,]),'TIMES':([1,4,6,7,8,9,22,23,46,51,52,54,55,56,60,61,65,66,69,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,91,94,95,96,99,105,106,108,109,112,116,117,118,119,120,121,122,123,124,126,127,129,130,138,139,140,141,142,145,146,],[43,-16,-10,-11,-12,-13,-51,-52,43,43,43,43,-17,43,43,-41,-55,43,-59,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,-46,-47,-61,43,-54,43,-15,-42,-57,43,-48,-56,-58,43,43,-60,43,43,43,43,43,-36,43,-49,-50,43,-62,43,43,43,43,43,]),'DIVIDE':([1,4,6,7,8,9,22,23,46,51,52,54,55,56,60,61,65,66,69,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,91,94,95,96,99,105,106,108,109,112,116,117,118,119,120,121,122,123,124,126,127,129,130,138,139,140,141,142,145,146,],[44,-16,-10,-11,-12,-13,-51,-52,44,44,44,44,-17,44,44,-41,-55,44,-59,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,-46,-47,-61,44,-54,44,-15,-42,-57,44,-48,-56,-58,44,44,-60,44,44,44,44,44,-36,44,-49,-50,44,-62,44,44,44,44,44,]),'SEPARATOR':([4,6,7,8,9,22,23,46,53,54,55,61,65,69,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,91,94,95,99,105,106,108,109,112,113,116,117,119,120,121,122,123,124,126,127,129,130,133,138,139,141,142,145,146,],[-16,-10,-11,-12,-13,-51,-52,92,100,-22,-17,-41,-55,-59,-4,-5,-6,-7,-8,-9,-25,-26,-27,-28,-29,-30,-31,-32,-44,-45,-46,-47,-61,-24,-54,-15,-42,-57,-53,-48,-56,131,-58,134,-60,-3,-14,-23,-18,-19,-36,-43,-49,-50,131,-39,-62,-2,-33,-40,-1,]),'DO':([4,6,7,8,9,22,23,51,52,55,61,65,69,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,91,94,95,99,105,106,108,109,112,116,119,120,121,123,124,126,127,129,130,139,140,141,142,146,],[-16,-10,-11,-12,-13,-51,-52,97,98,-17,-41,-55,-59,-4,-5,-6,-7,-8,-9,-25,-26,-27,-28,-29,-30,-31,-32,-44,-45,-46,-47,-61,-24,-54,-15,-42,-57,-53,-48,-56,-58,-60,-3,-14,-18,-19,-36,-43,-49,-50,-62,144,-2,-33,-1,]),'END':([4,6,7,8,9,22,23,53,54,55,61,65,69,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,91,94,95,99,105,106,108,109,112,113,116,119,120,121,122,123,124,126,127,129,130,133,138,139,141,142,145,146,],[-16,-10,-11,-12,-13,-51,-52,99,-22,-17,-41,-55,-59,-4,-5,-6,-7,-8,-9,-25,-26,-27,-28,-29,-30,-31,-32,-44,-45,-46,-47,-61,-24,-54,-15,-42,-57,-53,-48,-56,130,-58,-60,-3,-14,-23,-18,-19,-36,-43,-49,-50,139,-39,-62,-2,-33,-40,-1,]),'THEN':([4,6,7,8,9,22,23,55,56,61,65,69,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,91,94,95,99,105,106,108,109,112,116,119,120,121,123,124,126,127,129,130,139,141,142,146,],[-16,-10,-11,-12,-13,-51,-52,-17,101,-41,-55,-59,-4,-5,-6,-7,-8,-9,-25,-26,-27,-28,-29,-30,-31,-32,-44,-45,-46,-47,-61,-24,-54,-15,-42,-57,-53,-48,-56,-58,-60,-3,-14,-18,-19,-36,-43,-49,-50,-62,-2,-33,-1,]),'RPAREN':([4,6,7,8,9,22,23,45,55,59,60,61,65,66,67,69,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,94,95,99,104,105,106,108,109,111,112,116,119,120,121,123,124,126,127,128,129,130,139,141,142,146,],[-16,-10,-11,-12,-13,-51,-52,91,-17,105,106,-41,-55,-20,112,-59,-4,-5,-6,-7,-8,-9,-25,-26,-27,-28,-29,-30,-31,-32,-44,-45,-46,-47,116,-61,-24,-54,-15,126,-42,-57,-53,-48,129,-56,-58,-60,-3,-14,-18,-19,-36,-43,-21,-49,-50,-62,-2,-33,-1,]),'COMMA':([4,6,7,8,9,22,23,55,58,61,65,66,69,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,91,94,95,99,105,106,108,109,112,116,119,120,121,123,124,126,127,129,130,139,141,142,146,],[-16,-10,-11,-12,-13,-51,-52,-17,103,-41,-55,110,-59,-4,-5,-6,-7,-8,-9,-25,-26,-27,-28,-29,-30,-31,-32,-44,-45,-46,-47,-61,-24,-54,-15,-42,-57,-53,-48,-56,-58,-60,-3,-14,-18,-19,-36,-43,-49,-50,-62,-2,-33,-1,]),'RBRACKET':([4,6,7,8,9,19,22,23,55,61,64,65,66,69,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,91,94,95,96,99,105,106,108,109,112,116,119,120,121,123,124,126,127,128,129,130,139,141,142,146,],[-16,-10,-11,-12,-13,65,-51,-52,-17,-41,109,-55,-20,-59,-4,-5,-6,-7,-8,-9,-25,-26,-27,-28,-29,-30,-31,-32,-44,-45,-46,-47,-61,-24,-54,119,-15,-42,-57,-53,-48,-56,-58,-60,-3,-14,-18,-19,-36,-43,-21,-49,-50,-62,-2,-33,-1,]),'IN':([4,6,7,8,9,22,23,55,57,58,61,65,69,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,91,94,95,99,105,106,108,109,112,116,118,119,120,121,123,124,125,126,127,129,130,139,141,142,146,],[-16,-10,-11,-12,-13,-51,-52,-17,102,-37,-41,-55,-59,-4,-5,-6,-7,-8,-9,-25,-26,-27,-28,-29,-30,-31,-32,-44,-45,-46,-47,-61,-24,-54,-15,-42,-57,-53,-48,-56,-58,135,-60,-3,-14,-18,-19,-38,-36,-43,-49,-50,-62,-2,-33,-1,]),'ELSE':([4,6,7,8,9,22,23,55,61,65,69,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,91,94,95,99,105,106,108,109,112,116,119,120,121,123,124,126,127,129,130,139,141,142,146,],[-16,-10,-11,-12,-13,-51,-52,-17,-41,-55,-59,-4,-5,-6,-7,-8,-9,-25,-26,-27,-28,-29,-30,-31,-32,-44,-45,-46,-47,-61,-24,-54,-15,-42,-57,-53,-48,-56,-58,-60,-3,-14,136,-19,-36,-43,-49,-50,-62,-2,-33,-1,]),'ASSIGN':([4,47,114,137,],[48,93,132,143,]),'ARROW':([18,58,62,125,],[63,-37,107,-38,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'expression':([0,2,5,10,11,12,13,16,17,19,25,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,48,50,59,63,67,92,93,97,98,100,101,102,107,110,132,134,135,136,143,144,],[1,46,51,52,54,55,56,60,61,66,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,66,94,96,66,108,66,117,118,120,121,122,123,124,127,66,138,140,141,142,145,146,]),'dots':([0,2,4,5,10,11,12,13,16,17,19,25,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,48,50,59,63,67,92,93,97,98,100,101,102,107,110,132,134,135,136,143,144,],[24,24,49,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,]),'body':([11,],[53,]),'identifier_list':([14,18,103,],[57,62,125,]),'expression_list':([19,45,59,67,110,],[64,90,104,111,128,]),'struct_body':([68,115,],[113,133,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> expression","S'",1,None,None,None),
  ('expression -> FOR expression SEPARATOR expression SEPARATOR expression DO expression','expression',8,'p_expression_for','for_expr.py',10),
  ('expression -> LOCAL IDENTIFIER ASSIGN expression IN expression','expression',6,'p_expression_local','local_expr.py',10),
  ('expression -> WHILE expression DO expression','expression',4,'p_expression_while','while_expr.py',10),
  ('expression -> expression LESS_THEN expression','expression',3,'p_expression_binary_comparison','comparison_expr.py',11),
  ('expression -> expression GREATER_THEN expression','expression',3,'p_expression_binary_comparison','comparison_expr.py',12),
  ('expression -> expression LESS_EQUALS expression','expression',3,'p_expression_binary_comparison','comparison_expr.py',13),
  ('expression -> expression GREATER_EQUALS expression','expression',3,'p_expression_binary_comparison','comparison_expr.py',14),
  ('expression -> expression EQUALS expression','expression',3,'p_expression_binary_comparison','comparison_expr.py',15),
  ('expression -> expression NOT_EQUALS expression','expression',3,'p_expression_binary_comparison','comparison_expr.py',16),
  ('expression -> NUMBER','expression',1,'p_expression_single_value','datatypes.py',14),
  ('expression -> FLOAT','expression',1,'p_expression_single_value','datatypes.py',15),
  ('expression -> CHAR','expression',1,'p_expression_single_value','datatypes.py',16),
  ('expression -> STRING','expression',1,'p_expression_single_value','datatypes.py',17),
  ('expression -> LOOP expression DO expression','expression',4,'p_expression_loop','loop_expr.py',14),
  ('expression -> BEGIN body END','expression',3,'p_expression_sequences','sequences_expr.py',14),
  ('expression -> IDENTIFIER','expression',1,'p_expression_id','assignment_expr.py',15),
  ('expression -> NOT expression','expression',2,'p_expression_unary_not','boolean_expr.py',15),
  ('expression -> IF expression THEN expression','expression',4,'p_expression_it','ite_expr.py',15),
  ('expression -> LOCK identifier_list IN expression','expression',4,'p_expression_lock','lock_expr.py',15),
  ('expression_list -> expression','expression_list',1,'p_argument_list','lambda_expr.py',17),
  ('expression_list -> expression COMMA expression_list','expression_list',3,'p_argument_list','lambda_expr.py',18),
  ('body -> expression','body',1,'p_bodyn','sequences_expr.py',18),
  ('body -> body SEPARATOR expression','body',3,'p_bodyn','sequences_expr.py',19),
  ('expression -> IDENTIFIER ASSIGN expression','expression',3,'p_expression_assign','assignment_expr.py',19),
  ('expression -> expression AND expression','expression',3,'p_expression_binary_boolean','boolean_expr.py',19),
  ('expression -> expression NAND expression','expression',3,'p_expression_binary_boolean','boolean_expr.py',20),
  ('expression -> expression OR expression','expression',3,'p_expression_binary_boolean','boolean_expr.py',21),
  ('expression -> expression NOR expression','expression',3,'p_expression_binary_boolean','boolean_expr.py',22),
  ('expression -> expression XOR expression','expression',3,'p_expression_binary_boolean','boolean_expr.py',23),
  ('expression -> expression EQ expression','expression',3,'p_expression_binary_boolean','boolean_expr.py',24),
  ('expression -> expression NEQ expression','expression',3,'p_expression_binary_boolean','boolean_expr.py',25),
  ('expression -> expression IMPL expression','expression',3,'p_expression_binary_boolean','boolean_expr.py',26),
  ('expression -> IF expression THEN expression ELSE expression','expression',6,'p_expression_ite','ite_expr.py',19),
  ('dots -> DOT','dots',1,'p_dot_notation','struct_expr.py',19),
  ('dots -> dots DOT','dots',2,'p_dot_notation','struct_expr.py',20),
  ('expression -> LIST LPAREN expression_list RPAREN','expression',4,'p_expression_list','datatypes.py',21),
  ('identifier_list -> IDENTIFIER','identifier_list',1,'p_parameter_list','lambda_expr.py',23),
  ('identifier_list -> IDENTIFIER COMMA identifier_list','identifier_list',3,'p_parameter_list','lambda_expr.py',24),
  ('struct_body -> IDENTIFIER ASSIGN expression','struct_body',3,'p_struct_body','struct_expr.py',24),
  ('struct_body -> struct_body SEPARATOR IDENTIFIER ASSIGN expression','struct_body',5,'p_struct_body','struct_expr.py',25),
  ('expression -> MINUS expression','expression',2,'p_expression_unary_minus','arithmetic_expr.py',25),
  ('expression -> LIST LPAREN RPAREN','expression',3,'p_expression_list_empty','datatypes.py',25),
  ('expression -> LAMBDA identifier_list ARROW expression','expression',4,'p_expression_n_lambda','lambda_expr.py',28),
  ('expression -> expression PLUS expression','expression',3,'p_expression_binary_arithmetic','arithmetic_expr.py',29),
  ('expression -> expression MINUS expression','expression',3,'p_expression_binary_arithmetic','arithmetic_expr.py',30),
  ('expression -> expression TIMES expression','expression',3,'p_expression_binary_arithmetic','arithmetic_expr.py',31),
  ('expression -> expression DIVIDE expression','expression',3,'p_expression_binary_arithmetic','arithmetic_expr.py',32),
  ('expression -> LBRACKET expression_list RBRACKET','expression',3,'p_expression_array','datatypes.py',29),
  ('expression -> ARRAY LPAREN expression_list RPAREN','expression',4,'p_expression_array','datatypes.py',30),
  ('expression -> STRUCT BEGIN struct_body END','expression',4,'p_expression_struct','struct_expr.py',29),
  ('expression -> TRUE','expression',1,'p_expression_boolean_value','boolean_expr.py',30),
  ('expression -> FALSE','expression',1,'p_expression_boolean_value','boolean_expr.py',31),
  ('expression -> LAMBDA ARROW expression','expression',3,'p_expression_0_lambda','lambda_expr.py',32),
  ('expression -> IDENTIFIER dots IDENTIFIER','expression',3,'p_expression_struct_member_access','struct_expr.py',33),
  ('expression -> LBRACKET RBRACKET','expression',2,'p_expression_array_empty','datatypes.py',34),
  ('expression -> ARRAY LPAREN RPAREN','expression',3,'p_expression_array_empty','datatypes.py',35),
  ('expression -> LPAREN expression RPAREN','expression',3,'p_expression_parenthesis','arithmetic_expr.py',36),
  ('expression -> expression LPAREN expression_list RPAREN','expression',4,'p_expression_call_n_args','lambda_expr.py',36),
  ('expression -> dots IDENTIFIER','expression',2,'p_expression_dots_id','struct_expr.py',37),
  ('expression -> IDENTIFIER LBRACKET expression RBRACKET','expression',4,'p_expression_array_access','datatypes.py',39),
  ('expression -> expression LPAREN RPAREN','expression',3,'p_expression_call_0_args','lambda_expr.py',40),
  ('expression -> EXTEND expression BEGIN struct_body END','expression',5,'p_struct_extend_expression','struct_expr.py',41),
]
