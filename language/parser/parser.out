Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Grammar

Rule 0     S' -> expression
Rule 1     expression -> expression LESS_THEN expression
Rule 2     expression -> expression GREATER_THEN expression
Rule 3     expression -> expression LESS_EQUALS expression
Rule 4     expression -> expression GREATER_EQUALS expression
Rule 5     expression -> expression EQUALS expression
Rule 6     expression -> expression NOT_EQUALS expression
Rule 7     expression -> FOR expression SEPARATOR expression SEPARATOR expression DO expression
Rule 8     expression -> IDENTIFIER
Rule 9     expression -> NOT expression
Rule 10    expression -> IF expression THEN expression
Rule 11    expression -> BEGIN body END
Rule 12    expression -> LOOP expression DO expression
Rule 13    expression -> IDENTIFIER ASSIGN expression
Rule 14    expression -> expression AND expression
Rule 15    expression -> expression NAND expression
Rule 16    expression -> expression OR expression
Rule 17    expression -> expression NOR expression
Rule 18    expression -> expression XOR expression
Rule 19    expression -> expression EQ expression
Rule 20    expression -> expression NEQ expression
Rule 21    expression -> expression IMPL expression
Rule 22    expression -> IF expression THEN expression ELSE expression
Rule 23    body -> expression
Rule 24    body -> body SEPARATOR expression
Rule 25    expression -> NUMBER
Rule 26    expression -> FLOAT
Rule 27    expression -> MINUS expression
Rule 28    expression -> expression PLUS expression
Rule 29    expression -> expression MINUS expression
Rule 30    expression -> expression TIMES expression
Rule 31    expression -> expression DIVIDE expression
Rule 32    expression -> TRUE
Rule 33    expression -> FALSE
Rule 34    expression -> LPAREN expression RPAREN

Terminals, with rules where they appear

AND                  : 14
ASSIGN               : 13
BEGIN                : 11
DIVIDE               : 31
DO                   : 7 12
ELSE                 : 22
END                  : 11
EQ                   : 19
EQUALS               : 5
FALSE                : 33
FLOAT                : 26
FOR                  : 7
GREATER_EQUALS       : 4
GREATER_THEN         : 2
IDENTIFIER           : 8 13
IF                   : 10 22
IMPL                 : 21
LESS_EQUALS          : 3
LESS_THEN            : 1
LOOP                 : 12
LPAREN               : 34
MINUS                : 27 29
NAND                 : 15
NEQ                  : 20
NOR                  : 17
NOT                  : 9
NOT_EQUALS           : 6
NUMBER               : 25
OR                   : 16
PLUS                 : 28
RPAREN               : 34
SEPARATOR            : 7 7 24
THEN                 : 10 22
TIMES                : 30
TRUE                 : 32
XOR                  : 18
error                : 

Nonterminals, with rules where they appear

body                 : 11 24
expression           : 1 1 2 2 3 3 4 4 5 5 6 6 7 7 7 7 9 10 10 12 12 13 14 14 15 15 16 16 17 17 18 18 19 19 20 20 21 21 22 22 22 23 24 27 28 28 29 29 30 30 31 31 34 0

Parsing method: LALR

state 0

    (0) S' -> . expression
    (1) expression -> . expression LESS_THEN expression
    (2) expression -> . expression GREATER_THEN expression
    (3) expression -> . expression LESS_EQUALS expression
    (4) expression -> . expression GREATER_EQUALS expression
    (5) expression -> . expression EQUALS expression
    (6) expression -> . expression NOT_EQUALS expression
    (7) expression -> . FOR expression SEPARATOR expression SEPARATOR expression DO expression
    (8) expression -> . IDENTIFIER
    (9) expression -> . NOT expression
    (10) expression -> . IF expression THEN expression
    (11) expression -> . BEGIN body END
    (12) expression -> . LOOP expression DO expression
    (13) expression -> . IDENTIFIER ASSIGN expression
    (14) expression -> . expression AND expression
    (15) expression -> . expression NAND expression
    (16) expression -> . expression OR expression
    (17) expression -> . expression NOR expression
    (18) expression -> . expression XOR expression
    (19) expression -> . expression EQ expression
    (20) expression -> . expression NEQ expression
    (21) expression -> . expression IMPL expression
    (22) expression -> . IF expression THEN expression ELSE expression
    (25) expression -> . NUMBER
    (26) expression -> . FLOAT
    (27) expression -> . MINUS expression
    (28) expression -> . expression PLUS expression
    (29) expression -> . expression MINUS expression
    (30) expression -> . expression TIMES expression
    (31) expression -> . expression DIVIDE expression
    (32) expression -> . TRUE
    (33) expression -> . FALSE
    (34) expression -> . LPAREN expression RPAREN

    FOR             shift and go to state 2
    IDENTIFIER      shift and go to state 3
    NOT             shift and go to state 4
    IF              shift and go to state 5
    BEGIN           shift and go to state 6
    LOOP            shift and go to state 7
    NUMBER          shift and go to state 8
    FLOAT           shift and go to state 9
    MINUS           shift and go to state 10
    TRUE            shift and go to state 11
    FALSE           shift and go to state 12
    LPAREN          shift and go to state 13

    expression                     shift and go to state 1

state 1

    (0) S' -> expression .
    (1) expression -> expression . LESS_THEN expression
    (2) expression -> expression . GREATER_THEN expression
    (3) expression -> expression . LESS_EQUALS expression
    (4) expression -> expression . GREATER_EQUALS expression
    (5) expression -> expression . EQUALS expression
    (6) expression -> expression . NOT_EQUALS expression
    (14) expression -> expression . AND expression
    (15) expression -> expression . NAND expression
    (16) expression -> expression . OR expression
    (17) expression -> expression . NOR expression
    (18) expression -> expression . XOR expression
    (19) expression -> expression . EQ expression
    (20) expression -> expression . NEQ expression
    (21) expression -> expression . IMPL expression
    (28) expression -> expression . PLUS expression
    (29) expression -> expression . MINUS expression
    (30) expression -> expression . TIMES expression
    (31) expression -> expression . DIVIDE expression

    LESS_THEN       shift and go to state 14
    GREATER_THEN    shift and go to state 15
    LESS_EQUALS     shift and go to state 16
    GREATER_EQUALS  shift and go to state 17
    EQUALS          shift and go to state 18
    NOT_EQUALS      shift and go to state 19
    AND             shift and go to state 20
    NAND            shift and go to state 21
    OR              shift and go to state 22
    NOR             shift and go to state 23
    XOR             shift and go to state 24
    EQ              shift and go to state 25
    NEQ             shift and go to state 26
    IMPL            shift and go to state 27
    PLUS            shift and go to state 28
    MINUS           shift and go to state 29
    TIMES           shift and go to state 30
    DIVIDE          shift and go to state 31


state 2

    (7) expression -> FOR . expression SEPARATOR expression SEPARATOR expression DO expression
    (1) expression -> . expression LESS_THEN expression
    (2) expression -> . expression GREATER_THEN expression
    (3) expression -> . expression LESS_EQUALS expression
    (4) expression -> . expression GREATER_EQUALS expression
    (5) expression -> . expression EQUALS expression
    (6) expression -> . expression NOT_EQUALS expression
    (7) expression -> . FOR expression SEPARATOR expression SEPARATOR expression DO expression
    (8) expression -> . IDENTIFIER
    (9) expression -> . NOT expression
    (10) expression -> . IF expression THEN expression
    (11) expression -> . BEGIN body END
    (12) expression -> . LOOP expression DO expression
    (13) expression -> . IDENTIFIER ASSIGN expression
    (14) expression -> . expression AND expression
    (15) expression -> . expression NAND expression
    (16) expression -> . expression OR expression
    (17) expression -> . expression NOR expression
    (18) expression -> . expression XOR expression
    (19) expression -> . expression EQ expression
    (20) expression -> . expression NEQ expression
    (21) expression -> . expression IMPL expression
    (22) expression -> . IF expression THEN expression ELSE expression
    (25) expression -> . NUMBER
    (26) expression -> . FLOAT
    (27) expression -> . MINUS expression
    (28) expression -> . expression PLUS expression
    (29) expression -> . expression MINUS expression
    (30) expression -> . expression TIMES expression
    (31) expression -> . expression DIVIDE expression
    (32) expression -> . TRUE
    (33) expression -> . FALSE
    (34) expression -> . LPAREN expression RPAREN

    FOR             shift and go to state 2
    IDENTIFIER      shift and go to state 3
    NOT             shift and go to state 4
    IF              shift and go to state 5
    BEGIN           shift and go to state 6
    LOOP            shift and go to state 7
    NUMBER          shift and go to state 8
    FLOAT           shift and go to state 9
    MINUS           shift and go to state 10
    TRUE            shift and go to state 11
    FALSE           shift and go to state 12
    LPAREN          shift and go to state 13

    expression                     shift and go to state 32

state 3

    (8) expression -> IDENTIFIER .
    (13) expression -> IDENTIFIER . ASSIGN expression

    LESS_THEN       reduce using rule 8 (expression -> IDENTIFIER .)
    GREATER_THEN    reduce using rule 8 (expression -> IDENTIFIER .)
    LESS_EQUALS     reduce using rule 8 (expression -> IDENTIFIER .)
    GREATER_EQUALS  reduce using rule 8 (expression -> IDENTIFIER .)
    EQUALS          reduce using rule 8 (expression -> IDENTIFIER .)
    NOT_EQUALS      reduce using rule 8 (expression -> IDENTIFIER .)
    AND             reduce using rule 8 (expression -> IDENTIFIER .)
    NAND            reduce using rule 8 (expression -> IDENTIFIER .)
    OR              reduce using rule 8 (expression -> IDENTIFIER .)
    NOR             reduce using rule 8 (expression -> IDENTIFIER .)
    XOR             reduce using rule 8 (expression -> IDENTIFIER .)
    EQ              reduce using rule 8 (expression -> IDENTIFIER .)
    NEQ             reduce using rule 8 (expression -> IDENTIFIER .)
    IMPL            reduce using rule 8 (expression -> IDENTIFIER .)
    PLUS            reduce using rule 8 (expression -> IDENTIFIER .)
    MINUS           reduce using rule 8 (expression -> IDENTIFIER .)
    TIMES           reduce using rule 8 (expression -> IDENTIFIER .)
    DIVIDE          reduce using rule 8 (expression -> IDENTIFIER .)
    $end            reduce using rule 8 (expression -> IDENTIFIER .)
    SEPARATOR       reduce using rule 8 (expression -> IDENTIFIER .)
    THEN            reduce using rule 8 (expression -> IDENTIFIER .)
    END             reduce using rule 8 (expression -> IDENTIFIER .)
    DO              reduce using rule 8 (expression -> IDENTIFIER .)
    RPAREN          reduce using rule 8 (expression -> IDENTIFIER .)
    ELSE            reduce using rule 8 (expression -> IDENTIFIER .)
    ASSIGN          shift and go to state 33


state 4

    (9) expression -> NOT . expression
    (1) expression -> . expression LESS_THEN expression
    (2) expression -> . expression GREATER_THEN expression
    (3) expression -> . expression LESS_EQUALS expression
    (4) expression -> . expression GREATER_EQUALS expression
    (5) expression -> . expression EQUALS expression
    (6) expression -> . expression NOT_EQUALS expression
    (7) expression -> . FOR expression SEPARATOR expression SEPARATOR expression DO expression
    (8) expression -> . IDENTIFIER
    (9) expression -> . NOT expression
    (10) expression -> . IF expression THEN expression
    (11) expression -> . BEGIN body END
    (12) expression -> . LOOP expression DO expression
    (13) expression -> . IDENTIFIER ASSIGN expression
    (14) expression -> . expression AND expression
    (15) expression -> . expression NAND expression
    (16) expression -> . expression OR expression
    (17) expression -> . expression NOR expression
    (18) expression -> . expression XOR expression
    (19) expression -> . expression EQ expression
    (20) expression -> . expression NEQ expression
    (21) expression -> . expression IMPL expression
    (22) expression -> . IF expression THEN expression ELSE expression
    (25) expression -> . NUMBER
    (26) expression -> . FLOAT
    (27) expression -> . MINUS expression
    (28) expression -> . expression PLUS expression
    (29) expression -> . expression MINUS expression
    (30) expression -> . expression TIMES expression
    (31) expression -> . expression DIVIDE expression
    (32) expression -> . TRUE
    (33) expression -> . FALSE
    (34) expression -> . LPAREN expression RPAREN

    FOR             shift and go to state 2
    IDENTIFIER      shift and go to state 3
    NOT             shift and go to state 4
    IF              shift and go to state 5
    BEGIN           shift and go to state 6
    LOOP            shift and go to state 7
    NUMBER          shift and go to state 8
    FLOAT           shift and go to state 9
    MINUS           shift and go to state 10
    TRUE            shift and go to state 11
    FALSE           shift and go to state 12
    LPAREN          shift and go to state 13

    expression                     shift and go to state 34

state 5

    (10) expression -> IF . expression THEN expression
    (22) expression -> IF . expression THEN expression ELSE expression
    (1) expression -> . expression LESS_THEN expression
    (2) expression -> . expression GREATER_THEN expression
    (3) expression -> . expression LESS_EQUALS expression
    (4) expression -> . expression GREATER_EQUALS expression
    (5) expression -> . expression EQUALS expression
    (6) expression -> . expression NOT_EQUALS expression
    (7) expression -> . FOR expression SEPARATOR expression SEPARATOR expression DO expression
    (8) expression -> . IDENTIFIER
    (9) expression -> . NOT expression
    (10) expression -> . IF expression THEN expression
    (11) expression -> . BEGIN body END
    (12) expression -> . LOOP expression DO expression
    (13) expression -> . IDENTIFIER ASSIGN expression
    (14) expression -> . expression AND expression
    (15) expression -> . expression NAND expression
    (16) expression -> . expression OR expression
    (17) expression -> . expression NOR expression
    (18) expression -> . expression XOR expression
    (19) expression -> . expression EQ expression
    (20) expression -> . expression NEQ expression
    (21) expression -> . expression IMPL expression
    (22) expression -> . IF expression THEN expression ELSE expression
    (25) expression -> . NUMBER
    (26) expression -> . FLOAT
    (27) expression -> . MINUS expression
    (28) expression -> . expression PLUS expression
    (29) expression -> . expression MINUS expression
    (30) expression -> . expression TIMES expression
    (31) expression -> . expression DIVIDE expression
    (32) expression -> . TRUE
    (33) expression -> . FALSE
    (34) expression -> . LPAREN expression RPAREN

    FOR             shift and go to state 2
    IDENTIFIER      shift and go to state 3
    NOT             shift and go to state 4
    IF              shift and go to state 5
    BEGIN           shift and go to state 6
    LOOP            shift and go to state 7
    NUMBER          shift and go to state 8
    FLOAT           shift and go to state 9
    MINUS           shift and go to state 10
    TRUE            shift and go to state 11
    FALSE           shift and go to state 12
    LPAREN          shift and go to state 13

    expression                     shift and go to state 35

state 6

    (11) expression -> BEGIN . body END
    (23) body -> . expression
    (24) body -> . body SEPARATOR expression
    (1) expression -> . expression LESS_THEN expression
    (2) expression -> . expression GREATER_THEN expression
    (3) expression -> . expression LESS_EQUALS expression
    (4) expression -> . expression GREATER_EQUALS expression
    (5) expression -> . expression EQUALS expression
    (6) expression -> . expression NOT_EQUALS expression
    (7) expression -> . FOR expression SEPARATOR expression SEPARATOR expression DO expression
    (8) expression -> . IDENTIFIER
    (9) expression -> . NOT expression
    (10) expression -> . IF expression THEN expression
    (11) expression -> . BEGIN body END
    (12) expression -> . LOOP expression DO expression
    (13) expression -> . IDENTIFIER ASSIGN expression
    (14) expression -> . expression AND expression
    (15) expression -> . expression NAND expression
    (16) expression -> . expression OR expression
    (17) expression -> . expression NOR expression
    (18) expression -> . expression XOR expression
    (19) expression -> . expression EQ expression
    (20) expression -> . expression NEQ expression
    (21) expression -> . expression IMPL expression
    (22) expression -> . IF expression THEN expression ELSE expression
    (25) expression -> . NUMBER
    (26) expression -> . FLOAT
    (27) expression -> . MINUS expression
    (28) expression -> . expression PLUS expression
    (29) expression -> . expression MINUS expression
    (30) expression -> . expression TIMES expression
    (31) expression -> . expression DIVIDE expression
    (32) expression -> . TRUE
    (33) expression -> . FALSE
    (34) expression -> . LPAREN expression RPAREN

    FOR             shift and go to state 2
    IDENTIFIER      shift and go to state 3
    NOT             shift and go to state 4
    IF              shift and go to state 5
    BEGIN           shift and go to state 6
    LOOP            shift and go to state 7
    NUMBER          shift and go to state 8
    FLOAT           shift and go to state 9
    MINUS           shift and go to state 10
    TRUE            shift and go to state 11
    FALSE           shift and go to state 12
    LPAREN          shift and go to state 13

    body                           shift and go to state 36
    expression                     shift and go to state 37

state 7

    (12) expression -> LOOP . expression DO expression
    (1) expression -> . expression LESS_THEN expression
    (2) expression -> . expression GREATER_THEN expression
    (3) expression -> . expression LESS_EQUALS expression
    (4) expression -> . expression GREATER_EQUALS expression
    (5) expression -> . expression EQUALS expression
    (6) expression -> . expression NOT_EQUALS expression
    (7) expression -> . FOR expression SEPARATOR expression SEPARATOR expression DO expression
    (8) expression -> . IDENTIFIER
    (9) expression -> . NOT expression
    (10) expression -> . IF expression THEN expression
    (11) expression -> . BEGIN body END
    (12) expression -> . LOOP expression DO expression
    (13) expression -> . IDENTIFIER ASSIGN expression
    (14) expression -> . expression AND expression
    (15) expression -> . expression NAND expression
    (16) expression -> . expression OR expression
    (17) expression -> . expression NOR expression
    (18) expression -> . expression XOR expression
    (19) expression -> . expression EQ expression
    (20) expression -> . expression NEQ expression
    (21) expression -> . expression IMPL expression
    (22) expression -> . IF expression THEN expression ELSE expression
    (25) expression -> . NUMBER
    (26) expression -> . FLOAT
    (27) expression -> . MINUS expression
    (28) expression -> . expression PLUS expression
    (29) expression -> . expression MINUS expression
    (30) expression -> . expression TIMES expression
    (31) expression -> . expression DIVIDE expression
    (32) expression -> . TRUE
    (33) expression -> . FALSE
    (34) expression -> . LPAREN expression RPAREN

    FOR             shift and go to state 2
    IDENTIFIER      shift and go to state 3
    NOT             shift and go to state 4
    IF              shift and go to state 5
    BEGIN           shift and go to state 6
    LOOP            shift and go to state 7
    NUMBER          shift and go to state 8
    FLOAT           shift and go to state 9
    MINUS           shift and go to state 10
    TRUE            shift and go to state 11
    FALSE           shift and go to state 12
    LPAREN          shift and go to state 13

    expression                     shift and go to state 38

state 8

    (25) expression -> NUMBER .

    LESS_THEN       reduce using rule 25 (expression -> NUMBER .)
    GREATER_THEN    reduce using rule 25 (expression -> NUMBER .)
    LESS_EQUALS     reduce using rule 25 (expression -> NUMBER .)
    GREATER_EQUALS  reduce using rule 25 (expression -> NUMBER .)
    EQUALS          reduce using rule 25 (expression -> NUMBER .)
    NOT_EQUALS      reduce using rule 25 (expression -> NUMBER .)
    AND             reduce using rule 25 (expression -> NUMBER .)
    NAND            reduce using rule 25 (expression -> NUMBER .)
    OR              reduce using rule 25 (expression -> NUMBER .)
    NOR             reduce using rule 25 (expression -> NUMBER .)
    XOR             reduce using rule 25 (expression -> NUMBER .)
    EQ              reduce using rule 25 (expression -> NUMBER .)
    NEQ             reduce using rule 25 (expression -> NUMBER .)
    IMPL            reduce using rule 25 (expression -> NUMBER .)
    PLUS            reduce using rule 25 (expression -> NUMBER .)
    MINUS           reduce using rule 25 (expression -> NUMBER .)
    TIMES           reduce using rule 25 (expression -> NUMBER .)
    DIVIDE          reduce using rule 25 (expression -> NUMBER .)
    $end            reduce using rule 25 (expression -> NUMBER .)
    SEPARATOR       reduce using rule 25 (expression -> NUMBER .)
    THEN            reduce using rule 25 (expression -> NUMBER .)
    END             reduce using rule 25 (expression -> NUMBER .)
    DO              reduce using rule 25 (expression -> NUMBER .)
    RPAREN          reduce using rule 25 (expression -> NUMBER .)
    ELSE            reduce using rule 25 (expression -> NUMBER .)


state 9

    (26) expression -> FLOAT .

    LESS_THEN       reduce using rule 26 (expression -> FLOAT .)
    GREATER_THEN    reduce using rule 26 (expression -> FLOAT .)
    LESS_EQUALS     reduce using rule 26 (expression -> FLOAT .)
    GREATER_EQUALS  reduce using rule 26 (expression -> FLOAT .)
    EQUALS          reduce using rule 26 (expression -> FLOAT .)
    NOT_EQUALS      reduce using rule 26 (expression -> FLOAT .)
    AND             reduce using rule 26 (expression -> FLOAT .)
    NAND            reduce using rule 26 (expression -> FLOAT .)
    OR              reduce using rule 26 (expression -> FLOAT .)
    NOR             reduce using rule 26 (expression -> FLOAT .)
    XOR             reduce using rule 26 (expression -> FLOAT .)
    EQ              reduce using rule 26 (expression -> FLOAT .)
    NEQ             reduce using rule 26 (expression -> FLOAT .)
    IMPL            reduce using rule 26 (expression -> FLOAT .)
    PLUS            reduce using rule 26 (expression -> FLOAT .)
    MINUS           reduce using rule 26 (expression -> FLOAT .)
    TIMES           reduce using rule 26 (expression -> FLOAT .)
    DIVIDE          reduce using rule 26 (expression -> FLOAT .)
    $end            reduce using rule 26 (expression -> FLOAT .)
    SEPARATOR       reduce using rule 26 (expression -> FLOAT .)
    THEN            reduce using rule 26 (expression -> FLOAT .)
    END             reduce using rule 26 (expression -> FLOAT .)
    DO              reduce using rule 26 (expression -> FLOAT .)
    RPAREN          reduce using rule 26 (expression -> FLOAT .)
    ELSE            reduce using rule 26 (expression -> FLOAT .)


state 10

    (27) expression -> MINUS . expression
    (1) expression -> . expression LESS_THEN expression
    (2) expression -> . expression GREATER_THEN expression
    (3) expression -> . expression LESS_EQUALS expression
    (4) expression -> . expression GREATER_EQUALS expression
    (5) expression -> . expression EQUALS expression
    (6) expression -> . expression NOT_EQUALS expression
    (7) expression -> . FOR expression SEPARATOR expression SEPARATOR expression DO expression
    (8) expression -> . IDENTIFIER
    (9) expression -> . NOT expression
    (10) expression -> . IF expression THEN expression
    (11) expression -> . BEGIN body END
    (12) expression -> . LOOP expression DO expression
    (13) expression -> . IDENTIFIER ASSIGN expression
    (14) expression -> . expression AND expression
    (15) expression -> . expression NAND expression
    (16) expression -> . expression OR expression
    (17) expression -> . expression NOR expression
    (18) expression -> . expression XOR expression
    (19) expression -> . expression EQ expression
    (20) expression -> . expression NEQ expression
    (21) expression -> . expression IMPL expression
    (22) expression -> . IF expression THEN expression ELSE expression
    (25) expression -> . NUMBER
    (26) expression -> . FLOAT
    (27) expression -> . MINUS expression
    (28) expression -> . expression PLUS expression
    (29) expression -> . expression MINUS expression
    (30) expression -> . expression TIMES expression
    (31) expression -> . expression DIVIDE expression
    (32) expression -> . TRUE
    (33) expression -> . FALSE
    (34) expression -> . LPAREN expression RPAREN

    FOR             shift and go to state 2
    IDENTIFIER      shift and go to state 3
    NOT             shift and go to state 4
    IF              shift and go to state 5
    BEGIN           shift and go to state 6
    LOOP            shift and go to state 7
    NUMBER          shift and go to state 8
    FLOAT           shift and go to state 9
    MINUS           shift and go to state 10
    TRUE            shift and go to state 11
    FALSE           shift and go to state 12
    LPAREN          shift and go to state 13

    expression                     shift and go to state 39

state 11

    (32) expression -> TRUE .

    LESS_THEN       reduce using rule 32 (expression -> TRUE .)
    GREATER_THEN    reduce using rule 32 (expression -> TRUE .)
    LESS_EQUALS     reduce using rule 32 (expression -> TRUE .)
    GREATER_EQUALS  reduce using rule 32 (expression -> TRUE .)
    EQUALS          reduce using rule 32 (expression -> TRUE .)
    NOT_EQUALS      reduce using rule 32 (expression -> TRUE .)
    AND             reduce using rule 32 (expression -> TRUE .)
    NAND            reduce using rule 32 (expression -> TRUE .)
    OR              reduce using rule 32 (expression -> TRUE .)
    NOR             reduce using rule 32 (expression -> TRUE .)
    XOR             reduce using rule 32 (expression -> TRUE .)
    EQ              reduce using rule 32 (expression -> TRUE .)
    NEQ             reduce using rule 32 (expression -> TRUE .)
    IMPL            reduce using rule 32 (expression -> TRUE .)
    PLUS            reduce using rule 32 (expression -> TRUE .)
    MINUS           reduce using rule 32 (expression -> TRUE .)
    TIMES           reduce using rule 32 (expression -> TRUE .)
    DIVIDE          reduce using rule 32 (expression -> TRUE .)
    $end            reduce using rule 32 (expression -> TRUE .)
    SEPARATOR       reduce using rule 32 (expression -> TRUE .)
    THEN            reduce using rule 32 (expression -> TRUE .)
    END             reduce using rule 32 (expression -> TRUE .)
    DO              reduce using rule 32 (expression -> TRUE .)
    RPAREN          reduce using rule 32 (expression -> TRUE .)
    ELSE            reduce using rule 32 (expression -> TRUE .)


state 12

    (33) expression -> FALSE .

    LESS_THEN       reduce using rule 33 (expression -> FALSE .)
    GREATER_THEN    reduce using rule 33 (expression -> FALSE .)
    LESS_EQUALS     reduce using rule 33 (expression -> FALSE .)
    GREATER_EQUALS  reduce using rule 33 (expression -> FALSE .)
    EQUALS          reduce using rule 33 (expression -> FALSE .)
    NOT_EQUALS      reduce using rule 33 (expression -> FALSE .)
    AND             reduce using rule 33 (expression -> FALSE .)
    NAND            reduce using rule 33 (expression -> FALSE .)
    OR              reduce using rule 33 (expression -> FALSE .)
    NOR             reduce using rule 33 (expression -> FALSE .)
    XOR             reduce using rule 33 (expression -> FALSE .)
    EQ              reduce using rule 33 (expression -> FALSE .)
    NEQ             reduce using rule 33 (expression -> FALSE .)
    IMPL            reduce using rule 33 (expression -> FALSE .)
    PLUS            reduce using rule 33 (expression -> FALSE .)
    MINUS           reduce using rule 33 (expression -> FALSE .)
    TIMES           reduce using rule 33 (expression -> FALSE .)
    DIVIDE          reduce using rule 33 (expression -> FALSE .)
    $end            reduce using rule 33 (expression -> FALSE .)
    SEPARATOR       reduce using rule 33 (expression -> FALSE .)
    THEN            reduce using rule 33 (expression -> FALSE .)
    END             reduce using rule 33 (expression -> FALSE .)
    DO              reduce using rule 33 (expression -> FALSE .)
    RPAREN          reduce using rule 33 (expression -> FALSE .)
    ELSE            reduce using rule 33 (expression -> FALSE .)


state 13

    (34) expression -> LPAREN . expression RPAREN
    (1) expression -> . expression LESS_THEN expression
    (2) expression -> . expression GREATER_THEN expression
    (3) expression -> . expression LESS_EQUALS expression
    (4) expression -> . expression GREATER_EQUALS expression
    (5) expression -> . expression EQUALS expression
    (6) expression -> . expression NOT_EQUALS expression
    (7) expression -> . FOR expression SEPARATOR expression SEPARATOR expression DO expression
    (8) expression -> . IDENTIFIER
    (9) expression -> . NOT expression
    (10) expression -> . IF expression THEN expression
    (11) expression -> . BEGIN body END
    (12) expression -> . LOOP expression DO expression
    (13) expression -> . IDENTIFIER ASSIGN expression
    (14) expression -> . expression AND expression
    (15) expression -> . expression NAND expression
    (16) expression -> . expression OR expression
    (17) expression -> . expression NOR expression
    (18) expression -> . expression XOR expression
    (19) expression -> . expression EQ expression
    (20) expression -> . expression NEQ expression
    (21) expression -> . expression IMPL expression
    (22) expression -> . IF expression THEN expression ELSE expression
    (25) expression -> . NUMBER
    (26) expression -> . FLOAT
    (27) expression -> . MINUS expression
    (28) expression -> . expression PLUS expression
    (29) expression -> . expression MINUS expression
    (30) expression -> . expression TIMES expression
    (31) expression -> . expression DIVIDE expression
    (32) expression -> . TRUE
    (33) expression -> . FALSE
    (34) expression -> . LPAREN expression RPAREN

    FOR             shift and go to state 2
    IDENTIFIER      shift and go to state 3
    NOT             shift and go to state 4
    IF              shift and go to state 5
    BEGIN           shift and go to state 6
    LOOP            shift and go to state 7
    NUMBER          shift and go to state 8
    FLOAT           shift and go to state 9
    MINUS           shift and go to state 10
    TRUE            shift and go to state 11
    FALSE           shift and go to state 12
    LPAREN          shift and go to state 13

    expression                     shift and go to state 40

state 14

    (1) expression -> expression LESS_THEN . expression
    (1) expression -> . expression LESS_THEN expression
    (2) expression -> . expression GREATER_THEN expression
    (3) expression -> . expression LESS_EQUALS expression
    (4) expression -> . expression GREATER_EQUALS expression
    (5) expression -> . expression EQUALS expression
    (6) expression -> . expression NOT_EQUALS expression
    (7) expression -> . FOR expression SEPARATOR expression SEPARATOR expression DO expression
    (8) expression -> . IDENTIFIER
    (9) expression -> . NOT expression
    (10) expression -> . IF expression THEN expression
    (11) expression -> . BEGIN body END
    (12) expression -> . LOOP expression DO expression
    (13) expression -> . IDENTIFIER ASSIGN expression
    (14) expression -> . expression AND expression
    (15) expression -> . expression NAND expression
    (16) expression -> . expression OR expression
    (17) expression -> . expression NOR expression
    (18) expression -> . expression XOR expression
    (19) expression -> . expression EQ expression
    (20) expression -> . expression NEQ expression
    (21) expression -> . expression IMPL expression
    (22) expression -> . IF expression THEN expression ELSE expression
    (25) expression -> . NUMBER
    (26) expression -> . FLOAT
    (27) expression -> . MINUS expression
    (28) expression -> . expression PLUS expression
    (29) expression -> . expression MINUS expression
    (30) expression -> . expression TIMES expression
    (31) expression -> . expression DIVIDE expression
    (32) expression -> . TRUE
    (33) expression -> . FALSE
    (34) expression -> . LPAREN expression RPAREN

    FOR             shift and go to state 2
    IDENTIFIER      shift and go to state 3
    NOT             shift and go to state 4
    IF              shift and go to state 5
    BEGIN           shift and go to state 6
    LOOP            shift and go to state 7
    NUMBER          shift and go to state 8
    FLOAT           shift and go to state 9
    MINUS           shift and go to state 10
    TRUE            shift and go to state 11
    FALSE           shift and go to state 12
    LPAREN          shift and go to state 13

    expression                     shift and go to state 41

state 15

    (2) expression -> expression GREATER_THEN . expression
    (1) expression -> . expression LESS_THEN expression
    (2) expression -> . expression GREATER_THEN expression
    (3) expression -> . expression LESS_EQUALS expression
    (4) expression -> . expression GREATER_EQUALS expression
    (5) expression -> . expression EQUALS expression
    (6) expression -> . expression NOT_EQUALS expression
    (7) expression -> . FOR expression SEPARATOR expression SEPARATOR expression DO expression
    (8) expression -> . IDENTIFIER
    (9) expression -> . NOT expression
    (10) expression -> . IF expression THEN expression
    (11) expression -> . BEGIN body END
    (12) expression -> . LOOP expression DO expression
    (13) expression -> . IDENTIFIER ASSIGN expression
    (14) expression -> . expression AND expression
    (15) expression -> . expression NAND expression
    (16) expression -> . expression OR expression
    (17) expression -> . expression NOR expression
    (18) expression -> . expression XOR expression
    (19) expression -> . expression EQ expression
    (20) expression -> . expression NEQ expression
    (21) expression -> . expression IMPL expression
    (22) expression -> . IF expression THEN expression ELSE expression
    (25) expression -> . NUMBER
    (26) expression -> . FLOAT
    (27) expression -> . MINUS expression
    (28) expression -> . expression PLUS expression
    (29) expression -> . expression MINUS expression
    (30) expression -> . expression TIMES expression
    (31) expression -> . expression DIVIDE expression
    (32) expression -> . TRUE
    (33) expression -> . FALSE
    (34) expression -> . LPAREN expression RPAREN

    FOR             shift and go to state 2
    IDENTIFIER      shift and go to state 3
    NOT             shift and go to state 4
    IF              shift and go to state 5
    BEGIN           shift and go to state 6
    LOOP            shift and go to state 7
    NUMBER          shift and go to state 8
    FLOAT           shift and go to state 9
    MINUS           shift and go to state 10
    TRUE            shift and go to state 11
    FALSE           shift and go to state 12
    LPAREN          shift and go to state 13

    expression                     shift and go to state 42

state 16

    (3) expression -> expression LESS_EQUALS . expression
    (1) expression -> . expression LESS_THEN expression
    (2) expression -> . expression GREATER_THEN expression
    (3) expression -> . expression LESS_EQUALS expression
    (4) expression -> . expression GREATER_EQUALS expression
    (5) expression -> . expression EQUALS expression
    (6) expression -> . expression NOT_EQUALS expression
    (7) expression -> . FOR expression SEPARATOR expression SEPARATOR expression DO expression
    (8) expression -> . IDENTIFIER
    (9) expression -> . NOT expression
    (10) expression -> . IF expression THEN expression
    (11) expression -> . BEGIN body END
    (12) expression -> . LOOP expression DO expression
    (13) expression -> . IDENTIFIER ASSIGN expression
    (14) expression -> . expression AND expression
    (15) expression -> . expression NAND expression
    (16) expression -> . expression OR expression
    (17) expression -> . expression NOR expression
    (18) expression -> . expression XOR expression
    (19) expression -> . expression EQ expression
    (20) expression -> . expression NEQ expression
    (21) expression -> . expression IMPL expression
    (22) expression -> . IF expression THEN expression ELSE expression
    (25) expression -> . NUMBER
    (26) expression -> . FLOAT
    (27) expression -> . MINUS expression
    (28) expression -> . expression PLUS expression
    (29) expression -> . expression MINUS expression
    (30) expression -> . expression TIMES expression
    (31) expression -> . expression DIVIDE expression
    (32) expression -> . TRUE
    (33) expression -> . FALSE
    (34) expression -> . LPAREN expression RPAREN

    FOR             shift and go to state 2
    IDENTIFIER      shift and go to state 3
    NOT             shift and go to state 4
    IF              shift and go to state 5
    BEGIN           shift and go to state 6
    LOOP            shift and go to state 7
    NUMBER          shift and go to state 8
    FLOAT           shift and go to state 9
    MINUS           shift and go to state 10
    TRUE            shift and go to state 11
    FALSE           shift and go to state 12
    LPAREN          shift and go to state 13

    expression                     shift and go to state 43

state 17

    (4) expression -> expression GREATER_EQUALS . expression
    (1) expression -> . expression LESS_THEN expression
    (2) expression -> . expression GREATER_THEN expression
    (3) expression -> . expression LESS_EQUALS expression
    (4) expression -> . expression GREATER_EQUALS expression
    (5) expression -> . expression EQUALS expression
    (6) expression -> . expression NOT_EQUALS expression
    (7) expression -> . FOR expression SEPARATOR expression SEPARATOR expression DO expression
    (8) expression -> . IDENTIFIER
    (9) expression -> . NOT expression
    (10) expression -> . IF expression THEN expression
    (11) expression -> . BEGIN body END
    (12) expression -> . LOOP expression DO expression
    (13) expression -> . IDENTIFIER ASSIGN expression
    (14) expression -> . expression AND expression
    (15) expression -> . expression NAND expression
    (16) expression -> . expression OR expression
    (17) expression -> . expression NOR expression
    (18) expression -> . expression XOR expression
    (19) expression -> . expression EQ expression
    (20) expression -> . expression NEQ expression
    (21) expression -> . expression IMPL expression
    (22) expression -> . IF expression THEN expression ELSE expression
    (25) expression -> . NUMBER
    (26) expression -> . FLOAT
    (27) expression -> . MINUS expression
    (28) expression -> . expression PLUS expression
    (29) expression -> . expression MINUS expression
    (30) expression -> . expression TIMES expression
    (31) expression -> . expression DIVIDE expression
    (32) expression -> . TRUE
    (33) expression -> . FALSE
    (34) expression -> . LPAREN expression RPAREN

    FOR             shift and go to state 2
    IDENTIFIER      shift and go to state 3
    NOT             shift and go to state 4
    IF              shift and go to state 5
    BEGIN           shift and go to state 6
    LOOP            shift and go to state 7
    NUMBER          shift and go to state 8
    FLOAT           shift and go to state 9
    MINUS           shift and go to state 10
    TRUE            shift and go to state 11
    FALSE           shift and go to state 12
    LPAREN          shift and go to state 13

    expression                     shift and go to state 44

state 18

    (5) expression -> expression EQUALS . expression
    (1) expression -> . expression LESS_THEN expression
    (2) expression -> . expression GREATER_THEN expression
    (3) expression -> . expression LESS_EQUALS expression
    (4) expression -> . expression GREATER_EQUALS expression
    (5) expression -> . expression EQUALS expression
    (6) expression -> . expression NOT_EQUALS expression
    (7) expression -> . FOR expression SEPARATOR expression SEPARATOR expression DO expression
    (8) expression -> . IDENTIFIER
    (9) expression -> . NOT expression
    (10) expression -> . IF expression THEN expression
    (11) expression -> . BEGIN body END
    (12) expression -> . LOOP expression DO expression
    (13) expression -> . IDENTIFIER ASSIGN expression
    (14) expression -> . expression AND expression
    (15) expression -> . expression NAND expression
    (16) expression -> . expression OR expression
    (17) expression -> . expression NOR expression
    (18) expression -> . expression XOR expression
    (19) expression -> . expression EQ expression
    (20) expression -> . expression NEQ expression
    (21) expression -> . expression IMPL expression
    (22) expression -> . IF expression THEN expression ELSE expression
    (25) expression -> . NUMBER
    (26) expression -> . FLOAT
    (27) expression -> . MINUS expression
    (28) expression -> . expression PLUS expression
    (29) expression -> . expression MINUS expression
    (30) expression -> . expression TIMES expression
    (31) expression -> . expression DIVIDE expression
    (32) expression -> . TRUE
    (33) expression -> . FALSE
    (34) expression -> . LPAREN expression RPAREN

    FOR             shift and go to state 2
    IDENTIFIER      shift and go to state 3
    NOT             shift and go to state 4
    IF              shift and go to state 5
    BEGIN           shift and go to state 6
    LOOP            shift and go to state 7
    NUMBER          shift and go to state 8
    FLOAT           shift and go to state 9
    MINUS           shift and go to state 10
    TRUE            shift and go to state 11
    FALSE           shift and go to state 12
    LPAREN          shift and go to state 13

    expression                     shift and go to state 45

state 19

    (6) expression -> expression NOT_EQUALS . expression
    (1) expression -> . expression LESS_THEN expression
    (2) expression -> . expression GREATER_THEN expression
    (3) expression -> . expression LESS_EQUALS expression
    (4) expression -> . expression GREATER_EQUALS expression
    (5) expression -> . expression EQUALS expression
    (6) expression -> . expression NOT_EQUALS expression
    (7) expression -> . FOR expression SEPARATOR expression SEPARATOR expression DO expression
    (8) expression -> . IDENTIFIER
    (9) expression -> . NOT expression
    (10) expression -> . IF expression THEN expression
    (11) expression -> . BEGIN body END
    (12) expression -> . LOOP expression DO expression
    (13) expression -> . IDENTIFIER ASSIGN expression
    (14) expression -> . expression AND expression
    (15) expression -> . expression NAND expression
    (16) expression -> . expression OR expression
    (17) expression -> . expression NOR expression
    (18) expression -> . expression XOR expression
    (19) expression -> . expression EQ expression
    (20) expression -> . expression NEQ expression
    (21) expression -> . expression IMPL expression
    (22) expression -> . IF expression THEN expression ELSE expression
    (25) expression -> . NUMBER
    (26) expression -> . FLOAT
    (27) expression -> . MINUS expression
    (28) expression -> . expression PLUS expression
    (29) expression -> . expression MINUS expression
    (30) expression -> . expression TIMES expression
    (31) expression -> . expression DIVIDE expression
    (32) expression -> . TRUE
    (33) expression -> . FALSE
    (34) expression -> . LPAREN expression RPAREN

    FOR             shift and go to state 2
    IDENTIFIER      shift and go to state 3
    NOT             shift and go to state 4
    IF              shift and go to state 5
    BEGIN           shift and go to state 6
    LOOP            shift and go to state 7
    NUMBER          shift and go to state 8
    FLOAT           shift and go to state 9
    MINUS           shift and go to state 10
    TRUE            shift and go to state 11
    FALSE           shift and go to state 12
    LPAREN          shift and go to state 13

    expression                     shift and go to state 46

state 20

    (14) expression -> expression AND . expression
    (1) expression -> . expression LESS_THEN expression
    (2) expression -> . expression GREATER_THEN expression
    (3) expression -> . expression LESS_EQUALS expression
    (4) expression -> . expression GREATER_EQUALS expression
    (5) expression -> . expression EQUALS expression
    (6) expression -> . expression NOT_EQUALS expression
    (7) expression -> . FOR expression SEPARATOR expression SEPARATOR expression DO expression
    (8) expression -> . IDENTIFIER
    (9) expression -> . NOT expression
    (10) expression -> . IF expression THEN expression
    (11) expression -> . BEGIN body END
    (12) expression -> . LOOP expression DO expression
    (13) expression -> . IDENTIFIER ASSIGN expression
    (14) expression -> . expression AND expression
    (15) expression -> . expression NAND expression
    (16) expression -> . expression OR expression
    (17) expression -> . expression NOR expression
    (18) expression -> . expression XOR expression
    (19) expression -> . expression EQ expression
    (20) expression -> . expression NEQ expression
    (21) expression -> . expression IMPL expression
    (22) expression -> . IF expression THEN expression ELSE expression
    (25) expression -> . NUMBER
    (26) expression -> . FLOAT
    (27) expression -> . MINUS expression
    (28) expression -> . expression PLUS expression
    (29) expression -> . expression MINUS expression
    (30) expression -> . expression TIMES expression
    (31) expression -> . expression DIVIDE expression
    (32) expression -> . TRUE
    (33) expression -> . FALSE
    (34) expression -> . LPAREN expression RPAREN

    FOR             shift and go to state 2
    IDENTIFIER      shift and go to state 3
    NOT             shift and go to state 4
    IF              shift and go to state 5
    BEGIN           shift and go to state 6
    LOOP            shift and go to state 7
    NUMBER          shift and go to state 8
    FLOAT           shift and go to state 9
    MINUS           shift and go to state 10
    TRUE            shift and go to state 11
    FALSE           shift and go to state 12
    LPAREN          shift and go to state 13

    expression                     shift and go to state 47

state 21

    (15) expression -> expression NAND . expression
    (1) expression -> . expression LESS_THEN expression
    (2) expression -> . expression GREATER_THEN expression
    (3) expression -> . expression LESS_EQUALS expression
    (4) expression -> . expression GREATER_EQUALS expression
    (5) expression -> . expression EQUALS expression
    (6) expression -> . expression NOT_EQUALS expression
    (7) expression -> . FOR expression SEPARATOR expression SEPARATOR expression DO expression
    (8) expression -> . IDENTIFIER
    (9) expression -> . NOT expression
    (10) expression -> . IF expression THEN expression
    (11) expression -> . BEGIN body END
    (12) expression -> . LOOP expression DO expression
    (13) expression -> . IDENTIFIER ASSIGN expression
    (14) expression -> . expression AND expression
    (15) expression -> . expression NAND expression
    (16) expression -> . expression OR expression
    (17) expression -> . expression NOR expression
    (18) expression -> . expression XOR expression
    (19) expression -> . expression EQ expression
    (20) expression -> . expression NEQ expression
    (21) expression -> . expression IMPL expression
    (22) expression -> . IF expression THEN expression ELSE expression
    (25) expression -> . NUMBER
    (26) expression -> . FLOAT
    (27) expression -> . MINUS expression
    (28) expression -> . expression PLUS expression
    (29) expression -> . expression MINUS expression
    (30) expression -> . expression TIMES expression
    (31) expression -> . expression DIVIDE expression
    (32) expression -> . TRUE
    (33) expression -> . FALSE
    (34) expression -> . LPAREN expression RPAREN

    FOR             shift and go to state 2
    IDENTIFIER      shift and go to state 3
    NOT             shift and go to state 4
    IF              shift and go to state 5
    BEGIN           shift and go to state 6
    LOOP            shift and go to state 7
    NUMBER          shift and go to state 8
    FLOAT           shift and go to state 9
    MINUS           shift and go to state 10
    TRUE            shift and go to state 11
    FALSE           shift and go to state 12
    LPAREN          shift and go to state 13

    expression                     shift and go to state 48

state 22

    (16) expression -> expression OR . expression
    (1) expression -> . expression LESS_THEN expression
    (2) expression -> . expression GREATER_THEN expression
    (3) expression -> . expression LESS_EQUALS expression
    (4) expression -> . expression GREATER_EQUALS expression
    (5) expression -> . expression EQUALS expression
    (6) expression -> . expression NOT_EQUALS expression
    (7) expression -> . FOR expression SEPARATOR expression SEPARATOR expression DO expression
    (8) expression -> . IDENTIFIER
    (9) expression -> . NOT expression
    (10) expression -> . IF expression THEN expression
    (11) expression -> . BEGIN body END
    (12) expression -> . LOOP expression DO expression
    (13) expression -> . IDENTIFIER ASSIGN expression
    (14) expression -> . expression AND expression
    (15) expression -> . expression NAND expression
    (16) expression -> . expression OR expression
    (17) expression -> . expression NOR expression
    (18) expression -> . expression XOR expression
    (19) expression -> . expression EQ expression
    (20) expression -> . expression NEQ expression
    (21) expression -> . expression IMPL expression
    (22) expression -> . IF expression THEN expression ELSE expression
    (25) expression -> . NUMBER
    (26) expression -> . FLOAT
    (27) expression -> . MINUS expression
    (28) expression -> . expression PLUS expression
    (29) expression -> . expression MINUS expression
    (30) expression -> . expression TIMES expression
    (31) expression -> . expression DIVIDE expression
    (32) expression -> . TRUE
    (33) expression -> . FALSE
    (34) expression -> . LPAREN expression RPAREN

    FOR             shift and go to state 2
    IDENTIFIER      shift and go to state 3
    NOT             shift and go to state 4
    IF              shift and go to state 5
    BEGIN           shift and go to state 6
    LOOP            shift and go to state 7
    NUMBER          shift and go to state 8
    FLOAT           shift and go to state 9
    MINUS           shift and go to state 10
    TRUE            shift and go to state 11
    FALSE           shift and go to state 12
    LPAREN          shift and go to state 13

    expression                     shift and go to state 49

state 23

    (17) expression -> expression NOR . expression
    (1) expression -> . expression LESS_THEN expression
    (2) expression -> . expression GREATER_THEN expression
    (3) expression -> . expression LESS_EQUALS expression
    (4) expression -> . expression GREATER_EQUALS expression
    (5) expression -> . expression EQUALS expression
    (6) expression -> . expression NOT_EQUALS expression
    (7) expression -> . FOR expression SEPARATOR expression SEPARATOR expression DO expression
    (8) expression -> . IDENTIFIER
    (9) expression -> . NOT expression
    (10) expression -> . IF expression THEN expression
    (11) expression -> . BEGIN body END
    (12) expression -> . LOOP expression DO expression
    (13) expression -> . IDENTIFIER ASSIGN expression
    (14) expression -> . expression AND expression
    (15) expression -> . expression NAND expression
    (16) expression -> . expression OR expression
    (17) expression -> . expression NOR expression
    (18) expression -> . expression XOR expression
    (19) expression -> . expression EQ expression
    (20) expression -> . expression NEQ expression
    (21) expression -> . expression IMPL expression
    (22) expression -> . IF expression THEN expression ELSE expression
    (25) expression -> . NUMBER
    (26) expression -> . FLOAT
    (27) expression -> . MINUS expression
    (28) expression -> . expression PLUS expression
    (29) expression -> . expression MINUS expression
    (30) expression -> . expression TIMES expression
    (31) expression -> . expression DIVIDE expression
    (32) expression -> . TRUE
    (33) expression -> . FALSE
    (34) expression -> . LPAREN expression RPAREN

    FOR             shift and go to state 2
    IDENTIFIER      shift and go to state 3
    NOT             shift and go to state 4
    IF              shift and go to state 5
    BEGIN           shift and go to state 6
    LOOP            shift and go to state 7
    NUMBER          shift and go to state 8
    FLOAT           shift and go to state 9
    MINUS           shift and go to state 10
    TRUE            shift and go to state 11
    FALSE           shift and go to state 12
    LPAREN          shift and go to state 13

    expression                     shift and go to state 50

state 24

    (18) expression -> expression XOR . expression
    (1) expression -> . expression LESS_THEN expression
    (2) expression -> . expression GREATER_THEN expression
    (3) expression -> . expression LESS_EQUALS expression
    (4) expression -> . expression GREATER_EQUALS expression
    (5) expression -> . expression EQUALS expression
    (6) expression -> . expression NOT_EQUALS expression
    (7) expression -> . FOR expression SEPARATOR expression SEPARATOR expression DO expression
    (8) expression -> . IDENTIFIER
    (9) expression -> . NOT expression
    (10) expression -> . IF expression THEN expression
    (11) expression -> . BEGIN body END
    (12) expression -> . LOOP expression DO expression
    (13) expression -> . IDENTIFIER ASSIGN expression
    (14) expression -> . expression AND expression
    (15) expression -> . expression NAND expression
    (16) expression -> . expression OR expression
    (17) expression -> . expression NOR expression
    (18) expression -> . expression XOR expression
    (19) expression -> . expression EQ expression
    (20) expression -> . expression NEQ expression
    (21) expression -> . expression IMPL expression
    (22) expression -> . IF expression THEN expression ELSE expression
    (25) expression -> . NUMBER
    (26) expression -> . FLOAT
    (27) expression -> . MINUS expression
    (28) expression -> . expression PLUS expression
    (29) expression -> . expression MINUS expression
    (30) expression -> . expression TIMES expression
    (31) expression -> . expression DIVIDE expression
    (32) expression -> . TRUE
    (33) expression -> . FALSE
    (34) expression -> . LPAREN expression RPAREN

    FOR             shift and go to state 2
    IDENTIFIER      shift and go to state 3
    NOT             shift and go to state 4
    IF              shift and go to state 5
    BEGIN           shift and go to state 6
    LOOP            shift and go to state 7
    NUMBER          shift and go to state 8
    FLOAT           shift and go to state 9
    MINUS           shift and go to state 10
    TRUE            shift and go to state 11
    FALSE           shift and go to state 12
    LPAREN          shift and go to state 13

    expression                     shift and go to state 51

state 25

    (19) expression -> expression EQ . expression
    (1) expression -> . expression LESS_THEN expression
    (2) expression -> . expression GREATER_THEN expression
    (3) expression -> . expression LESS_EQUALS expression
    (4) expression -> . expression GREATER_EQUALS expression
    (5) expression -> . expression EQUALS expression
    (6) expression -> . expression NOT_EQUALS expression
    (7) expression -> . FOR expression SEPARATOR expression SEPARATOR expression DO expression
    (8) expression -> . IDENTIFIER
    (9) expression -> . NOT expression
    (10) expression -> . IF expression THEN expression
    (11) expression -> . BEGIN body END
    (12) expression -> . LOOP expression DO expression
    (13) expression -> . IDENTIFIER ASSIGN expression
    (14) expression -> . expression AND expression
    (15) expression -> . expression NAND expression
    (16) expression -> . expression OR expression
    (17) expression -> . expression NOR expression
    (18) expression -> . expression XOR expression
    (19) expression -> . expression EQ expression
    (20) expression -> . expression NEQ expression
    (21) expression -> . expression IMPL expression
    (22) expression -> . IF expression THEN expression ELSE expression
    (25) expression -> . NUMBER
    (26) expression -> . FLOAT
    (27) expression -> . MINUS expression
    (28) expression -> . expression PLUS expression
    (29) expression -> . expression MINUS expression
    (30) expression -> . expression TIMES expression
    (31) expression -> . expression DIVIDE expression
    (32) expression -> . TRUE
    (33) expression -> . FALSE
    (34) expression -> . LPAREN expression RPAREN

    FOR             shift and go to state 2
    IDENTIFIER      shift and go to state 3
    NOT             shift and go to state 4
    IF              shift and go to state 5
    BEGIN           shift and go to state 6
    LOOP            shift and go to state 7
    NUMBER          shift and go to state 8
    FLOAT           shift and go to state 9
    MINUS           shift and go to state 10
    TRUE            shift and go to state 11
    FALSE           shift and go to state 12
    LPAREN          shift and go to state 13

    expression                     shift and go to state 52

state 26

    (20) expression -> expression NEQ . expression
    (1) expression -> . expression LESS_THEN expression
    (2) expression -> . expression GREATER_THEN expression
    (3) expression -> . expression LESS_EQUALS expression
    (4) expression -> . expression GREATER_EQUALS expression
    (5) expression -> . expression EQUALS expression
    (6) expression -> . expression NOT_EQUALS expression
    (7) expression -> . FOR expression SEPARATOR expression SEPARATOR expression DO expression
    (8) expression -> . IDENTIFIER
    (9) expression -> . NOT expression
    (10) expression -> . IF expression THEN expression
    (11) expression -> . BEGIN body END
    (12) expression -> . LOOP expression DO expression
    (13) expression -> . IDENTIFIER ASSIGN expression
    (14) expression -> . expression AND expression
    (15) expression -> . expression NAND expression
    (16) expression -> . expression OR expression
    (17) expression -> . expression NOR expression
    (18) expression -> . expression XOR expression
    (19) expression -> . expression EQ expression
    (20) expression -> . expression NEQ expression
    (21) expression -> . expression IMPL expression
    (22) expression -> . IF expression THEN expression ELSE expression
    (25) expression -> . NUMBER
    (26) expression -> . FLOAT
    (27) expression -> . MINUS expression
    (28) expression -> . expression PLUS expression
    (29) expression -> . expression MINUS expression
    (30) expression -> . expression TIMES expression
    (31) expression -> . expression DIVIDE expression
    (32) expression -> . TRUE
    (33) expression -> . FALSE
    (34) expression -> . LPAREN expression RPAREN

    FOR             shift and go to state 2
    IDENTIFIER      shift and go to state 3
    NOT             shift and go to state 4
    IF              shift and go to state 5
    BEGIN           shift and go to state 6
    LOOP            shift and go to state 7
    NUMBER          shift and go to state 8
    FLOAT           shift and go to state 9
    MINUS           shift and go to state 10
    TRUE            shift and go to state 11
    FALSE           shift and go to state 12
    LPAREN          shift and go to state 13

    expression                     shift and go to state 53

state 27

    (21) expression -> expression IMPL . expression
    (1) expression -> . expression LESS_THEN expression
    (2) expression -> . expression GREATER_THEN expression
    (3) expression -> . expression LESS_EQUALS expression
    (4) expression -> . expression GREATER_EQUALS expression
    (5) expression -> . expression EQUALS expression
    (6) expression -> . expression NOT_EQUALS expression
    (7) expression -> . FOR expression SEPARATOR expression SEPARATOR expression DO expression
    (8) expression -> . IDENTIFIER
    (9) expression -> . NOT expression
    (10) expression -> . IF expression THEN expression
    (11) expression -> . BEGIN body END
    (12) expression -> . LOOP expression DO expression
    (13) expression -> . IDENTIFIER ASSIGN expression
    (14) expression -> . expression AND expression
    (15) expression -> . expression NAND expression
    (16) expression -> . expression OR expression
    (17) expression -> . expression NOR expression
    (18) expression -> . expression XOR expression
    (19) expression -> . expression EQ expression
    (20) expression -> . expression NEQ expression
    (21) expression -> . expression IMPL expression
    (22) expression -> . IF expression THEN expression ELSE expression
    (25) expression -> . NUMBER
    (26) expression -> . FLOAT
    (27) expression -> . MINUS expression
    (28) expression -> . expression PLUS expression
    (29) expression -> . expression MINUS expression
    (30) expression -> . expression TIMES expression
    (31) expression -> . expression DIVIDE expression
    (32) expression -> . TRUE
    (33) expression -> . FALSE
    (34) expression -> . LPAREN expression RPAREN

    FOR             shift and go to state 2
    IDENTIFIER      shift and go to state 3
    NOT             shift and go to state 4
    IF              shift and go to state 5
    BEGIN           shift and go to state 6
    LOOP            shift and go to state 7
    NUMBER          shift and go to state 8
    FLOAT           shift and go to state 9
    MINUS           shift and go to state 10
    TRUE            shift and go to state 11
    FALSE           shift and go to state 12
    LPAREN          shift and go to state 13

    expression                     shift and go to state 54

state 28

    (28) expression -> expression PLUS . expression
    (1) expression -> . expression LESS_THEN expression
    (2) expression -> . expression GREATER_THEN expression
    (3) expression -> . expression LESS_EQUALS expression
    (4) expression -> . expression GREATER_EQUALS expression
    (5) expression -> . expression EQUALS expression
    (6) expression -> . expression NOT_EQUALS expression
    (7) expression -> . FOR expression SEPARATOR expression SEPARATOR expression DO expression
    (8) expression -> . IDENTIFIER
    (9) expression -> . NOT expression
    (10) expression -> . IF expression THEN expression
    (11) expression -> . BEGIN body END
    (12) expression -> . LOOP expression DO expression
    (13) expression -> . IDENTIFIER ASSIGN expression
    (14) expression -> . expression AND expression
    (15) expression -> . expression NAND expression
    (16) expression -> . expression OR expression
    (17) expression -> . expression NOR expression
    (18) expression -> . expression XOR expression
    (19) expression -> . expression EQ expression
    (20) expression -> . expression NEQ expression
    (21) expression -> . expression IMPL expression
    (22) expression -> . IF expression THEN expression ELSE expression
    (25) expression -> . NUMBER
    (26) expression -> . FLOAT
    (27) expression -> . MINUS expression
    (28) expression -> . expression PLUS expression
    (29) expression -> . expression MINUS expression
    (30) expression -> . expression TIMES expression
    (31) expression -> . expression DIVIDE expression
    (32) expression -> . TRUE
    (33) expression -> . FALSE
    (34) expression -> . LPAREN expression RPAREN

    FOR             shift and go to state 2
    IDENTIFIER      shift and go to state 3
    NOT             shift and go to state 4
    IF              shift and go to state 5
    BEGIN           shift and go to state 6
    LOOP            shift and go to state 7
    NUMBER          shift and go to state 8
    FLOAT           shift and go to state 9
    MINUS           shift and go to state 10
    TRUE            shift and go to state 11
    FALSE           shift and go to state 12
    LPAREN          shift and go to state 13

    expression                     shift and go to state 55

state 29

    (29) expression -> expression MINUS . expression
    (1) expression -> . expression LESS_THEN expression
    (2) expression -> . expression GREATER_THEN expression
    (3) expression -> . expression LESS_EQUALS expression
    (4) expression -> . expression GREATER_EQUALS expression
    (5) expression -> . expression EQUALS expression
    (6) expression -> . expression NOT_EQUALS expression
    (7) expression -> . FOR expression SEPARATOR expression SEPARATOR expression DO expression
    (8) expression -> . IDENTIFIER
    (9) expression -> . NOT expression
    (10) expression -> . IF expression THEN expression
    (11) expression -> . BEGIN body END
    (12) expression -> . LOOP expression DO expression
    (13) expression -> . IDENTIFIER ASSIGN expression
    (14) expression -> . expression AND expression
    (15) expression -> . expression NAND expression
    (16) expression -> . expression OR expression
    (17) expression -> . expression NOR expression
    (18) expression -> . expression XOR expression
    (19) expression -> . expression EQ expression
    (20) expression -> . expression NEQ expression
    (21) expression -> . expression IMPL expression
    (22) expression -> . IF expression THEN expression ELSE expression
    (25) expression -> . NUMBER
    (26) expression -> . FLOAT
    (27) expression -> . MINUS expression
    (28) expression -> . expression PLUS expression
    (29) expression -> . expression MINUS expression
    (30) expression -> . expression TIMES expression
    (31) expression -> . expression DIVIDE expression
    (32) expression -> . TRUE
    (33) expression -> . FALSE
    (34) expression -> . LPAREN expression RPAREN

    FOR             shift and go to state 2
    IDENTIFIER      shift and go to state 3
    NOT             shift and go to state 4
    IF              shift and go to state 5
    BEGIN           shift and go to state 6
    LOOP            shift and go to state 7
    NUMBER          shift and go to state 8
    FLOAT           shift and go to state 9
    MINUS           shift and go to state 10
    TRUE            shift and go to state 11
    FALSE           shift and go to state 12
    LPAREN          shift and go to state 13

    expression                     shift and go to state 56

state 30

    (30) expression -> expression TIMES . expression
    (1) expression -> . expression LESS_THEN expression
    (2) expression -> . expression GREATER_THEN expression
    (3) expression -> . expression LESS_EQUALS expression
    (4) expression -> . expression GREATER_EQUALS expression
    (5) expression -> . expression EQUALS expression
    (6) expression -> . expression NOT_EQUALS expression
    (7) expression -> . FOR expression SEPARATOR expression SEPARATOR expression DO expression
    (8) expression -> . IDENTIFIER
    (9) expression -> . NOT expression
    (10) expression -> . IF expression THEN expression
    (11) expression -> . BEGIN body END
    (12) expression -> . LOOP expression DO expression
    (13) expression -> . IDENTIFIER ASSIGN expression
    (14) expression -> . expression AND expression
    (15) expression -> . expression NAND expression
    (16) expression -> . expression OR expression
    (17) expression -> . expression NOR expression
    (18) expression -> . expression XOR expression
    (19) expression -> . expression EQ expression
    (20) expression -> . expression NEQ expression
    (21) expression -> . expression IMPL expression
    (22) expression -> . IF expression THEN expression ELSE expression
    (25) expression -> . NUMBER
    (26) expression -> . FLOAT
    (27) expression -> . MINUS expression
    (28) expression -> . expression PLUS expression
    (29) expression -> . expression MINUS expression
    (30) expression -> . expression TIMES expression
    (31) expression -> . expression DIVIDE expression
    (32) expression -> . TRUE
    (33) expression -> . FALSE
    (34) expression -> . LPAREN expression RPAREN

    FOR             shift and go to state 2
    IDENTIFIER      shift and go to state 3
    NOT             shift and go to state 4
    IF              shift and go to state 5
    BEGIN           shift and go to state 6
    LOOP            shift and go to state 7
    NUMBER          shift and go to state 8
    FLOAT           shift and go to state 9
    MINUS           shift and go to state 10
    TRUE            shift and go to state 11
    FALSE           shift and go to state 12
    LPAREN          shift and go to state 13

    expression                     shift and go to state 57

state 31

    (31) expression -> expression DIVIDE . expression
    (1) expression -> . expression LESS_THEN expression
    (2) expression -> . expression GREATER_THEN expression
    (3) expression -> . expression LESS_EQUALS expression
    (4) expression -> . expression GREATER_EQUALS expression
    (5) expression -> . expression EQUALS expression
    (6) expression -> . expression NOT_EQUALS expression
    (7) expression -> . FOR expression SEPARATOR expression SEPARATOR expression DO expression
    (8) expression -> . IDENTIFIER
    (9) expression -> . NOT expression
    (10) expression -> . IF expression THEN expression
    (11) expression -> . BEGIN body END
    (12) expression -> . LOOP expression DO expression
    (13) expression -> . IDENTIFIER ASSIGN expression
    (14) expression -> . expression AND expression
    (15) expression -> . expression NAND expression
    (16) expression -> . expression OR expression
    (17) expression -> . expression NOR expression
    (18) expression -> . expression XOR expression
    (19) expression -> . expression EQ expression
    (20) expression -> . expression NEQ expression
    (21) expression -> . expression IMPL expression
    (22) expression -> . IF expression THEN expression ELSE expression
    (25) expression -> . NUMBER
    (26) expression -> . FLOAT
    (27) expression -> . MINUS expression
    (28) expression -> . expression PLUS expression
    (29) expression -> . expression MINUS expression
    (30) expression -> . expression TIMES expression
    (31) expression -> . expression DIVIDE expression
    (32) expression -> . TRUE
    (33) expression -> . FALSE
    (34) expression -> . LPAREN expression RPAREN

    FOR             shift and go to state 2
    IDENTIFIER      shift and go to state 3
    NOT             shift and go to state 4
    IF              shift and go to state 5
    BEGIN           shift and go to state 6
    LOOP            shift and go to state 7
    NUMBER          shift and go to state 8
    FLOAT           shift and go to state 9
    MINUS           shift and go to state 10
    TRUE            shift and go to state 11
    FALSE           shift and go to state 12
    LPAREN          shift and go to state 13

    expression                     shift and go to state 58

state 32

    (7) expression -> FOR expression . SEPARATOR expression SEPARATOR expression DO expression
    (1) expression -> expression . LESS_THEN expression
    (2) expression -> expression . GREATER_THEN expression
    (3) expression -> expression . LESS_EQUALS expression
    (4) expression -> expression . GREATER_EQUALS expression
    (5) expression -> expression . EQUALS expression
    (6) expression -> expression . NOT_EQUALS expression
    (14) expression -> expression . AND expression
    (15) expression -> expression . NAND expression
    (16) expression -> expression . OR expression
    (17) expression -> expression . NOR expression
    (18) expression -> expression . XOR expression
    (19) expression -> expression . EQ expression
    (20) expression -> expression . NEQ expression
    (21) expression -> expression . IMPL expression
    (28) expression -> expression . PLUS expression
    (29) expression -> expression . MINUS expression
    (30) expression -> expression . TIMES expression
    (31) expression -> expression . DIVIDE expression

    SEPARATOR       shift and go to state 59
    LESS_THEN       shift and go to state 14
    GREATER_THEN    shift and go to state 15
    LESS_EQUALS     shift and go to state 16
    GREATER_EQUALS  shift and go to state 17
    EQUALS          shift and go to state 18
    NOT_EQUALS      shift and go to state 19
    AND             shift and go to state 20
    NAND            shift and go to state 21
    OR              shift and go to state 22
    NOR             shift and go to state 23
    XOR             shift and go to state 24
    EQ              shift and go to state 25
    NEQ             shift and go to state 26
    IMPL            shift and go to state 27
    PLUS            shift and go to state 28
    MINUS           shift and go to state 29
    TIMES           shift and go to state 30
    DIVIDE          shift and go to state 31


state 33

    (13) expression -> IDENTIFIER ASSIGN . expression
    (1) expression -> . expression LESS_THEN expression
    (2) expression -> . expression GREATER_THEN expression
    (3) expression -> . expression LESS_EQUALS expression
    (4) expression -> . expression GREATER_EQUALS expression
    (5) expression -> . expression EQUALS expression
    (6) expression -> . expression NOT_EQUALS expression
    (7) expression -> . FOR expression SEPARATOR expression SEPARATOR expression DO expression
    (8) expression -> . IDENTIFIER
    (9) expression -> . NOT expression
    (10) expression -> . IF expression THEN expression
    (11) expression -> . BEGIN body END
    (12) expression -> . LOOP expression DO expression
    (13) expression -> . IDENTIFIER ASSIGN expression
    (14) expression -> . expression AND expression
    (15) expression -> . expression NAND expression
    (16) expression -> . expression OR expression
    (17) expression -> . expression NOR expression
    (18) expression -> . expression XOR expression
    (19) expression -> . expression EQ expression
    (20) expression -> . expression NEQ expression
    (21) expression -> . expression IMPL expression
    (22) expression -> . IF expression THEN expression ELSE expression
    (25) expression -> . NUMBER
    (26) expression -> . FLOAT
    (27) expression -> . MINUS expression
    (28) expression -> . expression PLUS expression
    (29) expression -> . expression MINUS expression
    (30) expression -> . expression TIMES expression
    (31) expression -> . expression DIVIDE expression
    (32) expression -> . TRUE
    (33) expression -> . FALSE
    (34) expression -> . LPAREN expression RPAREN

    FOR             shift and go to state 2
    IDENTIFIER      shift and go to state 3
    NOT             shift and go to state 4
    IF              shift and go to state 5
    BEGIN           shift and go to state 6
    LOOP            shift and go to state 7
    NUMBER          shift and go to state 8
    FLOAT           shift and go to state 9
    MINUS           shift and go to state 10
    TRUE            shift and go to state 11
    FALSE           shift and go to state 12
    LPAREN          shift and go to state 13

    expression                     shift and go to state 60

state 34

    (9) expression -> NOT expression .
    (1) expression -> expression . LESS_THEN expression
    (2) expression -> expression . GREATER_THEN expression
    (3) expression -> expression . LESS_EQUALS expression
    (4) expression -> expression . GREATER_EQUALS expression
    (5) expression -> expression . EQUALS expression
    (6) expression -> expression . NOT_EQUALS expression
    (14) expression -> expression . AND expression
    (15) expression -> expression . NAND expression
    (16) expression -> expression . OR expression
    (17) expression -> expression . NOR expression
    (18) expression -> expression . XOR expression
    (19) expression -> expression . EQ expression
    (20) expression -> expression . NEQ expression
    (21) expression -> expression . IMPL expression
    (28) expression -> expression . PLUS expression
    (29) expression -> expression . MINUS expression
    (30) expression -> expression . TIMES expression
    (31) expression -> expression . DIVIDE expression

    LESS_THEN       reduce using rule 9 (expression -> NOT expression .)
    GREATER_THEN    reduce using rule 9 (expression -> NOT expression .)
    LESS_EQUALS     reduce using rule 9 (expression -> NOT expression .)
    GREATER_EQUALS  reduce using rule 9 (expression -> NOT expression .)
    EQUALS          reduce using rule 9 (expression -> NOT expression .)
    NOT_EQUALS      reduce using rule 9 (expression -> NOT expression .)
    AND             reduce using rule 9 (expression -> NOT expression .)
    NAND            reduce using rule 9 (expression -> NOT expression .)
    OR              reduce using rule 9 (expression -> NOT expression .)
    NOR             reduce using rule 9 (expression -> NOT expression .)
    XOR             reduce using rule 9 (expression -> NOT expression .)
    EQ              reduce using rule 9 (expression -> NOT expression .)
    NEQ             reduce using rule 9 (expression -> NOT expression .)
    IMPL            reduce using rule 9 (expression -> NOT expression .)
    PLUS            reduce using rule 9 (expression -> NOT expression .)
    MINUS           reduce using rule 9 (expression -> NOT expression .)
    TIMES           reduce using rule 9 (expression -> NOT expression .)
    DIVIDE          reduce using rule 9 (expression -> NOT expression .)
    $end            reduce using rule 9 (expression -> NOT expression .)
    SEPARATOR       reduce using rule 9 (expression -> NOT expression .)
    THEN            reduce using rule 9 (expression -> NOT expression .)
    END             reduce using rule 9 (expression -> NOT expression .)
    DO              reduce using rule 9 (expression -> NOT expression .)
    RPAREN          reduce using rule 9 (expression -> NOT expression .)
    ELSE            reduce using rule 9 (expression -> NOT expression .)

  ! LESS_THEN       [ shift and go to state 14 ]
  ! GREATER_THEN    [ shift and go to state 15 ]
  ! LESS_EQUALS     [ shift and go to state 16 ]
  ! GREATER_EQUALS  [ shift and go to state 17 ]
  ! EQUALS          [ shift and go to state 18 ]
  ! NOT_EQUALS      [ shift and go to state 19 ]
  ! AND             [ shift and go to state 20 ]
  ! NAND            [ shift and go to state 21 ]
  ! OR              [ shift and go to state 22 ]
  ! NOR             [ shift and go to state 23 ]
  ! XOR             [ shift and go to state 24 ]
  ! EQ              [ shift and go to state 25 ]
  ! NEQ             [ shift and go to state 26 ]
  ! IMPL            [ shift and go to state 27 ]
  ! PLUS            [ shift and go to state 28 ]
  ! MINUS           [ shift and go to state 29 ]
  ! TIMES           [ shift and go to state 30 ]
  ! DIVIDE          [ shift and go to state 31 ]


state 35

    (10) expression -> IF expression . THEN expression
    (22) expression -> IF expression . THEN expression ELSE expression
    (1) expression -> expression . LESS_THEN expression
    (2) expression -> expression . GREATER_THEN expression
    (3) expression -> expression . LESS_EQUALS expression
    (4) expression -> expression . GREATER_EQUALS expression
    (5) expression -> expression . EQUALS expression
    (6) expression -> expression . NOT_EQUALS expression
    (14) expression -> expression . AND expression
    (15) expression -> expression . NAND expression
    (16) expression -> expression . OR expression
    (17) expression -> expression . NOR expression
    (18) expression -> expression . XOR expression
    (19) expression -> expression . EQ expression
    (20) expression -> expression . NEQ expression
    (21) expression -> expression . IMPL expression
    (28) expression -> expression . PLUS expression
    (29) expression -> expression . MINUS expression
    (30) expression -> expression . TIMES expression
    (31) expression -> expression . DIVIDE expression

    THEN            shift and go to state 61
    LESS_THEN       shift and go to state 14
    GREATER_THEN    shift and go to state 15
    LESS_EQUALS     shift and go to state 16
    GREATER_EQUALS  shift and go to state 17
    EQUALS          shift and go to state 18
    NOT_EQUALS      shift and go to state 19
    AND             shift and go to state 20
    NAND            shift and go to state 21
    OR              shift and go to state 22
    NOR             shift and go to state 23
    XOR             shift and go to state 24
    EQ              shift and go to state 25
    NEQ             shift and go to state 26
    IMPL            shift and go to state 27
    PLUS            shift and go to state 28
    MINUS           shift and go to state 29
    TIMES           shift and go to state 30
    DIVIDE          shift and go to state 31


state 36

    (11) expression -> BEGIN body . END
    (24) body -> body . SEPARATOR expression

    END             shift and go to state 62
    SEPARATOR       shift and go to state 63


state 37

    (23) body -> expression .
    (1) expression -> expression . LESS_THEN expression
    (2) expression -> expression . GREATER_THEN expression
    (3) expression -> expression . LESS_EQUALS expression
    (4) expression -> expression . GREATER_EQUALS expression
    (5) expression -> expression . EQUALS expression
    (6) expression -> expression . NOT_EQUALS expression
    (14) expression -> expression . AND expression
    (15) expression -> expression . NAND expression
    (16) expression -> expression . OR expression
    (17) expression -> expression . NOR expression
    (18) expression -> expression . XOR expression
    (19) expression -> expression . EQ expression
    (20) expression -> expression . NEQ expression
    (21) expression -> expression . IMPL expression
    (28) expression -> expression . PLUS expression
    (29) expression -> expression . MINUS expression
    (30) expression -> expression . TIMES expression
    (31) expression -> expression . DIVIDE expression

    END             reduce using rule 23 (body -> expression .)
    SEPARATOR       reduce using rule 23 (body -> expression .)
    LESS_THEN       shift and go to state 14
    GREATER_THEN    shift and go to state 15
    LESS_EQUALS     shift and go to state 16
    GREATER_EQUALS  shift and go to state 17
    EQUALS          shift and go to state 18
    NOT_EQUALS      shift and go to state 19
    AND             shift and go to state 20
    NAND            shift and go to state 21
    OR              shift and go to state 22
    NOR             shift and go to state 23
    XOR             shift and go to state 24
    EQ              shift and go to state 25
    NEQ             shift and go to state 26
    IMPL            shift and go to state 27
    PLUS            shift and go to state 28
    MINUS           shift and go to state 29
    TIMES           shift and go to state 30
    DIVIDE          shift and go to state 31


state 38

    (12) expression -> LOOP expression . DO expression
    (1) expression -> expression . LESS_THEN expression
    (2) expression -> expression . GREATER_THEN expression
    (3) expression -> expression . LESS_EQUALS expression
    (4) expression -> expression . GREATER_EQUALS expression
    (5) expression -> expression . EQUALS expression
    (6) expression -> expression . NOT_EQUALS expression
    (14) expression -> expression . AND expression
    (15) expression -> expression . NAND expression
    (16) expression -> expression . OR expression
    (17) expression -> expression . NOR expression
    (18) expression -> expression . XOR expression
    (19) expression -> expression . EQ expression
    (20) expression -> expression . NEQ expression
    (21) expression -> expression . IMPL expression
    (28) expression -> expression . PLUS expression
    (29) expression -> expression . MINUS expression
    (30) expression -> expression . TIMES expression
    (31) expression -> expression . DIVIDE expression

    DO              shift and go to state 64
    LESS_THEN       shift and go to state 14
    GREATER_THEN    shift and go to state 15
    LESS_EQUALS     shift and go to state 16
    GREATER_EQUALS  shift and go to state 17
    EQUALS          shift and go to state 18
    NOT_EQUALS      shift and go to state 19
    AND             shift and go to state 20
    NAND            shift and go to state 21
    OR              shift and go to state 22
    NOR             shift and go to state 23
    XOR             shift and go to state 24
    EQ              shift and go to state 25
    NEQ             shift and go to state 26
    IMPL            shift and go to state 27
    PLUS            shift and go to state 28
    MINUS           shift and go to state 29
    TIMES           shift and go to state 30
    DIVIDE          shift and go to state 31


state 39

    (27) expression -> MINUS expression .
    (1) expression -> expression . LESS_THEN expression
    (2) expression -> expression . GREATER_THEN expression
    (3) expression -> expression . LESS_EQUALS expression
    (4) expression -> expression . GREATER_EQUALS expression
    (5) expression -> expression . EQUALS expression
    (6) expression -> expression . NOT_EQUALS expression
    (14) expression -> expression . AND expression
    (15) expression -> expression . NAND expression
    (16) expression -> expression . OR expression
    (17) expression -> expression . NOR expression
    (18) expression -> expression . XOR expression
    (19) expression -> expression . EQ expression
    (20) expression -> expression . NEQ expression
    (21) expression -> expression . IMPL expression
    (28) expression -> expression . PLUS expression
    (29) expression -> expression . MINUS expression
    (30) expression -> expression . TIMES expression
    (31) expression -> expression . DIVIDE expression

    LESS_THEN       reduce using rule 27 (expression -> MINUS expression .)
    GREATER_THEN    reduce using rule 27 (expression -> MINUS expression .)
    LESS_EQUALS     reduce using rule 27 (expression -> MINUS expression .)
    GREATER_EQUALS  reduce using rule 27 (expression -> MINUS expression .)
    EQUALS          reduce using rule 27 (expression -> MINUS expression .)
    NOT_EQUALS      reduce using rule 27 (expression -> MINUS expression .)
    AND             reduce using rule 27 (expression -> MINUS expression .)
    NAND            reduce using rule 27 (expression -> MINUS expression .)
    OR              reduce using rule 27 (expression -> MINUS expression .)
    NOR             reduce using rule 27 (expression -> MINUS expression .)
    XOR             reduce using rule 27 (expression -> MINUS expression .)
    EQ              reduce using rule 27 (expression -> MINUS expression .)
    NEQ             reduce using rule 27 (expression -> MINUS expression .)
    IMPL            reduce using rule 27 (expression -> MINUS expression .)
    PLUS            reduce using rule 27 (expression -> MINUS expression .)
    MINUS           reduce using rule 27 (expression -> MINUS expression .)
    TIMES           reduce using rule 27 (expression -> MINUS expression .)
    DIVIDE          reduce using rule 27 (expression -> MINUS expression .)
    $end            reduce using rule 27 (expression -> MINUS expression .)
    SEPARATOR       reduce using rule 27 (expression -> MINUS expression .)
    THEN            reduce using rule 27 (expression -> MINUS expression .)
    END             reduce using rule 27 (expression -> MINUS expression .)
    DO              reduce using rule 27 (expression -> MINUS expression .)
    RPAREN          reduce using rule 27 (expression -> MINUS expression .)
    ELSE            reduce using rule 27 (expression -> MINUS expression .)

  ! LESS_THEN       [ shift and go to state 14 ]
  ! GREATER_THEN    [ shift and go to state 15 ]
  ! LESS_EQUALS     [ shift and go to state 16 ]
  ! GREATER_EQUALS  [ shift and go to state 17 ]
  ! EQUALS          [ shift and go to state 18 ]
  ! NOT_EQUALS      [ shift and go to state 19 ]
  ! AND             [ shift and go to state 20 ]
  ! NAND            [ shift and go to state 21 ]
  ! OR              [ shift and go to state 22 ]
  ! NOR             [ shift and go to state 23 ]
  ! XOR             [ shift and go to state 24 ]
  ! EQ              [ shift and go to state 25 ]
  ! NEQ             [ shift and go to state 26 ]
  ! IMPL            [ shift and go to state 27 ]
  ! PLUS            [ shift and go to state 28 ]
  ! MINUS           [ shift and go to state 29 ]
  ! TIMES           [ shift and go to state 30 ]
  ! DIVIDE          [ shift and go to state 31 ]


state 40

    (34) expression -> LPAREN expression . RPAREN
    (1) expression -> expression . LESS_THEN expression
    (2) expression -> expression . GREATER_THEN expression
    (3) expression -> expression . LESS_EQUALS expression
    (4) expression -> expression . GREATER_EQUALS expression
    (5) expression -> expression . EQUALS expression
    (6) expression -> expression . NOT_EQUALS expression
    (14) expression -> expression . AND expression
    (15) expression -> expression . NAND expression
    (16) expression -> expression . OR expression
    (17) expression -> expression . NOR expression
    (18) expression -> expression . XOR expression
    (19) expression -> expression . EQ expression
    (20) expression -> expression . NEQ expression
    (21) expression -> expression . IMPL expression
    (28) expression -> expression . PLUS expression
    (29) expression -> expression . MINUS expression
    (30) expression -> expression . TIMES expression
    (31) expression -> expression . DIVIDE expression

    RPAREN          shift and go to state 65
    LESS_THEN       shift and go to state 14
    GREATER_THEN    shift and go to state 15
    LESS_EQUALS     shift and go to state 16
    GREATER_EQUALS  shift and go to state 17
    EQUALS          shift and go to state 18
    NOT_EQUALS      shift and go to state 19
    AND             shift and go to state 20
    NAND            shift and go to state 21
    OR              shift and go to state 22
    NOR             shift and go to state 23
    XOR             shift and go to state 24
    EQ              shift and go to state 25
    NEQ             shift and go to state 26
    IMPL            shift and go to state 27
    PLUS            shift and go to state 28
    MINUS           shift and go to state 29
    TIMES           shift and go to state 30
    DIVIDE          shift and go to state 31


state 41

    (1) expression -> expression LESS_THEN expression .
    (1) expression -> expression . LESS_THEN expression
    (2) expression -> expression . GREATER_THEN expression
    (3) expression -> expression . LESS_EQUALS expression
    (4) expression -> expression . GREATER_EQUALS expression
    (5) expression -> expression . EQUALS expression
    (6) expression -> expression . NOT_EQUALS expression
    (14) expression -> expression . AND expression
    (15) expression -> expression . NAND expression
    (16) expression -> expression . OR expression
    (17) expression -> expression . NOR expression
    (18) expression -> expression . XOR expression
    (19) expression -> expression . EQ expression
    (20) expression -> expression . NEQ expression
    (21) expression -> expression . IMPL expression
    (28) expression -> expression . PLUS expression
    (29) expression -> expression . MINUS expression
    (30) expression -> expression . TIMES expression
    (31) expression -> expression . DIVIDE expression

    LESS_THEN       reduce using rule 1 (expression -> expression LESS_THEN expression .)
    GREATER_THEN    reduce using rule 1 (expression -> expression LESS_THEN expression .)
    LESS_EQUALS     reduce using rule 1 (expression -> expression LESS_THEN expression .)
    GREATER_EQUALS  reduce using rule 1 (expression -> expression LESS_THEN expression .)
    EQUALS          reduce using rule 1 (expression -> expression LESS_THEN expression .)
    NOT_EQUALS      reduce using rule 1 (expression -> expression LESS_THEN expression .)
    AND             reduce using rule 1 (expression -> expression LESS_THEN expression .)
    NAND            reduce using rule 1 (expression -> expression LESS_THEN expression .)
    OR              reduce using rule 1 (expression -> expression LESS_THEN expression .)
    NOR             reduce using rule 1 (expression -> expression LESS_THEN expression .)
    XOR             reduce using rule 1 (expression -> expression LESS_THEN expression .)
    EQ              reduce using rule 1 (expression -> expression LESS_THEN expression .)
    NEQ             reduce using rule 1 (expression -> expression LESS_THEN expression .)
    IMPL            reduce using rule 1 (expression -> expression LESS_THEN expression .)
    $end            reduce using rule 1 (expression -> expression LESS_THEN expression .)
    SEPARATOR       reduce using rule 1 (expression -> expression LESS_THEN expression .)
    THEN            reduce using rule 1 (expression -> expression LESS_THEN expression .)
    END             reduce using rule 1 (expression -> expression LESS_THEN expression .)
    DO              reduce using rule 1 (expression -> expression LESS_THEN expression .)
    RPAREN          reduce using rule 1 (expression -> expression LESS_THEN expression .)
    ELSE            reduce using rule 1 (expression -> expression LESS_THEN expression .)
    PLUS            shift and go to state 28
    MINUS           shift and go to state 29
    TIMES           shift and go to state 30
    DIVIDE          shift and go to state 31

  ! PLUS            [ reduce using rule 1 (expression -> expression LESS_THEN expression .) ]
  ! MINUS           [ reduce using rule 1 (expression -> expression LESS_THEN expression .) ]
  ! TIMES           [ reduce using rule 1 (expression -> expression LESS_THEN expression .) ]
  ! DIVIDE          [ reduce using rule 1 (expression -> expression LESS_THEN expression .) ]
  ! LESS_THEN       [ shift and go to state 14 ]
  ! GREATER_THEN    [ shift and go to state 15 ]
  ! LESS_EQUALS     [ shift and go to state 16 ]
  ! GREATER_EQUALS  [ shift and go to state 17 ]
  ! EQUALS          [ shift and go to state 18 ]
  ! NOT_EQUALS      [ shift and go to state 19 ]
  ! AND             [ shift and go to state 20 ]
  ! NAND            [ shift and go to state 21 ]
  ! OR              [ shift and go to state 22 ]
  ! NOR             [ shift and go to state 23 ]
  ! XOR             [ shift and go to state 24 ]
  ! EQ              [ shift and go to state 25 ]
  ! NEQ             [ shift and go to state 26 ]
  ! IMPL            [ shift and go to state 27 ]


state 42

    (2) expression -> expression GREATER_THEN expression .
    (1) expression -> expression . LESS_THEN expression
    (2) expression -> expression . GREATER_THEN expression
    (3) expression -> expression . LESS_EQUALS expression
    (4) expression -> expression . GREATER_EQUALS expression
    (5) expression -> expression . EQUALS expression
    (6) expression -> expression . NOT_EQUALS expression
    (14) expression -> expression . AND expression
    (15) expression -> expression . NAND expression
    (16) expression -> expression . OR expression
    (17) expression -> expression . NOR expression
    (18) expression -> expression . XOR expression
    (19) expression -> expression . EQ expression
    (20) expression -> expression . NEQ expression
    (21) expression -> expression . IMPL expression
    (28) expression -> expression . PLUS expression
    (29) expression -> expression . MINUS expression
    (30) expression -> expression . TIMES expression
    (31) expression -> expression . DIVIDE expression

    LESS_THEN       reduce using rule 2 (expression -> expression GREATER_THEN expression .)
    GREATER_THEN    reduce using rule 2 (expression -> expression GREATER_THEN expression .)
    LESS_EQUALS     reduce using rule 2 (expression -> expression GREATER_THEN expression .)
    GREATER_EQUALS  reduce using rule 2 (expression -> expression GREATER_THEN expression .)
    EQUALS          reduce using rule 2 (expression -> expression GREATER_THEN expression .)
    NOT_EQUALS      reduce using rule 2 (expression -> expression GREATER_THEN expression .)
    AND             reduce using rule 2 (expression -> expression GREATER_THEN expression .)
    NAND            reduce using rule 2 (expression -> expression GREATER_THEN expression .)
    OR              reduce using rule 2 (expression -> expression GREATER_THEN expression .)
    NOR             reduce using rule 2 (expression -> expression GREATER_THEN expression .)
    XOR             reduce using rule 2 (expression -> expression GREATER_THEN expression .)
    EQ              reduce using rule 2 (expression -> expression GREATER_THEN expression .)
    NEQ             reduce using rule 2 (expression -> expression GREATER_THEN expression .)
    IMPL            reduce using rule 2 (expression -> expression GREATER_THEN expression .)
    $end            reduce using rule 2 (expression -> expression GREATER_THEN expression .)
    SEPARATOR       reduce using rule 2 (expression -> expression GREATER_THEN expression .)
    THEN            reduce using rule 2 (expression -> expression GREATER_THEN expression .)
    END             reduce using rule 2 (expression -> expression GREATER_THEN expression .)
    DO              reduce using rule 2 (expression -> expression GREATER_THEN expression .)
    RPAREN          reduce using rule 2 (expression -> expression GREATER_THEN expression .)
    ELSE            reduce using rule 2 (expression -> expression GREATER_THEN expression .)
    PLUS            shift and go to state 28
    MINUS           shift and go to state 29
    TIMES           shift and go to state 30
    DIVIDE          shift and go to state 31

  ! PLUS            [ reduce using rule 2 (expression -> expression GREATER_THEN expression .) ]
  ! MINUS           [ reduce using rule 2 (expression -> expression GREATER_THEN expression .) ]
  ! TIMES           [ reduce using rule 2 (expression -> expression GREATER_THEN expression .) ]
  ! DIVIDE          [ reduce using rule 2 (expression -> expression GREATER_THEN expression .) ]
  ! LESS_THEN       [ shift and go to state 14 ]
  ! GREATER_THEN    [ shift and go to state 15 ]
  ! LESS_EQUALS     [ shift and go to state 16 ]
  ! GREATER_EQUALS  [ shift and go to state 17 ]
  ! EQUALS          [ shift and go to state 18 ]
  ! NOT_EQUALS      [ shift and go to state 19 ]
  ! AND             [ shift and go to state 20 ]
  ! NAND            [ shift and go to state 21 ]
  ! OR              [ shift and go to state 22 ]
  ! NOR             [ shift and go to state 23 ]
  ! XOR             [ shift and go to state 24 ]
  ! EQ              [ shift and go to state 25 ]
  ! NEQ             [ shift and go to state 26 ]
  ! IMPL            [ shift and go to state 27 ]


state 43

    (3) expression -> expression LESS_EQUALS expression .
    (1) expression -> expression . LESS_THEN expression
    (2) expression -> expression . GREATER_THEN expression
    (3) expression -> expression . LESS_EQUALS expression
    (4) expression -> expression . GREATER_EQUALS expression
    (5) expression -> expression . EQUALS expression
    (6) expression -> expression . NOT_EQUALS expression
    (14) expression -> expression . AND expression
    (15) expression -> expression . NAND expression
    (16) expression -> expression . OR expression
    (17) expression -> expression . NOR expression
    (18) expression -> expression . XOR expression
    (19) expression -> expression . EQ expression
    (20) expression -> expression . NEQ expression
    (21) expression -> expression . IMPL expression
    (28) expression -> expression . PLUS expression
    (29) expression -> expression . MINUS expression
    (30) expression -> expression . TIMES expression
    (31) expression -> expression . DIVIDE expression

    LESS_THEN       reduce using rule 3 (expression -> expression LESS_EQUALS expression .)
    GREATER_THEN    reduce using rule 3 (expression -> expression LESS_EQUALS expression .)
    LESS_EQUALS     reduce using rule 3 (expression -> expression LESS_EQUALS expression .)
    GREATER_EQUALS  reduce using rule 3 (expression -> expression LESS_EQUALS expression .)
    EQUALS          reduce using rule 3 (expression -> expression LESS_EQUALS expression .)
    NOT_EQUALS      reduce using rule 3 (expression -> expression LESS_EQUALS expression .)
    AND             reduce using rule 3 (expression -> expression LESS_EQUALS expression .)
    NAND            reduce using rule 3 (expression -> expression LESS_EQUALS expression .)
    OR              reduce using rule 3 (expression -> expression LESS_EQUALS expression .)
    NOR             reduce using rule 3 (expression -> expression LESS_EQUALS expression .)
    XOR             reduce using rule 3 (expression -> expression LESS_EQUALS expression .)
    EQ              reduce using rule 3 (expression -> expression LESS_EQUALS expression .)
    NEQ             reduce using rule 3 (expression -> expression LESS_EQUALS expression .)
    IMPL            reduce using rule 3 (expression -> expression LESS_EQUALS expression .)
    $end            reduce using rule 3 (expression -> expression LESS_EQUALS expression .)
    SEPARATOR       reduce using rule 3 (expression -> expression LESS_EQUALS expression .)
    THEN            reduce using rule 3 (expression -> expression LESS_EQUALS expression .)
    END             reduce using rule 3 (expression -> expression LESS_EQUALS expression .)
    DO              reduce using rule 3 (expression -> expression LESS_EQUALS expression .)
    RPAREN          reduce using rule 3 (expression -> expression LESS_EQUALS expression .)
    ELSE            reduce using rule 3 (expression -> expression LESS_EQUALS expression .)
    PLUS            shift and go to state 28
    MINUS           shift and go to state 29
    TIMES           shift and go to state 30
    DIVIDE          shift and go to state 31

  ! PLUS            [ reduce using rule 3 (expression -> expression LESS_EQUALS expression .) ]
  ! MINUS           [ reduce using rule 3 (expression -> expression LESS_EQUALS expression .) ]
  ! TIMES           [ reduce using rule 3 (expression -> expression LESS_EQUALS expression .) ]
  ! DIVIDE          [ reduce using rule 3 (expression -> expression LESS_EQUALS expression .) ]
  ! LESS_THEN       [ shift and go to state 14 ]
  ! GREATER_THEN    [ shift and go to state 15 ]
  ! LESS_EQUALS     [ shift and go to state 16 ]
  ! GREATER_EQUALS  [ shift and go to state 17 ]
  ! EQUALS          [ shift and go to state 18 ]
  ! NOT_EQUALS      [ shift and go to state 19 ]
  ! AND             [ shift and go to state 20 ]
  ! NAND            [ shift and go to state 21 ]
  ! OR              [ shift and go to state 22 ]
  ! NOR             [ shift and go to state 23 ]
  ! XOR             [ shift and go to state 24 ]
  ! EQ              [ shift and go to state 25 ]
  ! NEQ             [ shift and go to state 26 ]
  ! IMPL            [ shift and go to state 27 ]


state 44

    (4) expression -> expression GREATER_EQUALS expression .
    (1) expression -> expression . LESS_THEN expression
    (2) expression -> expression . GREATER_THEN expression
    (3) expression -> expression . LESS_EQUALS expression
    (4) expression -> expression . GREATER_EQUALS expression
    (5) expression -> expression . EQUALS expression
    (6) expression -> expression . NOT_EQUALS expression
    (14) expression -> expression . AND expression
    (15) expression -> expression . NAND expression
    (16) expression -> expression . OR expression
    (17) expression -> expression . NOR expression
    (18) expression -> expression . XOR expression
    (19) expression -> expression . EQ expression
    (20) expression -> expression . NEQ expression
    (21) expression -> expression . IMPL expression
    (28) expression -> expression . PLUS expression
    (29) expression -> expression . MINUS expression
    (30) expression -> expression . TIMES expression
    (31) expression -> expression . DIVIDE expression

    LESS_THEN       reduce using rule 4 (expression -> expression GREATER_EQUALS expression .)
    GREATER_THEN    reduce using rule 4 (expression -> expression GREATER_EQUALS expression .)
    LESS_EQUALS     reduce using rule 4 (expression -> expression GREATER_EQUALS expression .)
    GREATER_EQUALS  reduce using rule 4 (expression -> expression GREATER_EQUALS expression .)
    EQUALS          reduce using rule 4 (expression -> expression GREATER_EQUALS expression .)
    NOT_EQUALS      reduce using rule 4 (expression -> expression GREATER_EQUALS expression .)
    AND             reduce using rule 4 (expression -> expression GREATER_EQUALS expression .)
    NAND            reduce using rule 4 (expression -> expression GREATER_EQUALS expression .)
    OR              reduce using rule 4 (expression -> expression GREATER_EQUALS expression .)
    NOR             reduce using rule 4 (expression -> expression GREATER_EQUALS expression .)
    XOR             reduce using rule 4 (expression -> expression GREATER_EQUALS expression .)
    EQ              reduce using rule 4 (expression -> expression GREATER_EQUALS expression .)
    NEQ             reduce using rule 4 (expression -> expression GREATER_EQUALS expression .)
    IMPL            reduce using rule 4 (expression -> expression GREATER_EQUALS expression .)
    $end            reduce using rule 4 (expression -> expression GREATER_EQUALS expression .)
    SEPARATOR       reduce using rule 4 (expression -> expression GREATER_EQUALS expression .)
    THEN            reduce using rule 4 (expression -> expression GREATER_EQUALS expression .)
    END             reduce using rule 4 (expression -> expression GREATER_EQUALS expression .)
    DO              reduce using rule 4 (expression -> expression GREATER_EQUALS expression .)
    RPAREN          reduce using rule 4 (expression -> expression GREATER_EQUALS expression .)
    ELSE            reduce using rule 4 (expression -> expression GREATER_EQUALS expression .)
    PLUS            shift and go to state 28
    MINUS           shift and go to state 29
    TIMES           shift and go to state 30
    DIVIDE          shift and go to state 31

  ! PLUS            [ reduce using rule 4 (expression -> expression GREATER_EQUALS expression .) ]
  ! MINUS           [ reduce using rule 4 (expression -> expression GREATER_EQUALS expression .) ]
  ! TIMES           [ reduce using rule 4 (expression -> expression GREATER_EQUALS expression .) ]
  ! DIVIDE          [ reduce using rule 4 (expression -> expression GREATER_EQUALS expression .) ]
  ! LESS_THEN       [ shift and go to state 14 ]
  ! GREATER_THEN    [ shift and go to state 15 ]
  ! LESS_EQUALS     [ shift and go to state 16 ]
  ! GREATER_EQUALS  [ shift and go to state 17 ]
  ! EQUALS          [ shift and go to state 18 ]
  ! NOT_EQUALS      [ shift and go to state 19 ]
  ! AND             [ shift and go to state 20 ]
  ! NAND            [ shift and go to state 21 ]
  ! OR              [ shift and go to state 22 ]
  ! NOR             [ shift and go to state 23 ]
  ! XOR             [ shift and go to state 24 ]
  ! EQ              [ shift and go to state 25 ]
  ! NEQ             [ shift and go to state 26 ]
  ! IMPL            [ shift and go to state 27 ]


state 45

    (5) expression -> expression EQUALS expression .
    (1) expression -> expression . LESS_THEN expression
    (2) expression -> expression . GREATER_THEN expression
    (3) expression -> expression . LESS_EQUALS expression
    (4) expression -> expression . GREATER_EQUALS expression
    (5) expression -> expression . EQUALS expression
    (6) expression -> expression . NOT_EQUALS expression
    (14) expression -> expression . AND expression
    (15) expression -> expression . NAND expression
    (16) expression -> expression . OR expression
    (17) expression -> expression . NOR expression
    (18) expression -> expression . XOR expression
    (19) expression -> expression . EQ expression
    (20) expression -> expression . NEQ expression
    (21) expression -> expression . IMPL expression
    (28) expression -> expression . PLUS expression
    (29) expression -> expression . MINUS expression
    (30) expression -> expression . TIMES expression
    (31) expression -> expression . DIVIDE expression

    EQUALS          reduce using rule 5 (expression -> expression EQUALS expression .)
    NOT_EQUALS      reduce using rule 5 (expression -> expression EQUALS expression .)
    AND             reduce using rule 5 (expression -> expression EQUALS expression .)
    NAND            reduce using rule 5 (expression -> expression EQUALS expression .)
    OR              reduce using rule 5 (expression -> expression EQUALS expression .)
    NOR             reduce using rule 5 (expression -> expression EQUALS expression .)
    XOR             reduce using rule 5 (expression -> expression EQUALS expression .)
    EQ              reduce using rule 5 (expression -> expression EQUALS expression .)
    NEQ             reduce using rule 5 (expression -> expression EQUALS expression .)
    IMPL            reduce using rule 5 (expression -> expression EQUALS expression .)
    $end            reduce using rule 5 (expression -> expression EQUALS expression .)
    SEPARATOR       reduce using rule 5 (expression -> expression EQUALS expression .)
    THEN            reduce using rule 5 (expression -> expression EQUALS expression .)
    END             reduce using rule 5 (expression -> expression EQUALS expression .)
    DO              reduce using rule 5 (expression -> expression EQUALS expression .)
    RPAREN          reduce using rule 5 (expression -> expression EQUALS expression .)
    ELSE            reduce using rule 5 (expression -> expression EQUALS expression .)
    LESS_THEN       shift and go to state 14
    GREATER_THEN    shift and go to state 15
    LESS_EQUALS     shift and go to state 16
    GREATER_EQUALS  shift and go to state 17
    PLUS            shift and go to state 28
    MINUS           shift and go to state 29
    TIMES           shift and go to state 30
    DIVIDE          shift and go to state 31

  ! LESS_THEN       [ reduce using rule 5 (expression -> expression EQUALS expression .) ]
  ! GREATER_THEN    [ reduce using rule 5 (expression -> expression EQUALS expression .) ]
  ! LESS_EQUALS     [ reduce using rule 5 (expression -> expression EQUALS expression .) ]
  ! GREATER_EQUALS  [ reduce using rule 5 (expression -> expression EQUALS expression .) ]
  ! PLUS            [ reduce using rule 5 (expression -> expression EQUALS expression .) ]
  ! MINUS           [ reduce using rule 5 (expression -> expression EQUALS expression .) ]
  ! TIMES           [ reduce using rule 5 (expression -> expression EQUALS expression .) ]
  ! DIVIDE          [ reduce using rule 5 (expression -> expression EQUALS expression .) ]
  ! EQUALS          [ shift and go to state 18 ]
  ! NOT_EQUALS      [ shift and go to state 19 ]
  ! AND             [ shift and go to state 20 ]
  ! NAND            [ shift and go to state 21 ]
  ! OR              [ shift and go to state 22 ]
  ! NOR             [ shift and go to state 23 ]
  ! XOR             [ shift and go to state 24 ]
  ! EQ              [ shift and go to state 25 ]
  ! NEQ             [ shift and go to state 26 ]
  ! IMPL            [ shift and go to state 27 ]


state 46

    (6) expression -> expression NOT_EQUALS expression .
    (1) expression -> expression . LESS_THEN expression
    (2) expression -> expression . GREATER_THEN expression
    (3) expression -> expression . LESS_EQUALS expression
    (4) expression -> expression . GREATER_EQUALS expression
    (5) expression -> expression . EQUALS expression
    (6) expression -> expression . NOT_EQUALS expression
    (14) expression -> expression . AND expression
    (15) expression -> expression . NAND expression
    (16) expression -> expression . OR expression
    (17) expression -> expression . NOR expression
    (18) expression -> expression . XOR expression
    (19) expression -> expression . EQ expression
    (20) expression -> expression . NEQ expression
    (21) expression -> expression . IMPL expression
    (28) expression -> expression . PLUS expression
    (29) expression -> expression . MINUS expression
    (30) expression -> expression . TIMES expression
    (31) expression -> expression . DIVIDE expression

    EQUALS          reduce using rule 6 (expression -> expression NOT_EQUALS expression .)
    NOT_EQUALS      reduce using rule 6 (expression -> expression NOT_EQUALS expression .)
    AND             reduce using rule 6 (expression -> expression NOT_EQUALS expression .)
    NAND            reduce using rule 6 (expression -> expression NOT_EQUALS expression .)
    OR              reduce using rule 6 (expression -> expression NOT_EQUALS expression .)
    NOR             reduce using rule 6 (expression -> expression NOT_EQUALS expression .)
    XOR             reduce using rule 6 (expression -> expression NOT_EQUALS expression .)
    EQ              reduce using rule 6 (expression -> expression NOT_EQUALS expression .)
    NEQ             reduce using rule 6 (expression -> expression NOT_EQUALS expression .)
    IMPL            reduce using rule 6 (expression -> expression NOT_EQUALS expression .)
    $end            reduce using rule 6 (expression -> expression NOT_EQUALS expression .)
    SEPARATOR       reduce using rule 6 (expression -> expression NOT_EQUALS expression .)
    THEN            reduce using rule 6 (expression -> expression NOT_EQUALS expression .)
    END             reduce using rule 6 (expression -> expression NOT_EQUALS expression .)
    DO              reduce using rule 6 (expression -> expression NOT_EQUALS expression .)
    RPAREN          reduce using rule 6 (expression -> expression NOT_EQUALS expression .)
    ELSE            reduce using rule 6 (expression -> expression NOT_EQUALS expression .)
    LESS_THEN       shift and go to state 14
    GREATER_THEN    shift and go to state 15
    LESS_EQUALS     shift and go to state 16
    GREATER_EQUALS  shift and go to state 17
    PLUS            shift and go to state 28
    MINUS           shift and go to state 29
    TIMES           shift and go to state 30
    DIVIDE          shift and go to state 31

  ! LESS_THEN       [ reduce using rule 6 (expression -> expression NOT_EQUALS expression .) ]
  ! GREATER_THEN    [ reduce using rule 6 (expression -> expression NOT_EQUALS expression .) ]
  ! LESS_EQUALS     [ reduce using rule 6 (expression -> expression NOT_EQUALS expression .) ]
  ! GREATER_EQUALS  [ reduce using rule 6 (expression -> expression NOT_EQUALS expression .) ]
  ! PLUS            [ reduce using rule 6 (expression -> expression NOT_EQUALS expression .) ]
  ! MINUS           [ reduce using rule 6 (expression -> expression NOT_EQUALS expression .) ]
  ! TIMES           [ reduce using rule 6 (expression -> expression NOT_EQUALS expression .) ]
  ! DIVIDE          [ reduce using rule 6 (expression -> expression NOT_EQUALS expression .) ]
  ! EQUALS          [ shift and go to state 18 ]
  ! NOT_EQUALS      [ shift and go to state 19 ]
  ! AND             [ shift and go to state 20 ]
  ! NAND            [ shift and go to state 21 ]
  ! OR              [ shift and go to state 22 ]
  ! NOR             [ shift and go to state 23 ]
  ! XOR             [ shift and go to state 24 ]
  ! EQ              [ shift and go to state 25 ]
  ! NEQ             [ shift and go to state 26 ]
  ! IMPL            [ shift and go to state 27 ]


state 47

    (14) expression -> expression AND expression .
    (1) expression -> expression . LESS_THEN expression
    (2) expression -> expression . GREATER_THEN expression
    (3) expression -> expression . LESS_EQUALS expression
    (4) expression -> expression . GREATER_EQUALS expression
    (5) expression -> expression . EQUALS expression
    (6) expression -> expression . NOT_EQUALS expression
    (14) expression -> expression . AND expression
    (15) expression -> expression . NAND expression
    (16) expression -> expression . OR expression
    (17) expression -> expression . NOR expression
    (18) expression -> expression . XOR expression
    (19) expression -> expression . EQ expression
    (20) expression -> expression . NEQ expression
    (21) expression -> expression . IMPL expression
    (28) expression -> expression . PLUS expression
    (29) expression -> expression . MINUS expression
    (30) expression -> expression . TIMES expression
    (31) expression -> expression . DIVIDE expression

    AND             reduce using rule 14 (expression -> expression AND expression .)
    NAND            reduce using rule 14 (expression -> expression AND expression .)
    OR              reduce using rule 14 (expression -> expression AND expression .)
    NOR             reduce using rule 14 (expression -> expression AND expression .)
    $end            reduce using rule 14 (expression -> expression AND expression .)
    SEPARATOR       reduce using rule 14 (expression -> expression AND expression .)
    THEN            reduce using rule 14 (expression -> expression AND expression .)
    END             reduce using rule 14 (expression -> expression AND expression .)
    DO              reduce using rule 14 (expression -> expression AND expression .)
    RPAREN          reduce using rule 14 (expression -> expression AND expression .)
    ELSE            reduce using rule 14 (expression -> expression AND expression .)
    LESS_THEN       shift and go to state 14
    GREATER_THEN    shift and go to state 15
    LESS_EQUALS     shift and go to state 16
    GREATER_EQUALS  shift and go to state 17
    EQUALS          shift and go to state 18
    NOT_EQUALS      shift and go to state 19
    XOR             shift and go to state 24
    EQ              shift and go to state 25
    NEQ             shift and go to state 26
    IMPL            shift and go to state 27
    PLUS            shift and go to state 28
    MINUS           shift and go to state 29
    TIMES           shift and go to state 30
    DIVIDE          shift and go to state 31

  ! LESS_THEN       [ reduce using rule 14 (expression -> expression AND expression .) ]
  ! GREATER_THEN    [ reduce using rule 14 (expression -> expression AND expression .) ]
  ! LESS_EQUALS     [ reduce using rule 14 (expression -> expression AND expression .) ]
  ! GREATER_EQUALS  [ reduce using rule 14 (expression -> expression AND expression .) ]
  ! EQUALS          [ reduce using rule 14 (expression -> expression AND expression .) ]
  ! NOT_EQUALS      [ reduce using rule 14 (expression -> expression AND expression .) ]
  ! XOR             [ reduce using rule 14 (expression -> expression AND expression .) ]
  ! EQ              [ reduce using rule 14 (expression -> expression AND expression .) ]
  ! NEQ             [ reduce using rule 14 (expression -> expression AND expression .) ]
  ! IMPL            [ reduce using rule 14 (expression -> expression AND expression .) ]
  ! PLUS            [ reduce using rule 14 (expression -> expression AND expression .) ]
  ! MINUS           [ reduce using rule 14 (expression -> expression AND expression .) ]
  ! TIMES           [ reduce using rule 14 (expression -> expression AND expression .) ]
  ! DIVIDE          [ reduce using rule 14 (expression -> expression AND expression .) ]
  ! AND             [ shift and go to state 20 ]
  ! NAND            [ shift and go to state 21 ]
  ! OR              [ shift and go to state 22 ]
  ! NOR             [ shift and go to state 23 ]


state 48

    (15) expression -> expression NAND expression .
    (1) expression -> expression . LESS_THEN expression
    (2) expression -> expression . GREATER_THEN expression
    (3) expression -> expression . LESS_EQUALS expression
    (4) expression -> expression . GREATER_EQUALS expression
    (5) expression -> expression . EQUALS expression
    (6) expression -> expression . NOT_EQUALS expression
    (14) expression -> expression . AND expression
    (15) expression -> expression . NAND expression
    (16) expression -> expression . OR expression
    (17) expression -> expression . NOR expression
    (18) expression -> expression . XOR expression
    (19) expression -> expression . EQ expression
    (20) expression -> expression . NEQ expression
    (21) expression -> expression . IMPL expression
    (28) expression -> expression . PLUS expression
    (29) expression -> expression . MINUS expression
    (30) expression -> expression . TIMES expression
    (31) expression -> expression . DIVIDE expression

    AND             reduce using rule 15 (expression -> expression NAND expression .)
    NAND            reduce using rule 15 (expression -> expression NAND expression .)
    OR              reduce using rule 15 (expression -> expression NAND expression .)
    NOR             reduce using rule 15 (expression -> expression NAND expression .)
    $end            reduce using rule 15 (expression -> expression NAND expression .)
    SEPARATOR       reduce using rule 15 (expression -> expression NAND expression .)
    THEN            reduce using rule 15 (expression -> expression NAND expression .)
    END             reduce using rule 15 (expression -> expression NAND expression .)
    DO              reduce using rule 15 (expression -> expression NAND expression .)
    RPAREN          reduce using rule 15 (expression -> expression NAND expression .)
    ELSE            reduce using rule 15 (expression -> expression NAND expression .)
    LESS_THEN       shift and go to state 14
    GREATER_THEN    shift and go to state 15
    LESS_EQUALS     shift and go to state 16
    GREATER_EQUALS  shift and go to state 17
    EQUALS          shift and go to state 18
    NOT_EQUALS      shift and go to state 19
    XOR             shift and go to state 24
    EQ              shift and go to state 25
    NEQ             shift and go to state 26
    IMPL            shift and go to state 27
    PLUS            shift and go to state 28
    MINUS           shift and go to state 29
    TIMES           shift and go to state 30
    DIVIDE          shift and go to state 31

  ! LESS_THEN       [ reduce using rule 15 (expression -> expression NAND expression .) ]
  ! GREATER_THEN    [ reduce using rule 15 (expression -> expression NAND expression .) ]
  ! LESS_EQUALS     [ reduce using rule 15 (expression -> expression NAND expression .) ]
  ! GREATER_EQUALS  [ reduce using rule 15 (expression -> expression NAND expression .) ]
  ! EQUALS          [ reduce using rule 15 (expression -> expression NAND expression .) ]
  ! NOT_EQUALS      [ reduce using rule 15 (expression -> expression NAND expression .) ]
  ! XOR             [ reduce using rule 15 (expression -> expression NAND expression .) ]
  ! EQ              [ reduce using rule 15 (expression -> expression NAND expression .) ]
  ! NEQ             [ reduce using rule 15 (expression -> expression NAND expression .) ]
  ! IMPL            [ reduce using rule 15 (expression -> expression NAND expression .) ]
  ! PLUS            [ reduce using rule 15 (expression -> expression NAND expression .) ]
  ! MINUS           [ reduce using rule 15 (expression -> expression NAND expression .) ]
  ! TIMES           [ reduce using rule 15 (expression -> expression NAND expression .) ]
  ! DIVIDE          [ reduce using rule 15 (expression -> expression NAND expression .) ]
  ! AND             [ shift and go to state 20 ]
  ! NAND            [ shift and go to state 21 ]
  ! OR              [ shift and go to state 22 ]
  ! NOR             [ shift and go to state 23 ]


state 49

    (16) expression -> expression OR expression .
    (1) expression -> expression . LESS_THEN expression
    (2) expression -> expression . GREATER_THEN expression
    (3) expression -> expression . LESS_EQUALS expression
    (4) expression -> expression . GREATER_EQUALS expression
    (5) expression -> expression . EQUALS expression
    (6) expression -> expression . NOT_EQUALS expression
    (14) expression -> expression . AND expression
    (15) expression -> expression . NAND expression
    (16) expression -> expression . OR expression
    (17) expression -> expression . NOR expression
    (18) expression -> expression . XOR expression
    (19) expression -> expression . EQ expression
    (20) expression -> expression . NEQ expression
    (21) expression -> expression . IMPL expression
    (28) expression -> expression . PLUS expression
    (29) expression -> expression . MINUS expression
    (30) expression -> expression . TIMES expression
    (31) expression -> expression . DIVIDE expression

    OR              reduce using rule 16 (expression -> expression OR expression .)
    NOR             reduce using rule 16 (expression -> expression OR expression .)
    $end            reduce using rule 16 (expression -> expression OR expression .)
    SEPARATOR       reduce using rule 16 (expression -> expression OR expression .)
    THEN            reduce using rule 16 (expression -> expression OR expression .)
    END             reduce using rule 16 (expression -> expression OR expression .)
    DO              reduce using rule 16 (expression -> expression OR expression .)
    RPAREN          reduce using rule 16 (expression -> expression OR expression .)
    ELSE            reduce using rule 16 (expression -> expression OR expression .)
    LESS_THEN       shift and go to state 14
    GREATER_THEN    shift and go to state 15
    LESS_EQUALS     shift and go to state 16
    GREATER_EQUALS  shift and go to state 17
    EQUALS          shift and go to state 18
    NOT_EQUALS      shift and go to state 19
    AND             shift and go to state 20
    NAND            shift and go to state 21
    XOR             shift and go to state 24
    EQ              shift and go to state 25
    NEQ             shift and go to state 26
    IMPL            shift and go to state 27
    PLUS            shift and go to state 28
    MINUS           shift and go to state 29
    TIMES           shift and go to state 30
    DIVIDE          shift and go to state 31

  ! LESS_THEN       [ reduce using rule 16 (expression -> expression OR expression .) ]
  ! GREATER_THEN    [ reduce using rule 16 (expression -> expression OR expression .) ]
  ! LESS_EQUALS     [ reduce using rule 16 (expression -> expression OR expression .) ]
  ! GREATER_EQUALS  [ reduce using rule 16 (expression -> expression OR expression .) ]
  ! EQUALS          [ reduce using rule 16 (expression -> expression OR expression .) ]
  ! NOT_EQUALS      [ reduce using rule 16 (expression -> expression OR expression .) ]
  ! AND             [ reduce using rule 16 (expression -> expression OR expression .) ]
  ! NAND            [ reduce using rule 16 (expression -> expression OR expression .) ]
  ! XOR             [ reduce using rule 16 (expression -> expression OR expression .) ]
  ! EQ              [ reduce using rule 16 (expression -> expression OR expression .) ]
  ! NEQ             [ reduce using rule 16 (expression -> expression OR expression .) ]
  ! IMPL            [ reduce using rule 16 (expression -> expression OR expression .) ]
  ! PLUS            [ reduce using rule 16 (expression -> expression OR expression .) ]
  ! MINUS           [ reduce using rule 16 (expression -> expression OR expression .) ]
  ! TIMES           [ reduce using rule 16 (expression -> expression OR expression .) ]
  ! DIVIDE          [ reduce using rule 16 (expression -> expression OR expression .) ]
  ! OR              [ shift and go to state 22 ]
  ! NOR             [ shift and go to state 23 ]


state 50

    (17) expression -> expression NOR expression .
    (1) expression -> expression . LESS_THEN expression
    (2) expression -> expression . GREATER_THEN expression
    (3) expression -> expression . LESS_EQUALS expression
    (4) expression -> expression . GREATER_EQUALS expression
    (5) expression -> expression . EQUALS expression
    (6) expression -> expression . NOT_EQUALS expression
    (14) expression -> expression . AND expression
    (15) expression -> expression . NAND expression
    (16) expression -> expression . OR expression
    (17) expression -> expression . NOR expression
    (18) expression -> expression . XOR expression
    (19) expression -> expression . EQ expression
    (20) expression -> expression . NEQ expression
    (21) expression -> expression . IMPL expression
    (28) expression -> expression . PLUS expression
    (29) expression -> expression . MINUS expression
    (30) expression -> expression . TIMES expression
    (31) expression -> expression . DIVIDE expression

    OR              reduce using rule 17 (expression -> expression NOR expression .)
    NOR             reduce using rule 17 (expression -> expression NOR expression .)
    $end            reduce using rule 17 (expression -> expression NOR expression .)
    SEPARATOR       reduce using rule 17 (expression -> expression NOR expression .)
    THEN            reduce using rule 17 (expression -> expression NOR expression .)
    END             reduce using rule 17 (expression -> expression NOR expression .)
    DO              reduce using rule 17 (expression -> expression NOR expression .)
    RPAREN          reduce using rule 17 (expression -> expression NOR expression .)
    ELSE            reduce using rule 17 (expression -> expression NOR expression .)
    LESS_THEN       shift and go to state 14
    GREATER_THEN    shift and go to state 15
    LESS_EQUALS     shift and go to state 16
    GREATER_EQUALS  shift and go to state 17
    EQUALS          shift and go to state 18
    NOT_EQUALS      shift and go to state 19
    AND             shift and go to state 20
    NAND            shift and go to state 21
    XOR             shift and go to state 24
    EQ              shift and go to state 25
    NEQ             shift and go to state 26
    IMPL            shift and go to state 27
    PLUS            shift and go to state 28
    MINUS           shift and go to state 29
    TIMES           shift and go to state 30
    DIVIDE          shift and go to state 31

  ! LESS_THEN       [ reduce using rule 17 (expression -> expression NOR expression .) ]
  ! GREATER_THEN    [ reduce using rule 17 (expression -> expression NOR expression .) ]
  ! LESS_EQUALS     [ reduce using rule 17 (expression -> expression NOR expression .) ]
  ! GREATER_EQUALS  [ reduce using rule 17 (expression -> expression NOR expression .) ]
  ! EQUALS          [ reduce using rule 17 (expression -> expression NOR expression .) ]
  ! NOT_EQUALS      [ reduce using rule 17 (expression -> expression NOR expression .) ]
  ! AND             [ reduce using rule 17 (expression -> expression NOR expression .) ]
  ! NAND            [ reduce using rule 17 (expression -> expression NOR expression .) ]
  ! XOR             [ reduce using rule 17 (expression -> expression NOR expression .) ]
  ! EQ              [ reduce using rule 17 (expression -> expression NOR expression .) ]
  ! NEQ             [ reduce using rule 17 (expression -> expression NOR expression .) ]
  ! IMPL            [ reduce using rule 17 (expression -> expression NOR expression .) ]
  ! PLUS            [ reduce using rule 17 (expression -> expression NOR expression .) ]
  ! MINUS           [ reduce using rule 17 (expression -> expression NOR expression .) ]
  ! TIMES           [ reduce using rule 17 (expression -> expression NOR expression .) ]
  ! DIVIDE          [ reduce using rule 17 (expression -> expression NOR expression .) ]
  ! OR              [ shift and go to state 22 ]
  ! NOR             [ shift and go to state 23 ]


state 51

    (18) expression -> expression XOR expression .
    (1) expression -> expression . LESS_THEN expression
    (2) expression -> expression . GREATER_THEN expression
    (3) expression -> expression . LESS_EQUALS expression
    (4) expression -> expression . GREATER_EQUALS expression
    (5) expression -> expression . EQUALS expression
    (6) expression -> expression . NOT_EQUALS expression
    (14) expression -> expression . AND expression
    (15) expression -> expression . NAND expression
    (16) expression -> expression . OR expression
    (17) expression -> expression . NOR expression
    (18) expression -> expression . XOR expression
    (19) expression -> expression . EQ expression
    (20) expression -> expression . NEQ expression
    (21) expression -> expression . IMPL expression
    (28) expression -> expression . PLUS expression
    (29) expression -> expression . MINUS expression
    (30) expression -> expression . TIMES expression
    (31) expression -> expression . DIVIDE expression

    AND             reduce using rule 18 (expression -> expression XOR expression .)
    NAND            reduce using rule 18 (expression -> expression XOR expression .)
    OR              reduce using rule 18 (expression -> expression XOR expression .)
    NOR             reduce using rule 18 (expression -> expression XOR expression .)
    XOR             reduce using rule 18 (expression -> expression XOR expression .)
    EQ              reduce using rule 18 (expression -> expression XOR expression .)
    NEQ             reduce using rule 18 (expression -> expression XOR expression .)
    IMPL            reduce using rule 18 (expression -> expression XOR expression .)
    $end            reduce using rule 18 (expression -> expression XOR expression .)
    SEPARATOR       reduce using rule 18 (expression -> expression XOR expression .)
    THEN            reduce using rule 18 (expression -> expression XOR expression .)
    END             reduce using rule 18 (expression -> expression XOR expression .)
    DO              reduce using rule 18 (expression -> expression XOR expression .)
    RPAREN          reduce using rule 18 (expression -> expression XOR expression .)
    ELSE            reduce using rule 18 (expression -> expression XOR expression .)
    LESS_THEN       shift and go to state 14
    GREATER_THEN    shift and go to state 15
    LESS_EQUALS     shift and go to state 16
    GREATER_EQUALS  shift and go to state 17
    EQUALS          shift and go to state 18
    NOT_EQUALS      shift and go to state 19
    PLUS            shift and go to state 28
    MINUS           shift and go to state 29
    TIMES           shift and go to state 30
    DIVIDE          shift and go to state 31

  ! LESS_THEN       [ reduce using rule 18 (expression -> expression XOR expression .) ]
  ! GREATER_THEN    [ reduce using rule 18 (expression -> expression XOR expression .) ]
  ! LESS_EQUALS     [ reduce using rule 18 (expression -> expression XOR expression .) ]
  ! GREATER_EQUALS  [ reduce using rule 18 (expression -> expression XOR expression .) ]
  ! EQUALS          [ reduce using rule 18 (expression -> expression XOR expression .) ]
  ! NOT_EQUALS      [ reduce using rule 18 (expression -> expression XOR expression .) ]
  ! PLUS            [ reduce using rule 18 (expression -> expression XOR expression .) ]
  ! MINUS           [ reduce using rule 18 (expression -> expression XOR expression .) ]
  ! TIMES           [ reduce using rule 18 (expression -> expression XOR expression .) ]
  ! DIVIDE          [ reduce using rule 18 (expression -> expression XOR expression .) ]
  ! AND             [ shift and go to state 20 ]
  ! NAND            [ shift and go to state 21 ]
  ! OR              [ shift and go to state 22 ]
  ! NOR             [ shift and go to state 23 ]
  ! XOR             [ shift and go to state 24 ]
  ! EQ              [ shift and go to state 25 ]
  ! NEQ             [ shift and go to state 26 ]
  ! IMPL            [ shift and go to state 27 ]


state 52

    (19) expression -> expression EQ expression .
    (1) expression -> expression . LESS_THEN expression
    (2) expression -> expression . GREATER_THEN expression
    (3) expression -> expression . LESS_EQUALS expression
    (4) expression -> expression . GREATER_EQUALS expression
    (5) expression -> expression . EQUALS expression
    (6) expression -> expression . NOT_EQUALS expression
    (14) expression -> expression . AND expression
    (15) expression -> expression . NAND expression
    (16) expression -> expression . OR expression
    (17) expression -> expression . NOR expression
    (18) expression -> expression . XOR expression
    (19) expression -> expression . EQ expression
    (20) expression -> expression . NEQ expression
    (21) expression -> expression . IMPL expression
    (28) expression -> expression . PLUS expression
    (29) expression -> expression . MINUS expression
    (30) expression -> expression . TIMES expression
    (31) expression -> expression . DIVIDE expression

    AND             reduce using rule 19 (expression -> expression EQ expression .)
    NAND            reduce using rule 19 (expression -> expression EQ expression .)
    OR              reduce using rule 19 (expression -> expression EQ expression .)
    NOR             reduce using rule 19 (expression -> expression EQ expression .)
    XOR             reduce using rule 19 (expression -> expression EQ expression .)
    EQ              reduce using rule 19 (expression -> expression EQ expression .)
    NEQ             reduce using rule 19 (expression -> expression EQ expression .)
    IMPL            reduce using rule 19 (expression -> expression EQ expression .)
    $end            reduce using rule 19 (expression -> expression EQ expression .)
    SEPARATOR       reduce using rule 19 (expression -> expression EQ expression .)
    THEN            reduce using rule 19 (expression -> expression EQ expression .)
    END             reduce using rule 19 (expression -> expression EQ expression .)
    DO              reduce using rule 19 (expression -> expression EQ expression .)
    RPAREN          reduce using rule 19 (expression -> expression EQ expression .)
    ELSE            reduce using rule 19 (expression -> expression EQ expression .)
    LESS_THEN       shift and go to state 14
    GREATER_THEN    shift and go to state 15
    LESS_EQUALS     shift and go to state 16
    GREATER_EQUALS  shift and go to state 17
    EQUALS          shift and go to state 18
    NOT_EQUALS      shift and go to state 19
    PLUS            shift and go to state 28
    MINUS           shift and go to state 29
    TIMES           shift and go to state 30
    DIVIDE          shift and go to state 31

  ! LESS_THEN       [ reduce using rule 19 (expression -> expression EQ expression .) ]
  ! GREATER_THEN    [ reduce using rule 19 (expression -> expression EQ expression .) ]
  ! LESS_EQUALS     [ reduce using rule 19 (expression -> expression EQ expression .) ]
  ! GREATER_EQUALS  [ reduce using rule 19 (expression -> expression EQ expression .) ]
  ! EQUALS          [ reduce using rule 19 (expression -> expression EQ expression .) ]
  ! NOT_EQUALS      [ reduce using rule 19 (expression -> expression EQ expression .) ]
  ! PLUS            [ reduce using rule 19 (expression -> expression EQ expression .) ]
  ! MINUS           [ reduce using rule 19 (expression -> expression EQ expression .) ]
  ! TIMES           [ reduce using rule 19 (expression -> expression EQ expression .) ]
  ! DIVIDE          [ reduce using rule 19 (expression -> expression EQ expression .) ]
  ! AND             [ shift and go to state 20 ]
  ! NAND            [ shift and go to state 21 ]
  ! OR              [ shift and go to state 22 ]
  ! NOR             [ shift and go to state 23 ]
  ! XOR             [ shift and go to state 24 ]
  ! EQ              [ shift and go to state 25 ]
  ! NEQ             [ shift and go to state 26 ]
  ! IMPL            [ shift and go to state 27 ]


state 53

    (20) expression -> expression NEQ expression .
    (1) expression -> expression . LESS_THEN expression
    (2) expression -> expression . GREATER_THEN expression
    (3) expression -> expression . LESS_EQUALS expression
    (4) expression -> expression . GREATER_EQUALS expression
    (5) expression -> expression . EQUALS expression
    (6) expression -> expression . NOT_EQUALS expression
    (14) expression -> expression . AND expression
    (15) expression -> expression . NAND expression
    (16) expression -> expression . OR expression
    (17) expression -> expression . NOR expression
    (18) expression -> expression . XOR expression
    (19) expression -> expression . EQ expression
    (20) expression -> expression . NEQ expression
    (21) expression -> expression . IMPL expression
    (28) expression -> expression . PLUS expression
    (29) expression -> expression . MINUS expression
    (30) expression -> expression . TIMES expression
    (31) expression -> expression . DIVIDE expression

    AND             reduce using rule 20 (expression -> expression NEQ expression .)
    NAND            reduce using rule 20 (expression -> expression NEQ expression .)
    OR              reduce using rule 20 (expression -> expression NEQ expression .)
    NOR             reduce using rule 20 (expression -> expression NEQ expression .)
    XOR             reduce using rule 20 (expression -> expression NEQ expression .)
    EQ              reduce using rule 20 (expression -> expression NEQ expression .)
    NEQ             reduce using rule 20 (expression -> expression NEQ expression .)
    IMPL            reduce using rule 20 (expression -> expression NEQ expression .)
    $end            reduce using rule 20 (expression -> expression NEQ expression .)
    SEPARATOR       reduce using rule 20 (expression -> expression NEQ expression .)
    THEN            reduce using rule 20 (expression -> expression NEQ expression .)
    END             reduce using rule 20 (expression -> expression NEQ expression .)
    DO              reduce using rule 20 (expression -> expression NEQ expression .)
    RPAREN          reduce using rule 20 (expression -> expression NEQ expression .)
    ELSE            reduce using rule 20 (expression -> expression NEQ expression .)
    LESS_THEN       shift and go to state 14
    GREATER_THEN    shift and go to state 15
    LESS_EQUALS     shift and go to state 16
    GREATER_EQUALS  shift and go to state 17
    EQUALS          shift and go to state 18
    NOT_EQUALS      shift and go to state 19
    PLUS            shift and go to state 28
    MINUS           shift and go to state 29
    TIMES           shift and go to state 30
    DIVIDE          shift and go to state 31

  ! LESS_THEN       [ reduce using rule 20 (expression -> expression NEQ expression .) ]
  ! GREATER_THEN    [ reduce using rule 20 (expression -> expression NEQ expression .) ]
  ! LESS_EQUALS     [ reduce using rule 20 (expression -> expression NEQ expression .) ]
  ! GREATER_EQUALS  [ reduce using rule 20 (expression -> expression NEQ expression .) ]
  ! EQUALS          [ reduce using rule 20 (expression -> expression NEQ expression .) ]
  ! NOT_EQUALS      [ reduce using rule 20 (expression -> expression NEQ expression .) ]
  ! PLUS            [ reduce using rule 20 (expression -> expression NEQ expression .) ]
  ! MINUS           [ reduce using rule 20 (expression -> expression NEQ expression .) ]
  ! TIMES           [ reduce using rule 20 (expression -> expression NEQ expression .) ]
  ! DIVIDE          [ reduce using rule 20 (expression -> expression NEQ expression .) ]
  ! AND             [ shift and go to state 20 ]
  ! NAND            [ shift and go to state 21 ]
  ! OR              [ shift and go to state 22 ]
  ! NOR             [ shift and go to state 23 ]
  ! XOR             [ shift and go to state 24 ]
  ! EQ              [ shift and go to state 25 ]
  ! NEQ             [ shift and go to state 26 ]
  ! IMPL            [ shift and go to state 27 ]


state 54

    (21) expression -> expression IMPL expression .
    (1) expression -> expression . LESS_THEN expression
    (2) expression -> expression . GREATER_THEN expression
    (3) expression -> expression . LESS_EQUALS expression
    (4) expression -> expression . GREATER_EQUALS expression
    (5) expression -> expression . EQUALS expression
    (6) expression -> expression . NOT_EQUALS expression
    (14) expression -> expression . AND expression
    (15) expression -> expression . NAND expression
    (16) expression -> expression . OR expression
    (17) expression -> expression . NOR expression
    (18) expression -> expression . XOR expression
    (19) expression -> expression . EQ expression
    (20) expression -> expression . NEQ expression
    (21) expression -> expression . IMPL expression
    (28) expression -> expression . PLUS expression
    (29) expression -> expression . MINUS expression
    (30) expression -> expression . TIMES expression
    (31) expression -> expression . DIVIDE expression

    AND             reduce using rule 21 (expression -> expression IMPL expression .)
    NAND            reduce using rule 21 (expression -> expression IMPL expression .)
    OR              reduce using rule 21 (expression -> expression IMPL expression .)
    NOR             reduce using rule 21 (expression -> expression IMPL expression .)
    XOR             reduce using rule 21 (expression -> expression IMPL expression .)
    EQ              reduce using rule 21 (expression -> expression IMPL expression .)
    NEQ             reduce using rule 21 (expression -> expression IMPL expression .)
    IMPL            reduce using rule 21 (expression -> expression IMPL expression .)
    $end            reduce using rule 21 (expression -> expression IMPL expression .)
    SEPARATOR       reduce using rule 21 (expression -> expression IMPL expression .)
    THEN            reduce using rule 21 (expression -> expression IMPL expression .)
    END             reduce using rule 21 (expression -> expression IMPL expression .)
    DO              reduce using rule 21 (expression -> expression IMPL expression .)
    RPAREN          reduce using rule 21 (expression -> expression IMPL expression .)
    ELSE            reduce using rule 21 (expression -> expression IMPL expression .)
    LESS_THEN       shift and go to state 14
    GREATER_THEN    shift and go to state 15
    LESS_EQUALS     shift and go to state 16
    GREATER_EQUALS  shift and go to state 17
    EQUALS          shift and go to state 18
    NOT_EQUALS      shift and go to state 19
    PLUS            shift and go to state 28
    MINUS           shift and go to state 29
    TIMES           shift and go to state 30
    DIVIDE          shift and go to state 31

  ! LESS_THEN       [ reduce using rule 21 (expression -> expression IMPL expression .) ]
  ! GREATER_THEN    [ reduce using rule 21 (expression -> expression IMPL expression .) ]
  ! LESS_EQUALS     [ reduce using rule 21 (expression -> expression IMPL expression .) ]
  ! GREATER_EQUALS  [ reduce using rule 21 (expression -> expression IMPL expression .) ]
  ! EQUALS          [ reduce using rule 21 (expression -> expression IMPL expression .) ]
  ! NOT_EQUALS      [ reduce using rule 21 (expression -> expression IMPL expression .) ]
  ! PLUS            [ reduce using rule 21 (expression -> expression IMPL expression .) ]
  ! MINUS           [ reduce using rule 21 (expression -> expression IMPL expression .) ]
  ! TIMES           [ reduce using rule 21 (expression -> expression IMPL expression .) ]
  ! DIVIDE          [ reduce using rule 21 (expression -> expression IMPL expression .) ]
  ! AND             [ shift and go to state 20 ]
  ! NAND            [ shift and go to state 21 ]
  ! OR              [ shift and go to state 22 ]
  ! NOR             [ shift and go to state 23 ]
  ! XOR             [ shift and go to state 24 ]
  ! EQ              [ shift and go to state 25 ]
  ! NEQ             [ shift and go to state 26 ]
  ! IMPL            [ shift and go to state 27 ]


state 55

    (28) expression -> expression PLUS expression .
    (1) expression -> expression . LESS_THEN expression
    (2) expression -> expression . GREATER_THEN expression
    (3) expression -> expression . LESS_EQUALS expression
    (4) expression -> expression . GREATER_EQUALS expression
    (5) expression -> expression . EQUALS expression
    (6) expression -> expression . NOT_EQUALS expression
    (14) expression -> expression . AND expression
    (15) expression -> expression . NAND expression
    (16) expression -> expression . OR expression
    (17) expression -> expression . NOR expression
    (18) expression -> expression . XOR expression
    (19) expression -> expression . EQ expression
    (20) expression -> expression . NEQ expression
    (21) expression -> expression . IMPL expression
    (28) expression -> expression . PLUS expression
    (29) expression -> expression . MINUS expression
    (30) expression -> expression . TIMES expression
    (31) expression -> expression . DIVIDE expression

    LESS_THEN       reduce using rule 28 (expression -> expression PLUS expression .)
    GREATER_THEN    reduce using rule 28 (expression -> expression PLUS expression .)
    LESS_EQUALS     reduce using rule 28 (expression -> expression PLUS expression .)
    GREATER_EQUALS  reduce using rule 28 (expression -> expression PLUS expression .)
    EQUALS          reduce using rule 28 (expression -> expression PLUS expression .)
    NOT_EQUALS      reduce using rule 28 (expression -> expression PLUS expression .)
    AND             reduce using rule 28 (expression -> expression PLUS expression .)
    NAND            reduce using rule 28 (expression -> expression PLUS expression .)
    OR              reduce using rule 28 (expression -> expression PLUS expression .)
    NOR             reduce using rule 28 (expression -> expression PLUS expression .)
    XOR             reduce using rule 28 (expression -> expression PLUS expression .)
    EQ              reduce using rule 28 (expression -> expression PLUS expression .)
    NEQ             reduce using rule 28 (expression -> expression PLUS expression .)
    IMPL            reduce using rule 28 (expression -> expression PLUS expression .)
    PLUS            reduce using rule 28 (expression -> expression PLUS expression .)
    MINUS           reduce using rule 28 (expression -> expression PLUS expression .)
    $end            reduce using rule 28 (expression -> expression PLUS expression .)
    SEPARATOR       reduce using rule 28 (expression -> expression PLUS expression .)
    THEN            reduce using rule 28 (expression -> expression PLUS expression .)
    END             reduce using rule 28 (expression -> expression PLUS expression .)
    DO              reduce using rule 28 (expression -> expression PLUS expression .)
    RPAREN          reduce using rule 28 (expression -> expression PLUS expression .)
    ELSE            reduce using rule 28 (expression -> expression PLUS expression .)
    TIMES           shift and go to state 30
    DIVIDE          shift and go to state 31

  ! TIMES           [ reduce using rule 28 (expression -> expression PLUS expression .) ]
  ! DIVIDE          [ reduce using rule 28 (expression -> expression PLUS expression .) ]
  ! LESS_THEN       [ shift and go to state 14 ]
  ! GREATER_THEN    [ shift and go to state 15 ]
  ! LESS_EQUALS     [ shift and go to state 16 ]
  ! GREATER_EQUALS  [ shift and go to state 17 ]
  ! EQUALS          [ shift and go to state 18 ]
  ! NOT_EQUALS      [ shift and go to state 19 ]
  ! AND             [ shift and go to state 20 ]
  ! NAND            [ shift and go to state 21 ]
  ! OR              [ shift and go to state 22 ]
  ! NOR             [ shift and go to state 23 ]
  ! XOR             [ shift and go to state 24 ]
  ! EQ              [ shift and go to state 25 ]
  ! NEQ             [ shift and go to state 26 ]
  ! IMPL            [ shift and go to state 27 ]
  ! PLUS            [ shift and go to state 28 ]
  ! MINUS           [ shift and go to state 29 ]


state 56

    (29) expression -> expression MINUS expression .
    (1) expression -> expression . LESS_THEN expression
    (2) expression -> expression . GREATER_THEN expression
    (3) expression -> expression . LESS_EQUALS expression
    (4) expression -> expression . GREATER_EQUALS expression
    (5) expression -> expression . EQUALS expression
    (6) expression -> expression . NOT_EQUALS expression
    (14) expression -> expression . AND expression
    (15) expression -> expression . NAND expression
    (16) expression -> expression . OR expression
    (17) expression -> expression . NOR expression
    (18) expression -> expression . XOR expression
    (19) expression -> expression . EQ expression
    (20) expression -> expression . NEQ expression
    (21) expression -> expression . IMPL expression
    (28) expression -> expression . PLUS expression
    (29) expression -> expression . MINUS expression
    (30) expression -> expression . TIMES expression
    (31) expression -> expression . DIVIDE expression

    LESS_THEN       reduce using rule 29 (expression -> expression MINUS expression .)
    GREATER_THEN    reduce using rule 29 (expression -> expression MINUS expression .)
    LESS_EQUALS     reduce using rule 29 (expression -> expression MINUS expression .)
    GREATER_EQUALS  reduce using rule 29 (expression -> expression MINUS expression .)
    EQUALS          reduce using rule 29 (expression -> expression MINUS expression .)
    NOT_EQUALS      reduce using rule 29 (expression -> expression MINUS expression .)
    AND             reduce using rule 29 (expression -> expression MINUS expression .)
    NAND            reduce using rule 29 (expression -> expression MINUS expression .)
    OR              reduce using rule 29 (expression -> expression MINUS expression .)
    NOR             reduce using rule 29 (expression -> expression MINUS expression .)
    XOR             reduce using rule 29 (expression -> expression MINUS expression .)
    EQ              reduce using rule 29 (expression -> expression MINUS expression .)
    NEQ             reduce using rule 29 (expression -> expression MINUS expression .)
    IMPL            reduce using rule 29 (expression -> expression MINUS expression .)
    PLUS            reduce using rule 29 (expression -> expression MINUS expression .)
    MINUS           reduce using rule 29 (expression -> expression MINUS expression .)
    $end            reduce using rule 29 (expression -> expression MINUS expression .)
    SEPARATOR       reduce using rule 29 (expression -> expression MINUS expression .)
    THEN            reduce using rule 29 (expression -> expression MINUS expression .)
    END             reduce using rule 29 (expression -> expression MINUS expression .)
    DO              reduce using rule 29 (expression -> expression MINUS expression .)
    RPAREN          reduce using rule 29 (expression -> expression MINUS expression .)
    ELSE            reduce using rule 29 (expression -> expression MINUS expression .)
    TIMES           shift and go to state 30
    DIVIDE          shift and go to state 31

  ! TIMES           [ reduce using rule 29 (expression -> expression MINUS expression .) ]
  ! DIVIDE          [ reduce using rule 29 (expression -> expression MINUS expression .) ]
  ! LESS_THEN       [ shift and go to state 14 ]
  ! GREATER_THEN    [ shift and go to state 15 ]
  ! LESS_EQUALS     [ shift and go to state 16 ]
  ! GREATER_EQUALS  [ shift and go to state 17 ]
  ! EQUALS          [ shift and go to state 18 ]
  ! NOT_EQUALS      [ shift and go to state 19 ]
  ! AND             [ shift and go to state 20 ]
  ! NAND            [ shift and go to state 21 ]
  ! OR              [ shift and go to state 22 ]
  ! NOR             [ shift and go to state 23 ]
  ! XOR             [ shift and go to state 24 ]
  ! EQ              [ shift and go to state 25 ]
  ! NEQ             [ shift and go to state 26 ]
  ! IMPL            [ shift and go to state 27 ]
  ! PLUS            [ shift and go to state 28 ]
  ! MINUS           [ shift and go to state 29 ]


state 57

    (30) expression -> expression TIMES expression .
    (1) expression -> expression . LESS_THEN expression
    (2) expression -> expression . GREATER_THEN expression
    (3) expression -> expression . LESS_EQUALS expression
    (4) expression -> expression . GREATER_EQUALS expression
    (5) expression -> expression . EQUALS expression
    (6) expression -> expression . NOT_EQUALS expression
    (14) expression -> expression . AND expression
    (15) expression -> expression . NAND expression
    (16) expression -> expression . OR expression
    (17) expression -> expression . NOR expression
    (18) expression -> expression . XOR expression
    (19) expression -> expression . EQ expression
    (20) expression -> expression . NEQ expression
    (21) expression -> expression . IMPL expression
    (28) expression -> expression . PLUS expression
    (29) expression -> expression . MINUS expression
    (30) expression -> expression . TIMES expression
    (31) expression -> expression . DIVIDE expression

    LESS_THEN       reduce using rule 30 (expression -> expression TIMES expression .)
    GREATER_THEN    reduce using rule 30 (expression -> expression TIMES expression .)
    LESS_EQUALS     reduce using rule 30 (expression -> expression TIMES expression .)
    GREATER_EQUALS  reduce using rule 30 (expression -> expression TIMES expression .)
    EQUALS          reduce using rule 30 (expression -> expression TIMES expression .)
    NOT_EQUALS      reduce using rule 30 (expression -> expression TIMES expression .)
    AND             reduce using rule 30 (expression -> expression TIMES expression .)
    NAND            reduce using rule 30 (expression -> expression TIMES expression .)
    OR              reduce using rule 30 (expression -> expression TIMES expression .)
    NOR             reduce using rule 30 (expression -> expression TIMES expression .)
    XOR             reduce using rule 30 (expression -> expression TIMES expression .)
    EQ              reduce using rule 30 (expression -> expression TIMES expression .)
    NEQ             reduce using rule 30 (expression -> expression TIMES expression .)
    IMPL            reduce using rule 30 (expression -> expression TIMES expression .)
    PLUS            reduce using rule 30 (expression -> expression TIMES expression .)
    MINUS           reduce using rule 30 (expression -> expression TIMES expression .)
    TIMES           reduce using rule 30 (expression -> expression TIMES expression .)
    DIVIDE          reduce using rule 30 (expression -> expression TIMES expression .)
    $end            reduce using rule 30 (expression -> expression TIMES expression .)
    SEPARATOR       reduce using rule 30 (expression -> expression TIMES expression .)
    THEN            reduce using rule 30 (expression -> expression TIMES expression .)
    END             reduce using rule 30 (expression -> expression TIMES expression .)
    DO              reduce using rule 30 (expression -> expression TIMES expression .)
    RPAREN          reduce using rule 30 (expression -> expression TIMES expression .)
    ELSE            reduce using rule 30 (expression -> expression TIMES expression .)

  ! LESS_THEN       [ shift and go to state 14 ]
  ! GREATER_THEN    [ shift and go to state 15 ]
  ! LESS_EQUALS     [ shift and go to state 16 ]
  ! GREATER_EQUALS  [ shift and go to state 17 ]
  ! EQUALS          [ shift and go to state 18 ]
  ! NOT_EQUALS      [ shift and go to state 19 ]
  ! AND             [ shift and go to state 20 ]
  ! NAND            [ shift and go to state 21 ]
  ! OR              [ shift and go to state 22 ]
  ! NOR             [ shift and go to state 23 ]
  ! XOR             [ shift and go to state 24 ]
  ! EQ              [ shift and go to state 25 ]
  ! NEQ             [ shift and go to state 26 ]
  ! IMPL            [ shift and go to state 27 ]
  ! PLUS            [ shift and go to state 28 ]
  ! MINUS           [ shift and go to state 29 ]
  ! TIMES           [ shift and go to state 30 ]
  ! DIVIDE          [ shift and go to state 31 ]


state 58

    (31) expression -> expression DIVIDE expression .
    (1) expression -> expression . LESS_THEN expression
    (2) expression -> expression . GREATER_THEN expression
    (3) expression -> expression . LESS_EQUALS expression
    (4) expression -> expression . GREATER_EQUALS expression
    (5) expression -> expression . EQUALS expression
    (6) expression -> expression . NOT_EQUALS expression
    (14) expression -> expression . AND expression
    (15) expression -> expression . NAND expression
    (16) expression -> expression . OR expression
    (17) expression -> expression . NOR expression
    (18) expression -> expression . XOR expression
    (19) expression -> expression . EQ expression
    (20) expression -> expression . NEQ expression
    (21) expression -> expression . IMPL expression
    (28) expression -> expression . PLUS expression
    (29) expression -> expression . MINUS expression
    (30) expression -> expression . TIMES expression
    (31) expression -> expression . DIVIDE expression

    LESS_THEN       reduce using rule 31 (expression -> expression DIVIDE expression .)
    GREATER_THEN    reduce using rule 31 (expression -> expression DIVIDE expression .)
    LESS_EQUALS     reduce using rule 31 (expression -> expression DIVIDE expression .)
    GREATER_EQUALS  reduce using rule 31 (expression -> expression DIVIDE expression .)
    EQUALS          reduce using rule 31 (expression -> expression DIVIDE expression .)
    NOT_EQUALS      reduce using rule 31 (expression -> expression DIVIDE expression .)
    AND             reduce using rule 31 (expression -> expression DIVIDE expression .)
    NAND            reduce using rule 31 (expression -> expression DIVIDE expression .)
    OR              reduce using rule 31 (expression -> expression DIVIDE expression .)
    NOR             reduce using rule 31 (expression -> expression DIVIDE expression .)
    XOR             reduce using rule 31 (expression -> expression DIVIDE expression .)
    EQ              reduce using rule 31 (expression -> expression DIVIDE expression .)
    NEQ             reduce using rule 31 (expression -> expression DIVIDE expression .)
    IMPL            reduce using rule 31 (expression -> expression DIVIDE expression .)
    PLUS            reduce using rule 31 (expression -> expression DIVIDE expression .)
    MINUS           reduce using rule 31 (expression -> expression DIVIDE expression .)
    TIMES           reduce using rule 31 (expression -> expression DIVIDE expression .)
    DIVIDE          reduce using rule 31 (expression -> expression DIVIDE expression .)
    $end            reduce using rule 31 (expression -> expression DIVIDE expression .)
    SEPARATOR       reduce using rule 31 (expression -> expression DIVIDE expression .)
    THEN            reduce using rule 31 (expression -> expression DIVIDE expression .)
    END             reduce using rule 31 (expression -> expression DIVIDE expression .)
    DO              reduce using rule 31 (expression -> expression DIVIDE expression .)
    RPAREN          reduce using rule 31 (expression -> expression DIVIDE expression .)
    ELSE            reduce using rule 31 (expression -> expression DIVIDE expression .)

  ! LESS_THEN       [ shift and go to state 14 ]
  ! GREATER_THEN    [ shift and go to state 15 ]
  ! LESS_EQUALS     [ shift and go to state 16 ]
  ! GREATER_EQUALS  [ shift and go to state 17 ]
  ! EQUALS          [ shift and go to state 18 ]
  ! NOT_EQUALS      [ shift and go to state 19 ]
  ! AND             [ shift and go to state 20 ]
  ! NAND            [ shift and go to state 21 ]
  ! OR              [ shift and go to state 22 ]
  ! NOR             [ shift and go to state 23 ]
  ! XOR             [ shift and go to state 24 ]
  ! EQ              [ shift and go to state 25 ]
  ! NEQ             [ shift and go to state 26 ]
  ! IMPL            [ shift and go to state 27 ]
  ! PLUS            [ shift and go to state 28 ]
  ! MINUS           [ shift and go to state 29 ]
  ! TIMES           [ shift and go to state 30 ]
  ! DIVIDE          [ shift and go to state 31 ]


state 59

    (7) expression -> FOR expression SEPARATOR . expression SEPARATOR expression DO expression
    (1) expression -> . expression LESS_THEN expression
    (2) expression -> . expression GREATER_THEN expression
    (3) expression -> . expression LESS_EQUALS expression
    (4) expression -> . expression GREATER_EQUALS expression
    (5) expression -> . expression EQUALS expression
    (6) expression -> . expression NOT_EQUALS expression
    (7) expression -> . FOR expression SEPARATOR expression SEPARATOR expression DO expression
    (8) expression -> . IDENTIFIER
    (9) expression -> . NOT expression
    (10) expression -> . IF expression THEN expression
    (11) expression -> . BEGIN body END
    (12) expression -> . LOOP expression DO expression
    (13) expression -> . IDENTIFIER ASSIGN expression
    (14) expression -> . expression AND expression
    (15) expression -> . expression NAND expression
    (16) expression -> . expression OR expression
    (17) expression -> . expression NOR expression
    (18) expression -> . expression XOR expression
    (19) expression -> . expression EQ expression
    (20) expression -> . expression NEQ expression
    (21) expression -> . expression IMPL expression
    (22) expression -> . IF expression THEN expression ELSE expression
    (25) expression -> . NUMBER
    (26) expression -> . FLOAT
    (27) expression -> . MINUS expression
    (28) expression -> . expression PLUS expression
    (29) expression -> . expression MINUS expression
    (30) expression -> . expression TIMES expression
    (31) expression -> . expression DIVIDE expression
    (32) expression -> . TRUE
    (33) expression -> . FALSE
    (34) expression -> . LPAREN expression RPAREN

    FOR             shift and go to state 2
    IDENTIFIER      shift and go to state 3
    NOT             shift and go to state 4
    IF              shift and go to state 5
    BEGIN           shift and go to state 6
    LOOP            shift and go to state 7
    NUMBER          shift and go to state 8
    FLOAT           shift and go to state 9
    MINUS           shift and go to state 10
    TRUE            shift and go to state 11
    FALSE           shift and go to state 12
    LPAREN          shift and go to state 13

    expression                     shift and go to state 66

state 60

    (13) expression -> IDENTIFIER ASSIGN expression .
    (1) expression -> expression . LESS_THEN expression
    (2) expression -> expression . GREATER_THEN expression
    (3) expression -> expression . LESS_EQUALS expression
    (4) expression -> expression . GREATER_EQUALS expression
    (5) expression -> expression . EQUALS expression
    (6) expression -> expression . NOT_EQUALS expression
    (14) expression -> expression . AND expression
    (15) expression -> expression . NAND expression
    (16) expression -> expression . OR expression
    (17) expression -> expression . NOR expression
    (18) expression -> expression . XOR expression
    (19) expression -> expression . EQ expression
    (20) expression -> expression . NEQ expression
    (21) expression -> expression . IMPL expression
    (28) expression -> expression . PLUS expression
    (29) expression -> expression . MINUS expression
    (30) expression -> expression . TIMES expression
    (31) expression -> expression . DIVIDE expression

    $end            reduce using rule 13 (expression -> IDENTIFIER ASSIGN expression .)
    SEPARATOR       reduce using rule 13 (expression -> IDENTIFIER ASSIGN expression .)
    THEN            reduce using rule 13 (expression -> IDENTIFIER ASSIGN expression .)
    END             reduce using rule 13 (expression -> IDENTIFIER ASSIGN expression .)
    DO              reduce using rule 13 (expression -> IDENTIFIER ASSIGN expression .)
    RPAREN          reduce using rule 13 (expression -> IDENTIFIER ASSIGN expression .)
    ELSE            reduce using rule 13 (expression -> IDENTIFIER ASSIGN expression .)
    LESS_THEN       shift and go to state 14
    GREATER_THEN    shift and go to state 15
    LESS_EQUALS     shift and go to state 16
    GREATER_EQUALS  shift and go to state 17
    EQUALS          shift and go to state 18
    NOT_EQUALS      shift and go to state 19
    AND             shift and go to state 20
    NAND            shift and go to state 21
    OR              shift and go to state 22
    NOR             shift and go to state 23
    XOR             shift and go to state 24
    EQ              shift and go to state 25
    NEQ             shift and go to state 26
    IMPL            shift and go to state 27
    PLUS            shift and go to state 28
    MINUS           shift and go to state 29
    TIMES           shift and go to state 30
    DIVIDE          shift and go to state 31

  ! LESS_THEN       [ reduce using rule 13 (expression -> IDENTIFIER ASSIGN expression .) ]
  ! GREATER_THEN    [ reduce using rule 13 (expression -> IDENTIFIER ASSIGN expression .) ]
  ! LESS_EQUALS     [ reduce using rule 13 (expression -> IDENTIFIER ASSIGN expression .) ]
  ! GREATER_EQUALS  [ reduce using rule 13 (expression -> IDENTIFIER ASSIGN expression .) ]
  ! EQUALS          [ reduce using rule 13 (expression -> IDENTIFIER ASSIGN expression .) ]
  ! NOT_EQUALS      [ reduce using rule 13 (expression -> IDENTIFIER ASSIGN expression .) ]
  ! AND             [ reduce using rule 13 (expression -> IDENTIFIER ASSIGN expression .) ]
  ! NAND            [ reduce using rule 13 (expression -> IDENTIFIER ASSIGN expression .) ]
  ! OR              [ reduce using rule 13 (expression -> IDENTIFIER ASSIGN expression .) ]
  ! NOR             [ reduce using rule 13 (expression -> IDENTIFIER ASSIGN expression .) ]
  ! XOR             [ reduce using rule 13 (expression -> IDENTIFIER ASSIGN expression .) ]
  ! EQ              [ reduce using rule 13 (expression -> IDENTIFIER ASSIGN expression .) ]
  ! NEQ             [ reduce using rule 13 (expression -> IDENTIFIER ASSIGN expression .) ]
  ! IMPL            [ reduce using rule 13 (expression -> IDENTIFIER ASSIGN expression .) ]
  ! PLUS            [ reduce using rule 13 (expression -> IDENTIFIER ASSIGN expression .) ]
  ! MINUS           [ reduce using rule 13 (expression -> IDENTIFIER ASSIGN expression .) ]
  ! TIMES           [ reduce using rule 13 (expression -> IDENTIFIER ASSIGN expression .) ]
  ! DIVIDE          [ reduce using rule 13 (expression -> IDENTIFIER ASSIGN expression .) ]


state 61

    (10) expression -> IF expression THEN . expression
    (22) expression -> IF expression THEN . expression ELSE expression
    (1) expression -> . expression LESS_THEN expression
    (2) expression -> . expression GREATER_THEN expression
    (3) expression -> . expression LESS_EQUALS expression
    (4) expression -> . expression GREATER_EQUALS expression
    (5) expression -> . expression EQUALS expression
    (6) expression -> . expression NOT_EQUALS expression
    (7) expression -> . FOR expression SEPARATOR expression SEPARATOR expression DO expression
    (8) expression -> . IDENTIFIER
    (9) expression -> . NOT expression
    (10) expression -> . IF expression THEN expression
    (11) expression -> . BEGIN body END
    (12) expression -> . LOOP expression DO expression
    (13) expression -> . IDENTIFIER ASSIGN expression
    (14) expression -> . expression AND expression
    (15) expression -> . expression NAND expression
    (16) expression -> . expression OR expression
    (17) expression -> . expression NOR expression
    (18) expression -> . expression XOR expression
    (19) expression -> . expression EQ expression
    (20) expression -> . expression NEQ expression
    (21) expression -> . expression IMPL expression
    (22) expression -> . IF expression THEN expression ELSE expression
    (25) expression -> . NUMBER
    (26) expression -> . FLOAT
    (27) expression -> . MINUS expression
    (28) expression -> . expression PLUS expression
    (29) expression -> . expression MINUS expression
    (30) expression -> . expression TIMES expression
    (31) expression -> . expression DIVIDE expression
    (32) expression -> . TRUE
    (33) expression -> . FALSE
    (34) expression -> . LPAREN expression RPAREN

    FOR             shift and go to state 2
    IDENTIFIER      shift and go to state 3
    NOT             shift and go to state 4
    IF              shift and go to state 5
    BEGIN           shift and go to state 6
    LOOP            shift and go to state 7
    NUMBER          shift and go to state 8
    FLOAT           shift and go to state 9
    MINUS           shift and go to state 10
    TRUE            shift and go to state 11
    FALSE           shift and go to state 12
    LPAREN          shift and go to state 13

    expression                     shift and go to state 67

state 62

    (11) expression -> BEGIN body END .

    LESS_THEN       reduce using rule 11 (expression -> BEGIN body END .)
    GREATER_THEN    reduce using rule 11 (expression -> BEGIN body END .)
    LESS_EQUALS     reduce using rule 11 (expression -> BEGIN body END .)
    GREATER_EQUALS  reduce using rule 11 (expression -> BEGIN body END .)
    EQUALS          reduce using rule 11 (expression -> BEGIN body END .)
    NOT_EQUALS      reduce using rule 11 (expression -> BEGIN body END .)
    AND             reduce using rule 11 (expression -> BEGIN body END .)
    NAND            reduce using rule 11 (expression -> BEGIN body END .)
    OR              reduce using rule 11 (expression -> BEGIN body END .)
    NOR             reduce using rule 11 (expression -> BEGIN body END .)
    XOR             reduce using rule 11 (expression -> BEGIN body END .)
    EQ              reduce using rule 11 (expression -> BEGIN body END .)
    NEQ             reduce using rule 11 (expression -> BEGIN body END .)
    IMPL            reduce using rule 11 (expression -> BEGIN body END .)
    PLUS            reduce using rule 11 (expression -> BEGIN body END .)
    MINUS           reduce using rule 11 (expression -> BEGIN body END .)
    TIMES           reduce using rule 11 (expression -> BEGIN body END .)
    DIVIDE          reduce using rule 11 (expression -> BEGIN body END .)
    $end            reduce using rule 11 (expression -> BEGIN body END .)
    SEPARATOR       reduce using rule 11 (expression -> BEGIN body END .)
    THEN            reduce using rule 11 (expression -> BEGIN body END .)
    END             reduce using rule 11 (expression -> BEGIN body END .)
    DO              reduce using rule 11 (expression -> BEGIN body END .)
    RPAREN          reduce using rule 11 (expression -> BEGIN body END .)
    ELSE            reduce using rule 11 (expression -> BEGIN body END .)


state 63

    (24) body -> body SEPARATOR . expression
    (1) expression -> . expression LESS_THEN expression
    (2) expression -> . expression GREATER_THEN expression
    (3) expression -> . expression LESS_EQUALS expression
    (4) expression -> . expression GREATER_EQUALS expression
    (5) expression -> . expression EQUALS expression
    (6) expression -> . expression NOT_EQUALS expression
    (7) expression -> . FOR expression SEPARATOR expression SEPARATOR expression DO expression
    (8) expression -> . IDENTIFIER
    (9) expression -> . NOT expression
    (10) expression -> . IF expression THEN expression
    (11) expression -> . BEGIN body END
    (12) expression -> . LOOP expression DO expression
    (13) expression -> . IDENTIFIER ASSIGN expression
    (14) expression -> . expression AND expression
    (15) expression -> . expression NAND expression
    (16) expression -> . expression OR expression
    (17) expression -> . expression NOR expression
    (18) expression -> . expression XOR expression
    (19) expression -> . expression EQ expression
    (20) expression -> . expression NEQ expression
    (21) expression -> . expression IMPL expression
    (22) expression -> . IF expression THEN expression ELSE expression
    (25) expression -> . NUMBER
    (26) expression -> . FLOAT
    (27) expression -> . MINUS expression
    (28) expression -> . expression PLUS expression
    (29) expression -> . expression MINUS expression
    (30) expression -> . expression TIMES expression
    (31) expression -> . expression DIVIDE expression
    (32) expression -> . TRUE
    (33) expression -> . FALSE
    (34) expression -> . LPAREN expression RPAREN

    FOR             shift and go to state 2
    IDENTIFIER      shift and go to state 3
    NOT             shift and go to state 4
    IF              shift and go to state 5
    BEGIN           shift and go to state 6
    LOOP            shift and go to state 7
    NUMBER          shift and go to state 8
    FLOAT           shift and go to state 9
    MINUS           shift and go to state 10
    TRUE            shift and go to state 11
    FALSE           shift and go to state 12
    LPAREN          shift and go to state 13

    expression                     shift and go to state 68

state 64

    (12) expression -> LOOP expression DO . expression
    (1) expression -> . expression LESS_THEN expression
    (2) expression -> . expression GREATER_THEN expression
    (3) expression -> . expression LESS_EQUALS expression
    (4) expression -> . expression GREATER_EQUALS expression
    (5) expression -> . expression EQUALS expression
    (6) expression -> . expression NOT_EQUALS expression
    (7) expression -> . FOR expression SEPARATOR expression SEPARATOR expression DO expression
    (8) expression -> . IDENTIFIER
    (9) expression -> . NOT expression
    (10) expression -> . IF expression THEN expression
    (11) expression -> . BEGIN body END
    (12) expression -> . LOOP expression DO expression
    (13) expression -> . IDENTIFIER ASSIGN expression
    (14) expression -> . expression AND expression
    (15) expression -> . expression NAND expression
    (16) expression -> . expression OR expression
    (17) expression -> . expression NOR expression
    (18) expression -> . expression XOR expression
    (19) expression -> . expression EQ expression
    (20) expression -> . expression NEQ expression
    (21) expression -> . expression IMPL expression
    (22) expression -> . IF expression THEN expression ELSE expression
    (25) expression -> . NUMBER
    (26) expression -> . FLOAT
    (27) expression -> . MINUS expression
    (28) expression -> . expression PLUS expression
    (29) expression -> . expression MINUS expression
    (30) expression -> . expression TIMES expression
    (31) expression -> . expression DIVIDE expression
    (32) expression -> . TRUE
    (33) expression -> . FALSE
    (34) expression -> . LPAREN expression RPAREN

    FOR             shift and go to state 2
    IDENTIFIER      shift and go to state 3
    NOT             shift and go to state 4
    IF              shift and go to state 5
    BEGIN           shift and go to state 6
    LOOP            shift and go to state 7
    NUMBER          shift and go to state 8
    FLOAT           shift and go to state 9
    MINUS           shift and go to state 10
    TRUE            shift and go to state 11
    FALSE           shift and go to state 12
    LPAREN          shift and go to state 13

    expression                     shift and go to state 69

state 65

    (34) expression -> LPAREN expression RPAREN .

    LESS_THEN       reduce using rule 34 (expression -> LPAREN expression RPAREN .)
    GREATER_THEN    reduce using rule 34 (expression -> LPAREN expression RPAREN .)
    LESS_EQUALS     reduce using rule 34 (expression -> LPAREN expression RPAREN .)
    GREATER_EQUALS  reduce using rule 34 (expression -> LPAREN expression RPAREN .)
    EQUALS          reduce using rule 34 (expression -> LPAREN expression RPAREN .)
    NOT_EQUALS      reduce using rule 34 (expression -> LPAREN expression RPAREN .)
    AND             reduce using rule 34 (expression -> LPAREN expression RPAREN .)
    NAND            reduce using rule 34 (expression -> LPAREN expression RPAREN .)
    OR              reduce using rule 34 (expression -> LPAREN expression RPAREN .)
    NOR             reduce using rule 34 (expression -> LPAREN expression RPAREN .)
    XOR             reduce using rule 34 (expression -> LPAREN expression RPAREN .)
    EQ              reduce using rule 34 (expression -> LPAREN expression RPAREN .)
    NEQ             reduce using rule 34 (expression -> LPAREN expression RPAREN .)
    IMPL            reduce using rule 34 (expression -> LPAREN expression RPAREN .)
    PLUS            reduce using rule 34 (expression -> LPAREN expression RPAREN .)
    MINUS           reduce using rule 34 (expression -> LPAREN expression RPAREN .)
    TIMES           reduce using rule 34 (expression -> LPAREN expression RPAREN .)
    DIVIDE          reduce using rule 34 (expression -> LPAREN expression RPAREN .)
    $end            reduce using rule 34 (expression -> LPAREN expression RPAREN .)
    SEPARATOR       reduce using rule 34 (expression -> LPAREN expression RPAREN .)
    THEN            reduce using rule 34 (expression -> LPAREN expression RPAREN .)
    END             reduce using rule 34 (expression -> LPAREN expression RPAREN .)
    DO              reduce using rule 34 (expression -> LPAREN expression RPAREN .)
    RPAREN          reduce using rule 34 (expression -> LPAREN expression RPAREN .)
    ELSE            reduce using rule 34 (expression -> LPAREN expression RPAREN .)


state 66

    (7) expression -> FOR expression SEPARATOR expression . SEPARATOR expression DO expression
    (1) expression -> expression . LESS_THEN expression
    (2) expression -> expression . GREATER_THEN expression
    (3) expression -> expression . LESS_EQUALS expression
    (4) expression -> expression . GREATER_EQUALS expression
    (5) expression -> expression . EQUALS expression
    (6) expression -> expression . NOT_EQUALS expression
    (14) expression -> expression . AND expression
    (15) expression -> expression . NAND expression
    (16) expression -> expression . OR expression
    (17) expression -> expression . NOR expression
    (18) expression -> expression . XOR expression
    (19) expression -> expression . EQ expression
    (20) expression -> expression . NEQ expression
    (21) expression -> expression . IMPL expression
    (28) expression -> expression . PLUS expression
    (29) expression -> expression . MINUS expression
    (30) expression -> expression . TIMES expression
    (31) expression -> expression . DIVIDE expression

    SEPARATOR       shift and go to state 70
    LESS_THEN       shift and go to state 14
    GREATER_THEN    shift and go to state 15
    LESS_EQUALS     shift and go to state 16
    GREATER_EQUALS  shift and go to state 17
    EQUALS          shift and go to state 18
    NOT_EQUALS      shift and go to state 19
    AND             shift and go to state 20
    NAND            shift and go to state 21
    OR              shift and go to state 22
    NOR             shift and go to state 23
    XOR             shift and go to state 24
    EQ              shift and go to state 25
    NEQ             shift and go to state 26
    IMPL            shift and go to state 27
    PLUS            shift and go to state 28
    MINUS           shift and go to state 29
    TIMES           shift and go to state 30
    DIVIDE          shift and go to state 31


state 67

    (10) expression -> IF expression THEN expression .
    (22) expression -> IF expression THEN expression . ELSE expression
    (1) expression -> expression . LESS_THEN expression
    (2) expression -> expression . GREATER_THEN expression
    (3) expression -> expression . LESS_EQUALS expression
    (4) expression -> expression . GREATER_EQUALS expression
    (5) expression -> expression . EQUALS expression
    (6) expression -> expression . NOT_EQUALS expression
    (14) expression -> expression . AND expression
    (15) expression -> expression . NAND expression
    (16) expression -> expression . OR expression
    (17) expression -> expression . NOR expression
    (18) expression -> expression . XOR expression
    (19) expression -> expression . EQ expression
    (20) expression -> expression . NEQ expression
    (21) expression -> expression . IMPL expression
    (28) expression -> expression . PLUS expression
    (29) expression -> expression . MINUS expression
    (30) expression -> expression . TIMES expression
    (31) expression -> expression . DIVIDE expression

    $end            reduce using rule 10 (expression -> IF expression THEN expression .)
    SEPARATOR       reduce using rule 10 (expression -> IF expression THEN expression .)
    THEN            reduce using rule 10 (expression -> IF expression THEN expression .)
    END             reduce using rule 10 (expression -> IF expression THEN expression .)
    DO              reduce using rule 10 (expression -> IF expression THEN expression .)
    RPAREN          reduce using rule 10 (expression -> IF expression THEN expression .)
    ELSE            shift and go to state 71
    LESS_THEN       shift and go to state 14
    GREATER_THEN    shift and go to state 15
    LESS_EQUALS     shift and go to state 16
    GREATER_EQUALS  shift and go to state 17
    EQUALS          shift and go to state 18
    NOT_EQUALS      shift and go to state 19
    AND             shift and go to state 20
    NAND            shift and go to state 21
    OR              shift and go to state 22
    NOR             shift and go to state 23
    XOR             shift and go to state 24
    EQ              shift and go to state 25
    NEQ             shift and go to state 26
    IMPL            shift and go to state 27
    PLUS            shift and go to state 28
    MINUS           shift and go to state 29
    TIMES           shift and go to state 30
    DIVIDE          shift and go to state 31

  ! LESS_THEN       [ reduce using rule 10 (expression -> IF expression THEN expression .) ]
  ! GREATER_THEN    [ reduce using rule 10 (expression -> IF expression THEN expression .) ]
  ! LESS_EQUALS     [ reduce using rule 10 (expression -> IF expression THEN expression .) ]
  ! GREATER_EQUALS  [ reduce using rule 10 (expression -> IF expression THEN expression .) ]
  ! EQUALS          [ reduce using rule 10 (expression -> IF expression THEN expression .) ]
  ! NOT_EQUALS      [ reduce using rule 10 (expression -> IF expression THEN expression .) ]
  ! AND             [ reduce using rule 10 (expression -> IF expression THEN expression .) ]
  ! NAND            [ reduce using rule 10 (expression -> IF expression THEN expression .) ]
  ! OR              [ reduce using rule 10 (expression -> IF expression THEN expression .) ]
  ! NOR             [ reduce using rule 10 (expression -> IF expression THEN expression .) ]
  ! XOR             [ reduce using rule 10 (expression -> IF expression THEN expression .) ]
  ! EQ              [ reduce using rule 10 (expression -> IF expression THEN expression .) ]
  ! NEQ             [ reduce using rule 10 (expression -> IF expression THEN expression .) ]
  ! IMPL            [ reduce using rule 10 (expression -> IF expression THEN expression .) ]
  ! PLUS            [ reduce using rule 10 (expression -> IF expression THEN expression .) ]
  ! MINUS           [ reduce using rule 10 (expression -> IF expression THEN expression .) ]
  ! TIMES           [ reduce using rule 10 (expression -> IF expression THEN expression .) ]
  ! DIVIDE          [ reduce using rule 10 (expression -> IF expression THEN expression .) ]
  ! ELSE            [ reduce using rule 10 (expression -> IF expression THEN expression .) ]


state 68

    (24) body -> body SEPARATOR expression .
    (1) expression -> expression . LESS_THEN expression
    (2) expression -> expression . GREATER_THEN expression
    (3) expression -> expression . LESS_EQUALS expression
    (4) expression -> expression . GREATER_EQUALS expression
    (5) expression -> expression . EQUALS expression
    (6) expression -> expression . NOT_EQUALS expression
    (14) expression -> expression . AND expression
    (15) expression -> expression . NAND expression
    (16) expression -> expression . OR expression
    (17) expression -> expression . NOR expression
    (18) expression -> expression . XOR expression
    (19) expression -> expression . EQ expression
    (20) expression -> expression . NEQ expression
    (21) expression -> expression . IMPL expression
    (28) expression -> expression . PLUS expression
    (29) expression -> expression . MINUS expression
    (30) expression -> expression . TIMES expression
    (31) expression -> expression . DIVIDE expression

    END             reduce using rule 24 (body -> body SEPARATOR expression .)
    SEPARATOR       reduce using rule 24 (body -> body SEPARATOR expression .)
    LESS_THEN       shift and go to state 14
    GREATER_THEN    shift and go to state 15
    LESS_EQUALS     shift and go to state 16
    GREATER_EQUALS  shift and go to state 17
    EQUALS          shift and go to state 18
    NOT_EQUALS      shift and go to state 19
    AND             shift and go to state 20
    NAND            shift and go to state 21
    OR              shift and go to state 22
    NOR             shift and go to state 23
    XOR             shift and go to state 24
    EQ              shift and go to state 25
    NEQ             shift and go to state 26
    IMPL            shift and go to state 27
    PLUS            shift and go to state 28
    MINUS           shift and go to state 29
    TIMES           shift and go to state 30
    DIVIDE          shift and go to state 31


state 69

    (12) expression -> LOOP expression DO expression .
    (1) expression -> expression . LESS_THEN expression
    (2) expression -> expression . GREATER_THEN expression
    (3) expression -> expression . LESS_EQUALS expression
    (4) expression -> expression . GREATER_EQUALS expression
    (5) expression -> expression . EQUALS expression
    (6) expression -> expression . NOT_EQUALS expression
    (14) expression -> expression . AND expression
    (15) expression -> expression . NAND expression
    (16) expression -> expression . OR expression
    (17) expression -> expression . NOR expression
    (18) expression -> expression . XOR expression
    (19) expression -> expression . EQ expression
    (20) expression -> expression . NEQ expression
    (21) expression -> expression . IMPL expression
    (28) expression -> expression . PLUS expression
    (29) expression -> expression . MINUS expression
    (30) expression -> expression . TIMES expression
    (31) expression -> expression . DIVIDE expression

    $end            reduce using rule 12 (expression -> LOOP expression DO expression .)
    SEPARATOR       reduce using rule 12 (expression -> LOOP expression DO expression .)
    THEN            reduce using rule 12 (expression -> LOOP expression DO expression .)
    END             reduce using rule 12 (expression -> LOOP expression DO expression .)
    DO              reduce using rule 12 (expression -> LOOP expression DO expression .)
    RPAREN          reduce using rule 12 (expression -> LOOP expression DO expression .)
    ELSE            reduce using rule 12 (expression -> LOOP expression DO expression .)
    LESS_THEN       shift and go to state 14
    GREATER_THEN    shift and go to state 15
    LESS_EQUALS     shift and go to state 16
    GREATER_EQUALS  shift and go to state 17
    EQUALS          shift and go to state 18
    NOT_EQUALS      shift and go to state 19
    AND             shift and go to state 20
    NAND            shift and go to state 21
    OR              shift and go to state 22
    NOR             shift and go to state 23
    XOR             shift and go to state 24
    EQ              shift and go to state 25
    NEQ             shift and go to state 26
    IMPL            shift and go to state 27
    PLUS            shift and go to state 28
    MINUS           shift and go to state 29
    TIMES           shift and go to state 30
    DIVIDE          shift and go to state 31

  ! LESS_THEN       [ reduce using rule 12 (expression -> LOOP expression DO expression .) ]
  ! GREATER_THEN    [ reduce using rule 12 (expression -> LOOP expression DO expression .) ]
  ! LESS_EQUALS     [ reduce using rule 12 (expression -> LOOP expression DO expression .) ]
  ! GREATER_EQUALS  [ reduce using rule 12 (expression -> LOOP expression DO expression .) ]
  ! EQUALS          [ reduce using rule 12 (expression -> LOOP expression DO expression .) ]
  ! NOT_EQUALS      [ reduce using rule 12 (expression -> LOOP expression DO expression .) ]
  ! AND             [ reduce using rule 12 (expression -> LOOP expression DO expression .) ]
  ! NAND            [ reduce using rule 12 (expression -> LOOP expression DO expression .) ]
  ! OR              [ reduce using rule 12 (expression -> LOOP expression DO expression .) ]
  ! NOR             [ reduce using rule 12 (expression -> LOOP expression DO expression .) ]
  ! XOR             [ reduce using rule 12 (expression -> LOOP expression DO expression .) ]
  ! EQ              [ reduce using rule 12 (expression -> LOOP expression DO expression .) ]
  ! NEQ             [ reduce using rule 12 (expression -> LOOP expression DO expression .) ]
  ! IMPL            [ reduce using rule 12 (expression -> LOOP expression DO expression .) ]
  ! PLUS            [ reduce using rule 12 (expression -> LOOP expression DO expression .) ]
  ! MINUS           [ reduce using rule 12 (expression -> LOOP expression DO expression .) ]
  ! TIMES           [ reduce using rule 12 (expression -> LOOP expression DO expression .) ]
  ! DIVIDE          [ reduce using rule 12 (expression -> LOOP expression DO expression .) ]


state 70

    (7) expression -> FOR expression SEPARATOR expression SEPARATOR . expression DO expression
    (1) expression -> . expression LESS_THEN expression
    (2) expression -> . expression GREATER_THEN expression
    (3) expression -> . expression LESS_EQUALS expression
    (4) expression -> . expression GREATER_EQUALS expression
    (5) expression -> . expression EQUALS expression
    (6) expression -> . expression NOT_EQUALS expression
    (7) expression -> . FOR expression SEPARATOR expression SEPARATOR expression DO expression
    (8) expression -> . IDENTIFIER
    (9) expression -> . NOT expression
    (10) expression -> . IF expression THEN expression
    (11) expression -> . BEGIN body END
    (12) expression -> . LOOP expression DO expression
    (13) expression -> . IDENTIFIER ASSIGN expression
    (14) expression -> . expression AND expression
    (15) expression -> . expression NAND expression
    (16) expression -> . expression OR expression
    (17) expression -> . expression NOR expression
    (18) expression -> . expression XOR expression
    (19) expression -> . expression EQ expression
    (20) expression -> . expression NEQ expression
    (21) expression -> . expression IMPL expression
    (22) expression -> . IF expression THEN expression ELSE expression
    (25) expression -> . NUMBER
    (26) expression -> . FLOAT
    (27) expression -> . MINUS expression
    (28) expression -> . expression PLUS expression
    (29) expression -> . expression MINUS expression
    (30) expression -> . expression TIMES expression
    (31) expression -> . expression DIVIDE expression
    (32) expression -> . TRUE
    (33) expression -> . FALSE
    (34) expression -> . LPAREN expression RPAREN

    FOR             shift and go to state 2
    IDENTIFIER      shift and go to state 3
    NOT             shift and go to state 4
    IF              shift and go to state 5
    BEGIN           shift and go to state 6
    LOOP            shift and go to state 7
    NUMBER          shift and go to state 8
    FLOAT           shift and go to state 9
    MINUS           shift and go to state 10
    TRUE            shift and go to state 11
    FALSE           shift and go to state 12
    LPAREN          shift and go to state 13

    expression                     shift and go to state 72

state 71

    (22) expression -> IF expression THEN expression ELSE . expression
    (1) expression -> . expression LESS_THEN expression
    (2) expression -> . expression GREATER_THEN expression
    (3) expression -> . expression LESS_EQUALS expression
    (4) expression -> . expression GREATER_EQUALS expression
    (5) expression -> . expression EQUALS expression
    (6) expression -> . expression NOT_EQUALS expression
    (7) expression -> . FOR expression SEPARATOR expression SEPARATOR expression DO expression
    (8) expression -> . IDENTIFIER
    (9) expression -> . NOT expression
    (10) expression -> . IF expression THEN expression
    (11) expression -> . BEGIN body END
    (12) expression -> . LOOP expression DO expression
    (13) expression -> . IDENTIFIER ASSIGN expression
    (14) expression -> . expression AND expression
    (15) expression -> . expression NAND expression
    (16) expression -> . expression OR expression
    (17) expression -> . expression NOR expression
    (18) expression -> . expression XOR expression
    (19) expression -> . expression EQ expression
    (20) expression -> . expression NEQ expression
    (21) expression -> . expression IMPL expression
    (22) expression -> . IF expression THEN expression ELSE expression
    (25) expression -> . NUMBER
    (26) expression -> . FLOAT
    (27) expression -> . MINUS expression
    (28) expression -> . expression PLUS expression
    (29) expression -> . expression MINUS expression
    (30) expression -> . expression TIMES expression
    (31) expression -> . expression DIVIDE expression
    (32) expression -> . TRUE
    (33) expression -> . FALSE
    (34) expression -> . LPAREN expression RPAREN

    FOR             shift and go to state 2
    IDENTIFIER      shift and go to state 3
    NOT             shift and go to state 4
    IF              shift and go to state 5
    BEGIN           shift and go to state 6
    LOOP            shift and go to state 7
    NUMBER          shift and go to state 8
    FLOAT           shift and go to state 9
    MINUS           shift and go to state 10
    TRUE            shift and go to state 11
    FALSE           shift and go to state 12
    LPAREN          shift and go to state 13

    expression                     shift and go to state 73

state 72

    (7) expression -> FOR expression SEPARATOR expression SEPARATOR expression . DO expression
    (1) expression -> expression . LESS_THEN expression
    (2) expression -> expression . GREATER_THEN expression
    (3) expression -> expression . LESS_EQUALS expression
    (4) expression -> expression . GREATER_EQUALS expression
    (5) expression -> expression . EQUALS expression
    (6) expression -> expression . NOT_EQUALS expression
    (14) expression -> expression . AND expression
    (15) expression -> expression . NAND expression
    (16) expression -> expression . OR expression
    (17) expression -> expression . NOR expression
    (18) expression -> expression . XOR expression
    (19) expression -> expression . EQ expression
    (20) expression -> expression . NEQ expression
    (21) expression -> expression . IMPL expression
    (28) expression -> expression . PLUS expression
    (29) expression -> expression . MINUS expression
    (30) expression -> expression . TIMES expression
    (31) expression -> expression . DIVIDE expression

    DO              shift and go to state 74
    LESS_THEN       shift and go to state 14
    GREATER_THEN    shift and go to state 15
    LESS_EQUALS     shift and go to state 16
    GREATER_EQUALS  shift and go to state 17
    EQUALS          shift and go to state 18
    NOT_EQUALS      shift and go to state 19
    AND             shift and go to state 20
    NAND            shift and go to state 21
    OR              shift and go to state 22
    NOR             shift and go to state 23
    XOR             shift and go to state 24
    EQ              shift and go to state 25
    NEQ             shift and go to state 26
    IMPL            shift and go to state 27
    PLUS            shift and go to state 28
    MINUS           shift and go to state 29
    TIMES           shift and go to state 30
    DIVIDE          shift and go to state 31


state 73

    (22) expression -> IF expression THEN expression ELSE expression .
    (1) expression -> expression . LESS_THEN expression
    (2) expression -> expression . GREATER_THEN expression
    (3) expression -> expression . LESS_EQUALS expression
    (4) expression -> expression . GREATER_EQUALS expression
    (5) expression -> expression . EQUALS expression
    (6) expression -> expression . NOT_EQUALS expression
    (14) expression -> expression . AND expression
    (15) expression -> expression . NAND expression
    (16) expression -> expression . OR expression
    (17) expression -> expression . NOR expression
    (18) expression -> expression . XOR expression
    (19) expression -> expression . EQ expression
    (20) expression -> expression . NEQ expression
    (21) expression -> expression . IMPL expression
    (28) expression -> expression . PLUS expression
    (29) expression -> expression . MINUS expression
    (30) expression -> expression . TIMES expression
    (31) expression -> expression . DIVIDE expression

    $end            reduce using rule 22 (expression -> IF expression THEN expression ELSE expression .)
    SEPARATOR       reduce using rule 22 (expression -> IF expression THEN expression ELSE expression .)
    THEN            reduce using rule 22 (expression -> IF expression THEN expression ELSE expression .)
    END             reduce using rule 22 (expression -> IF expression THEN expression ELSE expression .)
    DO              reduce using rule 22 (expression -> IF expression THEN expression ELSE expression .)
    RPAREN          reduce using rule 22 (expression -> IF expression THEN expression ELSE expression .)
    ELSE            reduce using rule 22 (expression -> IF expression THEN expression ELSE expression .)
    LESS_THEN       shift and go to state 14
    GREATER_THEN    shift and go to state 15
    LESS_EQUALS     shift and go to state 16
    GREATER_EQUALS  shift and go to state 17
    EQUALS          shift and go to state 18
    NOT_EQUALS      shift and go to state 19
    AND             shift and go to state 20
    NAND            shift and go to state 21
    OR              shift and go to state 22
    NOR             shift and go to state 23
    XOR             shift and go to state 24
    EQ              shift and go to state 25
    NEQ             shift and go to state 26
    IMPL            shift and go to state 27
    PLUS            shift and go to state 28
    MINUS           shift and go to state 29
    TIMES           shift and go to state 30
    DIVIDE          shift and go to state 31

  ! LESS_THEN       [ reduce using rule 22 (expression -> IF expression THEN expression ELSE expression .) ]
  ! GREATER_THEN    [ reduce using rule 22 (expression -> IF expression THEN expression ELSE expression .) ]
  ! LESS_EQUALS     [ reduce using rule 22 (expression -> IF expression THEN expression ELSE expression .) ]
  ! GREATER_EQUALS  [ reduce using rule 22 (expression -> IF expression THEN expression ELSE expression .) ]
  ! EQUALS          [ reduce using rule 22 (expression -> IF expression THEN expression ELSE expression .) ]
  ! NOT_EQUALS      [ reduce using rule 22 (expression -> IF expression THEN expression ELSE expression .) ]
  ! AND             [ reduce using rule 22 (expression -> IF expression THEN expression ELSE expression .) ]
  ! NAND            [ reduce using rule 22 (expression -> IF expression THEN expression ELSE expression .) ]
  ! OR              [ reduce using rule 22 (expression -> IF expression THEN expression ELSE expression .) ]
  ! NOR             [ reduce using rule 22 (expression -> IF expression THEN expression ELSE expression .) ]
  ! XOR             [ reduce using rule 22 (expression -> IF expression THEN expression ELSE expression .) ]
  ! EQ              [ reduce using rule 22 (expression -> IF expression THEN expression ELSE expression .) ]
  ! NEQ             [ reduce using rule 22 (expression -> IF expression THEN expression ELSE expression .) ]
  ! IMPL            [ reduce using rule 22 (expression -> IF expression THEN expression ELSE expression .) ]
  ! PLUS            [ reduce using rule 22 (expression -> IF expression THEN expression ELSE expression .) ]
  ! MINUS           [ reduce using rule 22 (expression -> IF expression THEN expression ELSE expression .) ]
  ! TIMES           [ reduce using rule 22 (expression -> IF expression THEN expression ELSE expression .) ]
  ! DIVIDE          [ reduce using rule 22 (expression -> IF expression THEN expression ELSE expression .) ]


state 74

    (7) expression -> FOR expression SEPARATOR expression SEPARATOR expression DO . expression
    (1) expression -> . expression LESS_THEN expression
    (2) expression -> . expression GREATER_THEN expression
    (3) expression -> . expression LESS_EQUALS expression
    (4) expression -> . expression GREATER_EQUALS expression
    (5) expression -> . expression EQUALS expression
    (6) expression -> . expression NOT_EQUALS expression
    (7) expression -> . FOR expression SEPARATOR expression SEPARATOR expression DO expression
    (8) expression -> . IDENTIFIER
    (9) expression -> . NOT expression
    (10) expression -> . IF expression THEN expression
    (11) expression -> . BEGIN body END
    (12) expression -> . LOOP expression DO expression
    (13) expression -> . IDENTIFIER ASSIGN expression
    (14) expression -> . expression AND expression
    (15) expression -> . expression NAND expression
    (16) expression -> . expression OR expression
    (17) expression -> . expression NOR expression
    (18) expression -> . expression XOR expression
    (19) expression -> . expression EQ expression
    (20) expression -> . expression NEQ expression
    (21) expression -> . expression IMPL expression
    (22) expression -> . IF expression THEN expression ELSE expression
    (25) expression -> . NUMBER
    (26) expression -> . FLOAT
    (27) expression -> . MINUS expression
    (28) expression -> . expression PLUS expression
    (29) expression -> . expression MINUS expression
    (30) expression -> . expression TIMES expression
    (31) expression -> . expression DIVIDE expression
    (32) expression -> . TRUE
    (33) expression -> . FALSE
    (34) expression -> . LPAREN expression RPAREN

    FOR             shift and go to state 2
    IDENTIFIER      shift and go to state 3
    NOT             shift and go to state 4
    IF              shift and go to state 5
    BEGIN           shift and go to state 6
    LOOP            shift and go to state 7
    NUMBER          shift and go to state 8
    FLOAT           shift and go to state 9
    MINUS           shift and go to state 10
    TRUE            shift and go to state 11
    FALSE           shift and go to state 12
    LPAREN          shift and go to state 13

    expression                     shift and go to state 75

state 75

    (7) expression -> FOR expression SEPARATOR expression SEPARATOR expression DO expression .
    (1) expression -> expression . LESS_THEN expression
    (2) expression -> expression . GREATER_THEN expression
    (3) expression -> expression . LESS_EQUALS expression
    (4) expression -> expression . GREATER_EQUALS expression
    (5) expression -> expression . EQUALS expression
    (6) expression -> expression . NOT_EQUALS expression
    (14) expression -> expression . AND expression
    (15) expression -> expression . NAND expression
    (16) expression -> expression . OR expression
    (17) expression -> expression . NOR expression
    (18) expression -> expression . XOR expression
    (19) expression -> expression . EQ expression
    (20) expression -> expression . NEQ expression
    (21) expression -> expression . IMPL expression
    (28) expression -> expression . PLUS expression
    (29) expression -> expression . MINUS expression
    (30) expression -> expression . TIMES expression
    (31) expression -> expression . DIVIDE expression

    $end            reduce using rule 7 (expression -> FOR expression SEPARATOR expression SEPARATOR expression DO expression .)
    SEPARATOR       reduce using rule 7 (expression -> FOR expression SEPARATOR expression SEPARATOR expression DO expression .)
    THEN            reduce using rule 7 (expression -> FOR expression SEPARATOR expression SEPARATOR expression DO expression .)
    END             reduce using rule 7 (expression -> FOR expression SEPARATOR expression SEPARATOR expression DO expression .)
    DO              reduce using rule 7 (expression -> FOR expression SEPARATOR expression SEPARATOR expression DO expression .)
    RPAREN          reduce using rule 7 (expression -> FOR expression SEPARATOR expression SEPARATOR expression DO expression .)
    ELSE            reduce using rule 7 (expression -> FOR expression SEPARATOR expression SEPARATOR expression DO expression .)
    LESS_THEN       shift and go to state 14
    GREATER_THEN    shift and go to state 15
    LESS_EQUALS     shift and go to state 16
    GREATER_EQUALS  shift and go to state 17
    EQUALS          shift and go to state 18
    NOT_EQUALS      shift and go to state 19
    AND             shift and go to state 20
    NAND            shift and go to state 21
    OR              shift and go to state 22
    NOR             shift and go to state 23
    XOR             shift and go to state 24
    EQ              shift and go to state 25
    NEQ             shift and go to state 26
    IMPL            shift and go to state 27
    PLUS            shift and go to state 28
    MINUS           shift and go to state 29
    TIMES           shift and go to state 30
    DIVIDE          shift and go to state 31

  ! LESS_THEN       [ reduce using rule 7 (expression -> FOR expression SEPARATOR expression SEPARATOR expression DO expression .) ]
  ! GREATER_THEN    [ reduce using rule 7 (expression -> FOR expression SEPARATOR expression SEPARATOR expression DO expression .) ]
  ! LESS_EQUALS     [ reduce using rule 7 (expression -> FOR expression SEPARATOR expression SEPARATOR expression DO expression .) ]
  ! GREATER_EQUALS  [ reduce using rule 7 (expression -> FOR expression SEPARATOR expression SEPARATOR expression DO expression .) ]
  ! EQUALS          [ reduce using rule 7 (expression -> FOR expression SEPARATOR expression SEPARATOR expression DO expression .) ]
  ! NOT_EQUALS      [ reduce using rule 7 (expression -> FOR expression SEPARATOR expression SEPARATOR expression DO expression .) ]
  ! AND             [ reduce using rule 7 (expression -> FOR expression SEPARATOR expression SEPARATOR expression DO expression .) ]
  ! NAND            [ reduce using rule 7 (expression -> FOR expression SEPARATOR expression SEPARATOR expression DO expression .) ]
  ! OR              [ reduce using rule 7 (expression -> FOR expression SEPARATOR expression SEPARATOR expression DO expression .) ]
  ! NOR             [ reduce using rule 7 (expression -> FOR expression SEPARATOR expression SEPARATOR expression DO expression .) ]
  ! XOR             [ reduce using rule 7 (expression -> FOR expression SEPARATOR expression SEPARATOR expression DO expression .) ]
  ! EQ              [ reduce using rule 7 (expression -> FOR expression SEPARATOR expression SEPARATOR expression DO expression .) ]
  ! NEQ             [ reduce using rule 7 (expression -> FOR expression SEPARATOR expression SEPARATOR expression DO expression .) ]
  ! IMPL            [ reduce using rule 7 (expression -> FOR expression SEPARATOR expression SEPARATOR expression DO expression .) ]
  ! PLUS            [ reduce using rule 7 (expression -> FOR expression SEPARATOR expression SEPARATOR expression DO expression .) ]
  ! MINUS           [ reduce using rule 7 (expression -> FOR expression SEPARATOR expression SEPARATOR expression DO expression .) ]
  ! TIMES           [ reduce using rule 7 (expression -> FOR expression SEPARATOR expression SEPARATOR expression DO expression .) ]
  ! DIVIDE          [ reduce using rule 7 (expression -> FOR expression SEPARATOR expression SEPARATOR expression DO expression .) ]

