Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Grammar

Rule 0     S' -> expression
Rule 1     expression -> NUMBER
Rule 2     expression -> FLOAT
Rule 3     expression -> CHAR
Rule 4     expression -> STRING
Rule 5     expression -> LIST LPAREN expression_list RPAREN
Rule 6     expression -> LIST LPAREN RPAREN
Rule 7     expression -> LBRACKET expression_list RBRACKET
Rule 8     expression -> ARRAY LPAREN expression_list RPAREN
Rule 9     expression -> LBRACKET RBRACKET
Rule 10    expression -> ARRAY LPAREN RPAREN
Rule 11    expression -> IDENTIFIER LBRACKET expression RBRACKET
Rule 12    expression -> MINUS expression
Rule 13    expression -> NOT expression
Rule 14    expression -> expression PLUS expression
Rule 15    expression -> expression MINUS expression
Rule 16    expression -> expression TIMES expression
Rule 17    expression -> expression DIVIDE expression
Rule 18    expression -> expression LESS_THEN expression
Rule 19    expression -> expression GREATER_THEN expression
Rule 20    expression -> expression LESS_EQUALS expression
Rule 21    expression -> expression GREATER_EQUALS expression
Rule 22    expression -> expression EQUALS expression
Rule 23    expression -> expression NOT_EQUALS expression
Rule 24    expression -> expression AND expression
Rule 25    expression -> expression NAND expression
Rule 26    expression -> expression OR expression
Rule 27    expression -> expression NOR expression
Rule 28    expression -> expression XOR expression
Rule 29    expression -> expression EQ expression
Rule 30    expression -> expression NEQ expression
Rule 31    expression -> expression IMPL expression
Rule 32    expression -> LPAREN expression RPAREN
Rule 33    expression -> TRUE
Rule 34    expression -> FALSE
Rule 35    expression -> IDENTIFIER
Rule 36    expression -> IDENTIFIER ASSIGN expression
Rule 37    expression -> BEGIN body END
Rule 38    body -> expression
Rule 39    body -> body SEPARATOR expression
Rule 40    expression -> LOOP expression DO expression
Rule 41    expression -> FOR expression SEPARATOR expression SEPARATOR expression DO expression
Rule 42    expression -> WHILE expression DO expression
Rule 43    expression -> IF expression THEN expression
Rule 44    expression -> IF expression THEN expression ELSE expression
Rule 45    identifier_list -> IDENTIFIER
Rule 46    identifier_list -> IDENTIFIER COMMA identifier_list
Rule 47    expression -> LOCK identifier_list IN expression
Rule 48    assign_list -> IDENTIFIER ASSIGN expression
Rule 49    assign_list -> assign_list COMMA IDENTIFIER ASSIGN expression
Rule 50    expression -> LET assign_list IN expression
Rule 51    expression -> LETREC assign_list IN expression
Rule 52    expression_list -> expression
Rule 53    expression_list -> expression COMMA expression_list
Rule 54    expression -> LAMBDA identifier_list ARROW expression
Rule 55    expression -> LAMBDA ARROW expression
Rule 56    expression -> expression LPAREN expression_list RPAREN
Rule 57    expression -> expression LPAREN RPAREN
Rule 58    dots -> DOT
Rule 59    dots -> dots DOT
Rule 60    struct_body -> IDENTIFIER ASSIGN expression
Rule 61    struct_body -> struct_body SEPARATOR IDENTIFIER ASSIGN expression
Rule 62    expression -> STRUCT BEGIN struct_body END
Rule 63    expression -> expression dots IDENTIFIER
Rule 64    expression -> dots IDENTIFIER
Rule 65    expression -> EXTEND expression BEGIN struct_body END
Rule 66    expression -> PROC LPAREN identifier_list RPAREN identifier_list ARROW expression
Rule 67    expression -> PROC LPAREN RPAREN identifier_list ARROW expression
Rule 68    expression -> PROC LPAREN identifier_list RPAREN ARROW expression
Rule 69    expression -> PROC LPAREN RPAREN ARROW expression

Terminals, with rules where they appear

AND                  : 24
ARRAY                : 8 10
ARROW                : 54 55 66 67 68 69
ASSIGN               : 36 48 49 60 61
BEGIN                : 37 62 65
CHAR                 : 3
COMMA                : 46 49 53
DIVIDE               : 17
DO                   : 40 41 42
DOT                  : 58 59
ELSE                 : 44
END                  : 37 62 65
EQ                   : 29
EQUALS               : 22
EXTEND               : 65
FALSE                : 34
FLOAT                : 2
FOR                  : 41
GREATER_EQUALS       : 21
GREATER_THEN         : 19
IDENTIFIER           : 11 35 36 45 46 48 49 60 61 63 64
IF                   : 43 44
IMPL                 : 31
IN                   : 47 50 51
LAMBDA               : 54 55
LBRACKET             : 7 9 11
LESS_EQUALS          : 20
LESS_THEN            : 18
LET                  : 50
LETREC               : 51
LIST                 : 5 6
LOCK                 : 47
LOOP                 : 40
LPAREN               : 5 6 8 10 32 56 57 66 67 68 69
MINUS                : 12 15
NAND                 : 25
NEQ                  : 30
NOR                  : 27
NOT                  : 13
NOT_EQUALS           : 23
NUMBER               : 1
OR                   : 26
PLUS                 : 14
PROC                 : 66 67 68 69
RBRACKET             : 7 9 11
RPAREN               : 5 6 8 10 32 56 57 66 67 68 69
SEPARATOR            : 39 41 41 61
STRING               : 4
STRUCT               : 62
THEN                 : 43 44
TIMES                : 16
TRUE                 : 33
WHILE                : 42
XOR                  : 28
error                : 

Nonterminals, with rules where they appear

assign_list          : 49 50 51
body                 : 37 39
dots                 : 59 63 64
expression           : 11 12 13 14 14 15 15 16 16 17 17 18 18 19 19 20 20 21 21 22 22 23 23 24 24 25 25 26 26 27 27 28 28 29 29 30 30 31 31 32 36 38 39 40 40 41 41 41 41 42 42 43 43 44 44 44 47 48 49 50 51 52 53 54 55 56 57 60 61 63 65 66 67 68 69 0
expression_list      : 5 7 8 53 56
identifier_list      : 46 47 54 66 66 67 68
struct_body          : 61 62 65

Parsing method: LALR

state 0

    (0) S' -> . expression
    (1) expression -> . NUMBER
    (2) expression -> . FLOAT
    (3) expression -> . CHAR
    (4) expression -> . STRING
    (5) expression -> . LIST LPAREN expression_list RPAREN
    (6) expression -> . LIST LPAREN RPAREN
    (7) expression -> . LBRACKET expression_list RBRACKET
    (8) expression -> . ARRAY LPAREN expression_list RPAREN
    (9) expression -> . LBRACKET RBRACKET
    (10) expression -> . ARRAY LPAREN RPAREN
    (11) expression -> . IDENTIFIER LBRACKET expression RBRACKET
    (12) expression -> . MINUS expression
    (13) expression -> . NOT expression
    (14) expression -> . expression PLUS expression
    (15) expression -> . expression MINUS expression
    (16) expression -> . expression TIMES expression
    (17) expression -> . expression DIVIDE expression
    (18) expression -> . expression LESS_THEN expression
    (19) expression -> . expression GREATER_THEN expression
    (20) expression -> . expression LESS_EQUALS expression
    (21) expression -> . expression GREATER_EQUALS expression
    (22) expression -> . expression EQUALS expression
    (23) expression -> . expression NOT_EQUALS expression
    (24) expression -> . expression AND expression
    (25) expression -> . expression NAND expression
    (26) expression -> . expression OR expression
    (27) expression -> . expression NOR expression
    (28) expression -> . expression XOR expression
    (29) expression -> . expression EQ expression
    (30) expression -> . expression NEQ expression
    (31) expression -> . expression IMPL expression
    (32) expression -> . LPAREN expression RPAREN
    (33) expression -> . TRUE
    (34) expression -> . FALSE
    (35) expression -> . IDENTIFIER
    (36) expression -> . IDENTIFIER ASSIGN expression
    (37) expression -> . BEGIN body END
    (40) expression -> . LOOP expression DO expression
    (41) expression -> . FOR expression SEPARATOR expression SEPARATOR expression DO expression
    (42) expression -> . WHILE expression DO expression
    (43) expression -> . IF expression THEN expression
    (44) expression -> . IF expression THEN expression ELSE expression
    (47) expression -> . LOCK identifier_list IN expression
    (50) expression -> . LET assign_list IN expression
    (51) expression -> . LETREC assign_list IN expression
    (54) expression -> . LAMBDA identifier_list ARROW expression
    (55) expression -> . LAMBDA ARROW expression
    (56) expression -> . expression LPAREN expression_list RPAREN
    (57) expression -> . expression LPAREN RPAREN
    (62) expression -> . STRUCT BEGIN struct_body END
    (63) expression -> . expression dots IDENTIFIER
    (64) expression -> . dots IDENTIFIER
    (65) expression -> . EXTEND expression BEGIN struct_body END
    (66) expression -> . PROC LPAREN identifier_list RPAREN identifier_list ARROW expression
    (67) expression -> . PROC LPAREN RPAREN identifier_list ARROW expression
    (68) expression -> . PROC LPAREN identifier_list RPAREN ARROW expression
    (69) expression -> . PROC LPAREN RPAREN ARROW expression
    (58) dots -> . DOT
    (59) dots -> . dots DOT

    NUMBER          shift and go to state 2
    FLOAT           shift and go to state 3
    CHAR            shift and go to state 4
    STRING          shift and go to state 5
    LIST            shift and go to state 6
    LBRACKET        shift and go to state 8
    ARRAY           shift and go to state 9
    IDENTIFIER      shift and go to state 10
    MINUS           shift and go to state 11
    NOT             shift and go to state 12
    LPAREN          shift and go to state 7
    TRUE            shift and go to state 13
    FALSE           shift and go to state 14
    BEGIN           shift and go to state 15
    LOOP            shift and go to state 16
    FOR             shift and go to state 17
    WHILE           shift and go to state 18
    IF              shift and go to state 19
    LOCK            shift and go to state 20
    LET             shift and go to state 21
    LETREC          shift and go to state 22
    LAMBDA          shift and go to state 23
    STRUCT          shift and go to state 24
    EXTEND          shift and go to state 26
    PROC            shift and go to state 27
    DOT             shift and go to state 28

    expression                     shift and go to state 1
    dots                           shift and go to state 25

state 1

    (0) S' -> expression .
    (14) expression -> expression . PLUS expression
    (15) expression -> expression . MINUS expression
    (16) expression -> expression . TIMES expression
    (17) expression -> expression . DIVIDE expression
    (18) expression -> expression . LESS_THEN expression
    (19) expression -> expression . GREATER_THEN expression
    (20) expression -> expression . LESS_EQUALS expression
    (21) expression -> expression . GREATER_EQUALS expression
    (22) expression -> expression . EQUALS expression
    (23) expression -> expression . NOT_EQUALS expression
    (24) expression -> expression . AND expression
    (25) expression -> expression . NAND expression
    (26) expression -> expression . OR expression
    (27) expression -> expression . NOR expression
    (28) expression -> expression . XOR expression
    (29) expression -> expression . EQ expression
    (30) expression -> expression . NEQ expression
    (31) expression -> expression . IMPL expression
    (56) expression -> expression . LPAREN expression_list RPAREN
    (57) expression -> expression . LPAREN RPAREN
    (63) expression -> expression . dots IDENTIFIER
    (58) dots -> . DOT
    (59) dots -> . dots DOT

    PLUS            shift and go to state 29
    MINUS           shift and go to state 30
    TIMES           shift and go to state 31
    DIVIDE          shift and go to state 32
    LESS_THEN       shift and go to state 33
    GREATER_THEN    shift and go to state 34
    LESS_EQUALS     shift and go to state 35
    GREATER_EQUALS  shift and go to state 36
    EQUALS          shift and go to state 37
    NOT_EQUALS      shift and go to state 38
    AND             shift and go to state 39
    NAND            shift and go to state 40
    OR              shift and go to state 41
    NOR             shift and go to state 42
    XOR             shift and go to state 43
    EQ              shift and go to state 44
    NEQ             shift and go to state 45
    IMPL            shift and go to state 46
    LPAREN          shift and go to state 47
    DOT             shift and go to state 28

    dots                           shift and go to state 48

state 2

    (1) expression -> NUMBER .

    PLUS            reduce using rule 1 (expression -> NUMBER .)
    MINUS           reduce using rule 1 (expression -> NUMBER .)
    TIMES           reduce using rule 1 (expression -> NUMBER .)
    DIVIDE          reduce using rule 1 (expression -> NUMBER .)
    LESS_THEN       reduce using rule 1 (expression -> NUMBER .)
    GREATER_THEN    reduce using rule 1 (expression -> NUMBER .)
    LESS_EQUALS     reduce using rule 1 (expression -> NUMBER .)
    GREATER_EQUALS  reduce using rule 1 (expression -> NUMBER .)
    EQUALS          reduce using rule 1 (expression -> NUMBER .)
    NOT_EQUALS      reduce using rule 1 (expression -> NUMBER .)
    AND             reduce using rule 1 (expression -> NUMBER .)
    NAND            reduce using rule 1 (expression -> NUMBER .)
    OR              reduce using rule 1 (expression -> NUMBER .)
    NOR             reduce using rule 1 (expression -> NUMBER .)
    XOR             reduce using rule 1 (expression -> NUMBER .)
    EQ              reduce using rule 1 (expression -> NUMBER .)
    NEQ             reduce using rule 1 (expression -> NUMBER .)
    IMPL            reduce using rule 1 (expression -> NUMBER .)
    LPAREN          reduce using rule 1 (expression -> NUMBER .)
    DOT             reduce using rule 1 (expression -> NUMBER .)
    $end            reduce using rule 1 (expression -> NUMBER .)
    RPAREN          reduce using rule 1 (expression -> NUMBER .)
    COMMA           reduce using rule 1 (expression -> NUMBER .)
    RBRACKET        reduce using rule 1 (expression -> NUMBER .)
    END             reduce using rule 1 (expression -> NUMBER .)
    SEPARATOR       reduce using rule 1 (expression -> NUMBER .)
    DO              reduce using rule 1 (expression -> NUMBER .)
    THEN            reduce using rule 1 (expression -> NUMBER .)
    BEGIN           reduce using rule 1 (expression -> NUMBER .)
    ELSE            reduce using rule 1 (expression -> NUMBER .)
    IN              reduce using rule 1 (expression -> NUMBER .)


state 3

    (2) expression -> FLOAT .

    PLUS            reduce using rule 2 (expression -> FLOAT .)
    MINUS           reduce using rule 2 (expression -> FLOAT .)
    TIMES           reduce using rule 2 (expression -> FLOAT .)
    DIVIDE          reduce using rule 2 (expression -> FLOAT .)
    LESS_THEN       reduce using rule 2 (expression -> FLOAT .)
    GREATER_THEN    reduce using rule 2 (expression -> FLOAT .)
    LESS_EQUALS     reduce using rule 2 (expression -> FLOAT .)
    GREATER_EQUALS  reduce using rule 2 (expression -> FLOAT .)
    EQUALS          reduce using rule 2 (expression -> FLOAT .)
    NOT_EQUALS      reduce using rule 2 (expression -> FLOAT .)
    AND             reduce using rule 2 (expression -> FLOAT .)
    NAND            reduce using rule 2 (expression -> FLOAT .)
    OR              reduce using rule 2 (expression -> FLOAT .)
    NOR             reduce using rule 2 (expression -> FLOAT .)
    XOR             reduce using rule 2 (expression -> FLOAT .)
    EQ              reduce using rule 2 (expression -> FLOAT .)
    NEQ             reduce using rule 2 (expression -> FLOAT .)
    IMPL            reduce using rule 2 (expression -> FLOAT .)
    LPAREN          reduce using rule 2 (expression -> FLOAT .)
    DOT             reduce using rule 2 (expression -> FLOAT .)
    $end            reduce using rule 2 (expression -> FLOAT .)
    RPAREN          reduce using rule 2 (expression -> FLOAT .)
    COMMA           reduce using rule 2 (expression -> FLOAT .)
    RBRACKET        reduce using rule 2 (expression -> FLOAT .)
    END             reduce using rule 2 (expression -> FLOAT .)
    SEPARATOR       reduce using rule 2 (expression -> FLOAT .)
    DO              reduce using rule 2 (expression -> FLOAT .)
    THEN            reduce using rule 2 (expression -> FLOAT .)
    BEGIN           reduce using rule 2 (expression -> FLOAT .)
    ELSE            reduce using rule 2 (expression -> FLOAT .)
    IN              reduce using rule 2 (expression -> FLOAT .)


state 4

    (3) expression -> CHAR .

    PLUS            reduce using rule 3 (expression -> CHAR .)
    MINUS           reduce using rule 3 (expression -> CHAR .)
    TIMES           reduce using rule 3 (expression -> CHAR .)
    DIVIDE          reduce using rule 3 (expression -> CHAR .)
    LESS_THEN       reduce using rule 3 (expression -> CHAR .)
    GREATER_THEN    reduce using rule 3 (expression -> CHAR .)
    LESS_EQUALS     reduce using rule 3 (expression -> CHAR .)
    GREATER_EQUALS  reduce using rule 3 (expression -> CHAR .)
    EQUALS          reduce using rule 3 (expression -> CHAR .)
    NOT_EQUALS      reduce using rule 3 (expression -> CHAR .)
    AND             reduce using rule 3 (expression -> CHAR .)
    NAND            reduce using rule 3 (expression -> CHAR .)
    OR              reduce using rule 3 (expression -> CHAR .)
    NOR             reduce using rule 3 (expression -> CHAR .)
    XOR             reduce using rule 3 (expression -> CHAR .)
    EQ              reduce using rule 3 (expression -> CHAR .)
    NEQ             reduce using rule 3 (expression -> CHAR .)
    IMPL            reduce using rule 3 (expression -> CHAR .)
    LPAREN          reduce using rule 3 (expression -> CHAR .)
    DOT             reduce using rule 3 (expression -> CHAR .)
    $end            reduce using rule 3 (expression -> CHAR .)
    RPAREN          reduce using rule 3 (expression -> CHAR .)
    COMMA           reduce using rule 3 (expression -> CHAR .)
    RBRACKET        reduce using rule 3 (expression -> CHAR .)
    END             reduce using rule 3 (expression -> CHAR .)
    SEPARATOR       reduce using rule 3 (expression -> CHAR .)
    DO              reduce using rule 3 (expression -> CHAR .)
    THEN            reduce using rule 3 (expression -> CHAR .)
    BEGIN           reduce using rule 3 (expression -> CHAR .)
    ELSE            reduce using rule 3 (expression -> CHAR .)
    IN              reduce using rule 3 (expression -> CHAR .)


state 5

    (4) expression -> STRING .

    PLUS            reduce using rule 4 (expression -> STRING .)
    MINUS           reduce using rule 4 (expression -> STRING .)
    TIMES           reduce using rule 4 (expression -> STRING .)
    DIVIDE          reduce using rule 4 (expression -> STRING .)
    LESS_THEN       reduce using rule 4 (expression -> STRING .)
    GREATER_THEN    reduce using rule 4 (expression -> STRING .)
    LESS_EQUALS     reduce using rule 4 (expression -> STRING .)
    GREATER_EQUALS  reduce using rule 4 (expression -> STRING .)
    EQUALS          reduce using rule 4 (expression -> STRING .)
    NOT_EQUALS      reduce using rule 4 (expression -> STRING .)
    AND             reduce using rule 4 (expression -> STRING .)
    NAND            reduce using rule 4 (expression -> STRING .)
    OR              reduce using rule 4 (expression -> STRING .)
    NOR             reduce using rule 4 (expression -> STRING .)
    XOR             reduce using rule 4 (expression -> STRING .)
    EQ              reduce using rule 4 (expression -> STRING .)
    NEQ             reduce using rule 4 (expression -> STRING .)
    IMPL            reduce using rule 4 (expression -> STRING .)
    LPAREN          reduce using rule 4 (expression -> STRING .)
    DOT             reduce using rule 4 (expression -> STRING .)
    $end            reduce using rule 4 (expression -> STRING .)
    RPAREN          reduce using rule 4 (expression -> STRING .)
    COMMA           reduce using rule 4 (expression -> STRING .)
    RBRACKET        reduce using rule 4 (expression -> STRING .)
    END             reduce using rule 4 (expression -> STRING .)
    SEPARATOR       reduce using rule 4 (expression -> STRING .)
    DO              reduce using rule 4 (expression -> STRING .)
    THEN            reduce using rule 4 (expression -> STRING .)
    BEGIN           reduce using rule 4 (expression -> STRING .)
    ELSE            reduce using rule 4 (expression -> STRING .)
    IN              reduce using rule 4 (expression -> STRING .)


state 6

    (5) expression -> LIST . LPAREN expression_list RPAREN
    (6) expression -> LIST . LPAREN RPAREN

    LPAREN          shift and go to state 49


state 7

    (32) expression -> LPAREN . expression RPAREN
    (1) expression -> . NUMBER
    (2) expression -> . FLOAT
    (3) expression -> . CHAR
    (4) expression -> . STRING
    (5) expression -> . LIST LPAREN expression_list RPAREN
    (6) expression -> . LIST LPAREN RPAREN
    (7) expression -> . LBRACKET expression_list RBRACKET
    (8) expression -> . ARRAY LPAREN expression_list RPAREN
    (9) expression -> . LBRACKET RBRACKET
    (10) expression -> . ARRAY LPAREN RPAREN
    (11) expression -> . IDENTIFIER LBRACKET expression RBRACKET
    (12) expression -> . MINUS expression
    (13) expression -> . NOT expression
    (14) expression -> . expression PLUS expression
    (15) expression -> . expression MINUS expression
    (16) expression -> . expression TIMES expression
    (17) expression -> . expression DIVIDE expression
    (18) expression -> . expression LESS_THEN expression
    (19) expression -> . expression GREATER_THEN expression
    (20) expression -> . expression LESS_EQUALS expression
    (21) expression -> . expression GREATER_EQUALS expression
    (22) expression -> . expression EQUALS expression
    (23) expression -> . expression NOT_EQUALS expression
    (24) expression -> . expression AND expression
    (25) expression -> . expression NAND expression
    (26) expression -> . expression OR expression
    (27) expression -> . expression NOR expression
    (28) expression -> . expression XOR expression
    (29) expression -> . expression EQ expression
    (30) expression -> . expression NEQ expression
    (31) expression -> . expression IMPL expression
    (32) expression -> . LPAREN expression RPAREN
    (33) expression -> . TRUE
    (34) expression -> . FALSE
    (35) expression -> . IDENTIFIER
    (36) expression -> . IDENTIFIER ASSIGN expression
    (37) expression -> . BEGIN body END
    (40) expression -> . LOOP expression DO expression
    (41) expression -> . FOR expression SEPARATOR expression SEPARATOR expression DO expression
    (42) expression -> . WHILE expression DO expression
    (43) expression -> . IF expression THEN expression
    (44) expression -> . IF expression THEN expression ELSE expression
    (47) expression -> . LOCK identifier_list IN expression
    (50) expression -> . LET assign_list IN expression
    (51) expression -> . LETREC assign_list IN expression
    (54) expression -> . LAMBDA identifier_list ARROW expression
    (55) expression -> . LAMBDA ARROW expression
    (56) expression -> . expression LPAREN expression_list RPAREN
    (57) expression -> . expression LPAREN RPAREN
    (62) expression -> . STRUCT BEGIN struct_body END
    (63) expression -> . expression dots IDENTIFIER
    (64) expression -> . dots IDENTIFIER
    (65) expression -> . EXTEND expression BEGIN struct_body END
    (66) expression -> . PROC LPAREN identifier_list RPAREN identifier_list ARROW expression
    (67) expression -> . PROC LPAREN RPAREN identifier_list ARROW expression
    (68) expression -> . PROC LPAREN identifier_list RPAREN ARROW expression
    (69) expression -> . PROC LPAREN RPAREN ARROW expression
    (58) dots -> . DOT
    (59) dots -> . dots DOT

    NUMBER          shift and go to state 2
    FLOAT           shift and go to state 3
    CHAR            shift and go to state 4
    STRING          shift and go to state 5
    LIST            shift and go to state 6
    LBRACKET        shift and go to state 8
    ARRAY           shift and go to state 9
    IDENTIFIER      shift and go to state 10
    MINUS           shift and go to state 11
    NOT             shift and go to state 12
    LPAREN          shift and go to state 7
    TRUE            shift and go to state 13
    FALSE           shift and go to state 14
    BEGIN           shift and go to state 15
    LOOP            shift and go to state 16
    FOR             shift and go to state 17
    WHILE           shift and go to state 18
    IF              shift and go to state 19
    LOCK            shift and go to state 20
    LET             shift and go to state 21
    LETREC          shift and go to state 22
    LAMBDA          shift and go to state 23
    STRUCT          shift and go to state 24
    EXTEND          shift and go to state 26
    PROC            shift and go to state 27
    DOT             shift and go to state 28

    expression                     shift and go to state 50
    dots                           shift and go to state 25

state 8

    (7) expression -> LBRACKET . expression_list RBRACKET
    (9) expression -> LBRACKET . RBRACKET
    (52) expression_list -> . expression
    (53) expression_list -> . expression COMMA expression_list
    (1) expression -> . NUMBER
    (2) expression -> . FLOAT
    (3) expression -> . CHAR
    (4) expression -> . STRING
    (5) expression -> . LIST LPAREN expression_list RPAREN
    (6) expression -> . LIST LPAREN RPAREN
    (7) expression -> . LBRACKET expression_list RBRACKET
    (8) expression -> . ARRAY LPAREN expression_list RPAREN
    (9) expression -> . LBRACKET RBRACKET
    (10) expression -> . ARRAY LPAREN RPAREN
    (11) expression -> . IDENTIFIER LBRACKET expression RBRACKET
    (12) expression -> . MINUS expression
    (13) expression -> . NOT expression
    (14) expression -> . expression PLUS expression
    (15) expression -> . expression MINUS expression
    (16) expression -> . expression TIMES expression
    (17) expression -> . expression DIVIDE expression
    (18) expression -> . expression LESS_THEN expression
    (19) expression -> . expression GREATER_THEN expression
    (20) expression -> . expression LESS_EQUALS expression
    (21) expression -> . expression GREATER_EQUALS expression
    (22) expression -> . expression EQUALS expression
    (23) expression -> . expression NOT_EQUALS expression
    (24) expression -> . expression AND expression
    (25) expression -> . expression NAND expression
    (26) expression -> . expression OR expression
    (27) expression -> . expression NOR expression
    (28) expression -> . expression XOR expression
    (29) expression -> . expression EQ expression
    (30) expression -> . expression NEQ expression
    (31) expression -> . expression IMPL expression
    (32) expression -> . LPAREN expression RPAREN
    (33) expression -> . TRUE
    (34) expression -> . FALSE
    (35) expression -> . IDENTIFIER
    (36) expression -> . IDENTIFIER ASSIGN expression
    (37) expression -> . BEGIN body END
    (40) expression -> . LOOP expression DO expression
    (41) expression -> . FOR expression SEPARATOR expression SEPARATOR expression DO expression
    (42) expression -> . WHILE expression DO expression
    (43) expression -> . IF expression THEN expression
    (44) expression -> . IF expression THEN expression ELSE expression
    (47) expression -> . LOCK identifier_list IN expression
    (50) expression -> . LET assign_list IN expression
    (51) expression -> . LETREC assign_list IN expression
    (54) expression -> . LAMBDA identifier_list ARROW expression
    (55) expression -> . LAMBDA ARROW expression
    (56) expression -> . expression LPAREN expression_list RPAREN
    (57) expression -> . expression LPAREN RPAREN
    (62) expression -> . STRUCT BEGIN struct_body END
    (63) expression -> . expression dots IDENTIFIER
    (64) expression -> . dots IDENTIFIER
    (65) expression -> . EXTEND expression BEGIN struct_body END
    (66) expression -> . PROC LPAREN identifier_list RPAREN identifier_list ARROW expression
    (67) expression -> . PROC LPAREN RPAREN identifier_list ARROW expression
    (68) expression -> . PROC LPAREN identifier_list RPAREN ARROW expression
    (69) expression -> . PROC LPAREN RPAREN ARROW expression
    (58) dots -> . DOT
    (59) dots -> . dots DOT

    RBRACKET        shift and go to state 52
    NUMBER          shift and go to state 2
    FLOAT           shift and go to state 3
    CHAR            shift and go to state 4
    STRING          shift and go to state 5
    LIST            shift and go to state 6
    LBRACKET        shift and go to state 8
    ARRAY           shift and go to state 9
    IDENTIFIER      shift and go to state 10
    MINUS           shift and go to state 11
    NOT             shift and go to state 12
    LPAREN          shift and go to state 7
    TRUE            shift and go to state 13
    FALSE           shift and go to state 14
    BEGIN           shift and go to state 15
    LOOP            shift and go to state 16
    FOR             shift and go to state 17
    WHILE           shift and go to state 18
    IF              shift and go to state 19
    LOCK            shift and go to state 20
    LET             shift and go to state 21
    LETREC          shift and go to state 22
    LAMBDA          shift and go to state 23
    STRUCT          shift and go to state 24
    EXTEND          shift and go to state 26
    PROC            shift and go to state 27
    DOT             shift and go to state 28

    expression_list                shift and go to state 51
    expression                     shift and go to state 53
    dots                           shift and go to state 25

state 9

    (8) expression -> ARRAY . LPAREN expression_list RPAREN
    (10) expression -> ARRAY . LPAREN RPAREN

    LPAREN          shift and go to state 54


state 10

    (11) expression -> IDENTIFIER . LBRACKET expression RBRACKET
    (35) expression -> IDENTIFIER .
    (36) expression -> IDENTIFIER . ASSIGN expression

    LBRACKET        shift and go to state 55
    PLUS            reduce using rule 35 (expression -> IDENTIFIER .)
    MINUS           reduce using rule 35 (expression -> IDENTIFIER .)
    TIMES           reduce using rule 35 (expression -> IDENTIFIER .)
    DIVIDE          reduce using rule 35 (expression -> IDENTIFIER .)
    LESS_THEN       reduce using rule 35 (expression -> IDENTIFIER .)
    GREATER_THEN    reduce using rule 35 (expression -> IDENTIFIER .)
    LESS_EQUALS     reduce using rule 35 (expression -> IDENTIFIER .)
    GREATER_EQUALS  reduce using rule 35 (expression -> IDENTIFIER .)
    EQUALS          reduce using rule 35 (expression -> IDENTIFIER .)
    NOT_EQUALS      reduce using rule 35 (expression -> IDENTIFIER .)
    AND             reduce using rule 35 (expression -> IDENTIFIER .)
    NAND            reduce using rule 35 (expression -> IDENTIFIER .)
    OR              reduce using rule 35 (expression -> IDENTIFIER .)
    NOR             reduce using rule 35 (expression -> IDENTIFIER .)
    XOR             reduce using rule 35 (expression -> IDENTIFIER .)
    EQ              reduce using rule 35 (expression -> IDENTIFIER .)
    NEQ             reduce using rule 35 (expression -> IDENTIFIER .)
    IMPL            reduce using rule 35 (expression -> IDENTIFIER .)
    LPAREN          reduce using rule 35 (expression -> IDENTIFIER .)
    DOT             reduce using rule 35 (expression -> IDENTIFIER .)
    $end            reduce using rule 35 (expression -> IDENTIFIER .)
    RPAREN          reduce using rule 35 (expression -> IDENTIFIER .)
    COMMA           reduce using rule 35 (expression -> IDENTIFIER .)
    RBRACKET        reduce using rule 35 (expression -> IDENTIFIER .)
    END             reduce using rule 35 (expression -> IDENTIFIER .)
    SEPARATOR       reduce using rule 35 (expression -> IDENTIFIER .)
    DO              reduce using rule 35 (expression -> IDENTIFIER .)
    THEN            reduce using rule 35 (expression -> IDENTIFIER .)
    BEGIN           reduce using rule 35 (expression -> IDENTIFIER .)
    ELSE            reduce using rule 35 (expression -> IDENTIFIER .)
    IN              reduce using rule 35 (expression -> IDENTIFIER .)
    ASSIGN          shift and go to state 56


state 11

    (12) expression -> MINUS . expression
    (1) expression -> . NUMBER
    (2) expression -> . FLOAT
    (3) expression -> . CHAR
    (4) expression -> . STRING
    (5) expression -> . LIST LPAREN expression_list RPAREN
    (6) expression -> . LIST LPAREN RPAREN
    (7) expression -> . LBRACKET expression_list RBRACKET
    (8) expression -> . ARRAY LPAREN expression_list RPAREN
    (9) expression -> . LBRACKET RBRACKET
    (10) expression -> . ARRAY LPAREN RPAREN
    (11) expression -> . IDENTIFIER LBRACKET expression RBRACKET
    (12) expression -> . MINUS expression
    (13) expression -> . NOT expression
    (14) expression -> . expression PLUS expression
    (15) expression -> . expression MINUS expression
    (16) expression -> . expression TIMES expression
    (17) expression -> . expression DIVIDE expression
    (18) expression -> . expression LESS_THEN expression
    (19) expression -> . expression GREATER_THEN expression
    (20) expression -> . expression LESS_EQUALS expression
    (21) expression -> . expression GREATER_EQUALS expression
    (22) expression -> . expression EQUALS expression
    (23) expression -> . expression NOT_EQUALS expression
    (24) expression -> . expression AND expression
    (25) expression -> . expression NAND expression
    (26) expression -> . expression OR expression
    (27) expression -> . expression NOR expression
    (28) expression -> . expression XOR expression
    (29) expression -> . expression EQ expression
    (30) expression -> . expression NEQ expression
    (31) expression -> . expression IMPL expression
    (32) expression -> . LPAREN expression RPAREN
    (33) expression -> . TRUE
    (34) expression -> . FALSE
    (35) expression -> . IDENTIFIER
    (36) expression -> . IDENTIFIER ASSIGN expression
    (37) expression -> . BEGIN body END
    (40) expression -> . LOOP expression DO expression
    (41) expression -> . FOR expression SEPARATOR expression SEPARATOR expression DO expression
    (42) expression -> . WHILE expression DO expression
    (43) expression -> . IF expression THEN expression
    (44) expression -> . IF expression THEN expression ELSE expression
    (47) expression -> . LOCK identifier_list IN expression
    (50) expression -> . LET assign_list IN expression
    (51) expression -> . LETREC assign_list IN expression
    (54) expression -> . LAMBDA identifier_list ARROW expression
    (55) expression -> . LAMBDA ARROW expression
    (56) expression -> . expression LPAREN expression_list RPAREN
    (57) expression -> . expression LPAREN RPAREN
    (62) expression -> . STRUCT BEGIN struct_body END
    (63) expression -> . expression dots IDENTIFIER
    (64) expression -> . dots IDENTIFIER
    (65) expression -> . EXTEND expression BEGIN struct_body END
    (66) expression -> . PROC LPAREN identifier_list RPAREN identifier_list ARROW expression
    (67) expression -> . PROC LPAREN RPAREN identifier_list ARROW expression
    (68) expression -> . PROC LPAREN identifier_list RPAREN ARROW expression
    (69) expression -> . PROC LPAREN RPAREN ARROW expression
    (58) dots -> . DOT
    (59) dots -> . dots DOT

    NUMBER          shift and go to state 2
    FLOAT           shift and go to state 3
    CHAR            shift and go to state 4
    STRING          shift and go to state 5
    LIST            shift and go to state 6
    LBRACKET        shift and go to state 8
    ARRAY           shift and go to state 9
    IDENTIFIER      shift and go to state 10
    MINUS           shift and go to state 11
    NOT             shift and go to state 12
    LPAREN          shift and go to state 7
    TRUE            shift and go to state 13
    FALSE           shift and go to state 14
    BEGIN           shift and go to state 15
    LOOP            shift and go to state 16
    FOR             shift and go to state 17
    WHILE           shift and go to state 18
    IF              shift and go to state 19
    LOCK            shift and go to state 20
    LET             shift and go to state 21
    LETREC          shift and go to state 22
    LAMBDA          shift and go to state 23
    STRUCT          shift and go to state 24
    EXTEND          shift and go to state 26
    PROC            shift and go to state 27
    DOT             shift and go to state 28

    expression                     shift and go to state 57
    dots                           shift and go to state 25

state 12

    (13) expression -> NOT . expression
    (1) expression -> . NUMBER
    (2) expression -> . FLOAT
    (3) expression -> . CHAR
    (4) expression -> . STRING
    (5) expression -> . LIST LPAREN expression_list RPAREN
    (6) expression -> . LIST LPAREN RPAREN
    (7) expression -> . LBRACKET expression_list RBRACKET
    (8) expression -> . ARRAY LPAREN expression_list RPAREN
    (9) expression -> . LBRACKET RBRACKET
    (10) expression -> . ARRAY LPAREN RPAREN
    (11) expression -> . IDENTIFIER LBRACKET expression RBRACKET
    (12) expression -> . MINUS expression
    (13) expression -> . NOT expression
    (14) expression -> . expression PLUS expression
    (15) expression -> . expression MINUS expression
    (16) expression -> . expression TIMES expression
    (17) expression -> . expression DIVIDE expression
    (18) expression -> . expression LESS_THEN expression
    (19) expression -> . expression GREATER_THEN expression
    (20) expression -> . expression LESS_EQUALS expression
    (21) expression -> . expression GREATER_EQUALS expression
    (22) expression -> . expression EQUALS expression
    (23) expression -> . expression NOT_EQUALS expression
    (24) expression -> . expression AND expression
    (25) expression -> . expression NAND expression
    (26) expression -> . expression OR expression
    (27) expression -> . expression NOR expression
    (28) expression -> . expression XOR expression
    (29) expression -> . expression EQ expression
    (30) expression -> . expression NEQ expression
    (31) expression -> . expression IMPL expression
    (32) expression -> . LPAREN expression RPAREN
    (33) expression -> . TRUE
    (34) expression -> . FALSE
    (35) expression -> . IDENTIFIER
    (36) expression -> . IDENTIFIER ASSIGN expression
    (37) expression -> . BEGIN body END
    (40) expression -> . LOOP expression DO expression
    (41) expression -> . FOR expression SEPARATOR expression SEPARATOR expression DO expression
    (42) expression -> . WHILE expression DO expression
    (43) expression -> . IF expression THEN expression
    (44) expression -> . IF expression THEN expression ELSE expression
    (47) expression -> . LOCK identifier_list IN expression
    (50) expression -> . LET assign_list IN expression
    (51) expression -> . LETREC assign_list IN expression
    (54) expression -> . LAMBDA identifier_list ARROW expression
    (55) expression -> . LAMBDA ARROW expression
    (56) expression -> . expression LPAREN expression_list RPAREN
    (57) expression -> . expression LPAREN RPAREN
    (62) expression -> . STRUCT BEGIN struct_body END
    (63) expression -> . expression dots IDENTIFIER
    (64) expression -> . dots IDENTIFIER
    (65) expression -> . EXTEND expression BEGIN struct_body END
    (66) expression -> . PROC LPAREN identifier_list RPAREN identifier_list ARROW expression
    (67) expression -> . PROC LPAREN RPAREN identifier_list ARROW expression
    (68) expression -> . PROC LPAREN identifier_list RPAREN ARROW expression
    (69) expression -> . PROC LPAREN RPAREN ARROW expression
    (58) dots -> . DOT
    (59) dots -> . dots DOT

    NUMBER          shift and go to state 2
    FLOAT           shift and go to state 3
    CHAR            shift and go to state 4
    STRING          shift and go to state 5
    LIST            shift and go to state 6
    LBRACKET        shift and go to state 8
    ARRAY           shift and go to state 9
    IDENTIFIER      shift and go to state 10
    MINUS           shift and go to state 11
    NOT             shift and go to state 12
    LPAREN          shift and go to state 7
    TRUE            shift and go to state 13
    FALSE           shift and go to state 14
    BEGIN           shift and go to state 15
    LOOP            shift and go to state 16
    FOR             shift and go to state 17
    WHILE           shift and go to state 18
    IF              shift and go to state 19
    LOCK            shift and go to state 20
    LET             shift and go to state 21
    LETREC          shift and go to state 22
    LAMBDA          shift and go to state 23
    STRUCT          shift and go to state 24
    EXTEND          shift and go to state 26
    PROC            shift and go to state 27
    DOT             shift and go to state 28

    expression                     shift and go to state 58
    dots                           shift and go to state 25

state 13

    (33) expression -> TRUE .

    PLUS            reduce using rule 33 (expression -> TRUE .)
    MINUS           reduce using rule 33 (expression -> TRUE .)
    TIMES           reduce using rule 33 (expression -> TRUE .)
    DIVIDE          reduce using rule 33 (expression -> TRUE .)
    LESS_THEN       reduce using rule 33 (expression -> TRUE .)
    GREATER_THEN    reduce using rule 33 (expression -> TRUE .)
    LESS_EQUALS     reduce using rule 33 (expression -> TRUE .)
    GREATER_EQUALS  reduce using rule 33 (expression -> TRUE .)
    EQUALS          reduce using rule 33 (expression -> TRUE .)
    NOT_EQUALS      reduce using rule 33 (expression -> TRUE .)
    AND             reduce using rule 33 (expression -> TRUE .)
    NAND            reduce using rule 33 (expression -> TRUE .)
    OR              reduce using rule 33 (expression -> TRUE .)
    NOR             reduce using rule 33 (expression -> TRUE .)
    XOR             reduce using rule 33 (expression -> TRUE .)
    EQ              reduce using rule 33 (expression -> TRUE .)
    NEQ             reduce using rule 33 (expression -> TRUE .)
    IMPL            reduce using rule 33 (expression -> TRUE .)
    LPAREN          reduce using rule 33 (expression -> TRUE .)
    DOT             reduce using rule 33 (expression -> TRUE .)
    $end            reduce using rule 33 (expression -> TRUE .)
    RPAREN          reduce using rule 33 (expression -> TRUE .)
    COMMA           reduce using rule 33 (expression -> TRUE .)
    RBRACKET        reduce using rule 33 (expression -> TRUE .)
    END             reduce using rule 33 (expression -> TRUE .)
    SEPARATOR       reduce using rule 33 (expression -> TRUE .)
    DO              reduce using rule 33 (expression -> TRUE .)
    THEN            reduce using rule 33 (expression -> TRUE .)
    BEGIN           reduce using rule 33 (expression -> TRUE .)
    ELSE            reduce using rule 33 (expression -> TRUE .)
    IN              reduce using rule 33 (expression -> TRUE .)


state 14

    (34) expression -> FALSE .

    PLUS            reduce using rule 34 (expression -> FALSE .)
    MINUS           reduce using rule 34 (expression -> FALSE .)
    TIMES           reduce using rule 34 (expression -> FALSE .)
    DIVIDE          reduce using rule 34 (expression -> FALSE .)
    LESS_THEN       reduce using rule 34 (expression -> FALSE .)
    GREATER_THEN    reduce using rule 34 (expression -> FALSE .)
    LESS_EQUALS     reduce using rule 34 (expression -> FALSE .)
    GREATER_EQUALS  reduce using rule 34 (expression -> FALSE .)
    EQUALS          reduce using rule 34 (expression -> FALSE .)
    NOT_EQUALS      reduce using rule 34 (expression -> FALSE .)
    AND             reduce using rule 34 (expression -> FALSE .)
    NAND            reduce using rule 34 (expression -> FALSE .)
    OR              reduce using rule 34 (expression -> FALSE .)
    NOR             reduce using rule 34 (expression -> FALSE .)
    XOR             reduce using rule 34 (expression -> FALSE .)
    EQ              reduce using rule 34 (expression -> FALSE .)
    NEQ             reduce using rule 34 (expression -> FALSE .)
    IMPL            reduce using rule 34 (expression -> FALSE .)
    LPAREN          reduce using rule 34 (expression -> FALSE .)
    DOT             reduce using rule 34 (expression -> FALSE .)
    $end            reduce using rule 34 (expression -> FALSE .)
    RPAREN          reduce using rule 34 (expression -> FALSE .)
    COMMA           reduce using rule 34 (expression -> FALSE .)
    RBRACKET        reduce using rule 34 (expression -> FALSE .)
    END             reduce using rule 34 (expression -> FALSE .)
    SEPARATOR       reduce using rule 34 (expression -> FALSE .)
    DO              reduce using rule 34 (expression -> FALSE .)
    THEN            reduce using rule 34 (expression -> FALSE .)
    BEGIN           reduce using rule 34 (expression -> FALSE .)
    ELSE            reduce using rule 34 (expression -> FALSE .)
    IN              reduce using rule 34 (expression -> FALSE .)


state 15

    (37) expression -> BEGIN . body END
    (38) body -> . expression
    (39) body -> . body SEPARATOR expression
    (1) expression -> . NUMBER
    (2) expression -> . FLOAT
    (3) expression -> . CHAR
    (4) expression -> . STRING
    (5) expression -> . LIST LPAREN expression_list RPAREN
    (6) expression -> . LIST LPAREN RPAREN
    (7) expression -> . LBRACKET expression_list RBRACKET
    (8) expression -> . ARRAY LPAREN expression_list RPAREN
    (9) expression -> . LBRACKET RBRACKET
    (10) expression -> . ARRAY LPAREN RPAREN
    (11) expression -> . IDENTIFIER LBRACKET expression RBRACKET
    (12) expression -> . MINUS expression
    (13) expression -> . NOT expression
    (14) expression -> . expression PLUS expression
    (15) expression -> . expression MINUS expression
    (16) expression -> . expression TIMES expression
    (17) expression -> . expression DIVIDE expression
    (18) expression -> . expression LESS_THEN expression
    (19) expression -> . expression GREATER_THEN expression
    (20) expression -> . expression LESS_EQUALS expression
    (21) expression -> . expression GREATER_EQUALS expression
    (22) expression -> . expression EQUALS expression
    (23) expression -> . expression NOT_EQUALS expression
    (24) expression -> . expression AND expression
    (25) expression -> . expression NAND expression
    (26) expression -> . expression OR expression
    (27) expression -> . expression NOR expression
    (28) expression -> . expression XOR expression
    (29) expression -> . expression EQ expression
    (30) expression -> . expression NEQ expression
    (31) expression -> . expression IMPL expression
    (32) expression -> . LPAREN expression RPAREN
    (33) expression -> . TRUE
    (34) expression -> . FALSE
    (35) expression -> . IDENTIFIER
    (36) expression -> . IDENTIFIER ASSIGN expression
    (37) expression -> . BEGIN body END
    (40) expression -> . LOOP expression DO expression
    (41) expression -> . FOR expression SEPARATOR expression SEPARATOR expression DO expression
    (42) expression -> . WHILE expression DO expression
    (43) expression -> . IF expression THEN expression
    (44) expression -> . IF expression THEN expression ELSE expression
    (47) expression -> . LOCK identifier_list IN expression
    (50) expression -> . LET assign_list IN expression
    (51) expression -> . LETREC assign_list IN expression
    (54) expression -> . LAMBDA identifier_list ARROW expression
    (55) expression -> . LAMBDA ARROW expression
    (56) expression -> . expression LPAREN expression_list RPAREN
    (57) expression -> . expression LPAREN RPAREN
    (62) expression -> . STRUCT BEGIN struct_body END
    (63) expression -> . expression dots IDENTIFIER
    (64) expression -> . dots IDENTIFIER
    (65) expression -> . EXTEND expression BEGIN struct_body END
    (66) expression -> . PROC LPAREN identifier_list RPAREN identifier_list ARROW expression
    (67) expression -> . PROC LPAREN RPAREN identifier_list ARROW expression
    (68) expression -> . PROC LPAREN identifier_list RPAREN ARROW expression
    (69) expression -> . PROC LPAREN RPAREN ARROW expression
    (58) dots -> . DOT
    (59) dots -> . dots DOT

    NUMBER          shift and go to state 2
    FLOAT           shift and go to state 3
    CHAR            shift and go to state 4
    STRING          shift and go to state 5
    LIST            shift and go to state 6
    LBRACKET        shift and go to state 8
    ARRAY           shift and go to state 9
    IDENTIFIER      shift and go to state 10
    MINUS           shift and go to state 11
    NOT             shift and go to state 12
    LPAREN          shift and go to state 7
    TRUE            shift and go to state 13
    FALSE           shift and go to state 14
    BEGIN           shift and go to state 15
    LOOP            shift and go to state 16
    FOR             shift and go to state 17
    WHILE           shift and go to state 18
    IF              shift and go to state 19
    LOCK            shift and go to state 20
    LET             shift and go to state 21
    LETREC          shift and go to state 22
    LAMBDA          shift and go to state 23
    STRUCT          shift and go to state 24
    EXTEND          shift and go to state 26
    PROC            shift and go to state 27
    DOT             shift and go to state 28

    body                           shift and go to state 59
    expression                     shift and go to state 60
    dots                           shift and go to state 25

state 16

    (40) expression -> LOOP . expression DO expression
    (1) expression -> . NUMBER
    (2) expression -> . FLOAT
    (3) expression -> . CHAR
    (4) expression -> . STRING
    (5) expression -> . LIST LPAREN expression_list RPAREN
    (6) expression -> . LIST LPAREN RPAREN
    (7) expression -> . LBRACKET expression_list RBRACKET
    (8) expression -> . ARRAY LPAREN expression_list RPAREN
    (9) expression -> . LBRACKET RBRACKET
    (10) expression -> . ARRAY LPAREN RPAREN
    (11) expression -> . IDENTIFIER LBRACKET expression RBRACKET
    (12) expression -> . MINUS expression
    (13) expression -> . NOT expression
    (14) expression -> . expression PLUS expression
    (15) expression -> . expression MINUS expression
    (16) expression -> . expression TIMES expression
    (17) expression -> . expression DIVIDE expression
    (18) expression -> . expression LESS_THEN expression
    (19) expression -> . expression GREATER_THEN expression
    (20) expression -> . expression LESS_EQUALS expression
    (21) expression -> . expression GREATER_EQUALS expression
    (22) expression -> . expression EQUALS expression
    (23) expression -> . expression NOT_EQUALS expression
    (24) expression -> . expression AND expression
    (25) expression -> . expression NAND expression
    (26) expression -> . expression OR expression
    (27) expression -> . expression NOR expression
    (28) expression -> . expression XOR expression
    (29) expression -> . expression EQ expression
    (30) expression -> . expression NEQ expression
    (31) expression -> . expression IMPL expression
    (32) expression -> . LPAREN expression RPAREN
    (33) expression -> . TRUE
    (34) expression -> . FALSE
    (35) expression -> . IDENTIFIER
    (36) expression -> . IDENTIFIER ASSIGN expression
    (37) expression -> . BEGIN body END
    (40) expression -> . LOOP expression DO expression
    (41) expression -> . FOR expression SEPARATOR expression SEPARATOR expression DO expression
    (42) expression -> . WHILE expression DO expression
    (43) expression -> . IF expression THEN expression
    (44) expression -> . IF expression THEN expression ELSE expression
    (47) expression -> . LOCK identifier_list IN expression
    (50) expression -> . LET assign_list IN expression
    (51) expression -> . LETREC assign_list IN expression
    (54) expression -> . LAMBDA identifier_list ARROW expression
    (55) expression -> . LAMBDA ARROW expression
    (56) expression -> . expression LPAREN expression_list RPAREN
    (57) expression -> . expression LPAREN RPAREN
    (62) expression -> . STRUCT BEGIN struct_body END
    (63) expression -> . expression dots IDENTIFIER
    (64) expression -> . dots IDENTIFIER
    (65) expression -> . EXTEND expression BEGIN struct_body END
    (66) expression -> . PROC LPAREN identifier_list RPAREN identifier_list ARROW expression
    (67) expression -> . PROC LPAREN RPAREN identifier_list ARROW expression
    (68) expression -> . PROC LPAREN identifier_list RPAREN ARROW expression
    (69) expression -> . PROC LPAREN RPAREN ARROW expression
    (58) dots -> . DOT
    (59) dots -> . dots DOT

    NUMBER          shift and go to state 2
    FLOAT           shift and go to state 3
    CHAR            shift and go to state 4
    STRING          shift and go to state 5
    LIST            shift and go to state 6
    LBRACKET        shift and go to state 8
    ARRAY           shift and go to state 9
    IDENTIFIER      shift and go to state 10
    MINUS           shift and go to state 11
    NOT             shift and go to state 12
    LPAREN          shift and go to state 7
    TRUE            shift and go to state 13
    FALSE           shift and go to state 14
    BEGIN           shift and go to state 15
    LOOP            shift and go to state 16
    FOR             shift and go to state 17
    WHILE           shift and go to state 18
    IF              shift and go to state 19
    LOCK            shift and go to state 20
    LET             shift and go to state 21
    LETREC          shift and go to state 22
    LAMBDA          shift and go to state 23
    STRUCT          shift and go to state 24
    EXTEND          shift and go to state 26
    PROC            shift and go to state 27
    DOT             shift and go to state 28

    expression                     shift and go to state 61
    dots                           shift and go to state 25

state 17

    (41) expression -> FOR . expression SEPARATOR expression SEPARATOR expression DO expression
    (1) expression -> . NUMBER
    (2) expression -> . FLOAT
    (3) expression -> . CHAR
    (4) expression -> . STRING
    (5) expression -> . LIST LPAREN expression_list RPAREN
    (6) expression -> . LIST LPAREN RPAREN
    (7) expression -> . LBRACKET expression_list RBRACKET
    (8) expression -> . ARRAY LPAREN expression_list RPAREN
    (9) expression -> . LBRACKET RBRACKET
    (10) expression -> . ARRAY LPAREN RPAREN
    (11) expression -> . IDENTIFIER LBRACKET expression RBRACKET
    (12) expression -> . MINUS expression
    (13) expression -> . NOT expression
    (14) expression -> . expression PLUS expression
    (15) expression -> . expression MINUS expression
    (16) expression -> . expression TIMES expression
    (17) expression -> . expression DIVIDE expression
    (18) expression -> . expression LESS_THEN expression
    (19) expression -> . expression GREATER_THEN expression
    (20) expression -> . expression LESS_EQUALS expression
    (21) expression -> . expression GREATER_EQUALS expression
    (22) expression -> . expression EQUALS expression
    (23) expression -> . expression NOT_EQUALS expression
    (24) expression -> . expression AND expression
    (25) expression -> . expression NAND expression
    (26) expression -> . expression OR expression
    (27) expression -> . expression NOR expression
    (28) expression -> . expression XOR expression
    (29) expression -> . expression EQ expression
    (30) expression -> . expression NEQ expression
    (31) expression -> . expression IMPL expression
    (32) expression -> . LPAREN expression RPAREN
    (33) expression -> . TRUE
    (34) expression -> . FALSE
    (35) expression -> . IDENTIFIER
    (36) expression -> . IDENTIFIER ASSIGN expression
    (37) expression -> . BEGIN body END
    (40) expression -> . LOOP expression DO expression
    (41) expression -> . FOR expression SEPARATOR expression SEPARATOR expression DO expression
    (42) expression -> . WHILE expression DO expression
    (43) expression -> . IF expression THEN expression
    (44) expression -> . IF expression THEN expression ELSE expression
    (47) expression -> . LOCK identifier_list IN expression
    (50) expression -> . LET assign_list IN expression
    (51) expression -> . LETREC assign_list IN expression
    (54) expression -> . LAMBDA identifier_list ARROW expression
    (55) expression -> . LAMBDA ARROW expression
    (56) expression -> . expression LPAREN expression_list RPAREN
    (57) expression -> . expression LPAREN RPAREN
    (62) expression -> . STRUCT BEGIN struct_body END
    (63) expression -> . expression dots IDENTIFIER
    (64) expression -> . dots IDENTIFIER
    (65) expression -> . EXTEND expression BEGIN struct_body END
    (66) expression -> . PROC LPAREN identifier_list RPAREN identifier_list ARROW expression
    (67) expression -> . PROC LPAREN RPAREN identifier_list ARROW expression
    (68) expression -> . PROC LPAREN identifier_list RPAREN ARROW expression
    (69) expression -> . PROC LPAREN RPAREN ARROW expression
    (58) dots -> . DOT
    (59) dots -> . dots DOT

    NUMBER          shift and go to state 2
    FLOAT           shift and go to state 3
    CHAR            shift and go to state 4
    STRING          shift and go to state 5
    LIST            shift and go to state 6
    LBRACKET        shift and go to state 8
    ARRAY           shift and go to state 9
    IDENTIFIER      shift and go to state 10
    MINUS           shift and go to state 11
    NOT             shift and go to state 12
    LPAREN          shift and go to state 7
    TRUE            shift and go to state 13
    FALSE           shift and go to state 14
    BEGIN           shift and go to state 15
    LOOP            shift and go to state 16
    FOR             shift and go to state 17
    WHILE           shift and go to state 18
    IF              shift and go to state 19
    LOCK            shift and go to state 20
    LET             shift and go to state 21
    LETREC          shift and go to state 22
    LAMBDA          shift and go to state 23
    STRUCT          shift and go to state 24
    EXTEND          shift and go to state 26
    PROC            shift and go to state 27
    DOT             shift and go to state 28

    expression                     shift and go to state 62
    dots                           shift and go to state 25

state 18

    (42) expression -> WHILE . expression DO expression
    (1) expression -> . NUMBER
    (2) expression -> . FLOAT
    (3) expression -> . CHAR
    (4) expression -> . STRING
    (5) expression -> . LIST LPAREN expression_list RPAREN
    (6) expression -> . LIST LPAREN RPAREN
    (7) expression -> . LBRACKET expression_list RBRACKET
    (8) expression -> . ARRAY LPAREN expression_list RPAREN
    (9) expression -> . LBRACKET RBRACKET
    (10) expression -> . ARRAY LPAREN RPAREN
    (11) expression -> . IDENTIFIER LBRACKET expression RBRACKET
    (12) expression -> . MINUS expression
    (13) expression -> . NOT expression
    (14) expression -> . expression PLUS expression
    (15) expression -> . expression MINUS expression
    (16) expression -> . expression TIMES expression
    (17) expression -> . expression DIVIDE expression
    (18) expression -> . expression LESS_THEN expression
    (19) expression -> . expression GREATER_THEN expression
    (20) expression -> . expression LESS_EQUALS expression
    (21) expression -> . expression GREATER_EQUALS expression
    (22) expression -> . expression EQUALS expression
    (23) expression -> . expression NOT_EQUALS expression
    (24) expression -> . expression AND expression
    (25) expression -> . expression NAND expression
    (26) expression -> . expression OR expression
    (27) expression -> . expression NOR expression
    (28) expression -> . expression XOR expression
    (29) expression -> . expression EQ expression
    (30) expression -> . expression NEQ expression
    (31) expression -> . expression IMPL expression
    (32) expression -> . LPAREN expression RPAREN
    (33) expression -> . TRUE
    (34) expression -> . FALSE
    (35) expression -> . IDENTIFIER
    (36) expression -> . IDENTIFIER ASSIGN expression
    (37) expression -> . BEGIN body END
    (40) expression -> . LOOP expression DO expression
    (41) expression -> . FOR expression SEPARATOR expression SEPARATOR expression DO expression
    (42) expression -> . WHILE expression DO expression
    (43) expression -> . IF expression THEN expression
    (44) expression -> . IF expression THEN expression ELSE expression
    (47) expression -> . LOCK identifier_list IN expression
    (50) expression -> . LET assign_list IN expression
    (51) expression -> . LETREC assign_list IN expression
    (54) expression -> . LAMBDA identifier_list ARROW expression
    (55) expression -> . LAMBDA ARROW expression
    (56) expression -> . expression LPAREN expression_list RPAREN
    (57) expression -> . expression LPAREN RPAREN
    (62) expression -> . STRUCT BEGIN struct_body END
    (63) expression -> . expression dots IDENTIFIER
    (64) expression -> . dots IDENTIFIER
    (65) expression -> . EXTEND expression BEGIN struct_body END
    (66) expression -> . PROC LPAREN identifier_list RPAREN identifier_list ARROW expression
    (67) expression -> . PROC LPAREN RPAREN identifier_list ARROW expression
    (68) expression -> . PROC LPAREN identifier_list RPAREN ARROW expression
    (69) expression -> . PROC LPAREN RPAREN ARROW expression
    (58) dots -> . DOT
    (59) dots -> . dots DOT

    NUMBER          shift and go to state 2
    FLOAT           shift and go to state 3
    CHAR            shift and go to state 4
    STRING          shift and go to state 5
    LIST            shift and go to state 6
    LBRACKET        shift and go to state 8
    ARRAY           shift and go to state 9
    IDENTIFIER      shift and go to state 10
    MINUS           shift and go to state 11
    NOT             shift and go to state 12
    LPAREN          shift and go to state 7
    TRUE            shift and go to state 13
    FALSE           shift and go to state 14
    BEGIN           shift and go to state 15
    LOOP            shift and go to state 16
    FOR             shift and go to state 17
    WHILE           shift and go to state 18
    IF              shift and go to state 19
    LOCK            shift and go to state 20
    LET             shift and go to state 21
    LETREC          shift and go to state 22
    LAMBDA          shift and go to state 23
    STRUCT          shift and go to state 24
    EXTEND          shift and go to state 26
    PROC            shift and go to state 27
    DOT             shift and go to state 28

    expression                     shift and go to state 63
    dots                           shift and go to state 25

state 19

    (43) expression -> IF . expression THEN expression
    (44) expression -> IF . expression THEN expression ELSE expression
    (1) expression -> . NUMBER
    (2) expression -> . FLOAT
    (3) expression -> . CHAR
    (4) expression -> . STRING
    (5) expression -> . LIST LPAREN expression_list RPAREN
    (6) expression -> . LIST LPAREN RPAREN
    (7) expression -> . LBRACKET expression_list RBRACKET
    (8) expression -> . ARRAY LPAREN expression_list RPAREN
    (9) expression -> . LBRACKET RBRACKET
    (10) expression -> . ARRAY LPAREN RPAREN
    (11) expression -> . IDENTIFIER LBRACKET expression RBRACKET
    (12) expression -> . MINUS expression
    (13) expression -> . NOT expression
    (14) expression -> . expression PLUS expression
    (15) expression -> . expression MINUS expression
    (16) expression -> . expression TIMES expression
    (17) expression -> . expression DIVIDE expression
    (18) expression -> . expression LESS_THEN expression
    (19) expression -> . expression GREATER_THEN expression
    (20) expression -> . expression LESS_EQUALS expression
    (21) expression -> . expression GREATER_EQUALS expression
    (22) expression -> . expression EQUALS expression
    (23) expression -> . expression NOT_EQUALS expression
    (24) expression -> . expression AND expression
    (25) expression -> . expression NAND expression
    (26) expression -> . expression OR expression
    (27) expression -> . expression NOR expression
    (28) expression -> . expression XOR expression
    (29) expression -> . expression EQ expression
    (30) expression -> . expression NEQ expression
    (31) expression -> . expression IMPL expression
    (32) expression -> . LPAREN expression RPAREN
    (33) expression -> . TRUE
    (34) expression -> . FALSE
    (35) expression -> . IDENTIFIER
    (36) expression -> . IDENTIFIER ASSIGN expression
    (37) expression -> . BEGIN body END
    (40) expression -> . LOOP expression DO expression
    (41) expression -> . FOR expression SEPARATOR expression SEPARATOR expression DO expression
    (42) expression -> . WHILE expression DO expression
    (43) expression -> . IF expression THEN expression
    (44) expression -> . IF expression THEN expression ELSE expression
    (47) expression -> . LOCK identifier_list IN expression
    (50) expression -> . LET assign_list IN expression
    (51) expression -> . LETREC assign_list IN expression
    (54) expression -> . LAMBDA identifier_list ARROW expression
    (55) expression -> . LAMBDA ARROW expression
    (56) expression -> . expression LPAREN expression_list RPAREN
    (57) expression -> . expression LPAREN RPAREN
    (62) expression -> . STRUCT BEGIN struct_body END
    (63) expression -> . expression dots IDENTIFIER
    (64) expression -> . dots IDENTIFIER
    (65) expression -> . EXTEND expression BEGIN struct_body END
    (66) expression -> . PROC LPAREN identifier_list RPAREN identifier_list ARROW expression
    (67) expression -> . PROC LPAREN RPAREN identifier_list ARROW expression
    (68) expression -> . PROC LPAREN identifier_list RPAREN ARROW expression
    (69) expression -> . PROC LPAREN RPAREN ARROW expression
    (58) dots -> . DOT
    (59) dots -> . dots DOT

    NUMBER          shift and go to state 2
    FLOAT           shift and go to state 3
    CHAR            shift and go to state 4
    STRING          shift and go to state 5
    LIST            shift and go to state 6
    LBRACKET        shift and go to state 8
    ARRAY           shift and go to state 9
    IDENTIFIER      shift and go to state 10
    MINUS           shift and go to state 11
    NOT             shift and go to state 12
    LPAREN          shift and go to state 7
    TRUE            shift and go to state 13
    FALSE           shift and go to state 14
    BEGIN           shift and go to state 15
    LOOP            shift and go to state 16
    FOR             shift and go to state 17
    WHILE           shift and go to state 18
    IF              shift and go to state 19
    LOCK            shift and go to state 20
    LET             shift and go to state 21
    LETREC          shift and go to state 22
    LAMBDA          shift and go to state 23
    STRUCT          shift and go to state 24
    EXTEND          shift and go to state 26
    PROC            shift and go to state 27
    DOT             shift and go to state 28

    expression                     shift and go to state 64
    dots                           shift and go to state 25

state 20

    (47) expression -> LOCK . identifier_list IN expression
    (45) identifier_list -> . IDENTIFIER
    (46) identifier_list -> . IDENTIFIER COMMA identifier_list

    IDENTIFIER      shift and go to state 66

    identifier_list                shift and go to state 65

state 21

    (50) expression -> LET . assign_list IN expression
    (48) assign_list -> . IDENTIFIER ASSIGN expression
    (49) assign_list -> . assign_list COMMA IDENTIFIER ASSIGN expression

    IDENTIFIER      shift and go to state 68

    assign_list                    shift and go to state 67

state 22

    (51) expression -> LETREC . assign_list IN expression
    (48) assign_list -> . IDENTIFIER ASSIGN expression
    (49) assign_list -> . assign_list COMMA IDENTIFIER ASSIGN expression

    IDENTIFIER      shift and go to state 68

    assign_list                    shift and go to state 69

state 23

    (54) expression -> LAMBDA . identifier_list ARROW expression
    (55) expression -> LAMBDA . ARROW expression
    (45) identifier_list -> . IDENTIFIER
    (46) identifier_list -> . IDENTIFIER COMMA identifier_list

    ARROW           shift and go to state 71
    IDENTIFIER      shift and go to state 66

    identifier_list                shift and go to state 70

state 24

    (62) expression -> STRUCT . BEGIN struct_body END

    BEGIN           shift and go to state 72


state 25

    (64) expression -> dots . IDENTIFIER
    (59) dots -> dots . DOT

    IDENTIFIER      shift and go to state 73
    DOT             shift and go to state 74


state 26

    (65) expression -> EXTEND . expression BEGIN struct_body END
    (1) expression -> . NUMBER
    (2) expression -> . FLOAT
    (3) expression -> . CHAR
    (4) expression -> . STRING
    (5) expression -> . LIST LPAREN expression_list RPAREN
    (6) expression -> . LIST LPAREN RPAREN
    (7) expression -> . LBRACKET expression_list RBRACKET
    (8) expression -> . ARRAY LPAREN expression_list RPAREN
    (9) expression -> . LBRACKET RBRACKET
    (10) expression -> . ARRAY LPAREN RPAREN
    (11) expression -> . IDENTIFIER LBRACKET expression RBRACKET
    (12) expression -> . MINUS expression
    (13) expression -> . NOT expression
    (14) expression -> . expression PLUS expression
    (15) expression -> . expression MINUS expression
    (16) expression -> . expression TIMES expression
    (17) expression -> . expression DIVIDE expression
    (18) expression -> . expression LESS_THEN expression
    (19) expression -> . expression GREATER_THEN expression
    (20) expression -> . expression LESS_EQUALS expression
    (21) expression -> . expression GREATER_EQUALS expression
    (22) expression -> . expression EQUALS expression
    (23) expression -> . expression NOT_EQUALS expression
    (24) expression -> . expression AND expression
    (25) expression -> . expression NAND expression
    (26) expression -> . expression OR expression
    (27) expression -> . expression NOR expression
    (28) expression -> . expression XOR expression
    (29) expression -> . expression EQ expression
    (30) expression -> . expression NEQ expression
    (31) expression -> . expression IMPL expression
    (32) expression -> . LPAREN expression RPAREN
    (33) expression -> . TRUE
    (34) expression -> . FALSE
    (35) expression -> . IDENTIFIER
    (36) expression -> . IDENTIFIER ASSIGN expression
    (37) expression -> . BEGIN body END
    (40) expression -> . LOOP expression DO expression
    (41) expression -> . FOR expression SEPARATOR expression SEPARATOR expression DO expression
    (42) expression -> . WHILE expression DO expression
    (43) expression -> . IF expression THEN expression
    (44) expression -> . IF expression THEN expression ELSE expression
    (47) expression -> . LOCK identifier_list IN expression
    (50) expression -> . LET assign_list IN expression
    (51) expression -> . LETREC assign_list IN expression
    (54) expression -> . LAMBDA identifier_list ARROW expression
    (55) expression -> . LAMBDA ARROW expression
    (56) expression -> . expression LPAREN expression_list RPAREN
    (57) expression -> . expression LPAREN RPAREN
    (62) expression -> . STRUCT BEGIN struct_body END
    (63) expression -> . expression dots IDENTIFIER
    (64) expression -> . dots IDENTIFIER
    (65) expression -> . EXTEND expression BEGIN struct_body END
    (66) expression -> . PROC LPAREN identifier_list RPAREN identifier_list ARROW expression
    (67) expression -> . PROC LPAREN RPAREN identifier_list ARROW expression
    (68) expression -> . PROC LPAREN identifier_list RPAREN ARROW expression
    (69) expression -> . PROC LPAREN RPAREN ARROW expression
    (58) dots -> . DOT
    (59) dots -> . dots DOT

    NUMBER          shift and go to state 2
    FLOAT           shift and go to state 3
    CHAR            shift and go to state 4
    STRING          shift and go to state 5
    LIST            shift and go to state 6
    LBRACKET        shift and go to state 8
    ARRAY           shift and go to state 9
    IDENTIFIER      shift and go to state 10
    MINUS           shift and go to state 11
    NOT             shift and go to state 12
    LPAREN          shift and go to state 7
    TRUE            shift and go to state 13
    FALSE           shift and go to state 14
    BEGIN           shift and go to state 15
    LOOP            shift and go to state 16
    FOR             shift and go to state 17
    WHILE           shift and go to state 18
    IF              shift and go to state 19
    LOCK            shift and go to state 20
    LET             shift and go to state 21
    LETREC          shift and go to state 22
    LAMBDA          shift and go to state 23
    STRUCT          shift and go to state 24
    EXTEND          shift and go to state 26
    PROC            shift and go to state 27
    DOT             shift and go to state 28

    expression                     shift and go to state 75
    dots                           shift and go to state 25

state 27

    (66) expression -> PROC . LPAREN identifier_list RPAREN identifier_list ARROW expression
    (67) expression -> PROC . LPAREN RPAREN identifier_list ARROW expression
    (68) expression -> PROC . LPAREN identifier_list RPAREN ARROW expression
    (69) expression -> PROC . LPAREN RPAREN ARROW expression

    LPAREN          shift and go to state 76


state 28

    (58) dots -> DOT .

    IDENTIFIER      reduce using rule 58 (dots -> DOT .)
    DOT             reduce using rule 58 (dots -> DOT .)


state 29

    (14) expression -> expression PLUS . expression
    (1) expression -> . NUMBER
    (2) expression -> . FLOAT
    (3) expression -> . CHAR
    (4) expression -> . STRING
    (5) expression -> . LIST LPAREN expression_list RPAREN
    (6) expression -> . LIST LPAREN RPAREN
    (7) expression -> . LBRACKET expression_list RBRACKET
    (8) expression -> . ARRAY LPAREN expression_list RPAREN
    (9) expression -> . LBRACKET RBRACKET
    (10) expression -> . ARRAY LPAREN RPAREN
    (11) expression -> . IDENTIFIER LBRACKET expression RBRACKET
    (12) expression -> . MINUS expression
    (13) expression -> . NOT expression
    (14) expression -> . expression PLUS expression
    (15) expression -> . expression MINUS expression
    (16) expression -> . expression TIMES expression
    (17) expression -> . expression DIVIDE expression
    (18) expression -> . expression LESS_THEN expression
    (19) expression -> . expression GREATER_THEN expression
    (20) expression -> . expression LESS_EQUALS expression
    (21) expression -> . expression GREATER_EQUALS expression
    (22) expression -> . expression EQUALS expression
    (23) expression -> . expression NOT_EQUALS expression
    (24) expression -> . expression AND expression
    (25) expression -> . expression NAND expression
    (26) expression -> . expression OR expression
    (27) expression -> . expression NOR expression
    (28) expression -> . expression XOR expression
    (29) expression -> . expression EQ expression
    (30) expression -> . expression NEQ expression
    (31) expression -> . expression IMPL expression
    (32) expression -> . LPAREN expression RPAREN
    (33) expression -> . TRUE
    (34) expression -> . FALSE
    (35) expression -> . IDENTIFIER
    (36) expression -> . IDENTIFIER ASSIGN expression
    (37) expression -> . BEGIN body END
    (40) expression -> . LOOP expression DO expression
    (41) expression -> . FOR expression SEPARATOR expression SEPARATOR expression DO expression
    (42) expression -> . WHILE expression DO expression
    (43) expression -> . IF expression THEN expression
    (44) expression -> . IF expression THEN expression ELSE expression
    (47) expression -> . LOCK identifier_list IN expression
    (50) expression -> . LET assign_list IN expression
    (51) expression -> . LETREC assign_list IN expression
    (54) expression -> . LAMBDA identifier_list ARROW expression
    (55) expression -> . LAMBDA ARROW expression
    (56) expression -> . expression LPAREN expression_list RPAREN
    (57) expression -> . expression LPAREN RPAREN
    (62) expression -> . STRUCT BEGIN struct_body END
    (63) expression -> . expression dots IDENTIFIER
    (64) expression -> . dots IDENTIFIER
    (65) expression -> . EXTEND expression BEGIN struct_body END
    (66) expression -> . PROC LPAREN identifier_list RPAREN identifier_list ARROW expression
    (67) expression -> . PROC LPAREN RPAREN identifier_list ARROW expression
    (68) expression -> . PROC LPAREN identifier_list RPAREN ARROW expression
    (69) expression -> . PROC LPAREN RPAREN ARROW expression
    (58) dots -> . DOT
    (59) dots -> . dots DOT

    NUMBER          shift and go to state 2
    FLOAT           shift and go to state 3
    CHAR            shift and go to state 4
    STRING          shift and go to state 5
    LIST            shift and go to state 6
    LBRACKET        shift and go to state 8
    ARRAY           shift and go to state 9
    IDENTIFIER      shift and go to state 10
    MINUS           shift and go to state 11
    NOT             shift and go to state 12
    LPAREN          shift and go to state 7
    TRUE            shift and go to state 13
    FALSE           shift and go to state 14
    BEGIN           shift and go to state 15
    LOOP            shift and go to state 16
    FOR             shift and go to state 17
    WHILE           shift and go to state 18
    IF              shift and go to state 19
    LOCK            shift and go to state 20
    LET             shift and go to state 21
    LETREC          shift and go to state 22
    LAMBDA          shift and go to state 23
    STRUCT          shift and go to state 24
    EXTEND          shift and go to state 26
    PROC            shift and go to state 27
    DOT             shift and go to state 28

    expression                     shift and go to state 77
    dots                           shift and go to state 25

state 30

    (15) expression -> expression MINUS . expression
    (1) expression -> . NUMBER
    (2) expression -> . FLOAT
    (3) expression -> . CHAR
    (4) expression -> . STRING
    (5) expression -> . LIST LPAREN expression_list RPAREN
    (6) expression -> . LIST LPAREN RPAREN
    (7) expression -> . LBRACKET expression_list RBRACKET
    (8) expression -> . ARRAY LPAREN expression_list RPAREN
    (9) expression -> . LBRACKET RBRACKET
    (10) expression -> . ARRAY LPAREN RPAREN
    (11) expression -> . IDENTIFIER LBRACKET expression RBRACKET
    (12) expression -> . MINUS expression
    (13) expression -> . NOT expression
    (14) expression -> . expression PLUS expression
    (15) expression -> . expression MINUS expression
    (16) expression -> . expression TIMES expression
    (17) expression -> . expression DIVIDE expression
    (18) expression -> . expression LESS_THEN expression
    (19) expression -> . expression GREATER_THEN expression
    (20) expression -> . expression LESS_EQUALS expression
    (21) expression -> . expression GREATER_EQUALS expression
    (22) expression -> . expression EQUALS expression
    (23) expression -> . expression NOT_EQUALS expression
    (24) expression -> . expression AND expression
    (25) expression -> . expression NAND expression
    (26) expression -> . expression OR expression
    (27) expression -> . expression NOR expression
    (28) expression -> . expression XOR expression
    (29) expression -> . expression EQ expression
    (30) expression -> . expression NEQ expression
    (31) expression -> . expression IMPL expression
    (32) expression -> . LPAREN expression RPAREN
    (33) expression -> . TRUE
    (34) expression -> . FALSE
    (35) expression -> . IDENTIFIER
    (36) expression -> . IDENTIFIER ASSIGN expression
    (37) expression -> . BEGIN body END
    (40) expression -> . LOOP expression DO expression
    (41) expression -> . FOR expression SEPARATOR expression SEPARATOR expression DO expression
    (42) expression -> . WHILE expression DO expression
    (43) expression -> . IF expression THEN expression
    (44) expression -> . IF expression THEN expression ELSE expression
    (47) expression -> . LOCK identifier_list IN expression
    (50) expression -> . LET assign_list IN expression
    (51) expression -> . LETREC assign_list IN expression
    (54) expression -> . LAMBDA identifier_list ARROW expression
    (55) expression -> . LAMBDA ARROW expression
    (56) expression -> . expression LPAREN expression_list RPAREN
    (57) expression -> . expression LPAREN RPAREN
    (62) expression -> . STRUCT BEGIN struct_body END
    (63) expression -> . expression dots IDENTIFIER
    (64) expression -> . dots IDENTIFIER
    (65) expression -> . EXTEND expression BEGIN struct_body END
    (66) expression -> . PROC LPAREN identifier_list RPAREN identifier_list ARROW expression
    (67) expression -> . PROC LPAREN RPAREN identifier_list ARROW expression
    (68) expression -> . PROC LPAREN identifier_list RPAREN ARROW expression
    (69) expression -> . PROC LPAREN RPAREN ARROW expression
    (58) dots -> . DOT
    (59) dots -> . dots DOT

    NUMBER          shift and go to state 2
    FLOAT           shift and go to state 3
    CHAR            shift and go to state 4
    STRING          shift and go to state 5
    LIST            shift and go to state 6
    LBRACKET        shift and go to state 8
    ARRAY           shift and go to state 9
    IDENTIFIER      shift and go to state 10
    MINUS           shift and go to state 11
    NOT             shift and go to state 12
    LPAREN          shift and go to state 7
    TRUE            shift and go to state 13
    FALSE           shift and go to state 14
    BEGIN           shift and go to state 15
    LOOP            shift and go to state 16
    FOR             shift and go to state 17
    WHILE           shift and go to state 18
    IF              shift and go to state 19
    LOCK            shift and go to state 20
    LET             shift and go to state 21
    LETREC          shift and go to state 22
    LAMBDA          shift and go to state 23
    STRUCT          shift and go to state 24
    EXTEND          shift and go to state 26
    PROC            shift and go to state 27
    DOT             shift and go to state 28

    expression                     shift and go to state 78
    dots                           shift and go to state 25

state 31

    (16) expression -> expression TIMES . expression
    (1) expression -> . NUMBER
    (2) expression -> . FLOAT
    (3) expression -> . CHAR
    (4) expression -> . STRING
    (5) expression -> . LIST LPAREN expression_list RPAREN
    (6) expression -> . LIST LPAREN RPAREN
    (7) expression -> . LBRACKET expression_list RBRACKET
    (8) expression -> . ARRAY LPAREN expression_list RPAREN
    (9) expression -> . LBRACKET RBRACKET
    (10) expression -> . ARRAY LPAREN RPAREN
    (11) expression -> . IDENTIFIER LBRACKET expression RBRACKET
    (12) expression -> . MINUS expression
    (13) expression -> . NOT expression
    (14) expression -> . expression PLUS expression
    (15) expression -> . expression MINUS expression
    (16) expression -> . expression TIMES expression
    (17) expression -> . expression DIVIDE expression
    (18) expression -> . expression LESS_THEN expression
    (19) expression -> . expression GREATER_THEN expression
    (20) expression -> . expression LESS_EQUALS expression
    (21) expression -> . expression GREATER_EQUALS expression
    (22) expression -> . expression EQUALS expression
    (23) expression -> . expression NOT_EQUALS expression
    (24) expression -> . expression AND expression
    (25) expression -> . expression NAND expression
    (26) expression -> . expression OR expression
    (27) expression -> . expression NOR expression
    (28) expression -> . expression XOR expression
    (29) expression -> . expression EQ expression
    (30) expression -> . expression NEQ expression
    (31) expression -> . expression IMPL expression
    (32) expression -> . LPAREN expression RPAREN
    (33) expression -> . TRUE
    (34) expression -> . FALSE
    (35) expression -> . IDENTIFIER
    (36) expression -> . IDENTIFIER ASSIGN expression
    (37) expression -> . BEGIN body END
    (40) expression -> . LOOP expression DO expression
    (41) expression -> . FOR expression SEPARATOR expression SEPARATOR expression DO expression
    (42) expression -> . WHILE expression DO expression
    (43) expression -> . IF expression THEN expression
    (44) expression -> . IF expression THEN expression ELSE expression
    (47) expression -> . LOCK identifier_list IN expression
    (50) expression -> . LET assign_list IN expression
    (51) expression -> . LETREC assign_list IN expression
    (54) expression -> . LAMBDA identifier_list ARROW expression
    (55) expression -> . LAMBDA ARROW expression
    (56) expression -> . expression LPAREN expression_list RPAREN
    (57) expression -> . expression LPAREN RPAREN
    (62) expression -> . STRUCT BEGIN struct_body END
    (63) expression -> . expression dots IDENTIFIER
    (64) expression -> . dots IDENTIFIER
    (65) expression -> . EXTEND expression BEGIN struct_body END
    (66) expression -> . PROC LPAREN identifier_list RPAREN identifier_list ARROW expression
    (67) expression -> . PROC LPAREN RPAREN identifier_list ARROW expression
    (68) expression -> . PROC LPAREN identifier_list RPAREN ARROW expression
    (69) expression -> . PROC LPAREN RPAREN ARROW expression
    (58) dots -> . DOT
    (59) dots -> . dots DOT

    NUMBER          shift and go to state 2
    FLOAT           shift and go to state 3
    CHAR            shift and go to state 4
    STRING          shift and go to state 5
    LIST            shift and go to state 6
    LBRACKET        shift and go to state 8
    ARRAY           shift and go to state 9
    IDENTIFIER      shift and go to state 10
    MINUS           shift and go to state 11
    NOT             shift and go to state 12
    LPAREN          shift and go to state 7
    TRUE            shift and go to state 13
    FALSE           shift and go to state 14
    BEGIN           shift and go to state 15
    LOOP            shift and go to state 16
    FOR             shift and go to state 17
    WHILE           shift and go to state 18
    IF              shift and go to state 19
    LOCK            shift and go to state 20
    LET             shift and go to state 21
    LETREC          shift and go to state 22
    LAMBDA          shift and go to state 23
    STRUCT          shift and go to state 24
    EXTEND          shift and go to state 26
    PROC            shift and go to state 27
    DOT             shift and go to state 28

    expression                     shift and go to state 79
    dots                           shift and go to state 25

state 32

    (17) expression -> expression DIVIDE . expression
    (1) expression -> . NUMBER
    (2) expression -> . FLOAT
    (3) expression -> . CHAR
    (4) expression -> . STRING
    (5) expression -> . LIST LPAREN expression_list RPAREN
    (6) expression -> . LIST LPAREN RPAREN
    (7) expression -> . LBRACKET expression_list RBRACKET
    (8) expression -> . ARRAY LPAREN expression_list RPAREN
    (9) expression -> . LBRACKET RBRACKET
    (10) expression -> . ARRAY LPAREN RPAREN
    (11) expression -> . IDENTIFIER LBRACKET expression RBRACKET
    (12) expression -> . MINUS expression
    (13) expression -> . NOT expression
    (14) expression -> . expression PLUS expression
    (15) expression -> . expression MINUS expression
    (16) expression -> . expression TIMES expression
    (17) expression -> . expression DIVIDE expression
    (18) expression -> . expression LESS_THEN expression
    (19) expression -> . expression GREATER_THEN expression
    (20) expression -> . expression LESS_EQUALS expression
    (21) expression -> . expression GREATER_EQUALS expression
    (22) expression -> . expression EQUALS expression
    (23) expression -> . expression NOT_EQUALS expression
    (24) expression -> . expression AND expression
    (25) expression -> . expression NAND expression
    (26) expression -> . expression OR expression
    (27) expression -> . expression NOR expression
    (28) expression -> . expression XOR expression
    (29) expression -> . expression EQ expression
    (30) expression -> . expression NEQ expression
    (31) expression -> . expression IMPL expression
    (32) expression -> . LPAREN expression RPAREN
    (33) expression -> . TRUE
    (34) expression -> . FALSE
    (35) expression -> . IDENTIFIER
    (36) expression -> . IDENTIFIER ASSIGN expression
    (37) expression -> . BEGIN body END
    (40) expression -> . LOOP expression DO expression
    (41) expression -> . FOR expression SEPARATOR expression SEPARATOR expression DO expression
    (42) expression -> . WHILE expression DO expression
    (43) expression -> . IF expression THEN expression
    (44) expression -> . IF expression THEN expression ELSE expression
    (47) expression -> . LOCK identifier_list IN expression
    (50) expression -> . LET assign_list IN expression
    (51) expression -> . LETREC assign_list IN expression
    (54) expression -> . LAMBDA identifier_list ARROW expression
    (55) expression -> . LAMBDA ARROW expression
    (56) expression -> . expression LPAREN expression_list RPAREN
    (57) expression -> . expression LPAREN RPAREN
    (62) expression -> . STRUCT BEGIN struct_body END
    (63) expression -> . expression dots IDENTIFIER
    (64) expression -> . dots IDENTIFIER
    (65) expression -> . EXTEND expression BEGIN struct_body END
    (66) expression -> . PROC LPAREN identifier_list RPAREN identifier_list ARROW expression
    (67) expression -> . PROC LPAREN RPAREN identifier_list ARROW expression
    (68) expression -> . PROC LPAREN identifier_list RPAREN ARROW expression
    (69) expression -> . PROC LPAREN RPAREN ARROW expression
    (58) dots -> . DOT
    (59) dots -> . dots DOT

    NUMBER          shift and go to state 2
    FLOAT           shift and go to state 3
    CHAR            shift and go to state 4
    STRING          shift and go to state 5
    LIST            shift and go to state 6
    LBRACKET        shift and go to state 8
    ARRAY           shift and go to state 9
    IDENTIFIER      shift and go to state 10
    MINUS           shift and go to state 11
    NOT             shift and go to state 12
    LPAREN          shift and go to state 7
    TRUE            shift and go to state 13
    FALSE           shift and go to state 14
    BEGIN           shift and go to state 15
    LOOP            shift and go to state 16
    FOR             shift and go to state 17
    WHILE           shift and go to state 18
    IF              shift and go to state 19
    LOCK            shift and go to state 20
    LET             shift and go to state 21
    LETREC          shift and go to state 22
    LAMBDA          shift and go to state 23
    STRUCT          shift and go to state 24
    EXTEND          shift and go to state 26
    PROC            shift and go to state 27
    DOT             shift and go to state 28

    expression                     shift and go to state 80
    dots                           shift and go to state 25

state 33

    (18) expression -> expression LESS_THEN . expression
    (1) expression -> . NUMBER
    (2) expression -> . FLOAT
    (3) expression -> . CHAR
    (4) expression -> . STRING
    (5) expression -> . LIST LPAREN expression_list RPAREN
    (6) expression -> . LIST LPAREN RPAREN
    (7) expression -> . LBRACKET expression_list RBRACKET
    (8) expression -> . ARRAY LPAREN expression_list RPAREN
    (9) expression -> . LBRACKET RBRACKET
    (10) expression -> . ARRAY LPAREN RPAREN
    (11) expression -> . IDENTIFIER LBRACKET expression RBRACKET
    (12) expression -> . MINUS expression
    (13) expression -> . NOT expression
    (14) expression -> . expression PLUS expression
    (15) expression -> . expression MINUS expression
    (16) expression -> . expression TIMES expression
    (17) expression -> . expression DIVIDE expression
    (18) expression -> . expression LESS_THEN expression
    (19) expression -> . expression GREATER_THEN expression
    (20) expression -> . expression LESS_EQUALS expression
    (21) expression -> . expression GREATER_EQUALS expression
    (22) expression -> . expression EQUALS expression
    (23) expression -> . expression NOT_EQUALS expression
    (24) expression -> . expression AND expression
    (25) expression -> . expression NAND expression
    (26) expression -> . expression OR expression
    (27) expression -> . expression NOR expression
    (28) expression -> . expression XOR expression
    (29) expression -> . expression EQ expression
    (30) expression -> . expression NEQ expression
    (31) expression -> . expression IMPL expression
    (32) expression -> . LPAREN expression RPAREN
    (33) expression -> . TRUE
    (34) expression -> . FALSE
    (35) expression -> . IDENTIFIER
    (36) expression -> . IDENTIFIER ASSIGN expression
    (37) expression -> . BEGIN body END
    (40) expression -> . LOOP expression DO expression
    (41) expression -> . FOR expression SEPARATOR expression SEPARATOR expression DO expression
    (42) expression -> . WHILE expression DO expression
    (43) expression -> . IF expression THEN expression
    (44) expression -> . IF expression THEN expression ELSE expression
    (47) expression -> . LOCK identifier_list IN expression
    (50) expression -> . LET assign_list IN expression
    (51) expression -> . LETREC assign_list IN expression
    (54) expression -> . LAMBDA identifier_list ARROW expression
    (55) expression -> . LAMBDA ARROW expression
    (56) expression -> . expression LPAREN expression_list RPAREN
    (57) expression -> . expression LPAREN RPAREN
    (62) expression -> . STRUCT BEGIN struct_body END
    (63) expression -> . expression dots IDENTIFIER
    (64) expression -> . dots IDENTIFIER
    (65) expression -> . EXTEND expression BEGIN struct_body END
    (66) expression -> . PROC LPAREN identifier_list RPAREN identifier_list ARROW expression
    (67) expression -> . PROC LPAREN RPAREN identifier_list ARROW expression
    (68) expression -> . PROC LPAREN identifier_list RPAREN ARROW expression
    (69) expression -> . PROC LPAREN RPAREN ARROW expression
    (58) dots -> . DOT
    (59) dots -> . dots DOT

    NUMBER          shift and go to state 2
    FLOAT           shift and go to state 3
    CHAR            shift and go to state 4
    STRING          shift and go to state 5
    LIST            shift and go to state 6
    LBRACKET        shift and go to state 8
    ARRAY           shift and go to state 9
    IDENTIFIER      shift and go to state 10
    MINUS           shift and go to state 11
    NOT             shift and go to state 12
    LPAREN          shift and go to state 7
    TRUE            shift and go to state 13
    FALSE           shift and go to state 14
    BEGIN           shift and go to state 15
    LOOP            shift and go to state 16
    FOR             shift and go to state 17
    WHILE           shift and go to state 18
    IF              shift and go to state 19
    LOCK            shift and go to state 20
    LET             shift and go to state 21
    LETREC          shift and go to state 22
    LAMBDA          shift and go to state 23
    STRUCT          shift and go to state 24
    EXTEND          shift and go to state 26
    PROC            shift and go to state 27
    DOT             shift and go to state 28

    expression                     shift and go to state 81
    dots                           shift and go to state 25

state 34

    (19) expression -> expression GREATER_THEN . expression
    (1) expression -> . NUMBER
    (2) expression -> . FLOAT
    (3) expression -> . CHAR
    (4) expression -> . STRING
    (5) expression -> . LIST LPAREN expression_list RPAREN
    (6) expression -> . LIST LPAREN RPAREN
    (7) expression -> . LBRACKET expression_list RBRACKET
    (8) expression -> . ARRAY LPAREN expression_list RPAREN
    (9) expression -> . LBRACKET RBRACKET
    (10) expression -> . ARRAY LPAREN RPAREN
    (11) expression -> . IDENTIFIER LBRACKET expression RBRACKET
    (12) expression -> . MINUS expression
    (13) expression -> . NOT expression
    (14) expression -> . expression PLUS expression
    (15) expression -> . expression MINUS expression
    (16) expression -> . expression TIMES expression
    (17) expression -> . expression DIVIDE expression
    (18) expression -> . expression LESS_THEN expression
    (19) expression -> . expression GREATER_THEN expression
    (20) expression -> . expression LESS_EQUALS expression
    (21) expression -> . expression GREATER_EQUALS expression
    (22) expression -> . expression EQUALS expression
    (23) expression -> . expression NOT_EQUALS expression
    (24) expression -> . expression AND expression
    (25) expression -> . expression NAND expression
    (26) expression -> . expression OR expression
    (27) expression -> . expression NOR expression
    (28) expression -> . expression XOR expression
    (29) expression -> . expression EQ expression
    (30) expression -> . expression NEQ expression
    (31) expression -> . expression IMPL expression
    (32) expression -> . LPAREN expression RPAREN
    (33) expression -> . TRUE
    (34) expression -> . FALSE
    (35) expression -> . IDENTIFIER
    (36) expression -> . IDENTIFIER ASSIGN expression
    (37) expression -> . BEGIN body END
    (40) expression -> . LOOP expression DO expression
    (41) expression -> . FOR expression SEPARATOR expression SEPARATOR expression DO expression
    (42) expression -> . WHILE expression DO expression
    (43) expression -> . IF expression THEN expression
    (44) expression -> . IF expression THEN expression ELSE expression
    (47) expression -> . LOCK identifier_list IN expression
    (50) expression -> . LET assign_list IN expression
    (51) expression -> . LETREC assign_list IN expression
    (54) expression -> . LAMBDA identifier_list ARROW expression
    (55) expression -> . LAMBDA ARROW expression
    (56) expression -> . expression LPAREN expression_list RPAREN
    (57) expression -> . expression LPAREN RPAREN
    (62) expression -> . STRUCT BEGIN struct_body END
    (63) expression -> . expression dots IDENTIFIER
    (64) expression -> . dots IDENTIFIER
    (65) expression -> . EXTEND expression BEGIN struct_body END
    (66) expression -> . PROC LPAREN identifier_list RPAREN identifier_list ARROW expression
    (67) expression -> . PROC LPAREN RPAREN identifier_list ARROW expression
    (68) expression -> . PROC LPAREN identifier_list RPAREN ARROW expression
    (69) expression -> . PROC LPAREN RPAREN ARROW expression
    (58) dots -> . DOT
    (59) dots -> . dots DOT

    NUMBER          shift and go to state 2
    FLOAT           shift and go to state 3
    CHAR            shift and go to state 4
    STRING          shift and go to state 5
    LIST            shift and go to state 6
    LBRACKET        shift and go to state 8
    ARRAY           shift and go to state 9
    IDENTIFIER      shift and go to state 10
    MINUS           shift and go to state 11
    NOT             shift and go to state 12
    LPAREN          shift and go to state 7
    TRUE            shift and go to state 13
    FALSE           shift and go to state 14
    BEGIN           shift and go to state 15
    LOOP            shift and go to state 16
    FOR             shift and go to state 17
    WHILE           shift and go to state 18
    IF              shift and go to state 19
    LOCK            shift and go to state 20
    LET             shift and go to state 21
    LETREC          shift and go to state 22
    LAMBDA          shift and go to state 23
    STRUCT          shift and go to state 24
    EXTEND          shift and go to state 26
    PROC            shift and go to state 27
    DOT             shift and go to state 28

    expression                     shift and go to state 82
    dots                           shift and go to state 25

state 35

    (20) expression -> expression LESS_EQUALS . expression
    (1) expression -> . NUMBER
    (2) expression -> . FLOAT
    (3) expression -> . CHAR
    (4) expression -> . STRING
    (5) expression -> . LIST LPAREN expression_list RPAREN
    (6) expression -> . LIST LPAREN RPAREN
    (7) expression -> . LBRACKET expression_list RBRACKET
    (8) expression -> . ARRAY LPAREN expression_list RPAREN
    (9) expression -> . LBRACKET RBRACKET
    (10) expression -> . ARRAY LPAREN RPAREN
    (11) expression -> . IDENTIFIER LBRACKET expression RBRACKET
    (12) expression -> . MINUS expression
    (13) expression -> . NOT expression
    (14) expression -> . expression PLUS expression
    (15) expression -> . expression MINUS expression
    (16) expression -> . expression TIMES expression
    (17) expression -> . expression DIVIDE expression
    (18) expression -> . expression LESS_THEN expression
    (19) expression -> . expression GREATER_THEN expression
    (20) expression -> . expression LESS_EQUALS expression
    (21) expression -> . expression GREATER_EQUALS expression
    (22) expression -> . expression EQUALS expression
    (23) expression -> . expression NOT_EQUALS expression
    (24) expression -> . expression AND expression
    (25) expression -> . expression NAND expression
    (26) expression -> . expression OR expression
    (27) expression -> . expression NOR expression
    (28) expression -> . expression XOR expression
    (29) expression -> . expression EQ expression
    (30) expression -> . expression NEQ expression
    (31) expression -> . expression IMPL expression
    (32) expression -> . LPAREN expression RPAREN
    (33) expression -> . TRUE
    (34) expression -> . FALSE
    (35) expression -> . IDENTIFIER
    (36) expression -> . IDENTIFIER ASSIGN expression
    (37) expression -> . BEGIN body END
    (40) expression -> . LOOP expression DO expression
    (41) expression -> . FOR expression SEPARATOR expression SEPARATOR expression DO expression
    (42) expression -> . WHILE expression DO expression
    (43) expression -> . IF expression THEN expression
    (44) expression -> . IF expression THEN expression ELSE expression
    (47) expression -> . LOCK identifier_list IN expression
    (50) expression -> . LET assign_list IN expression
    (51) expression -> . LETREC assign_list IN expression
    (54) expression -> . LAMBDA identifier_list ARROW expression
    (55) expression -> . LAMBDA ARROW expression
    (56) expression -> . expression LPAREN expression_list RPAREN
    (57) expression -> . expression LPAREN RPAREN
    (62) expression -> . STRUCT BEGIN struct_body END
    (63) expression -> . expression dots IDENTIFIER
    (64) expression -> . dots IDENTIFIER
    (65) expression -> . EXTEND expression BEGIN struct_body END
    (66) expression -> . PROC LPAREN identifier_list RPAREN identifier_list ARROW expression
    (67) expression -> . PROC LPAREN RPAREN identifier_list ARROW expression
    (68) expression -> . PROC LPAREN identifier_list RPAREN ARROW expression
    (69) expression -> . PROC LPAREN RPAREN ARROW expression
    (58) dots -> . DOT
    (59) dots -> . dots DOT

    NUMBER          shift and go to state 2
    FLOAT           shift and go to state 3
    CHAR            shift and go to state 4
    STRING          shift and go to state 5
    LIST            shift and go to state 6
    LBRACKET        shift and go to state 8
    ARRAY           shift and go to state 9
    IDENTIFIER      shift and go to state 10
    MINUS           shift and go to state 11
    NOT             shift and go to state 12
    LPAREN          shift and go to state 7
    TRUE            shift and go to state 13
    FALSE           shift and go to state 14
    BEGIN           shift and go to state 15
    LOOP            shift and go to state 16
    FOR             shift and go to state 17
    WHILE           shift and go to state 18
    IF              shift and go to state 19
    LOCK            shift and go to state 20
    LET             shift and go to state 21
    LETREC          shift and go to state 22
    LAMBDA          shift and go to state 23
    STRUCT          shift and go to state 24
    EXTEND          shift and go to state 26
    PROC            shift and go to state 27
    DOT             shift and go to state 28

    expression                     shift and go to state 83
    dots                           shift and go to state 25

state 36

    (21) expression -> expression GREATER_EQUALS . expression
    (1) expression -> . NUMBER
    (2) expression -> . FLOAT
    (3) expression -> . CHAR
    (4) expression -> . STRING
    (5) expression -> . LIST LPAREN expression_list RPAREN
    (6) expression -> . LIST LPAREN RPAREN
    (7) expression -> . LBRACKET expression_list RBRACKET
    (8) expression -> . ARRAY LPAREN expression_list RPAREN
    (9) expression -> . LBRACKET RBRACKET
    (10) expression -> . ARRAY LPAREN RPAREN
    (11) expression -> . IDENTIFIER LBRACKET expression RBRACKET
    (12) expression -> . MINUS expression
    (13) expression -> . NOT expression
    (14) expression -> . expression PLUS expression
    (15) expression -> . expression MINUS expression
    (16) expression -> . expression TIMES expression
    (17) expression -> . expression DIVIDE expression
    (18) expression -> . expression LESS_THEN expression
    (19) expression -> . expression GREATER_THEN expression
    (20) expression -> . expression LESS_EQUALS expression
    (21) expression -> . expression GREATER_EQUALS expression
    (22) expression -> . expression EQUALS expression
    (23) expression -> . expression NOT_EQUALS expression
    (24) expression -> . expression AND expression
    (25) expression -> . expression NAND expression
    (26) expression -> . expression OR expression
    (27) expression -> . expression NOR expression
    (28) expression -> . expression XOR expression
    (29) expression -> . expression EQ expression
    (30) expression -> . expression NEQ expression
    (31) expression -> . expression IMPL expression
    (32) expression -> . LPAREN expression RPAREN
    (33) expression -> . TRUE
    (34) expression -> . FALSE
    (35) expression -> . IDENTIFIER
    (36) expression -> . IDENTIFIER ASSIGN expression
    (37) expression -> . BEGIN body END
    (40) expression -> . LOOP expression DO expression
    (41) expression -> . FOR expression SEPARATOR expression SEPARATOR expression DO expression
    (42) expression -> . WHILE expression DO expression
    (43) expression -> . IF expression THEN expression
    (44) expression -> . IF expression THEN expression ELSE expression
    (47) expression -> . LOCK identifier_list IN expression
    (50) expression -> . LET assign_list IN expression
    (51) expression -> . LETREC assign_list IN expression
    (54) expression -> . LAMBDA identifier_list ARROW expression
    (55) expression -> . LAMBDA ARROW expression
    (56) expression -> . expression LPAREN expression_list RPAREN
    (57) expression -> . expression LPAREN RPAREN
    (62) expression -> . STRUCT BEGIN struct_body END
    (63) expression -> . expression dots IDENTIFIER
    (64) expression -> . dots IDENTIFIER
    (65) expression -> . EXTEND expression BEGIN struct_body END
    (66) expression -> . PROC LPAREN identifier_list RPAREN identifier_list ARROW expression
    (67) expression -> . PROC LPAREN RPAREN identifier_list ARROW expression
    (68) expression -> . PROC LPAREN identifier_list RPAREN ARROW expression
    (69) expression -> . PROC LPAREN RPAREN ARROW expression
    (58) dots -> . DOT
    (59) dots -> . dots DOT

    NUMBER          shift and go to state 2
    FLOAT           shift and go to state 3
    CHAR            shift and go to state 4
    STRING          shift and go to state 5
    LIST            shift and go to state 6
    LBRACKET        shift and go to state 8
    ARRAY           shift and go to state 9
    IDENTIFIER      shift and go to state 10
    MINUS           shift and go to state 11
    NOT             shift and go to state 12
    LPAREN          shift and go to state 7
    TRUE            shift and go to state 13
    FALSE           shift and go to state 14
    BEGIN           shift and go to state 15
    LOOP            shift and go to state 16
    FOR             shift and go to state 17
    WHILE           shift and go to state 18
    IF              shift and go to state 19
    LOCK            shift and go to state 20
    LET             shift and go to state 21
    LETREC          shift and go to state 22
    LAMBDA          shift and go to state 23
    STRUCT          shift and go to state 24
    EXTEND          shift and go to state 26
    PROC            shift and go to state 27
    DOT             shift and go to state 28

    expression                     shift and go to state 84
    dots                           shift and go to state 25

state 37

    (22) expression -> expression EQUALS . expression
    (1) expression -> . NUMBER
    (2) expression -> . FLOAT
    (3) expression -> . CHAR
    (4) expression -> . STRING
    (5) expression -> . LIST LPAREN expression_list RPAREN
    (6) expression -> . LIST LPAREN RPAREN
    (7) expression -> . LBRACKET expression_list RBRACKET
    (8) expression -> . ARRAY LPAREN expression_list RPAREN
    (9) expression -> . LBRACKET RBRACKET
    (10) expression -> . ARRAY LPAREN RPAREN
    (11) expression -> . IDENTIFIER LBRACKET expression RBRACKET
    (12) expression -> . MINUS expression
    (13) expression -> . NOT expression
    (14) expression -> . expression PLUS expression
    (15) expression -> . expression MINUS expression
    (16) expression -> . expression TIMES expression
    (17) expression -> . expression DIVIDE expression
    (18) expression -> . expression LESS_THEN expression
    (19) expression -> . expression GREATER_THEN expression
    (20) expression -> . expression LESS_EQUALS expression
    (21) expression -> . expression GREATER_EQUALS expression
    (22) expression -> . expression EQUALS expression
    (23) expression -> . expression NOT_EQUALS expression
    (24) expression -> . expression AND expression
    (25) expression -> . expression NAND expression
    (26) expression -> . expression OR expression
    (27) expression -> . expression NOR expression
    (28) expression -> . expression XOR expression
    (29) expression -> . expression EQ expression
    (30) expression -> . expression NEQ expression
    (31) expression -> . expression IMPL expression
    (32) expression -> . LPAREN expression RPAREN
    (33) expression -> . TRUE
    (34) expression -> . FALSE
    (35) expression -> . IDENTIFIER
    (36) expression -> . IDENTIFIER ASSIGN expression
    (37) expression -> . BEGIN body END
    (40) expression -> . LOOP expression DO expression
    (41) expression -> . FOR expression SEPARATOR expression SEPARATOR expression DO expression
    (42) expression -> . WHILE expression DO expression
    (43) expression -> . IF expression THEN expression
    (44) expression -> . IF expression THEN expression ELSE expression
    (47) expression -> . LOCK identifier_list IN expression
    (50) expression -> . LET assign_list IN expression
    (51) expression -> . LETREC assign_list IN expression
    (54) expression -> . LAMBDA identifier_list ARROW expression
    (55) expression -> . LAMBDA ARROW expression
    (56) expression -> . expression LPAREN expression_list RPAREN
    (57) expression -> . expression LPAREN RPAREN
    (62) expression -> . STRUCT BEGIN struct_body END
    (63) expression -> . expression dots IDENTIFIER
    (64) expression -> . dots IDENTIFIER
    (65) expression -> . EXTEND expression BEGIN struct_body END
    (66) expression -> . PROC LPAREN identifier_list RPAREN identifier_list ARROW expression
    (67) expression -> . PROC LPAREN RPAREN identifier_list ARROW expression
    (68) expression -> . PROC LPAREN identifier_list RPAREN ARROW expression
    (69) expression -> . PROC LPAREN RPAREN ARROW expression
    (58) dots -> . DOT
    (59) dots -> . dots DOT

    NUMBER          shift and go to state 2
    FLOAT           shift and go to state 3
    CHAR            shift and go to state 4
    STRING          shift and go to state 5
    LIST            shift and go to state 6
    LBRACKET        shift and go to state 8
    ARRAY           shift and go to state 9
    IDENTIFIER      shift and go to state 10
    MINUS           shift and go to state 11
    NOT             shift and go to state 12
    LPAREN          shift and go to state 7
    TRUE            shift and go to state 13
    FALSE           shift and go to state 14
    BEGIN           shift and go to state 15
    LOOP            shift and go to state 16
    FOR             shift and go to state 17
    WHILE           shift and go to state 18
    IF              shift and go to state 19
    LOCK            shift and go to state 20
    LET             shift and go to state 21
    LETREC          shift and go to state 22
    LAMBDA          shift and go to state 23
    STRUCT          shift and go to state 24
    EXTEND          shift and go to state 26
    PROC            shift and go to state 27
    DOT             shift and go to state 28

    expression                     shift and go to state 85
    dots                           shift and go to state 25

state 38

    (23) expression -> expression NOT_EQUALS . expression
    (1) expression -> . NUMBER
    (2) expression -> . FLOAT
    (3) expression -> . CHAR
    (4) expression -> . STRING
    (5) expression -> . LIST LPAREN expression_list RPAREN
    (6) expression -> . LIST LPAREN RPAREN
    (7) expression -> . LBRACKET expression_list RBRACKET
    (8) expression -> . ARRAY LPAREN expression_list RPAREN
    (9) expression -> . LBRACKET RBRACKET
    (10) expression -> . ARRAY LPAREN RPAREN
    (11) expression -> . IDENTIFIER LBRACKET expression RBRACKET
    (12) expression -> . MINUS expression
    (13) expression -> . NOT expression
    (14) expression -> . expression PLUS expression
    (15) expression -> . expression MINUS expression
    (16) expression -> . expression TIMES expression
    (17) expression -> . expression DIVIDE expression
    (18) expression -> . expression LESS_THEN expression
    (19) expression -> . expression GREATER_THEN expression
    (20) expression -> . expression LESS_EQUALS expression
    (21) expression -> . expression GREATER_EQUALS expression
    (22) expression -> . expression EQUALS expression
    (23) expression -> . expression NOT_EQUALS expression
    (24) expression -> . expression AND expression
    (25) expression -> . expression NAND expression
    (26) expression -> . expression OR expression
    (27) expression -> . expression NOR expression
    (28) expression -> . expression XOR expression
    (29) expression -> . expression EQ expression
    (30) expression -> . expression NEQ expression
    (31) expression -> . expression IMPL expression
    (32) expression -> . LPAREN expression RPAREN
    (33) expression -> . TRUE
    (34) expression -> . FALSE
    (35) expression -> . IDENTIFIER
    (36) expression -> . IDENTIFIER ASSIGN expression
    (37) expression -> . BEGIN body END
    (40) expression -> . LOOP expression DO expression
    (41) expression -> . FOR expression SEPARATOR expression SEPARATOR expression DO expression
    (42) expression -> . WHILE expression DO expression
    (43) expression -> . IF expression THEN expression
    (44) expression -> . IF expression THEN expression ELSE expression
    (47) expression -> . LOCK identifier_list IN expression
    (50) expression -> . LET assign_list IN expression
    (51) expression -> . LETREC assign_list IN expression
    (54) expression -> . LAMBDA identifier_list ARROW expression
    (55) expression -> . LAMBDA ARROW expression
    (56) expression -> . expression LPAREN expression_list RPAREN
    (57) expression -> . expression LPAREN RPAREN
    (62) expression -> . STRUCT BEGIN struct_body END
    (63) expression -> . expression dots IDENTIFIER
    (64) expression -> . dots IDENTIFIER
    (65) expression -> . EXTEND expression BEGIN struct_body END
    (66) expression -> . PROC LPAREN identifier_list RPAREN identifier_list ARROW expression
    (67) expression -> . PROC LPAREN RPAREN identifier_list ARROW expression
    (68) expression -> . PROC LPAREN identifier_list RPAREN ARROW expression
    (69) expression -> . PROC LPAREN RPAREN ARROW expression
    (58) dots -> . DOT
    (59) dots -> . dots DOT

    NUMBER          shift and go to state 2
    FLOAT           shift and go to state 3
    CHAR            shift and go to state 4
    STRING          shift and go to state 5
    LIST            shift and go to state 6
    LBRACKET        shift and go to state 8
    ARRAY           shift and go to state 9
    IDENTIFIER      shift and go to state 10
    MINUS           shift and go to state 11
    NOT             shift and go to state 12
    LPAREN          shift and go to state 7
    TRUE            shift and go to state 13
    FALSE           shift and go to state 14
    BEGIN           shift and go to state 15
    LOOP            shift and go to state 16
    FOR             shift and go to state 17
    WHILE           shift and go to state 18
    IF              shift and go to state 19
    LOCK            shift and go to state 20
    LET             shift and go to state 21
    LETREC          shift and go to state 22
    LAMBDA          shift and go to state 23
    STRUCT          shift and go to state 24
    EXTEND          shift and go to state 26
    PROC            shift and go to state 27
    DOT             shift and go to state 28

    expression                     shift and go to state 86
    dots                           shift and go to state 25

state 39

    (24) expression -> expression AND . expression
    (1) expression -> . NUMBER
    (2) expression -> . FLOAT
    (3) expression -> . CHAR
    (4) expression -> . STRING
    (5) expression -> . LIST LPAREN expression_list RPAREN
    (6) expression -> . LIST LPAREN RPAREN
    (7) expression -> . LBRACKET expression_list RBRACKET
    (8) expression -> . ARRAY LPAREN expression_list RPAREN
    (9) expression -> . LBRACKET RBRACKET
    (10) expression -> . ARRAY LPAREN RPAREN
    (11) expression -> . IDENTIFIER LBRACKET expression RBRACKET
    (12) expression -> . MINUS expression
    (13) expression -> . NOT expression
    (14) expression -> . expression PLUS expression
    (15) expression -> . expression MINUS expression
    (16) expression -> . expression TIMES expression
    (17) expression -> . expression DIVIDE expression
    (18) expression -> . expression LESS_THEN expression
    (19) expression -> . expression GREATER_THEN expression
    (20) expression -> . expression LESS_EQUALS expression
    (21) expression -> . expression GREATER_EQUALS expression
    (22) expression -> . expression EQUALS expression
    (23) expression -> . expression NOT_EQUALS expression
    (24) expression -> . expression AND expression
    (25) expression -> . expression NAND expression
    (26) expression -> . expression OR expression
    (27) expression -> . expression NOR expression
    (28) expression -> . expression XOR expression
    (29) expression -> . expression EQ expression
    (30) expression -> . expression NEQ expression
    (31) expression -> . expression IMPL expression
    (32) expression -> . LPAREN expression RPAREN
    (33) expression -> . TRUE
    (34) expression -> . FALSE
    (35) expression -> . IDENTIFIER
    (36) expression -> . IDENTIFIER ASSIGN expression
    (37) expression -> . BEGIN body END
    (40) expression -> . LOOP expression DO expression
    (41) expression -> . FOR expression SEPARATOR expression SEPARATOR expression DO expression
    (42) expression -> . WHILE expression DO expression
    (43) expression -> . IF expression THEN expression
    (44) expression -> . IF expression THEN expression ELSE expression
    (47) expression -> . LOCK identifier_list IN expression
    (50) expression -> . LET assign_list IN expression
    (51) expression -> . LETREC assign_list IN expression
    (54) expression -> . LAMBDA identifier_list ARROW expression
    (55) expression -> . LAMBDA ARROW expression
    (56) expression -> . expression LPAREN expression_list RPAREN
    (57) expression -> . expression LPAREN RPAREN
    (62) expression -> . STRUCT BEGIN struct_body END
    (63) expression -> . expression dots IDENTIFIER
    (64) expression -> . dots IDENTIFIER
    (65) expression -> . EXTEND expression BEGIN struct_body END
    (66) expression -> . PROC LPAREN identifier_list RPAREN identifier_list ARROW expression
    (67) expression -> . PROC LPAREN RPAREN identifier_list ARROW expression
    (68) expression -> . PROC LPAREN identifier_list RPAREN ARROW expression
    (69) expression -> . PROC LPAREN RPAREN ARROW expression
    (58) dots -> . DOT
    (59) dots -> . dots DOT

    NUMBER          shift and go to state 2
    FLOAT           shift and go to state 3
    CHAR            shift and go to state 4
    STRING          shift and go to state 5
    LIST            shift and go to state 6
    LBRACKET        shift and go to state 8
    ARRAY           shift and go to state 9
    IDENTIFIER      shift and go to state 10
    MINUS           shift and go to state 11
    NOT             shift and go to state 12
    LPAREN          shift and go to state 7
    TRUE            shift and go to state 13
    FALSE           shift and go to state 14
    BEGIN           shift and go to state 15
    LOOP            shift and go to state 16
    FOR             shift and go to state 17
    WHILE           shift and go to state 18
    IF              shift and go to state 19
    LOCK            shift and go to state 20
    LET             shift and go to state 21
    LETREC          shift and go to state 22
    LAMBDA          shift and go to state 23
    STRUCT          shift and go to state 24
    EXTEND          shift and go to state 26
    PROC            shift and go to state 27
    DOT             shift and go to state 28

    expression                     shift and go to state 87
    dots                           shift and go to state 25

state 40

    (25) expression -> expression NAND . expression
    (1) expression -> . NUMBER
    (2) expression -> . FLOAT
    (3) expression -> . CHAR
    (4) expression -> . STRING
    (5) expression -> . LIST LPAREN expression_list RPAREN
    (6) expression -> . LIST LPAREN RPAREN
    (7) expression -> . LBRACKET expression_list RBRACKET
    (8) expression -> . ARRAY LPAREN expression_list RPAREN
    (9) expression -> . LBRACKET RBRACKET
    (10) expression -> . ARRAY LPAREN RPAREN
    (11) expression -> . IDENTIFIER LBRACKET expression RBRACKET
    (12) expression -> . MINUS expression
    (13) expression -> . NOT expression
    (14) expression -> . expression PLUS expression
    (15) expression -> . expression MINUS expression
    (16) expression -> . expression TIMES expression
    (17) expression -> . expression DIVIDE expression
    (18) expression -> . expression LESS_THEN expression
    (19) expression -> . expression GREATER_THEN expression
    (20) expression -> . expression LESS_EQUALS expression
    (21) expression -> . expression GREATER_EQUALS expression
    (22) expression -> . expression EQUALS expression
    (23) expression -> . expression NOT_EQUALS expression
    (24) expression -> . expression AND expression
    (25) expression -> . expression NAND expression
    (26) expression -> . expression OR expression
    (27) expression -> . expression NOR expression
    (28) expression -> . expression XOR expression
    (29) expression -> . expression EQ expression
    (30) expression -> . expression NEQ expression
    (31) expression -> . expression IMPL expression
    (32) expression -> . LPAREN expression RPAREN
    (33) expression -> . TRUE
    (34) expression -> . FALSE
    (35) expression -> . IDENTIFIER
    (36) expression -> . IDENTIFIER ASSIGN expression
    (37) expression -> . BEGIN body END
    (40) expression -> . LOOP expression DO expression
    (41) expression -> . FOR expression SEPARATOR expression SEPARATOR expression DO expression
    (42) expression -> . WHILE expression DO expression
    (43) expression -> . IF expression THEN expression
    (44) expression -> . IF expression THEN expression ELSE expression
    (47) expression -> . LOCK identifier_list IN expression
    (50) expression -> . LET assign_list IN expression
    (51) expression -> . LETREC assign_list IN expression
    (54) expression -> . LAMBDA identifier_list ARROW expression
    (55) expression -> . LAMBDA ARROW expression
    (56) expression -> . expression LPAREN expression_list RPAREN
    (57) expression -> . expression LPAREN RPAREN
    (62) expression -> . STRUCT BEGIN struct_body END
    (63) expression -> . expression dots IDENTIFIER
    (64) expression -> . dots IDENTIFIER
    (65) expression -> . EXTEND expression BEGIN struct_body END
    (66) expression -> . PROC LPAREN identifier_list RPAREN identifier_list ARROW expression
    (67) expression -> . PROC LPAREN RPAREN identifier_list ARROW expression
    (68) expression -> . PROC LPAREN identifier_list RPAREN ARROW expression
    (69) expression -> . PROC LPAREN RPAREN ARROW expression
    (58) dots -> . DOT
    (59) dots -> . dots DOT

    NUMBER          shift and go to state 2
    FLOAT           shift and go to state 3
    CHAR            shift and go to state 4
    STRING          shift and go to state 5
    LIST            shift and go to state 6
    LBRACKET        shift and go to state 8
    ARRAY           shift and go to state 9
    IDENTIFIER      shift and go to state 10
    MINUS           shift and go to state 11
    NOT             shift and go to state 12
    LPAREN          shift and go to state 7
    TRUE            shift and go to state 13
    FALSE           shift and go to state 14
    BEGIN           shift and go to state 15
    LOOP            shift and go to state 16
    FOR             shift and go to state 17
    WHILE           shift and go to state 18
    IF              shift and go to state 19
    LOCK            shift and go to state 20
    LET             shift and go to state 21
    LETREC          shift and go to state 22
    LAMBDA          shift and go to state 23
    STRUCT          shift and go to state 24
    EXTEND          shift and go to state 26
    PROC            shift and go to state 27
    DOT             shift and go to state 28

    expression                     shift and go to state 88
    dots                           shift and go to state 25

state 41

    (26) expression -> expression OR . expression
    (1) expression -> . NUMBER
    (2) expression -> . FLOAT
    (3) expression -> . CHAR
    (4) expression -> . STRING
    (5) expression -> . LIST LPAREN expression_list RPAREN
    (6) expression -> . LIST LPAREN RPAREN
    (7) expression -> . LBRACKET expression_list RBRACKET
    (8) expression -> . ARRAY LPAREN expression_list RPAREN
    (9) expression -> . LBRACKET RBRACKET
    (10) expression -> . ARRAY LPAREN RPAREN
    (11) expression -> . IDENTIFIER LBRACKET expression RBRACKET
    (12) expression -> . MINUS expression
    (13) expression -> . NOT expression
    (14) expression -> . expression PLUS expression
    (15) expression -> . expression MINUS expression
    (16) expression -> . expression TIMES expression
    (17) expression -> . expression DIVIDE expression
    (18) expression -> . expression LESS_THEN expression
    (19) expression -> . expression GREATER_THEN expression
    (20) expression -> . expression LESS_EQUALS expression
    (21) expression -> . expression GREATER_EQUALS expression
    (22) expression -> . expression EQUALS expression
    (23) expression -> . expression NOT_EQUALS expression
    (24) expression -> . expression AND expression
    (25) expression -> . expression NAND expression
    (26) expression -> . expression OR expression
    (27) expression -> . expression NOR expression
    (28) expression -> . expression XOR expression
    (29) expression -> . expression EQ expression
    (30) expression -> . expression NEQ expression
    (31) expression -> . expression IMPL expression
    (32) expression -> . LPAREN expression RPAREN
    (33) expression -> . TRUE
    (34) expression -> . FALSE
    (35) expression -> . IDENTIFIER
    (36) expression -> . IDENTIFIER ASSIGN expression
    (37) expression -> . BEGIN body END
    (40) expression -> . LOOP expression DO expression
    (41) expression -> . FOR expression SEPARATOR expression SEPARATOR expression DO expression
    (42) expression -> . WHILE expression DO expression
    (43) expression -> . IF expression THEN expression
    (44) expression -> . IF expression THEN expression ELSE expression
    (47) expression -> . LOCK identifier_list IN expression
    (50) expression -> . LET assign_list IN expression
    (51) expression -> . LETREC assign_list IN expression
    (54) expression -> . LAMBDA identifier_list ARROW expression
    (55) expression -> . LAMBDA ARROW expression
    (56) expression -> . expression LPAREN expression_list RPAREN
    (57) expression -> . expression LPAREN RPAREN
    (62) expression -> . STRUCT BEGIN struct_body END
    (63) expression -> . expression dots IDENTIFIER
    (64) expression -> . dots IDENTIFIER
    (65) expression -> . EXTEND expression BEGIN struct_body END
    (66) expression -> . PROC LPAREN identifier_list RPAREN identifier_list ARROW expression
    (67) expression -> . PROC LPAREN RPAREN identifier_list ARROW expression
    (68) expression -> . PROC LPAREN identifier_list RPAREN ARROW expression
    (69) expression -> . PROC LPAREN RPAREN ARROW expression
    (58) dots -> . DOT
    (59) dots -> . dots DOT

    NUMBER          shift and go to state 2
    FLOAT           shift and go to state 3
    CHAR            shift and go to state 4
    STRING          shift and go to state 5
    LIST            shift and go to state 6
    LBRACKET        shift and go to state 8
    ARRAY           shift and go to state 9
    IDENTIFIER      shift and go to state 10
    MINUS           shift and go to state 11
    NOT             shift and go to state 12
    LPAREN          shift and go to state 7
    TRUE            shift and go to state 13
    FALSE           shift and go to state 14
    BEGIN           shift and go to state 15
    LOOP            shift and go to state 16
    FOR             shift and go to state 17
    WHILE           shift and go to state 18
    IF              shift and go to state 19
    LOCK            shift and go to state 20
    LET             shift and go to state 21
    LETREC          shift and go to state 22
    LAMBDA          shift and go to state 23
    STRUCT          shift and go to state 24
    EXTEND          shift and go to state 26
    PROC            shift and go to state 27
    DOT             shift and go to state 28

    expression                     shift and go to state 89
    dots                           shift and go to state 25

state 42

    (27) expression -> expression NOR . expression
    (1) expression -> . NUMBER
    (2) expression -> . FLOAT
    (3) expression -> . CHAR
    (4) expression -> . STRING
    (5) expression -> . LIST LPAREN expression_list RPAREN
    (6) expression -> . LIST LPAREN RPAREN
    (7) expression -> . LBRACKET expression_list RBRACKET
    (8) expression -> . ARRAY LPAREN expression_list RPAREN
    (9) expression -> . LBRACKET RBRACKET
    (10) expression -> . ARRAY LPAREN RPAREN
    (11) expression -> . IDENTIFIER LBRACKET expression RBRACKET
    (12) expression -> . MINUS expression
    (13) expression -> . NOT expression
    (14) expression -> . expression PLUS expression
    (15) expression -> . expression MINUS expression
    (16) expression -> . expression TIMES expression
    (17) expression -> . expression DIVIDE expression
    (18) expression -> . expression LESS_THEN expression
    (19) expression -> . expression GREATER_THEN expression
    (20) expression -> . expression LESS_EQUALS expression
    (21) expression -> . expression GREATER_EQUALS expression
    (22) expression -> . expression EQUALS expression
    (23) expression -> . expression NOT_EQUALS expression
    (24) expression -> . expression AND expression
    (25) expression -> . expression NAND expression
    (26) expression -> . expression OR expression
    (27) expression -> . expression NOR expression
    (28) expression -> . expression XOR expression
    (29) expression -> . expression EQ expression
    (30) expression -> . expression NEQ expression
    (31) expression -> . expression IMPL expression
    (32) expression -> . LPAREN expression RPAREN
    (33) expression -> . TRUE
    (34) expression -> . FALSE
    (35) expression -> . IDENTIFIER
    (36) expression -> . IDENTIFIER ASSIGN expression
    (37) expression -> . BEGIN body END
    (40) expression -> . LOOP expression DO expression
    (41) expression -> . FOR expression SEPARATOR expression SEPARATOR expression DO expression
    (42) expression -> . WHILE expression DO expression
    (43) expression -> . IF expression THEN expression
    (44) expression -> . IF expression THEN expression ELSE expression
    (47) expression -> . LOCK identifier_list IN expression
    (50) expression -> . LET assign_list IN expression
    (51) expression -> . LETREC assign_list IN expression
    (54) expression -> . LAMBDA identifier_list ARROW expression
    (55) expression -> . LAMBDA ARROW expression
    (56) expression -> . expression LPAREN expression_list RPAREN
    (57) expression -> . expression LPAREN RPAREN
    (62) expression -> . STRUCT BEGIN struct_body END
    (63) expression -> . expression dots IDENTIFIER
    (64) expression -> . dots IDENTIFIER
    (65) expression -> . EXTEND expression BEGIN struct_body END
    (66) expression -> . PROC LPAREN identifier_list RPAREN identifier_list ARROW expression
    (67) expression -> . PROC LPAREN RPAREN identifier_list ARROW expression
    (68) expression -> . PROC LPAREN identifier_list RPAREN ARROW expression
    (69) expression -> . PROC LPAREN RPAREN ARROW expression
    (58) dots -> . DOT
    (59) dots -> . dots DOT

    NUMBER          shift and go to state 2
    FLOAT           shift and go to state 3
    CHAR            shift and go to state 4
    STRING          shift and go to state 5
    LIST            shift and go to state 6
    LBRACKET        shift and go to state 8
    ARRAY           shift and go to state 9
    IDENTIFIER      shift and go to state 10
    MINUS           shift and go to state 11
    NOT             shift and go to state 12
    LPAREN          shift and go to state 7
    TRUE            shift and go to state 13
    FALSE           shift and go to state 14
    BEGIN           shift and go to state 15
    LOOP            shift and go to state 16
    FOR             shift and go to state 17
    WHILE           shift and go to state 18
    IF              shift and go to state 19
    LOCK            shift and go to state 20
    LET             shift and go to state 21
    LETREC          shift and go to state 22
    LAMBDA          shift and go to state 23
    STRUCT          shift and go to state 24
    EXTEND          shift and go to state 26
    PROC            shift and go to state 27
    DOT             shift and go to state 28

    expression                     shift and go to state 90
    dots                           shift and go to state 25

state 43

    (28) expression -> expression XOR . expression
    (1) expression -> . NUMBER
    (2) expression -> . FLOAT
    (3) expression -> . CHAR
    (4) expression -> . STRING
    (5) expression -> . LIST LPAREN expression_list RPAREN
    (6) expression -> . LIST LPAREN RPAREN
    (7) expression -> . LBRACKET expression_list RBRACKET
    (8) expression -> . ARRAY LPAREN expression_list RPAREN
    (9) expression -> . LBRACKET RBRACKET
    (10) expression -> . ARRAY LPAREN RPAREN
    (11) expression -> . IDENTIFIER LBRACKET expression RBRACKET
    (12) expression -> . MINUS expression
    (13) expression -> . NOT expression
    (14) expression -> . expression PLUS expression
    (15) expression -> . expression MINUS expression
    (16) expression -> . expression TIMES expression
    (17) expression -> . expression DIVIDE expression
    (18) expression -> . expression LESS_THEN expression
    (19) expression -> . expression GREATER_THEN expression
    (20) expression -> . expression LESS_EQUALS expression
    (21) expression -> . expression GREATER_EQUALS expression
    (22) expression -> . expression EQUALS expression
    (23) expression -> . expression NOT_EQUALS expression
    (24) expression -> . expression AND expression
    (25) expression -> . expression NAND expression
    (26) expression -> . expression OR expression
    (27) expression -> . expression NOR expression
    (28) expression -> . expression XOR expression
    (29) expression -> . expression EQ expression
    (30) expression -> . expression NEQ expression
    (31) expression -> . expression IMPL expression
    (32) expression -> . LPAREN expression RPAREN
    (33) expression -> . TRUE
    (34) expression -> . FALSE
    (35) expression -> . IDENTIFIER
    (36) expression -> . IDENTIFIER ASSIGN expression
    (37) expression -> . BEGIN body END
    (40) expression -> . LOOP expression DO expression
    (41) expression -> . FOR expression SEPARATOR expression SEPARATOR expression DO expression
    (42) expression -> . WHILE expression DO expression
    (43) expression -> . IF expression THEN expression
    (44) expression -> . IF expression THEN expression ELSE expression
    (47) expression -> . LOCK identifier_list IN expression
    (50) expression -> . LET assign_list IN expression
    (51) expression -> . LETREC assign_list IN expression
    (54) expression -> . LAMBDA identifier_list ARROW expression
    (55) expression -> . LAMBDA ARROW expression
    (56) expression -> . expression LPAREN expression_list RPAREN
    (57) expression -> . expression LPAREN RPAREN
    (62) expression -> . STRUCT BEGIN struct_body END
    (63) expression -> . expression dots IDENTIFIER
    (64) expression -> . dots IDENTIFIER
    (65) expression -> . EXTEND expression BEGIN struct_body END
    (66) expression -> . PROC LPAREN identifier_list RPAREN identifier_list ARROW expression
    (67) expression -> . PROC LPAREN RPAREN identifier_list ARROW expression
    (68) expression -> . PROC LPAREN identifier_list RPAREN ARROW expression
    (69) expression -> . PROC LPAREN RPAREN ARROW expression
    (58) dots -> . DOT
    (59) dots -> . dots DOT

    NUMBER          shift and go to state 2
    FLOAT           shift and go to state 3
    CHAR            shift and go to state 4
    STRING          shift and go to state 5
    LIST            shift and go to state 6
    LBRACKET        shift and go to state 8
    ARRAY           shift and go to state 9
    IDENTIFIER      shift and go to state 10
    MINUS           shift and go to state 11
    NOT             shift and go to state 12
    LPAREN          shift and go to state 7
    TRUE            shift and go to state 13
    FALSE           shift and go to state 14
    BEGIN           shift and go to state 15
    LOOP            shift and go to state 16
    FOR             shift and go to state 17
    WHILE           shift and go to state 18
    IF              shift and go to state 19
    LOCK            shift and go to state 20
    LET             shift and go to state 21
    LETREC          shift and go to state 22
    LAMBDA          shift and go to state 23
    STRUCT          shift and go to state 24
    EXTEND          shift and go to state 26
    PROC            shift and go to state 27
    DOT             shift and go to state 28

    expression                     shift and go to state 91
    dots                           shift and go to state 25

state 44

    (29) expression -> expression EQ . expression
    (1) expression -> . NUMBER
    (2) expression -> . FLOAT
    (3) expression -> . CHAR
    (4) expression -> . STRING
    (5) expression -> . LIST LPAREN expression_list RPAREN
    (6) expression -> . LIST LPAREN RPAREN
    (7) expression -> . LBRACKET expression_list RBRACKET
    (8) expression -> . ARRAY LPAREN expression_list RPAREN
    (9) expression -> . LBRACKET RBRACKET
    (10) expression -> . ARRAY LPAREN RPAREN
    (11) expression -> . IDENTIFIER LBRACKET expression RBRACKET
    (12) expression -> . MINUS expression
    (13) expression -> . NOT expression
    (14) expression -> . expression PLUS expression
    (15) expression -> . expression MINUS expression
    (16) expression -> . expression TIMES expression
    (17) expression -> . expression DIVIDE expression
    (18) expression -> . expression LESS_THEN expression
    (19) expression -> . expression GREATER_THEN expression
    (20) expression -> . expression LESS_EQUALS expression
    (21) expression -> . expression GREATER_EQUALS expression
    (22) expression -> . expression EQUALS expression
    (23) expression -> . expression NOT_EQUALS expression
    (24) expression -> . expression AND expression
    (25) expression -> . expression NAND expression
    (26) expression -> . expression OR expression
    (27) expression -> . expression NOR expression
    (28) expression -> . expression XOR expression
    (29) expression -> . expression EQ expression
    (30) expression -> . expression NEQ expression
    (31) expression -> . expression IMPL expression
    (32) expression -> . LPAREN expression RPAREN
    (33) expression -> . TRUE
    (34) expression -> . FALSE
    (35) expression -> . IDENTIFIER
    (36) expression -> . IDENTIFIER ASSIGN expression
    (37) expression -> . BEGIN body END
    (40) expression -> . LOOP expression DO expression
    (41) expression -> . FOR expression SEPARATOR expression SEPARATOR expression DO expression
    (42) expression -> . WHILE expression DO expression
    (43) expression -> . IF expression THEN expression
    (44) expression -> . IF expression THEN expression ELSE expression
    (47) expression -> . LOCK identifier_list IN expression
    (50) expression -> . LET assign_list IN expression
    (51) expression -> . LETREC assign_list IN expression
    (54) expression -> . LAMBDA identifier_list ARROW expression
    (55) expression -> . LAMBDA ARROW expression
    (56) expression -> . expression LPAREN expression_list RPAREN
    (57) expression -> . expression LPAREN RPAREN
    (62) expression -> . STRUCT BEGIN struct_body END
    (63) expression -> . expression dots IDENTIFIER
    (64) expression -> . dots IDENTIFIER
    (65) expression -> . EXTEND expression BEGIN struct_body END
    (66) expression -> . PROC LPAREN identifier_list RPAREN identifier_list ARROW expression
    (67) expression -> . PROC LPAREN RPAREN identifier_list ARROW expression
    (68) expression -> . PROC LPAREN identifier_list RPAREN ARROW expression
    (69) expression -> . PROC LPAREN RPAREN ARROW expression
    (58) dots -> . DOT
    (59) dots -> . dots DOT

    NUMBER          shift and go to state 2
    FLOAT           shift and go to state 3
    CHAR            shift and go to state 4
    STRING          shift and go to state 5
    LIST            shift and go to state 6
    LBRACKET        shift and go to state 8
    ARRAY           shift and go to state 9
    IDENTIFIER      shift and go to state 10
    MINUS           shift and go to state 11
    NOT             shift and go to state 12
    LPAREN          shift and go to state 7
    TRUE            shift and go to state 13
    FALSE           shift and go to state 14
    BEGIN           shift and go to state 15
    LOOP            shift and go to state 16
    FOR             shift and go to state 17
    WHILE           shift and go to state 18
    IF              shift and go to state 19
    LOCK            shift and go to state 20
    LET             shift and go to state 21
    LETREC          shift and go to state 22
    LAMBDA          shift and go to state 23
    STRUCT          shift and go to state 24
    EXTEND          shift and go to state 26
    PROC            shift and go to state 27
    DOT             shift and go to state 28

    expression                     shift and go to state 92
    dots                           shift and go to state 25

state 45

    (30) expression -> expression NEQ . expression
    (1) expression -> . NUMBER
    (2) expression -> . FLOAT
    (3) expression -> . CHAR
    (4) expression -> . STRING
    (5) expression -> . LIST LPAREN expression_list RPAREN
    (6) expression -> . LIST LPAREN RPAREN
    (7) expression -> . LBRACKET expression_list RBRACKET
    (8) expression -> . ARRAY LPAREN expression_list RPAREN
    (9) expression -> . LBRACKET RBRACKET
    (10) expression -> . ARRAY LPAREN RPAREN
    (11) expression -> . IDENTIFIER LBRACKET expression RBRACKET
    (12) expression -> . MINUS expression
    (13) expression -> . NOT expression
    (14) expression -> . expression PLUS expression
    (15) expression -> . expression MINUS expression
    (16) expression -> . expression TIMES expression
    (17) expression -> . expression DIVIDE expression
    (18) expression -> . expression LESS_THEN expression
    (19) expression -> . expression GREATER_THEN expression
    (20) expression -> . expression LESS_EQUALS expression
    (21) expression -> . expression GREATER_EQUALS expression
    (22) expression -> . expression EQUALS expression
    (23) expression -> . expression NOT_EQUALS expression
    (24) expression -> . expression AND expression
    (25) expression -> . expression NAND expression
    (26) expression -> . expression OR expression
    (27) expression -> . expression NOR expression
    (28) expression -> . expression XOR expression
    (29) expression -> . expression EQ expression
    (30) expression -> . expression NEQ expression
    (31) expression -> . expression IMPL expression
    (32) expression -> . LPAREN expression RPAREN
    (33) expression -> . TRUE
    (34) expression -> . FALSE
    (35) expression -> . IDENTIFIER
    (36) expression -> . IDENTIFIER ASSIGN expression
    (37) expression -> . BEGIN body END
    (40) expression -> . LOOP expression DO expression
    (41) expression -> . FOR expression SEPARATOR expression SEPARATOR expression DO expression
    (42) expression -> . WHILE expression DO expression
    (43) expression -> . IF expression THEN expression
    (44) expression -> . IF expression THEN expression ELSE expression
    (47) expression -> . LOCK identifier_list IN expression
    (50) expression -> . LET assign_list IN expression
    (51) expression -> . LETREC assign_list IN expression
    (54) expression -> . LAMBDA identifier_list ARROW expression
    (55) expression -> . LAMBDA ARROW expression
    (56) expression -> . expression LPAREN expression_list RPAREN
    (57) expression -> . expression LPAREN RPAREN
    (62) expression -> . STRUCT BEGIN struct_body END
    (63) expression -> . expression dots IDENTIFIER
    (64) expression -> . dots IDENTIFIER
    (65) expression -> . EXTEND expression BEGIN struct_body END
    (66) expression -> . PROC LPAREN identifier_list RPAREN identifier_list ARROW expression
    (67) expression -> . PROC LPAREN RPAREN identifier_list ARROW expression
    (68) expression -> . PROC LPAREN identifier_list RPAREN ARROW expression
    (69) expression -> . PROC LPAREN RPAREN ARROW expression
    (58) dots -> . DOT
    (59) dots -> . dots DOT

    NUMBER          shift and go to state 2
    FLOAT           shift and go to state 3
    CHAR            shift and go to state 4
    STRING          shift and go to state 5
    LIST            shift and go to state 6
    LBRACKET        shift and go to state 8
    ARRAY           shift and go to state 9
    IDENTIFIER      shift and go to state 10
    MINUS           shift and go to state 11
    NOT             shift and go to state 12
    LPAREN          shift and go to state 7
    TRUE            shift and go to state 13
    FALSE           shift and go to state 14
    BEGIN           shift and go to state 15
    LOOP            shift and go to state 16
    FOR             shift and go to state 17
    WHILE           shift and go to state 18
    IF              shift and go to state 19
    LOCK            shift and go to state 20
    LET             shift and go to state 21
    LETREC          shift and go to state 22
    LAMBDA          shift and go to state 23
    STRUCT          shift and go to state 24
    EXTEND          shift and go to state 26
    PROC            shift and go to state 27
    DOT             shift and go to state 28

    expression                     shift and go to state 93
    dots                           shift and go to state 25

state 46

    (31) expression -> expression IMPL . expression
    (1) expression -> . NUMBER
    (2) expression -> . FLOAT
    (3) expression -> . CHAR
    (4) expression -> . STRING
    (5) expression -> . LIST LPAREN expression_list RPAREN
    (6) expression -> . LIST LPAREN RPAREN
    (7) expression -> . LBRACKET expression_list RBRACKET
    (8) expression -> . ARRAY LPAREN expression_list RPAREN
    (9) expression -> . LBRACKET RBRACKET
    (10) expression -> . ARRAY LPAREN RPAREN
    (11) expression -> . IDENTIFIER LBRACKET expression RBRACKET
    (12) expression -> . MINUS expression
    (13) expression -> . NOT expression
    (14) expression -> . expression PLUS expression
    (15) expression -> . expression MINUS expression
    (16) expression -> . expression TIMES expression
    (17) expression -> . expression DIVIDE expression
    (18) expression -> . expression LESS_THEN expression
    (19) expression -> . expression GREATER_THEN expression
    (20) expression -> . expression LESS_EQUALS expression
    (21) expression -> . expression GREATER_EQUALS expression
    (22) expression -> . expression EQUALS expression
    (23) expression -> . expression NOT_EQUALS expression
    (24) expression -> . expression AND expression
    (25) expression -> . expression NAND expression
    (26) expression -> . expression OR expression
    (27) expression -> . expression NOR expression
    (28) expression -> . expression XOR expression
    (29) expression -> . expression EQ expression
    (30) expression -> . expression NEQ expression
    (31) expression -> . expression IMPL expression
    (32) expression -> . LPAREN expression RPAREN
    (33) expression -> . TRUE
    (34) expression -> . FALSE
    (35) expression -> . IDENTIFIER
    (36) expression -> . IDENTIFIER ASSIGN expression
    (37) expression -> . BEGIN body END
    (40) expression -> . LOOP expression DO expression
    (41) expression -> . FOR expression SEPARATOR expression SEPARATOR expression DO expression
    (42) expression -> . WHILE expression DO expression
    (43) expression -> . IF expression THEN expression
    (44) expression -> . IF expression THEN expression ELSE expression
    (47) expression -> . LOCK identifier_list IN expression
    (50) expression -> . LET assign_list IN expression
    (51) expression -> . LETREC assign_list IN expression
    (54) expression -> . LAMBDA identifier_list ARROW expression
    (55) expression -> . LAMBDA ARROW expression
    (56) expression -> . expression LPAREN expression_list RPAREN
    (57) expression -> . expression LPAREN RPAREN
    (62) expression -> . STRUCT BEGIN struct_body END
    (63) expression -> . expression dots IDENTIFIER
    (64) expression -> . dots IDENTIFIER
    (65) expression -> . EXTEND expression BEGIN struct_body END
    (66) expression -> . PROC LPAREN identifier_list RPAREN identifier_list ARROW expression
    (67) expression -> . PROC LPAREN RPAREN identifier_list ARROW expression
    (68) expression -> . PROC LPAREN identifier_list RPAREN ARROW expression
    (69) expression -> . PROC LPAREN RPAREN ARROW expression
    (58) dots -> . DOT
    (59) dots -> . dots DOT

    NUMBER          shift and go to state 2
    FLOAT           shift and go to state 3
    CHAR            shift and go to state 4
    STRING          shift and go to state 5
    LIST            shift and go to state 6
    LBRACKET        shift and go to state 8
    ARRAY           shift and go to state 9
    IDENTIFIER      shift and go to state 10
    MINUS           shift and go to state 11
    NOT             shift and go to state 12
    LPAREN          shift and go to state 7
    TRUE            shift and go to state 13
    FALSE           shift and go to state 14
    BEGIN           shift and go to state 15
    LOOP            shift and go to state 16
    FOR             shift and go to state 17
    WHILE           shift and go to state 18
    IF              shift and go to state 19
    LOCK            shift and go to state 20
    LET             shift and go to state 21
    LETREC          shift and go to state 22
    LAMBDA          shift and go to state 23
    STRUCT          shift and go to state 24
    EXTEND          shift and go to state 26
    PROC            shift and go to state 27
    DOT             shift and go to state 28

    expression                     shift and go to state 94
    dots                           shift and go to state 25

state 47

    (56) expression -> expression LPAREN . expression_list RPAREN
    (57) expression -> expression LPAREN . RPAREN
    (52) expression_list -> . expression
    (53) expression_list -> . expression COMMA expression_list
    (1) expression -> . NUMBER
    (2) expression -> . FLOAT
    (3) expression -> . CHAR
    (4) expression -> . STRING
    (5) expression -> . LIST LPAREN expression_list RPAREN
    (6) expression -> . LIST LPAREN RPAREN
    (7) expression -> . LBRACKET expression_list RBRACKET
    (8) expression -> . ARRAY LPAREN expression_list RPAREN
    (9) expression -> . LBRACKET RBRACKET
    (10) expression -> . ARRAY LPAREN RPAREN
    (11) expression -> . IDENTIFIER LBRACKET expression RBRACKET
    (12) expression -> . MINUS expression
    (13) expression -> . NOT expression
    (14) expression -> . expression PLUS expression
    (15) expression -> . expression MINUS expression
    (16) expression -> . expression TIMES expression
    (17) expression -> . expression DIVIDE expression
    (18) expression -> . expression LESS_THEN expression
    (19) expression -> . expression GREATER_THEN expression
    (20) expression -> . expression LESS_EQUALS expression
    (21) expression -> . expression GREATER_EQUALS expression
    (22) expression -> . expression EQUALS expression
    (23) expression -> . expression NOT_EQUALS expression
    (24) expression -> . expression AND expression
    (25) expression -> . expression NAND expression
    (26) expression -> . expression OR expression
    (27) expression -> . expression NOR expression
    (28) expression -> . expression XOR expression
    (29) expression -> . expression EQ expression
    (30) expression -> . expression NEQ expression
    (31) expression -> . expression IMPL expression
    (32) expression -> . LPAREN expression RPAREN
    (33) expression -> . TRUE
    (34) expression -> . FALSE
    (35) expression -> . IDENTIFIER
    (36) expression -> . IDENTIFIER ASSIGN expression
    (37) expression -> . BEGIN body END
    (40) expression -> . LOOP expression DO expression
    (41) expression -> . FOR expression SEPARATOR expression SEPARATOR expression DO expression
    (42) expression -> . WHILE expression DO expression
    (43) expression -> . IF expression THEN expression
    (44) expression -> . IF expression THEN expression ELSE expression
    (47) expression -> . LOCK identifier_list IN expression
    (50) expression -> . LET assign_list IN expression
    (51) expression -> . LETREC assign_list IN expression
    (54) expression -> . LAMBDA identifier_list ARROW expression
    (55) expression -> . LAMBDA ARROW expression
    (56) expression -> . expression LPAREN expression_list RPAREN
    (57) expression -> . expression LPAREN RPAREN
    (62) expression -> . STRUCT BEGIN struct_body END
    (63) expression -> . expression dots IDENTIFIER
    (64) expression -> . dots IDENTIFIER
    (65) expression -> . EXTEND expression BEGIN struct_body END
    (66) expression -> . PROC LPAREN identifier_list RPAREN identifier_list ARROW expression
    (67) expression -> . PROC LPAREN RPAREN identifier_list ARROW expression
    (68) expression -> . PROC LPAREN identifier_list RPAREN ARROW expression
    (69) expression -> . PROC LPAREN RPAREN ARROW expression
    (58) dots -> . DOT
    (59) dots -> . dots DOT

    RPAREN          shift and go to state 96
    NUMBER          shift and go to state 2
    FLOAT           shift and go to state 3
    CHAR            shift and go to state 4
    STRING          shift and go to state 5
    LIST            shift and go to state 6
    LBRACKET        shift and go to state 8
    ARRAY           shift and go to state 9
    IDENTIFIER      shift and go to state 10
    MINUS           shift and go to state 11
    NOT             shift and go to state 12
    LPAREN          shift and go to state 7
    TRUE            shift and go to state 13
    FALSE           shift and go to state 14
    BEGIN           shift and go to state 15
    LOOP            shift and go to state 16
    FOR             shift and go to state 17
    WHILE           shift and go to state 18
    IF              shift and go to state 19
    LOCK            shift and go to state 20
    LET             shift and go to state 21
    LETREC          shift and go to state 22
    LAMBDA          shift and go to state 23
    STRUCT          shift and go to state 24
    EXTEND          shift and go to state 26
    PROC            shift and go to state 27
    DOT             shift and go to state 28

    expression                     shift and go to state 53
    expression_list                shift and go to state 95
    dots                           shift and go to state 25

state 48

    (63) expression -> expression dots . IDENTIFIER
    (59) dots -> dots . DOT

    IDENTIFIER      shift and go to state 97
    DOT             shift and go to state 74


state 49

    (5) expression -> LIST LPAREN . expression_list RPAREN
    (6) expression -> LIST LPAREN . RPAREN
    (52) expression_list -> . expression
    (53) expression_list -> . expression COMMA expression_list
    (1) expression -> . NUMBER
    (2) expression -> . FLOAT
    (3) expression -> . CHAR
    (4) expression -> . STRING
    (5) expression -> . LIST LPAREN expression_list RPAREN
    (6) expression -> . LIST LPAREN RPAREN
    (7) expression -> . LBRACKET expression_list RBRACKET
    (8) expression -> . ARRAY LPAREN expression_list RPAREN
    (9) expression -> . LBRACKET RBRACKET
    (10) expression -> . ARRAY LPAREN RPAREN
    (11) expression -> . IDENTIFIER LBRACKET expression RBRACKET
    (12) expression -> . MINUS expression
    (13) expression -> . NOT expression
    (14) expression -> . expression PLUS expression
    (15) expression -> . expression MINUS expression
    (16) expression -> . expression TIMES expression
    (17) expression -> . expression DIVIDE expression
    (18) expression -> . expression LESS_THEN expression
    (19) expression -> . expression GREATER_THEN expression
    (20) expression -> . expression LESS_EQUALS expression
    (21) expression -> . expression GREATER_EQUALS expression
    (22) expression -> . expression EQUALS expression
    (23) expression -> . expression NOT_EQUALS expression
    (24) expression -> . expression AND expression
    (25) expression -> . expression NAND expression
    (26) expression -> . expression OR expression
    (27) expression -> . expression NOR expression
    (28) expression -> . expression XOR expression
    (29) expression -> . expression EQ expression
    (30) expression -> . expression NEQ expression
    (31) expression -> . expression IMPL expression
    (32) expression -> . LPAREN expression RPAREN
    (33) expression -> . TRUE
    (34) expression -> . FALSE
    (35) expression -> . IDENTIFIER
    (36) expression -> . IDENTIFIER ASSIGN expression
    (37) expression -> . BEGIN body END
    (40) expression -> . LOOP expression DO expression
    (41) expression -> . FOR expression SEPARATOR expression SEPARATOR expression DO expression
    (42) expression -> . WHILE expression DO expression
    (43) expression -> . IF expression THEN expression
    (44) expression -> . IF expression THEN expression ELSE expression
    (47) expression -> . LOCK identifier_list IN expression
    (50) expression -> . LET assign_list IN expression
    (51) expression -> . LETREC assign_list IN expression
    (54) expression -> . LAMBDA identifier_list ARROW expression
    (55) expression -> . LAMBDA ARROW expression
    (56) expression -> . expression LPAREN expression_list RPAREN
    (57) expression -> . expression LPAREN RPAREN
    (62) expression -> . STRUCT BEGIN struct_body END
    (63) expression -> . expression dots IDENTIFIER
    (64) expression -> . dots IDENTIFIER
    (65) expression -> . EXTEND expression BEGIN struct_body END
    (66) expression -> . PROC LPAREN identifier_list RPAREN identifier_list ARROW expression
    (67) expression -> . PROC LPAREN RPAREN identifier_list ARROW expression
    (68) expression -> . PROC LPAREN identifier_list RPAREN ARROW expression
    (69) expression -> . PROC LPAREN RPAREN ARROW expression
    (58) dots -> . DOT
    (59) dots -> . dots DOT

    RPAREN          shift and go to state 99
    NUMBER          shift and go to state 2
    FLOAT           shift and go to state 3
    CHAR            shift and go to state 4
    STRING          shift and go to state 5
    LIST            shift and go to state 6
    LBRACKET        shift and go to state 8
    ARRAY           shift and go to state 9
    IDENTIFIER      shift and go to state 10
    MINUS           shift and go to state 11
    NOT             shift and go to state 12
    LPAREN          shift and go to state 7
    TRUE            shift and go to state 13
    FALSE           shift and go to state 14
    BEGIN           shift and go to state 15
    LOOP            shift and go to state 16
    FOR             shift and go to state 17
    WHILE           shift and go to state 18
    IF              shift and go to state 19
    LOCK            shift and go to state 20
    LET             shift and go to state 21
    LETREC          shift and go to state 22
    LAMBDA          shift and go to state 23
    STRUCT          shift and go to state 24
    EXTEND          shift and go to state 26
    PROC            shift and go to state 27
    DOT             shift and go to state 28

    expression_list                shift and go to state 98
    expression                     shift and go to state 53
    dots                           shift and go to state 25

state 50

    (32) expression -> LPAREN expression . RPAREN
    (14) expression -> expression . PLUS expression
    (15) expression -> expression . MINUS expression
    (16) expression -> expression . TIMES expression
    (17) expression -> expression . DIVIDE expression
    (18) expression -> expression . LESS_THEN expression
    (19) expression -> expression . GREATER_THEN expression
    (20) expression -> expression . LESS_EQUALS expression
    (21) expression -> expression . GREATER_EQUALS expression
    (22) expression -> expression . EQUALS expression
    (23) expression -> expression . NOT_EQUALS expression
    (24) expression -> expression . AND expression
    (25) expression -> expression . NAND expression
    (26) expression -> expression . OR expression
    (27) expression -> expression . NOR expression
    (28) expression -> expression . XOR expression
    (29) expression -> expression . EQ expression
    (30) expression -> expression . NEQ expression
    (31) expression -> expression . IMPL expression
    (56) expression -> expression . LPAREN expression_list RPAREN
    (57) expression -> expression . LPAREN RPAREN
    (63) expression -> expression . dots IDENTIFIER
    (58) dots -> . DOT
    (59) dots -> . dots DOT

    RPAREN          shift and go to state 100
    PLUS            shift and go to state 29
    MINUS           shift and go to state 30
    TIMES           shift and go to state 31
    DIVIDE          shift and go to state 32
    LESS_THEN       shift and go to state 33
    GREATER_THEN    shift and go to state 34
    LESS_EQUALS     shift and go to state 35
    GREATER_EQUALS  shift and go to state 36
    EQUALS          shift and go to state 37
    NOT_EQUALS      shift and go to state 38
    AND             shift and go to state 39
    NAND            shift and go to state 40
    OR              shift and go to state 41
    NOR             shift and go to state 42
    XOR             shift and go to state 43
    EQ              shift and go to state 44
    NEQ             shift and go to state 45
    IMPL            shift and go to state 46
    LPAREN          shift and go to state 47
    DOT             shift and go to state 28

    dots                           shift and go to state 48

state 51

    (7) expression -> LBRACKET expression_list . RBRACKET

    RBRACKET        shift and go to state 101


state 52

    (9) expression -> LBRACKET RBRACKET .

    PLUS            reduce using rule 9 (expression -> LBRACKET RBRACKET .)
    MINUS           reduce using rule 9 (expression -> LBRACKET RBRACKET .)
    TIMES           reduce using rule 9 (expression -> LBRACKET RBRACKET .)
    DIVIDE          reduce using rule 9 (expression -> LBRACKET RBRACKET .)
    LESS_THEN       reduce using rule 9 (expression -> LBRACKET RBRACKET .)
    GREATER_THEN    reduce using rule 9 (expression -> LBRACKET RBRACKET .)
    LESS_EQUALS     reduce using rule 9 (expression -> LBRACKET RBRACKET .)
    GREATER_EQUALS  reduce using rule 9 (expression -> LBRACKET RBRACKET .)
    EQUALS          reduce using rule 9 (expression -> LBRACKET RBRACKET .)
    NOT_EQUALS      reduce using rule 9 (expression -> LBRACKET RBRACKET .)
    AND             reduce using rule 9 (expression -> LBRACKET RBRACKET .)
    NAND            reduce using rule 9 (expression -> LBRACKET RBRACKET .)
    OR              reduce using rule 9 (expression -> LBRACKET RBRACKET .)
    NOR             reduce using rule 9 (expression -> LBRACKET RBRACKET .)
    XOR             reduce using rule 9 (expression -> LBRACKET RBRACKET .)
    EQ              reduce using rule 9 (expression -> LBRACKET RBRACKET .)
    NEQ             reduce using rule 9 (expression -> LBRACKET RBRACKET .)
    IMPL            reduce using rule 9 (expression -> LBRACKET RBRACKET .)
    LPAREN          reduce using rule 9 (expression -> LBRACKET RBRACKET .)
    DOT             reduce using rule 9 (expression -> LBRACKET RBRACKET .)
    $end            reduce using rule 9 (expression -> LBRACKET RBRACKET .)
    RPAREN          reduce using rule 9 (expression -> LBRACKET RBRACKET .)
    COMMA           reduce using rule 9 (expression -> LBRACKET RBRACKET .)
    RBRACKET        reduce using rule 9 (expression -> LBRACKET RBRACKET .)
    END             reduce using rule 9 (expression -> LBRACKET RBRACKET .)
    SEPARATOR       reduce using rule 9 (expression -> LBRACKET RBRACKET .)
    DO              reduce using rule 9 (expression -> LBRACKET RBRACKET .)
    THEN            reduce using rule 9 (expression -> LBRACKET RBRACKET .)
    BEGIN           reduce using rule 9 (expression -> LBRACKET RBRACKET .)
    ELSE            reduce using rule 9 (expression -> LBRACKET RBRACKET .)
    IN              reduce using rule 9 (expression -> LBRACKET RBRACKET .)


state 53

    (52) expression_list -> expression .
    (53) expression_list -> expression . COMMA expression_list
    (14) expression -> expression . PLUS expression
    (15) expression -> expression . MINUS expression
    (16) expression -> expression . TIMES expression
    (17) expression -> expression . DIVIDE expression
    (18) expression -> expression . LESS_THEN expression
    (19) expression -> expression . GREATER_THEN expression
    (20) expression -> expression . LESS_EQUALS expression
    (21) expression -> expression . GREATER_EQUALS expression
    (22) expression -> expression . EQUALS expression
    (23) expression -> expression . NOT_EQUALS expression
    (24) expression -> expression . AND expression
    (25) expression -> expression . NAND expression
    (26) expression -> expression . OR expression
    (27) expression -> expression . NOR expression
    (28) expression -> expression . XOR expression
    (29) expression -> expression . EQ expression
    (30) expression -> expression . NEQ expression
    (31) expression -> expression . IMPL expression
    (56) expression -> expression . LPAREN expression_list RPAREN
    (57) expression -> expression . LPAREN RPAREN
    (63) expression -> expression . dots IDENTIFIER
    (58) dots -> . DOT
    (59) dots -> . dots DOT

    RBRACKET        reduce using rule 52 (expression_list -> expression .)
    RPAREN          reduce using rule 52 (expression_list -> expression .)
    COMMA           shift and go to state 102
    PLUS            shift and go to state 29
    MINUS           shift and go to state 30
    TIMES           shift and go to state 31
    DIVIDE          shift and go to state 32
    LESS_THEN       shift and go to state 33
    GREATER_THEN    shift and go to state 34
    LESS_EQUALS     shift and go to state 35
    GREATER_EQUALS  shift and go to state 36
    EQUALS          shift and go to state 37
    NOT_EQUALS      shift and go to state 38
    AND             shift and go to state 39
    NAND            shift and go to state 40
    OR              shift and go to state 41
    NOR             shift and go to state 42
    XOR             shift and go to state 43
    EQ              shift and go to state 44
    NEQ             shift and go to state 45
    IMPL            shift and go to state 46
    LPAREN          shift and go to state 47
    DOT             shift and go to state 28

    dots                           shift and go to state 48

state 54

    (8) expression -> ARRAY LPAREN . expression_list RPAREN
    (10) expression -> ARRAY LPAREN . RPAREN
    (52) expression_list -> . expression
    (53) expression_list -> . expression COMMA expression_list
    (1) expression -> . NUMBER
    (2) expression -> . FLOAT
    (3) expression -> . CHAR
    (4) expression -> . STRING
    (5) expression -> . LIST LPAREN expression_list RPAREN
    (6) expression -> . LIST LPAREN RPAREN
    (7) expression -> . LBRACKET expression_list RBRACKET
    (8) expression -> . ARRAY LPAREN expression_list RPAREN
    (9) expression -> . LBRACKET RBRACKET
    (10) expression -> . ARRAY LPAREN RPAREN
    (11) expression -> . IDENTIFIER LBRACKET expression RBRACKET
    (12) expression -> . MINUS expression
    (13) expression -> . NOT expression
    (14) expression -> . expression PLUS expression
    (15) expression -> . expression MINUS expression
    (16) expression -> . expression TIMES expression
    (17) expression -> . expression DIVIDE expression
    (18) expression -> . expression LESS_THEN expression
    (19) expression -> . expression GREATER_THEN expression
    (20) expression -> . expression LESS_EQUALS expression
    (21) expression -> . expression GREATER_EQUALS expression
    (22) expression -> . expression EQUALS expression
    (23) expression -> . expression NOT_EQUALS expression
    (24) expression -> . expression AND expression
    (25) expression -> . expression NAND expression
    (26) expression -> . expression OR expression
    (27) expression -> . expression NOR expression
    (28) expression -> . expression XOR expression
    (29) expression -> . expression EQ expression
    (30) expression -> . expression NEQ expression
    (31) expression -> . expression IMPL expression
    (32) expression -> . LPAREN expression RPAREN
    (33) expression -> . TRUE
    (34) expression -> . FALSE
    (35) expression -> . IDENTIFIER
    (36) expression -> . IDENTIFIER ASSIGN expression
    (37) expression -> . BEGIN body END
    (40) expression -> . LOOP expression DO expression
    (41) expression -> . FOR expression SEPARATOR expression SEPARATOR expression DO expression
    (42) expression -> . WHILE expression DO expression
    (43) expression -> . IF expression THEN expression
    (44) expression -> . IF expression THEN expression ELSE expression
    (47) expression -> . LOCK identifier_list IN expression
    (50) expression -> . LET assign_list IN expression
    (51) expression -> . LETREC assign_list IN expression
    (54) expression -> . LAMBDA identifier_list ARROW expression
    (55) expression -> . LAMBDA ARROW expression
    (56) expression -> . expression LPAREN expression_list RPAREN
    (57) expression -> . expression LPAREN RPAREN
    (62) expression -> . STRUCT BEGIN struct_body END
    (63) expression -> . expression dots IDENTIFIER
    (64) expression -> . dots IDENTIFIER
    (65) expression -> . EXTEND expression BEGIN struct_body END
    (66) expression -> . PROC LPAREN identifier_list RPAREN identifier_list ARROW expression
    (67) expression -> . PROC LPAREN RPAREN identifier_list ARROW expression
    (68) expression -> . PROC LPAREN identifier_list RPAREN ARROW expression
    (69) expression -> . PROC LPAREN RPAREN ARROW expression
    (58) dots -> . DOT
    (59) dots -> . dots DOT

    RPAREN          shift and go to state 104
    NUMBER          shift and go to state 2
    FLOAT           shift and go to state 3
    CHAR            shift and go to state 4
    STRING          shift and go to state 5
    LIST            shift and go to state 6
    LBRACKET        shift and go to state 8
    ARRAY           shift and go to state 9
    IDENTIFIER      shift and go to state 10
    MINUS           shift and go to state 11
    NOT             shift and go to state 12
    LPAREN          shift and go to state 7
    TRUE            shift and go to state 13
    FALSE           shift and go to state 14
    BEGIN           shift and go to state 15
    LOOP            shift and go to state 16
    FOR             shift and go to state 17
    WHILE           shift and go to state 18
    IF              shift and go to state 19
    LOCK            shift and go to state 20
    LET             shift and go to state 21
    LETREC          shift and go to state 22
    LAMBDA          shift and go to state 23
    STRUCT          shift and go to state 24
    EXTEND          shift and go to state 26
    PROC            shift and go to state 27
    DOT             shift and go to state 28

    expression_list                shift and go to state 103
    expression                     shift and go to state 53
    dots                           shift and go to state 25

state 55

    (11) expression -> IDENTIFIER LBRACKET . expression RBRACKET
    (1) expression -> . NUMBER
    (2) expression -> . FLOAT
    (3) expression -> . CHAR
    (4) expression -> . STRING
    (5) expression -> . LIST LPAREN expression_list RPAREN
    (6) expression -> . LIST LPAREN RPAREN
    (7) expression -> . LBRACKET expression_list RBRACKET
    (8) expression -> . ARRAY LPAREN expression_list RPAREN
    (9) expression -> . LBRACKET RBRACKET
    (10) expression -> . ARRAY LPAREN RPAREN
    (11) expression -> . IDENTIFIER LBRACKET expression RBRACKET
    (12) expression -> . MINUS expression
    (13) expression -> . NOT expression
    (14) expression -> . expression PLUS expression
    (15) expression -> . expression MINUS expression
    (16) expression -> . expression TIMES expression
    (17) expression -> . expression DIVIDE expression
    (18) expression -> . expression LESS_THEN expression
    (19) expression -> . expression GREATER_THEN expression
    (20) expression -> . expression LESS_EQUALS expression
    (21) expression -> . expression GREATER_EQUALS expression
    (22) expression -> . expression EQUALS expression
    (23) expression -> . expression NOT_EQUALS expression
    (24) expression -> . expression AND expression
    (25) expression -> . expression NAND expression
    (26) expression -> . expression OR expression
    (27) expression -> . expression NOR expression
    (28) expression -> . expression XOR expression
    (29) expression -> . expression EQ expression
    (30) expression -> . expression NEQ expression
    (31) expression -> . expression IMPL expression
    (32) expression -> . LPAREN expression RPAREN
    (33) expression -> . TRUE
    (34) expression -> . FALSE
    (35) expression -> . IDENTIFIER
    (36) expression -> . IDENTIFIER ASSIGN expression
    (37) expression -> . BEGIN body END
    (40) expression -> . LOOP expression DO expression
    (41) expression -> . FOR expression SEPARATOR expression SEPARATOR expression DO expression
    (42) expression -> . WHILE expression DO expression
    (43) expression -> . IF expression THEN expression
    (44) expression -> . IF expression THEN expression ELSE expression
    (47) expression -> . LOCK identifier_list IN expression
    (50) expression -> . LET assign_list IN expression
    (51) expression -> . LETREC assign_list IN expression
    (54) expression -> . LAMBDA identifier_list ARROW expression
    (55) expression -> . LAMBDA ARROW expression
    (56) expression -> . expression LPAREN expression_list RPAREN
    (57) expression -> . expression LPAREN RPAREN
    (62) expression -> . STRUCT BEGIN struct_body END
    (63) expression -> . expression dots IDENTIFIER
    (64) expression -> . dots IDENTIFIER
    (65) expression -> . EXTEND expression BEGIN struct_body END
    (66) expression -> . PROC LPAREN identifier_list RPAREN identifier_list ARROW expression
    (67) expression -> . PROC LPAREN RPAREN identifier_list ARROW expression
    (68) expression -> . PROC LPAREN identifier_list RPAREN ARROW expression
    (69) expression -> . PROC LPAREN RPAREN ARROW expression
    (58) dots -> . DOT
    (59) dots -> . dots DOT

    NUMBER          shift and go to state 2
    FLOAT           shift and go to state 3
    CHAR            shift and go to state 4
    STRING          shift and go to state 5
    LIST            shift and go to state 6
    LBRACKET        shift and go to state 8
    ARRAY           shift and go to state 9
    IDENTIFIER      shift and go to state 10
    MINUS           shift and go to state 11
    NOT             shift and go to state 12
    LPAREN          shift and go to state 7
    TRUE            shift and go to state 13
    FALSE           shift and go to state 14
    BEGIN           shift and go to state 15
    LOOP            shift and go to state 16
    FOR             shift and go to state 17
    WHILE           shift and go to state 18
    IF              shift and go to state 19
    LOCK            shift and go to state 20
    LET             shift and go to state 21
    LETREC          shift and go to state 22
    LAMBDA          shift and go to state 23
    STRUCT          shift and go to state 24
    EXTEND          shift and go to state 26
    PROC            shift and go to state 27
    DOT             shift and go to state 28

    expression                     shift and go to state 105
    dots                           shift and go to state 25

state 56

    (36) expression -> IDENTIFIER ASSIGN . expression
    (1) expression -> . NUMBER
    (2) expression -> . FLOAT
    (3) expression -> . CHAR
    (4) expression -> . STRING
    (5) expression -> . LIST LPAREN expression_list RPAREN
    (6) expression -> . LIST LPAREN RPAREN
    (7) expression -> . LBRACKET expression_list RBRACKET
    (8) expression -> . ARRAY LPAREN expression_list RPAREN
    (9) expression -> . LBRACKET RBRACKET
    (10) expression -> . ARRAY LPAREN RPAREN
    (11) expression -> . IDENTIFIER LBRACKET expression RBRACKET
    (12) expression -> . MINUS expression
    (13) expression -> . NOT expression
    (14) expression -> . expression PLUS expression
    (15) expression -> . expression MINUS expression
    (16) expression -> . expression TIMES expression
    (17) expression -> . expression DIVIDE expression
    (18) expression -> . expression LESS_THEN expression
    (19) expression -> . expression GREATER_THEN expression
    (20) expression -> . expression LESS_EQUALS expression
    (21) expression -> . expression GREATER_EQUALS expression
    (22) expression -> . expression EQUALS expression
    (23) expression -> . expression NOT_EQUALS expression
    (24) expression -> . expression AND expression
    (25) expression -> . expression NAND expression
    (26) expression -> . expression OR expression
    (27) expression -> . expression NOR expression
    (28) expression -> . expression XOR expression
    (29) expression -> . expression EQ expression
    (30) expression -> . expression NEQ expression
    (31) expression -> . expression IMPL expression
    (32) expression -> . LPAREN expression RPAREN
    (33) expression -> . TRUE
    (34) expression -> . FALSE
    (35) expression -> . IDENTIFIER
    (36) expression -> . IDENTIFIER ASSIGN expression
    (37) expression -> . BEGIN body END
    (40) expression -> . LOOP expression DO expression
    (41) expression -> . FOR expression SEPARATOR expression SEPARATOR expression DO expression
    (42) expression -> . WHILE expression DO expression
    (43) expression -> . IF expression THEN expression
    (44) expression -> . IF expression THEN expression ELSE expression
    (47) expression -> . LOCK identifier_list IN expression
    (50) expression -> . LET assign_list IN expression
    (51) expression -> . LETREC assign_list IN expression
    (54) expression -> . LAMBDA identifier_list ARROW expression
    (55) expression -> . LAMBDA ARROW expression
    (56) expression -> . expression LPAREN expression_list RPAREN
    (57) expression -> . expression LPAREN RPAREN
    (62) expression -> . STRUCT BEGIN struct_body END
    (63) expression -> . expression dots IDENTIFIER
    (64) expression -> . dots IDENTIFIER
    (65) expression -> . EXTEND expression BEGIN struct_body END
    (66) expression -> . PROC LPAREN identifier_list RPAREN identifier_list ARROW expression
    (67) expression -> . PROC LPAREN RPAREN identifier_list ARROW expression
    (68) expression -> . PROC LPAREN identifier_list RPAREN ARROW expression
    (69) expression -> . PROC LPAREN RPAREN ARROW expression
    (58) dots -> . DOT
    (59) dots -> . dots DOT

    NUMBER          shift and go to state 2
    FLOAT           shift and go to state 3
    CHAR            shift and go to state 4
    STRING          shift and go to state 5
    LIST            shift and go to state 6
    LBRACKET        shift and go to state 8
    ARRAY           shift and go to state 9
    IDENTIFIER      shift and go to state 10
    MINUS           shift and go to state 11
    NOT             shift and go to state 12
    LPAREN          shift and go to state 7
    TRUE            shift and go to state 13
    FALSE           shift and go to state 14
    BEGIN           shift and go to state 15
    LOOP            shift and go to state 16
    FOR             shift and go to state 17
    WHILE           shift and go to state 18
    IF              shift and go to state 19
    LOCK            shift and go to state 20
    LET             shift and go to state 21
    LETREC          shift and go to state 22
    LAMBDA          shift and go to state 23
    STRUCT          shift and go to state 24
    EXTEND          shift and go to state 26
    PROC            shift and go to state 27
    DOT             shift and go to state 28

    expression                     shift and go to state 106
    dots                           shift and go to state 25

state 57

    (12) expression -> MINUS expression .
    (14) expression -> expression . PLUS expression
    (15) expression -> expression . MINUS expression
    (16) expression -> expression . TIMES expression
    (17) expression -> expression . DIVIDE expression
    (18) expression -> expression . LESS_THEN expression
    (19) expression -> expression . GREATER_THEN expression
    (20) expression -> expression . LESS_EQUALS expression
    (21) expression -> expression . GREATER_EQUALS expression
    (22) expression -> expression . EQUALS expression
    (23) expression -> expression . NOT_EQUALS expression
    (24) expression -> expression . AND expression
    (25) expression -> expression . NAND expression
    (26) expression -> expression . OR expression
    (27) expression -> expression . NOR expression
    (28) expression -> expression . XOR expression
    (29) expression -> expression . EQ expression
    (30) expression -> expression . NEQ expression
    (31) expression -> expression . IMPL expression
    (56) expression -> expression . LPAREN expression_list RPAREN
    (57) expression -> expression . LPAREN RPAREN
    (63) expression -> expression . dots IDENTIFIER
    (58) dots -> . DOT
    (59) dots -> . dots DOT

    PLUS            reduce using rule 12 (expression -> MINUS expression .)
    MINUS           reduce using rule 12 (expression -> MINUS expression .)
    TIMES           reduce using rule 12 (expression -> MINUS expression .)
    DIVIDE          reduce using rule 12 (expression -> MINUS expression .)
    LESS_THEN       reduce using rule 12 (expression -> MINUS expression .)
    GREATER_THEN    reduce using rule 12 (expression -> MINUS expression .)
    LESS_EQUALS     reduce using rule 12 (expression -> MINUS expression .)
    GREATER_EQUALS  reduce using rule 12 (expression -> MINUS expression .)
    EQUALS          reduce using rule 12 (expression -> MINUS expression .)
    NOT_EQUALS      reduce using rule 12 (expression -> MINUS expression .)
    AND             reduce using rule 12 (expression -> MINUS expression .)
    NAND            reduce using rule 12 (expression -> MINUS expression .)
    OR              reduce using rule 12 (expression -> MINUS expression .)
    NOR             reduce using rule 12 (expression -> MINUS expression .)
    XOR             reduce using rule 12 (expression -> MINUS expression .)
    EQ              reduce using rule 12 (expression -> MINUS expression .)
    NEQ             reduce using rule 12 (expression -> MINUS expression .)
    IMPL            reduce using rule 12 (expression -> MINUS expression .)
    $end            reduce using rule 12 (expression -> MINUS expression .)
    RPAREN          reduce using rule 12 (expression -> MINUS expression .)
    COMMA           reduce using rule 12 (expression -> MINUS expression .)
    RBRACKET        reduce using rule 12 (expression -> MINUS expression .)
    END             reduce using rule 12 (expression -> MINUS expression .)
    SEPARATOR       reduce using rule 12 (expression -> MINUS expression .)
    DO              reduce using rule 12 (expression -> MINUS expression .)
    THEN            reduce using rule 12 (expression -> MINUS expression .)
    BEGIN           reduce using rule 12 (expression -> MINUS expression .)
    ELSE            reduce using rule 12 (expression -> MINUS expression .)
    IN              reduce using rule 12 (expression -> MINUS expression .)
    LPAREN          shift and go to state 47
    DOT             shift and go to state 28

  ! LPAREN          [ reduce using rule 12 (expression -> MINUS expression .) ]
  ! DOT             [ reduce using rule 12 (expression -> MINUS expression .) ]
  ! PLUS            [ shift and go to state 29 ]
  ! MINUS           [ shift and go to state 30 ]
  ! TIMES           [ shift and go to state 31 ]
  ! DIVIDE          [ shift and go to state 32 ]
  ! LESS_THEN       [ shift and go to state 33 ]
  ! GREATER_THEN    [ shift and go to state 34 ]
  ! LESS_EQUALS     [ shift and go to state 35 ]
  ! GREATER_EQUALS  [ shift and go to state 36 ]
  ! EQUALS          [ shift and go to state 37 ]
  ! NOT_EQUALS      [ shift and go to state 38 ]
  ! AND             [ shift and go to state 39 ]
  ! NAND            [ shift and go to state 40 ]
  ! OR              [ shift and go to state 41 ]
  ! NOR             [ shift and go to state 42 ]
  ! XOR             [ shift and go to state 43 ]
  ! EQ              [ shift and go to state 44 ]
  ! NEQ             [ shift and go to state 45 ]
  ! IMPL            [ shift and go to state 46 ]

    dots                           shift and go to state 48

state 58

    (13) expression -> NOT expression .
    (14) expression -> expression . PLUS expression
    (15) expression -> expression . MINUS expression
    (16) expression -> expression . TIMES expression
    (17) expression -> expression . DIVIDE expression
    (18) expression -> expression . LESS_THEN expression
    (19) expression -> expression . GREATER_THEN expression
    (20) expression -> expression . LESS_EQUALS expression
    (21) expression -> expression . GREATER_EQUALS expression
    (22) expression -> expression . EQUALS expression
    (23) expression -> expression . NOT_EQUALS expression
    (24) expression -> expression . AND expression
    (25) expression -> expression . NAND expression
    (26) expression -> expression . OR expression
    (27) expression -> expression . NOR expression
    (28) expression -> expression . XOR expression
    (29) expression -> expression . EQ expression
    (30) expression -> expression . NEQ expression
    (31) expression -> expression . IMPL expression
    (56) expression -> expression . LPAREN expression_list RPAREN
    (57) expression -> expression . LPAREN RPAREN
    (63) expression -> expression . dots IDENTIFIER
    (58) dots -> . DOT
    (59) dots -> . dots DOT

    PLUS            reduce using rule 13 (expression -> NOT expression .)
    MINUS           reduce using rule 13 (expression -> NOT expression .)
    TIMES           reduce using rule 13 (expression -> NOT expression .)
    DIVIDE          reduce using rule 13 (expression -> NOT expression .)
    LESS_THEN       reduce using rule 13 (expression -> NOT expression .)
    GREATER_THEN    reduce using rule 13 (expression -> NOT expression .)
    LESS_EQUALS     reduce using rule 13 (expression -> NOT expression .)
    GREATER_EQUALS  reduce using rule 13 (expression -> NOT expression .)
    EQUALS          reduce using rule 13 (expression -> NOT expression .)
    NOT_EQUALS      reduce using rule 13 (expression -> NOT expression .)
    AND             reduce using rule 13 (expression -> NOT expression .)
    NAND            reduce using rule 13 (expression -> NOT expression .)
    OR              reduce using rule 13 (expression -> NOT expression .)
    NOR             reduce using rule 13 (expression -> NOT expression .)
    XOR             reduce using rule 13 (expression -> NOT expression .)
    EQ              reduce using rule 13 (expression -> NOT expression .)
    NEQ             reduce using rule 13 (expression -> NOT expression .)
    IMPL            reduce using rule 13 (expression -> NOT expression .)
    $end            reduce using rule 13 (expression -> NOT expression .)
    RPAREN          reduce using rule 13 (expression -> NOT expression .)
    COMMA           reduce using rule 13 (expression -> NOT expression .)
    RBRACKET        reduce using rule 13 (expression -> NOT expression .)
    END             reduce using rule 13 (expression -> NOT expression .)
    SEPARATOR       reduce using rule 13 (expression -> NOT expression .)
    DO              reduce using rule 13 (expression -> NOT expression .)
    THEN            reduce using rule 13 (expression -> NOT expression .)
    BEGIN           reduce using rule 13 (expression -> NOT expression .)
    ELSE            reduce using rule 13 (expression -> NOT expression .)
    IN              reduce using rule 13 (expression -> NOT expression .)
    LPAREN          shift and go to state 47
    DOT             shift and go to state 28

  ! LPAREN          [ reduce using rule 13 (expression -> NOT expression .) ]
  ! DOT             [ reduce using rule 13 (expression -> NOT expression .) ]
  ! PLUS            [ shift and go to state 29 ]
  ! MINUS           [ shift and go to state 30 ]
  ! TIMES           [ shift and go to state 31 ]
  ! DIVIDE          [ shift and go to state 32 ]
  ! LESS_THEN       [ shift and go to state 33 ]
  ! GREATER_THEN    [ shift and go to state 34 ]
  ! LESS_EQUALS     [ shift and go to state 35 ]
  ! GREATER_EQUALS  [ shift and go to state 36 ]
  ! EQUALS          [ shift and go to state 37 ]
  ! NOT_EQUALS      [ shift and go to state 38 ]
  ! AND             [ shift and go to state 39 ]
  ! NAND            [ shift and go to state 40 ]
  ! OR              [ shift and go to state 41 ]
  ! NOR             [ shift and go to state 42 ]
  ! XOR             [ shift and go to state 43 ]
  ! EQ              [ shift and go to state 44 ]
  ! NEQ             [ shift and go to state 45 ]
  ! IMPL            [ shift and go to state 46 ]

    dots                           shift and go to state 48

state 59

    (37) expression -> BEGIN body . END
    (39) body -> body . SEPARATOR expression

    END             shift and go to state 107
    SEPARATOR       shift and go to state 108


state 60

    (38) body -> expression .
    (14) expression -> expression . PLUS expression
    (15) expression -> expression . MINUS expression
    (16) expression -> expression . TIMES expression
    (17) expression -> expression . DIVIDE expression
    (18) expression -> expression . LESS_THEN expression
    (19) expression -> expression . GREATER_THEN expression
    (20) expression -> expression . LESS_EQUALS expression
    (21) expression -> expression . GREATER_EQUALS expression
    (22) expression -> expression . EQUALS expression
    (23) expression -> expression . NOT_EQUALS expression
    (24) expression -> expression . AND expression
    (25) expression -> expression . NAND expression
    (26) expression -> expression . OR expression
    (27) expression -> expression . NOR expression
    (28) expression -> expression . XOR expression
    (29) expression -> expression . EQ expression
    (30) expression -> expression . NEQ expression
    (31) expression -> expression . IMPL expression
    (56) expression -> expression . LPAREN expression_list RPAREN
    (57) expression -> expression . LPAREN RPAREN
    (63) expression -> expression . dots IDENTIFIER
    (58) dots -> . DOT
    (59) dots -> . dots DOT

    END             reduce using rule 38 (body -> expression .)
    SEPARATOR       reduce using rule 38 (body -> expression .)
    PLUS            shift and go to state 29
    MINUS           shift and go to state 30
    TIMES           shift and go to state 31
    DIVIDE          shift and go to state 32
    LESS_THEN       shift and go to state 33
    GREATER_THEN    shift and go to state 34
    LESS_EQUALS     shift and go to state 35
    GREATER_EQUALS  shift and go to state 36
    EQUALS          shift and go to state 37
    NOT_EQUALS      shift and go to state 38
    AND             shift and go to state 39
    NAND            shift and go to state 40
    OR              shift and go to state 41
    NOR             shift and go to state 42
    XOR             shift and go to state 43
    EQ              shift and go to state 44
    NEQ             shift and go to state 45
    IMPL            shift and go to state 46
    LPAREN          shift and go to state 47
    DOT             shift and go to state 28

    dots                           shift and go to state 48

state 61

    (40) expression -> LOOP expression . DO expression
    (14) expression -> expression . PLUS expression
    (15) expression -> expression . MINUS expression
    (16) expression -> expression . TIMES expression
    (17) expression -> expression . DIVIDE expression
    (18) expression -> expression . LESS_THEN expression
    (19) expression -> expression . GREATER_THEN expression
    (20) expression -> expression . LESS_EQUALS expression
    (21) expression -> expression . GREATER_EQUALS expression
    (22) expression -> expression . EQUALS expression
    (23) expression -> expression . NOT_EQUALS expression
    (24) expression -> expression . AND expression
    (25) expression -> expression . NAND expression
    (26) expression -> expression . OR expression
    (27) expression -> expression . NOR expression
    (28) expression -> expression . XOR expression
    (29) expression -> expression . EQ expression
    (30) expression -> expression . NEQ expression
    (31) expression -> expression . IMPL expression
    (56) expression -> expression . LPAREN expression_list RPAREN
    (57) expression -> expression . LPAREN RPAREN
    (63) expression -> expression . dots IDENTIFIER
    (58) dots -> . DOT
    (59) dots -> . dots DOT

    DO              shift and go to state 109
    PLUS            shift and go to state 29
    MINUS           shift and go to state 30
    TIMES           shift and go to state 31
    DIVIDE          shift and go to state 32
    LESS_THEN       shift and go to state 33
    GREATER_THEN    shift and go to state 34
    LESS_EQUALS     shift and go to state 35
    GREATER_EQUALS  shift and go to state 36
    EQUALS          shift and go to state 37
    NOT_EQUALS      shift and go to state 38
    AND             shift and go to state 39
    NAND            shift and go to state 40
    OR              shift and go to state 41
    NOR             shift and go to state 42
    XOR             shift and go to state 43
    EQ              shift and go to state 44
    NEQ             shift and go to state 45
    IMPL            shift and go to state 46
    LPAREN          shift and go to state 47
    DOT             shift and go to state 28

    dots                           shift and go to state 48

state 62

    (41) expression -> FOR expression . SEPARATOR expression SEPARATOR expression DO expression
    (14) expression -> expression . PLUS expression
    (15) expression -> expression . MINUS expression
    (16) expression -> expression . TIMES expression
    (17) expression -> expression . DIVIDE expression
    (18) expression -> expression . LESS_THEN expression
    (19) expression -> expression . GREATER_THEN expression
    (20) expression -> expression . LESS_EQUALS expression
    (21) expression -> expression . GREATER_EQUALS expression
    (22) expression -> expression . EQUALS expression
    (23) expression -> expression . NOT_EQUALS expression
    (24) expression -> expression . AND expression
    (25) expression -> expression . NAND expression
    (26) expression -> expression . OR expression
    (27) expression -> expression . NOR expression
    (28) expression -> expression . XOR expression
    (29) expression -> expression . EQ expression
    (30) expression -> expression . NEQ expression
    (31) expression -> expression . IMPL expression
    (56) expression -> expression . LPAREN expression_list RPAREN
    (57) expression -> expression . LPAREN RPAREN
    (63) expression -> expression . dots IDENTIFIER
    (58) dots -> . DOT
    (59) dots -> . dots DOT

    SEPARATOR       shift and go to state 110
    PLUS            shift and go to state 29
    MINUS           shift and go to state 30
    TIMES           shift and go to state 31
    DIVIDE          shift and go to state 32
    LESS_THEN       shift and go to state 33
    GREATER_THEN    shift and go to state 34
    LESS_EQUALS     shift and go to state 35
    GREATER_EQUALS  shift and go to state 36
    EQUALS          shift and go to state 37
    NOT_EQUALS      shift and go to state 38
    AND             shift and go to state 39
    NAND            shift and go to state 40
    OR              shift and go to state 41
    NOR             shift and go to state 42
    XOR             shift and go to state 43
    EQ              shift and go to state 44
    NEQ             shift and go to state 45
    IMPL            shift and go to state 46
    LPAREN          shift and go to state 47
    DOT             shift and go to state 28

    dots                           shift and go to state 48

state 63

    (42) expression -> WHILE expression . DO expression
    (14) expression -> expression . PLUS expression
    (15) expression -> expression . MINUS expression
    (16) expression -> expression . TIMES expression
    (17) expression -> expression . DIVIDE expression
    (18) expression -> expression . LESS_THEN expression
    (19) expression -> expression . GREATER_THEN expression
    (20) expression -> expression . LESS_EQUALS expression
    (21) expression -> expression . GREATER_EQUALS expression
    (22) expression -> expression . EQUALS expression
    (23) expression -> expression . NOT_EQUALS expression
    (24) expression -> expression . AND expression
    (25) expression -> expression . NAND expression
    (26) expression -> expression . OR expression
    (27) expression -> expression . NOR expression
    (28) expression -> expression . XOR expression
    (29) expression -> expression . EQ expression
    (30) expression -> expression . NEQ expression
    (31) expression -> expression . IMPL expression
    (56) expression -> expression . LPAREN expression_list RPAREN
    (57) expression -> expression . LPAREN RPAREN
    (63) expression -> expression . dots IDENTIFIER
    (58) dots -> . DOT
    (59) dots -> . dots DOT

    DO              shift and go to state 111
    PLUS            shift and go to state 29
    MINUS           shift and go to state 30
    TIMES           shift and go to state 31
    DIVIDE          shift and go to state 32
    LESS_THEN       shift and go to state 33
    GREATER_THEN    shift and go to state 34
    LESS_EQUALS     shift and go to state 35
    GREATER_EQUALS  shift and go to state 36
    EQUALS          shift and go to state 37
    NOT_EQUALS      shift and go to state 38
    AND             shift and go to state 39
    NAND            shift and go to state 40
    OR              shift and go to state 41
    NOR             shift and go to state 42
    XOR             shift and go to state 43
    EQ              shift and go to state 44
    NEQ             shift and go to state 45
    IMPL            shift and go to state 46
    LPAREN          shift and go to state 47
    DOT             shift and go to state 28

    dots                           shift and go to state 48

state 64

    (43) expression -> IF expression . THEN expression
    (44) expression -> IF expression . THEN expression ELSE expression
    (14) expression -> expression . PLUS expression
    (15) expression -> expression . MINUS expression
    (16) expression -> expression . TIMES expression
    (17) expression -> expression . DIVIDE expression
    (18) expression -> expression . LESS_THEN expression
    (19) expression -> expression . GREATER_THEN expression
    (20) expression -> expression . LESS_EQUALS expression
    (21) expression -> expression . GREATER_EQUALS expression
    (22) expression -> expression . EQUALS expression
    (23) expression -> expression . NOT_EQUALS expression
    (24) expression -> expression . AND expression
    (25) expression -> expression . NAND expression
    (26) expression -> expression . OR expression
    (27) expression -> expression . NOR expression
    (28) expression -> expression . XOR expression
    (29) expression -> expression . EQ expression
    (30) expression -> expression . NEQ expression
    (31) expression -> expression . IMPL expression
    (56) expression -> expression . LPAREN expression_list RPAREN
    (57) expression -> expression . LPAREN RPAREN
    (63) expression -> expression . dots IDENTIFIER
    (58) dots -> . DOT
    (59) dots -> . dots DOT

    THEN            shift and go to state 112
    PLUS            shift and go to state 29
    MINUS           shift and go to state 30
    TIMES           shift and go to state 31
    DIVIDE          shift and go to state 32
    LESS_THEN       shift and go to state 33
    GREATER_THEN    shift and go to state 34
    LESS_EQUALS     shift and go to state 35
    GREATER_EQUALS  shift and go to state 36
    EQUALS          shift and go to state 37
    NOT_EQUALS      shift and go to state 38
    AND             shift and go to state 39
    NAND            shift and go to state 40
    OR              shift and go to state 41
    NOR             shift and go to state 42
    XOR             shift and go to state 43
    EQ              shift and go to state 44
    NEQ             shift and go to state 45
    IMPL            shift and go to state 46
    LPAREN          shift and go to state 47
    DOT             shift and go to state 28

    dots                           shift and go to state 48

state 65

    (47) expression -> LOCK identifier_list . IN expression

    IN              shift and go to state 113


state 66

    (45) identifier_list -> IDENTIFIER .
    (46) identifier_list -> IDENTIFIER . COMMA identifier_list

    IN              reduce using rule 45 (identifier_list -> IDENTIFIER .)
    ARROW           reduce using rule 45 (identifier_list -> IDENTIFIER .)
    RPAREN          reduce using rule 45 (identifier_list -> IDENTIFIER .)
    COMMA           shift and go to state 114


state 67

    (50) expression -> LET assign_list . IN expression
    (49) assign_list -> assign_list . COMMA IDENTIFIER ASSIGN expression

    IN              shift and go to state 115
    COMMA           shift and go to state 116


state 68

    (48) assign_list -> IDENTIFIER . ASSIGN expression

    ASSIGN          shift and go to state 117


state 69

    (51) expression -> LETREC assign_list . IN expression
    (49) assign_list -> assign_list . COMMA IDENTIFIER ASSIGN expression

    IN              shift and go to state 118
    COMMA           shift and go to state 116


state 70

    (54) expression -> LAMBDA identifier_list . ARROW expression

    ARROW           shift and go to state 119


state 71

    (55) expression -> LAMBDA ARROW . expression
    (1) expression -> . NUMBER
    (2) expression -> . FLOAT
    (3) expression -> . CHAR
    (4) expression -> . STRING
    (5) expression -> . LIST LPAREN expression_list RPAREN
    (6) expression -> . LIST LPAREN RPAREN
    (7) expression -> . LBRACKET expression_list RBRACKET
    (8) expression -> . ARRAY LPAREN expression_list RPAREN
    (9) expression -> . LBRACKET RBRACKET
    (10) expression -> . ARRAY LPAREN RPAREN
    (11) expression -> . IDENTIFIER LBRACKET expression RBRACKET
    (12) expression -> . MINUS expression
    (13) expression -> . NOT expression
    (14) expression -> . expression PLUS expression
    (15) expression -> . expression MINUS expression
    (16) expression -> . expression TIMES expression
    (17) expression -> . expression DIVIDE expression
    (18) expression -> . expression LESS_THEN expression
    (19) expression -> . expression GREATER_THEN expression
    (20) expression -> . expression LESS_EQUALS expression
    (21) expression -> . expression GREATER_EQUALS expression
    (22) expression -> . expression EQUALS expression
    (23) expression -> . expression NOT_EQUALS expression
    (24) expression -> . expression AND expression
    (25) expression -> . expression NAND expression
    (26) expression -> . expression OR expression
    (27) expression -> . expression NOR expression
    (28) expression -> . expression XOR expression
    (29) expression -> . expression EQ expression
    (30) expression -> . expression NEQ expression
    (31) expression -> . expression IMPL expression
    (32) expression -> . LPAREN expression RPAREN
    (33) expression -> . TRUE
    (34) expression -> . FALSE
    (35) expression -> . IDENTIFIER
    (36) expression -> . IDENTIFIER ASSIGN expression
    (37) expression -> . BEGIN body END
    (40) expression -> . LOOP expression DO expression
    (41) expression -> . FOR expression SEPARATOR expression SEPARATOR expression DO expression
    (42) expression -> . WHILE expression DO expression
    (43) expression -> . IF expression THEN expression
    (44) expression -> . IF expression THEN expression ELSE expression
    (47) expression -> . LOCK identifier_list IN expression
    (50) expression -> . LET assign_list IN expression
    (51) expression -> . LETREC assign_list IN expression
    (54) expression -> . LAMBDA identifier_list ARROW expression
    (55) expression -> . LAMBDA ARROW expression
    (56) expression -> . expression LPAREN expression_list RPAREN
    (57) expression -> . expression LPAREN RPAREN
    (62) expression -> . STRUCT BEGIN struct_body END
    (63) expression -> . expression dots IDENTIFIER
    (64) expression -> . dots IDENTIFIER
    (65) expression -> . EXTEND expression BEGIN struct_body END
    (66) expression -> . PROC LPAREN identifier_list RPAREN identifier_list ARROW expression
    (67) expression -> . PROC LPAREN RPAREN identifier_list ARROW expression
    (68) expression -> . PROC LPAREN identifier_list RPAREN ARROW expression
    (69) expression -> . PROC LPAREN RPAREN ARROW expression
    (58) dots -> . DOT
    (59) dots -> . dots DOT

    NUMBER          shift and go to state 2
    FLOAT           shift and go to state 3
    CHAR            shift and go to state 4
    STRING          shift and go to state 5
    LIST            shift and go to state 6
    LBRACKET        shift and go to state 8
    ARRAY           shift and go to state 9
    IDENTIFIER      shift and go to state 10
    MINUS           shift and go to state 11
    NOT             shift and go to state 12
    LPAREN          shift and go to state 7
    TRUE            shift and go to state 13
    FALSE           shift and go to state 14
    BEGIN           shift and go to state 15
    LOOP            shift and go to state 16
    FOR             shift and go to state 17
    WHILE           shift and go to state 18
    IF              shift and go to state 19
    LOCK            shift and go to state 20
    LET             shift and go to state 21
    LETREC          shift and go to state 22
    LAMBDA          shift and go to state 23
    STRUCT          shift and go to state 24
    EXTEND          shift and go to state 26
    PROC            shift and go to state 27
    DOT             shift and go to state 28

    expression                     shift and go to state 120
    dots                           shift and go to state 25

state 72

    (62) expression -> STRUCT BEGIN . struct_body END
    (60) struct_body -> . IDENTIFIER ASSIGN expression
    (61) struct_body -> . struct_body SEPARATOR IDENTIFIER ASSIGN expression

    IDENTIFIER      shift and go to state 122

    struct_body                    shift and go to state 121

state 73

    (64) expression -> dots IDENTIFIER .

    PLUS            reduce using rule 64 (expression -> dots IDENTIFIER .)
    MINUS           reduce using rule 64 (expression -> dots IDENTIFIER .)
    TIMES           reduce using rule 64 (expression -> dots IDENTIFIER .)
    DIVIDE          reduce using rule 64 (expression -> dots IDENTIFIER .)
    LESS_THEN       reduce using rule 64 (expression -> dots IDENTIFIER .)
    GREATER_THEN    reduce using rule 64 (expression -> dots IDENTIFIER .)
    LESS_EQUALS     reduce using rule 64 (expression -> dots IDENTIFIER .)
    GREATER_EQUALS  reduce using rule 64 (expression -> dots IDENTIFIER .)
    EQUALS          reduce using rule 64 (expression -> dots IDENTIFIER .)
    NOT_EQUALS      reduce using rule 64 (expression -> dots IDENTIFIER .)
    AND             reduce using rule 64 (expression -> dots IDENTIFIER .)
    NAND            reduce using rule 64 (expression -> dots IDENTIFIER .)
    OR              reduce using rule 64 (expression -> dots IDENTIFIER .)
    NOR             reduce using rule 64 (expression -> dots IDENTIFIER .)
    XOR             reduce using rule 64 (expression -> dots IDENTIFIER .)
    EQ              reduce using rule 64 (expression -> dots IDENTIFIER .)
    NEQ             reduce using rule 64 (expression -> dots IDENTIFIER .)
    IMPL            reduce using rule 64 (expression -> dots IDENTIFIER .)
    LPAREN          reduce using rule 64 (expression -> dots IDENTIFIER .)
    DOT             reduce using rule 64 (expression -> dots IDENTIFIER .)
    $end            reduce using rule 64 (expression -> dots IDENTIFIER .)
    RPAREN          reduce using rule 64 (expression -> dots IDENTIFIER .)
    COMMA           reduce using rule 64 (expression -> dots IDENTIFIER .)
    RBRACKET        reduce using rule 64 (expression -> dots IDENTIFIER .)
    END             reduce using rule 64 (expression -> dots IDENTIFIER .)
    SEPARATOR       reduce using rule 64 (expression -> dots IDENTIFIER .)
    DO              reduce using rule 64 (expression -> dots IDENTIFIER .)
    THEN            reduce using rule 64 (expression -> dots IDENTIFIER .)
    BEGIN           reduce using rule 64 (expression -> dots IDENTIFIER .)
    ELSE            reduce using rule 64 (expression -> dots IDENTIFIER .)
    IN              reduce using rule 64 (expression -> dots IDENTIFIER .)


state 74

    (59) dots -> dots DOT .

    IDENTIFIER      reduce using rule 59 (dots -> dots DOT .)
    DOT             reduce using rule 59 (dots -> dots DOT .)


state 75

    (65) expression -> EXTEND expression . BEGIN struct_body END
    (14) expression -> expression . PLUS expression
    (15) expression -> expression . MINUS expression
    (16) expression -> expression . TIMES expression
    (17) expression -> expression . DIVIDE expression
    (18) expression -> expression . LESS_THEN expression
    (19) expression -> expression . GREATER_THEN expression
    (20) expression -> expression . LESS_EQUALS expression
    (21) expression -> expression . GREATER_EQUALS expression
    (22) expression -> expression . EQUALS expression
    (23) expression -> expression . NOT_EQUALS expression
    (24) expression -> expression . AND expression
    (25) expression -> expression . NAND expression
    (26) expression -> expression . OR expression
    (27) expression -> expression . NOR expression
    (28) expression -> expression . XOR expression
    (29) expression -> expression . EQ expression
    (30) expression -> expression . NEQ expression
    (31) expression -> expression . IMPL expression
    (56) expression -> expression . LPAREN expression_list RPAREN
    (57) expression -> expression . LPAREN RPAREN
    (63) expression -> expression . dots IDENTIFIER
    (58) dots -> . DOT
    (59) dots -> . dots DOT

    BEGIN           shift and go to state 123
    PLUS            shift and go to state 29
    MINUS           shift and go to state 30
    TIMES           shift and go to state 31
    DIVIDE          shift and go to state 32
    LESS_THEN       shift and go to state 33
    GREATER_THEN    shift and go to state 34
    LESS_EQUALS     shift and go to state 35
    GREATER_EQUALS  shift and go to state 36
    EQUALS          shift and go to state 37
    NOT_EQUALS      shift and go to state 38
    AND             shift and go to state 39
    NAND            shift and go to state 40
    OR              shift and go to state 41
    NOR             shift and go to state 42
    XOR             shift and go to state 43
    EQ              shift and go to state 44
    NEQ             shift and go to state 45
    IMPL            shift and go to state 46
    LPAREN          shift and go to state 47
    DOT             shift and go to state 28

    dots                           shift and go to state 48

state 76

    (66) expression -> PROC LPAREN . identifier_list RPAREN identifier_list ARROW expression
    (67) expression -> PROC LPAREN . RPAREN identifier_list ARROW expression
    (68) expression -> PROC LPAREN . identifier_list RPAREN ARROW expression
    (69) expression -> PROC LPAREN . RPAREN ARROW expression
    (45) identifier_list -> . IDENTIFIER
    (46) identifier_list -> . IDENTIFIER COMMA identifier_list

    RPAREN          shift and go to state 125
    IDENTIFIER      shift and go to state 66

    identifier_list                shift and go to state 124

state 77

    (14) expression -> expression PLUS expression .
    (14) expression -> expression . PLUS expression
    (15) expression -> expression . MINUS expression
    (16) expression -> expression . TIMES expression
    (17) expression -> expression . DIVIDE expression
    (18) expression -> expression . LESS_THEN expression
    (19) expression -> expression . GREATER_THEN expression
    (20) expression -> expression . LESS_EQUALS expression
    (21) expression -> expression . GREATER_EQUALS expression
    (22) expression -> expression . EQUALS expression
    (23) expression -> expression . NOT_EQUALS expression
    (24) expression -> expression . AND expression
    (25) expression -> expression . NAND expression
    (26) expression -> expression . OR expression
    (27) expression -> expression . NOR expression
    (28) expression -> expression . XOR expression
    (29) expression -> expression . EQ expression
    (30) expression -> expression . NEQ expression
    (31) expression -> expression . IMPL expression
    (56) expression -> expression . LPAREN expression_list RPAREN
    (57) expression -> expression . LPAREN RPAREN
    (63) expression -> expression . dots IDENTIFIER
    (58) dots -> . DOT
    (59) dots -> . dots DOT

    PLUS            reduce using rule 14 (expression -> expression PLUS expression .)
    MINUS           reduce using rule 14 (expression -> expression PLUS expression .)
    LESS_THEN       reduce using rule 14 (expression -> expression PLUS expression .)
    GREATER_THEN    reduce using rule 14 (expression -> expression PLUS expression .)
    LESS_EQUALS     reduce using rule 14 (expression -> expression PLUS expression .)
    GREATER_EQUALS  reduce using rule 14 (expression -> expression PLUS expression .)
    EQUALS          reduce using rule 14 (expression -> expression PLUS expression .)
    NOT_EQUALS      reduce using rule 14 (expression -> expression PLUS expression .)
    AND             reduce using rule 14 (expression -> expression PLUS expression .)
    NAND            reduce using rule 14 (expression -> expression PLUS expression .)
    OR              reduce using rule 14 (expression -> expression PLUS expression .)
    NOR             reduce using rule 14 (expression -> expression PLUS expression .)
    XOR             reduce using rule 14 (expression -> expression PLUS expression .)
    EQ              reduce using rule 14 (expression -> expression PLUS expression .)
    NEQ             reduce using rule 14 (expression -> expression PLUS expression .)
    IMPL            reduce using rule 14 (expression -> expression PLUS expression .)
    $end            reduce using rule 14 (expression -> expression PLUS expression .)
    RPAREN          reduce using rule 14 (expression -> expression PLUS expression .)
    COMMA           reduce using rule 14 (expression -> expression PLUS expression .)
    RBRACKET        reduce using rule 14 (expression -> expression PLUS expression .)
    END             reduce using rule 14 (expression -> expression PLUS expression .)
    SEPARATOR       reduce using rule 14 (expression -> expression PLUS expression .)
    DO              reduce using rule 14 (expression -> expression PLUS expression .)
    THEN            reduce using rule 14 (expression -> expression PLUS expression .)
    BEGIN           reduce using rule 14 (expression -> expression PLUS expression .)
    ELSE            reduce using rule 14 (expression -> expression PLUS expression .)
    IN              reduce using rule 14 (expression -> expression PLUS expression .)
    TIMES           shift and go to state 31
    DIVIDE          shift and go to state 32
    LPAREN          shift and go to state 47
    DOT             shift and go to state 28

  ! TIMES           [ reduce using rule 14 (expression -> expression PLUS expression .) ]
  ! DIVIDE          [ reduce using rule 14 (expression -> expression PLUS expression .) ]
  ! LPAREN          [ reduce using rule 14 (expression -> expression PLUS expression .) ]
  ! DOT             [ reduce using rule 14 (expression -> expression PLUS expression .) ]
  ! PLUS            [ shift and go to state 29 ]
  ! MINUS           [ shift and go to state 30 ]
  ! LESS_THEN       [ shift and go to state 33 ]
  ! GREATER_THEN    [ shift and go to state 34 ]
  ! LESS_EQUALS     [ shift and go to state 35 ]
  ! GREATER_EQUALS  [ shift and go to state 36 ]
  ! EQUALS          [ shift and go to state 37 ]
  ! NOT_EQUALS      [ shift and go to state 38 ]
  ! AND             [ shift and go to state 39 ]
  ! NAND            [ shift and go to state 40 ]
  ! OR              [ shift and go to state 41 ]
  ! NOR             [ shift and go to state 42 ]
  ! XOR             [ shift and go to state 43 ]
  ! EQ              [ shift and go to state 44 ]
  ! NEQ             [ shift and go to state 45 ]
  ! IMPL            [ shift and go to state 46 ]

    dots                           shift and go to state 48

state 78

    (15) expression -> expression MINUS expression .
    (14) expression -> expression . PLUS expression
    (15) expression -> expression . MINUS expression
    (16) expression -> expression . TIMES expression
    (17) expression -> expression . DIVIDE expression
    (18) expression -> expression . LESS_THEN expression
    (19) expression -> expression . GREATER_THEN expression
    (20) expression -> expression . LESS_EQUALS expression
    (21) expression -> expression . GREATER_EQUALS expression
    (22) expression -> expression . EQUALS expression
    (23) expression -> expression . NOT_EQUALS expression
    (24) expression -> expression . AND expression
    (25) expression -> expression . NAND expression
    (26) expression -> expression . OR expression
    (27) expression -> expression . NOR expression
    (28) expression -> expression . XOR expression
    (29) expression -> expression . EQ expression
    (30) expression -> expression . NEQ expression
    (31) expression -> expression . IMPL expression
    (56) expression -> expression . LPAREN expression_list RPAREN
    (57) expression -> expression . LPAREN RPAREN
    (63) expression -> expression . dots IDENTIFIER
    (58) dots -> . DOT
    (59) dots -> . dots DOT

    PLUS            reduce using rule 15 (expression -> expression MINUS expression .)
    MINUS           reduce using rule 15 (expression -> expression MINUS expression .)
    LESS_THEN       reduce using rule 15 (expression -> expression MINUS expression .)
    GREATER_THEN    reduce using rule 15 (expression -> expression MINUS expression .)
    LESS_EQUALS     reduce using rule 15 (expression -> expression MINUS expression .)
    GREATER_EQUALS  reduce using rule 15 (expression -> expression MINUS expression .)
    EQUALS          reduce using rule 15 (expression -> expression MINUS expression .)
    NOT_EQUALS      reduce using rule 15 (expression -> expression MINUS expression .)
    AND             reduce using rule 15 (expression -> expression MINUS expression .)
    NAND            reduce using rule 15 (expression -> expression MINUS expression .)
    OR              reduce using rule 15 (expression -> expression MINUS expression .)
    NOR             reduce using rule 15 (expression -> expression MINUS expression .)
    XOR             reduce using rule 15 (expression -> expression MINUS expression .)
    EQ              reduce using rule 15 (expression -> expression MINUS expression .)
    NEQ             reduce using rule 15 (expression -> expression MINUS expression .)
    IMPL            reduce using rule 15 (expression -> expression MINUS expression .)
    $end            reduce using rule 15 (expression -> expression MINUS expression .)
    RPAREN          reduce using rule 15 (expression -> expression MINUS expression .)
    COMMA           reduce using rule 15 (expression -> expression MINUS expression .)
    RBRACKET        reduce using rule 15 (expression -> expression MINUS expression .)
    END             reduce using rule 15 (expression -> expression MINUS expression .)
    SEPARATOR       reduce using rule 15 (expression -> expression MINUS expression .)
    DO              reduce using rule 15 (expression -> expression MINUS expression .)
    THEN            reduce using rule 15 (expression -> expression MINUS expression .)
    BEGIN           reduce using rule 15 (expression -> expression MINUS expression .)
    ELSE            reduce using rule 15 (expression -> expression MINUS expression .)
    IN              reduce using rule 15 (expression -> expression MINUS expression .)
    TIMES           shift and go to state 31
    DIVIDE          shift and go to state 32
    LPAREN          shift and go to state 47
    DOT             shift and go to state 28

  ! TIMES           [ reduce using rule 15 (expression -> expression MINUS expression .) ]
  ! DIVIDE          [ reduce using rule 15 (expression -> expression MINUS expression .) ]
  ! LPAREN          [ reduce using rule 15 (expression -> expression MINUS expression .) ]
  ! DOT             [ reduce using rule 15 (expression -> expression MINUS expression .) ]
  ! PLUS            [ shift and go to state 29 ]
  ! MINUS           [ shift and go to state 30 ]
  ! LESS_THEN       [ shift and go to state 33 ]
  ! GREATER_THEN    [ shift and go to state 34 ]
  ! LESS_EQUALS     [ shift and go to state 35 ]
  ! GREATER_EQUALS  [ shift and go to state 36 ]
  ! EQUALS          [ shift and go to state 37 ]
  ! NOT_EQUALS      [ shift and go to state 38 ]
  ! AND             [ shift and go to state 39 ]
  ! NAND            [ shift and go to state 40 ]
  ! OR              [ shift and go to state 41 ]
  ! NOR             [ shift and go to state 42 ]
  ! XOR             [ shift and go to state 43 ]
  ! EQ              [ shift and go to state 44 ]
  ! NEQ             [ shift and go to state 45 ]
  ! IMPL            [ shift and go to state 46 ]

    dots                           shift and go to state 48

state 79

    (16) expression -> expression TIMES expression .
    (14) expression -> expression . PLUS expression
    (15) expression -> expression . MINUS expression
    (16) expression -> expression . TIMES expression
    (17) expression -> expression . DIVIDE expression
    (18) expression -> expression . LESS_THEN expression
    (19) expression -> expression . GREATER_THEN expression
    (20) expression -> expression . LESS_EQUALS expression
    (21) expression -> expression . GREATER_EQUALS expression
    (22) expression -> expression . EQUALS expression
    (23) expression -> expression . NOT_EQUALS expression
    (24) expression -> expression . AND expression
    (25) expression -> expression . NAND expression
    (26) expression -> expression . OR expression
    (27) expression -> expression . NOR expression
    (28) expression -> expression . XOR expression
    (29) expression -> expression . EQ expression
    (30) expression -> expression . NEQ expression
    (31) expression -> expression . IMPL expression
    (56) expression -> expression . LPAREN expression_list RPAREN
    (57) expression -> expression . LPAREN RPAREN
    (63) expression -> expression . dots IDENTIFIER
    (58) dots -> . DOT
    (59) dots -> . dots DOT

    PLUS            reduce using rule 16 (expression -> expression TIMES expression .)
    MINUS           reduce using rule 16 (expression -> expression TIMES expression .)
    TIMES           reduce using rule 16 (expression -> expression TIMES expression .)
    DIVIDE          reduce using rule 16 (expression -> expression TIMES expression .)
    LESS_THEN       reduce using rule 16 (expression -> expression TIMES expression .)
    GREATER_THEN    reduce using rule 16 (expression -> expression TIMES expression .)
    LESS_EQUALS     reduce using rule 16 (expression -> expression TIMES expression .)
    GREATER_EQUALS  reduce using rule 16 (expression -> expression TIMES expression .)
    EQUALS          reduce using rule 16 (expression -> expression TIMES expression .)
    NOT_EQUALS      reduce using rule 16 (expression -> expression TIMES expression .)
    AND             reduce using rule 16 (expression -> expression TIMES expression .)
    NAND            reduce using rule 16 (expression -> expression TIMES expression .)
    OR              reduce using rule 16 (expression -> expression TIMES expression .)
    NOR             reduce using rule 16 (expression -> expression TIMES expression .)
    XOR             reduce using rule 16 (expression -> expression TIMES expression .)
    EQ              reduce using rule 16 (expression -> expression TIMES expression .)
    NEQ             reduce using rule 16 (expression -> expression TIMES expression .)
    IMPL            reduce using rule 16 (expression -> expression TIMES expression .)
    $end            reduce using rule 16 (expression -> expression TIMES expression .)
    RPAREN          reduce using rule 16 (expression -> expression TIMES expression .)
    COMMA           reduce using rule 16 (expression -> expression TIMES expression .)
    RBRACKET        reduce using rule 16 (expression -> expression TIMES expression .)
    END             reduce using rule 16 (expression -> expression TIMES expression .)
    SEPARATOR       reduce using rule 16 (expression -> expression TIMES expression .)
    DO              reduce using rule 16 (expression -> expression TIMES expression .)
    THEN            reduce using rule 16 (expression -> expression TIMES expression .)
    BEGIN           reduce using rule 16 (expression -> expression TIMES expression .)
    ELSE            reduce using rule 16 (expression -> expression TIMES expression .)
    IN              reduce using rule 16 (expression -> expression TIMES expression .)
    LPAREN          shift and go to state 47
    DOT             shift and go to state 28

  ! LPAREN          [ reduce using rule 16 (expression -> expression TIMES expression .) ]
  ! DOT             [ reduce using rule 16 (expression -> expression TIMES expression .) ]
  ! PLUS            [ shift and go to state 29 ]
  ! MINUS           [ shift and go to state 30 ]
  ! TIMES           [ shift and go to state 31 ]
  ! DIVIDE          [ shift and go to state 32 ]
  ! LESS_THEN       [ shift and go to state 33 ]
  ! GREATER_THEN    [ shift and go to state 34 ]
  ! LESS_EQUALS     [ shift and go to state 35 ]
  ! GREATER_EQUALS  [ shift and go to state 36 ]
  ! EQUALS          [ shift and go to state 37 ]
  ! NOT_EQUALS      [ shift and go to state 38 ]
  ! AND             [ shift and go to state 39 ]
  ! NAND            [ shift and go to state 40 ]
  ! OR              [ shift and go to state 41 ]
  ! NOR             [ shift and go to state 42 ]
  ! XOR             [ shift and go to state 43 ]
  ! EQ              [ shift and go to state 44 ]
  ! NEQ             [ shift and go to state 45 ]
  ! IMPL            [ shift and go to state 46 ]

    dots                           shift and go to state 48

state 80

    (17) expression -> expression DIVIDE expression .
    (14) expression -> expression . PLUS expression
    (15) expression -> expression . MINUS expression
    (16) expression -> expression . TIMES expression
    (17) expression -> expression . DIVIDE expression
    (18) expression -> expression . LESS_THEN expression
    (19) expression -> expression . GREATER_THEN expression
    (20) expression -> expression . LESS_EQUALS expression
    (21) expression -> expression . GREATER_EQUALS expression
    (22) expression -> expression . EQUALS expression
    (23) expression -> expression . NOT_EQUALS expression
    (24) expression -> expression . AND expression
    (25) expression -> expression . NAND expression
    (26) expression -> expression . OR expression
    (27) expression -> expression . NOR expression
    (28) expression -> expression . XOR expression
    (29) expression -> expression . EQ expression
    (30) expression -> expression . NEQ expression
    (31) expression -> expression . IMPL expression
    (56) expression -> expression . LPAREN expression_list RPAREN
    (57) expression -> expression . LPAREN RPAREN
    (63) expression -> expression . dots IDENTIFIER
    (58) dots -> . DOT
    (59) dots -> . dots DOT

    PLUS            reduce using rule 17 (expression -> expression DIVIDE expression .)
    MINUS           reduce using rule 17 (expression -> expression DIVIDE expression .)
    TIMES           reduce using rule 17 (expression -> expression DIVIDE expression .)
    DIVIDE          reduce using rule 17 (expression -> expression DIVIDE expression .)
    LESS_THEN       reduce using rule 17 (expression -> expression DIVIDE expression .)
    GREATER_THEN    reduce using rule 17 (expression -> expression DIVIDE expression .)
    LESS_EQUALS     reduce using rule 17 (expression -> expression DIVIDE expression .)
    GREATER_EQUALS  reduce using rule 17 (expression -> expression DIVIDE expression .)
    EQUALS          reduce using rule 17 (expression -> expression DIVIDE expression .)
    NOT_EQUALS      reduce using rule 17 (expression -> expression DIVIDE expression .)
    AND             reduce using rule 17 (expression -> expression DIVIDE expression .)
    NAND            reduce using rule 17 (expression -> expression DIVIDE expression .)
    OR              reduce using rule 17 (expression -> expression DIVIDE expression .)
    NOR             reduce using rule 17 (expression -> expression DIVIDE expression .)
    XOR             reduce using rule 17 (expression -> expression DIVIDE expression .)
    EQ              reduce using rule 17 (expression -> expression DIVIDE expression .)
    NEQ             reduce using rule 17 (expression -> expression DIVIDE expression .)
    IMPL            reduce using rule 17 (expression -> expression DIVIDE expression .)
    $end            reduce using rule 17 (expression -> expression DIVIDE expression .)
    RPAREN          reduce using rule 17 (expression -> expression DIVIDE expression .)
    COMMA           reduce using rule 17 (expression -> expression DIVIDE expression .)
    RBRACKET        reduce using rule 17 (expression -> expression DIVIDE expression .)
    END             reduce using rule 17 (expression -> expression DIVIDE expression .)
    SEPARATOR       reduce using rule 17 (expression -> expression DIVIDE expression .)
    DO              reduce using rule 17 (expression -> expression DIVIDE expression .)
    THEN            reduce using rule 17 (expression -> expression DIVIDE expression .)
    BEGIN           reduce using rule 17 (expression -> expression DIVIDE expression .)
    ELSE            reduce using rule 17 (expression -> expression DIVIDE expression .)
    IN              reduce using rule 17 (expression -> expression DIVIDE expression .)
    LPAREN          shift and go to state 47
    DOT             shift and go to state 28

  ! LPAREN          [ reduce using rule 17 (expression -> expression DIVIDE expression .) ]
  ! DOT             [ reduce using rule 17 (expression -> expression DIVIDE expression .) ]
  ! PLUS            [ shift and go to state 29 ]
  ! MINUS           [ shift and go to state 30 ]
  ! TIMES           [ shift and go to state 31 ]
  ! DIVIDE          [ shift and go to state 32 ]
  ! LESS_THEN       [ shift and go to state 33 ]
  ! GREATER_THEN    [ shift and go to state 34 ]
  ! LESS_EQUALS     [ shift and go to state 35 ]
  ! GREATER_EQUALS  [ shift and go to state 36 ]
  ! EQUALS          [ shift and go to state 37 ]
  ! NOT_EQUALS      [ shift and go to state 38 ]
  ! AND             [ shift and go to state 39 ]
  ! NAND            [ shift and go to state 40 ]
  ! OR              [ shift and go to state 41 ]
  ! NOR             [ shift and go to state 42 ]
  ! XOR             [ shift and go to state 43 ]
  ! EQ              [ shift and go to state 44 ]
  ! NEQ             [ shift and go to state 45 ]
  ! IMPL            [ shift and go to state 46 ]

    dots                           shift and go to state 48

state 81

    (18) expression -> expression LESS_THEN expression .
    (14) expression -> expression . PLUS expression
    (15) expression -> expression . MINUS expression
    (16) expression -> expression . TIMES expression
    (17) expression -> expression . DIVIDE expression
    (18) expression -> expression . LESS_THEN expression
    (19) expression -> expression . GREATER_THEN expression
    (20) expression -> expression . LESS_EQUALS expression
    (21) expression -> expression . GREATER_EQUALS expression
    (22) expression -> expression . EQUALS expression
    (23) expression -> expression . NOT_EQUALS expression
    (24) expression -> expression . AND expression
    (25) expression -> expression . NAND expression
    (26) expression -> expression . OR expression
    (27) expression -> expression . NOR expression
    (28) expression -> expression . XOR expression
    (29) expression -> expression . EQ expression
    (30) expression -> expression . NEQ expression
    (31) expression -> expression . IMPL expression
    (56) expression -> expression . LPAREN expression_list RPAREN
    (57) expression -> expression . LPAREN RPAREN
    (63) expression -> expression . dots IDENTIFIER
    (58) dots -> . DOT
    (59) dots -> . dots DOT

    LESS_THEN       reduce using rule 18 (expression -> expression LESS_THEN expression .)
    GREATER_THEN    reduce using rule 18 (expression -> expression LESS_THEN expression .)
    LESS_EQUALS     reduce using rule 18 (expression -> expression LESS_THEN expression .)
    GREATER_EQUALS  reduce using rule 18 (expression -> expression LESS_THEN expression .)
    EQUALS          reduce using rule 18 (expression -> expression LESS_THEN expression .)
    NOT_EQUALS      reduce using rule 18 (expression -> expression LESS_THEN expression .)
    AND             reduce using rule 18 (expression -> expression LESS_THEN expression .)
    NAND            reduce using rule 18 (expression -> expression LESS_THEN expression .)
    OR              reduce using rule 18 (expression -> expression LESS_THEN expression .)
    NOR             reduce using rule 18 (expression -> expression LESS_THEN expression .)
    XOR             reduce using rule 18 (expression -> expression LESS_THEN expression .)
    EQ              reduce using rule 18 (expression -> expression LESS_THEN expression .)
    NEQ             reduce using rule 18 (expression -> expression LESS_THEN expression .)
    IMPL            reduce using rule 18 (expression -> expression LESS_THEN expression .)
    $end            reduce using rule 18 (expression -> expression LESS_THEN expression .)
    RPAREN          reduce using rule 18 (expression -> expression LESS_THEN expression .)
    COMMA           reduce using rule 18 (expression -> expression LESS_THEN expression .)
    RBRACKET        reduce using rule 18 (expression -> expression LESS_THEN expression .)
    END             reduce using rule 18 (expression -> expression LESS_THEN expression .)
    SEPARATOR       reduce using rule 18 (expression -> expression LESS_THEN expression .)
    DO              reduce using rule 18 (expression -> expression LESS_THEN expression .)
    THEN            reduce using rule 18 (expression -> expression LESS_THEN expression .)
    BEGIN           reduce using rule 18 (expression -> expression LESS_THEN expression .)
    ELSE            reduce using rule 18 (expression -> expression LESS_THEN expression .)
    IN              reduce using rule 18 (expression -> expression LESS_THEN expression .)
    PLUS            shift and go to state 29
    MINUS           shift and go to state 30
    TIMES           shift and go to state 31
    DIVIDE          shift and go to state 32
    LPAREN          shift and go to state 47
    DOT             shift and go to state 28

  ! PLUS            [ reduce using rule 18 (expression -> expression LESS_THEN expression .) ]
  ! MINUS           [ reduce using rule 18 (expression -> expression LESS_THEN expression .) ]
  ! TIMES           [ reduce using rule 18 (expression -> expression LESS_THEN expression .) ]
  ! DIVIDE          [ reduce using rule 18 (expression -> expression LESS_THEN expression .) ]
  ! LPAREN          [ reduce using rule 18 (expression -> expression LESS_THEN expression .) ]
  ! DOT             [ reduce using rule 18 (expression -> expression LESS_THEN expression .) ]
  ! LESS_THEN       [ shift and go to state 33 ]
  ! GREATER_THEN    [ shift and go to state 34 ]
  ! LESS_EQUALS     [ shift and go to state 35 ]
  ! GREATER_EQUALS  [ shift and go to state 36 ]
  ! EQUALS          [ shift and go to state 37 ]
  ! NOT_EQUALS      [ shift and go to state 38 ]
  ! AND             [ shift and go to state 39 ]
  ! NAND            [ shift and go to state 40 ]
  ! OR              [ shift and go to state 41 ]
  ! NOR             [ shift and go to state 42 ]
  ! XOR             [ shift and go to state 43 ]
  ! EQ              [ shift and go to state 44 ]
  ! NEQ             [ shift and go to state 45 ]
  ! IMPL            [ shift and go to state 46 ]

    dots                           shift and go to state 48

state 82

    (19) expression -> expression GREATER_THEN expression .
    (14) expression -> expression . PLUS expression
    (15) expression -> expression . MINUS expression
    (16) expression -> expression . TIMES expression
    (17) expression -> expression . DIVIDE expression
    (18) expression -> expression . LESS_THEN expression
    (19) expression -> expression . GREATER_THEN expression
    (20) expression -> expression . LESS_EQUALS expression
    (21) expression -> expression . GREATER_EQUALS expression
    (22) expression -> expression . EQUALS expression
    (23) expression -> expression . NOT_EQUALS expression
    (24) expression -> expression . AND expression
    (25) expression -> expression . NAND expression
    (26) expression -> expression . OR expression
    (27) expression -> expression . NOR expression
    (28) expression -> expression . XOR expression
    (29) expression -> expression . EQ expression
    (30) expression -> expression . NEQ expression
    (31) expression -> expression . IMPL expression
    (56) expression -> expression . LPAREN expression_list RPAREN
    (57) expression -> expression . LPAREN RPAREN
    (63) expression -> expression . dots IDENTIFIER
    (58) dots -> . DOT
    (59) dots -> . dots DOT

    LESS_THEN       reduce using rule 19 (expression -> expression GREATER_THEN expression .)
    GREATER_THEN    reduce using rule 19 (expression -> expression GREATER_THEN expression .)
    LESS_EQUALS     reduce using rule 19 (expression -> expression GREATER_THEN expression .)
    GREATER_EQUALS  reduce using rule 19 (expression -> expression GREATER_THEN expression .)
    EQUALS          reduce using rule 19 (expression -> expression GREATER_THEN expression .)
    NOT_EQUALS      reduce using rule 19 (expression -> expression GREATER_THEN expression .)
    AND             reduce using rule 19 (expression -> expression GREATER_THEN expression .)
    NAND            reduce using rule 19 (expression -> expression GREATER_THEN expression .)
    OR              reduce using rule 19 (expression -> expression GREATER_THEN expression .)
    NOR             reduce using rule 19 (expression -> expression GREATER_THEN expression .)
    XOR             reduce using rule 19 (expression -> expression GREATER_THEN expression .)
    EQ              reduce using rule 19 (expression -> expression GREATER_THEN expression .)
    NEQ             reduce using rule 19 (expression -> expression GREATER_THEN expression .)
    IMPL            reduce using rule 19 (expression -> expression GREATER_THEN expression .)
    $end            reduce using rule 19 (expression -> expression GREATER_THEN expression .)
    RPAREN          reduce using rule 19 (expression -> expression GREATER_THEN expression .)
    COMMA           reduce using rule 19 (expression -> expression GREATER_THEN expression .)
    RBRACKET        reduce using rule 19 (expression -> expression GREATER_THEN expression .)
    END             reduce using rule 19 (expression -> expression GREATER_THEN expression .)
    SEPARATOR       reduce using rule 19 (expression -> expression GREATER_THEN expression .)
    DO              reduce using rule 19 (expression -> expression GREATER_THEN expression .)
    THEN            reduce using rule 19 (expression -> expression GREATER_THEN expression .)
    BEGIN           reduce using rule 19 (expression -> expression GREATER_THEN expression .)
    ELSE            reduce using rule 19 (expression -> expression GREATER_THEN expression .)
    IN              reduce using rule 19 (expression -> expression GREATER_THEN expression .)
    PLUS            shift and go to state 29
    MINUS           shift and go to state 30
    TIMES           shift and go to state 31
    DIVIDE          shift and go to state 32
    LPAREN          shift and go to state 47
    DOT             shift and go to state 28

  ! PLUS            [ reduce using rule 19 (expression -> expression GREATER_THEN expression .) ]
  ! MINUS           [ reduce using rule 19 (expression -> expression GREATER_THEN expression .) ]
  ! TIMES           [ reduce using rule 19 (expression -> expression GREATER_THEN expression .) ]
  ! DIVIDE          [ reduce using rule 19 (expression -> expression GREATER_THEN expression .) ]
  ! LPAREN          [ reduce using rule 19 (expression -> expression GREATER_THEN expression .) ]
  ! DOT             [ reduce using rule 19 (expression -> expression GREATER_THEN expression .) ]
  ! LESS_THEN       [ shift and go to state 33 ]
  ! GREATER_THEN    [ shift and go to state 34 ]
  ! LESS_EQUALS     [ shift and go to state 35 ]
  ! GREATER_EQUALS  [ shift and go to state 36 ]
  ! EQUALS          [ shift and go to state 37 ]
  ! NOT_EQUALS      [ shift and go to state 38 ]
  ! AND             [ shift and go to state 39 ]
  ! NAND            [ shift and go to state 40 ]
  ! OR              [ shift and go to state 41 ]
  ! NOR             [ shift and go to state 42 ]
  ! XOR             [ shift and go to state 43 ]
  ! EQ              [ shift and go to state 44 ]
  ! NEQ             [ shift and go to state 45 ]
  ! IMPL            [ shift and go to state 46 ]

    dots                           shift and go to state 48

state 83

    (20) expression -> expression LESS_EQUALS expression .
    (14) expression -> expression . PLUS expression
    (15) expression -> expression . MINUS expression
    (16) expression -> expression . TIMES expression
    (17) expression -> expression . DIVIDE expression
    (18) expression -> expression . LESS_THEN expression
    (19) expression -> expression . GREATER_THEN expression
    (20) expression -> expression . LESS_EQUALS expression
    (21) expression -> expression . GREATER_EQUALS expression
    (22) expression -> expression . EQUALS expression
    (23) expression -> expression . NOT_EQUALS expression
    (24) expression -> expression . AND expression
    (25) expression -> expression . NAND expression
    (26) expression -> expression . OR expression
    (27) expression -> expression . NOR expression
    (28) expression -> expression . XOR expression
    (29) expression -> expression . EQ expression
    (30) expression -> expression . NEQ expression
    (31) expression -> expression . IMPL expression
    (56) expression -> expression . LPAREN expression_list RPAREN
    (57) expression -> expression . LPAREN RPAREN
    (63) expression -> expression . dots IDENTIFIER
    (58) dots -> . DOT
    (59) dots -> . dots DOT

    LESS_THEN       reduce using rule 20 (expression -> expression LESS_EQUALS expression .)
    GREATER_THEN    reduce using rule 20 (expression -> expression LESS_EQUALS expression .)
    LESS_EQUALS     reduce using rule 20 (expression -> expression LESS_EQUALS expression .)
    GREATER_EQUALS  reduce using rule 20 (expression -> expression LESS_EQUALS expression .)
    EQUALS          reduce using rule 20 (expression -> expression LESS_EQUALS expression .)
    NOT_EQUALS      reduce using rule 20 (expression -> expression LESS_EQUALS expression .)
    AND             reduce using rule 20 (expression -> expression LESS_EQUALS expression .)
    NAND            reduce using rule 20 (expression -> expression LESS_EQUALS expression .)
    OR              reduce using rule 20 (expression -> expression LESS_EQUALS expression .)
    NOR             reduce using rule 20 (expression -> expression LESS_EQUALS expression .)
    XOR             reduce using rule 20 (expression -> expression LESS_EQUALS expression .)
    EQ              reduce using rule 20 (expression -> expression LESS_EQUALS expression .)
    NEQ             reduce using rule 20 (expression -> expression LESS_EQUALS expression .)
    IMPL            reduce using rule 20 (expression -> expression LESS_EQUALS expression .)
    $end            reduce using rule 20 (expression -> expression LESS_EQUALS expression .)
    RPAREN          reduce using rule 20 (expression -> expression LESS_EQUALS expression .)
    COMMA           reduce using rule 20 (expression -> expression LESS_EQUALS expression .)
    RBRACKET        reduce using rule 20 (expression -> expression LESS_EQUALS expression .)
    END             reduce using rule 20 (expression -> expression LESS_EQUALS expression .)
    SEPARATOR       reduce using rule 20 (expression -> expression LESS_EQUALS expression .)
    DO              reduce using rule 20 (expression -> expression LESS_EQUALS expression .)
    THEN            reduce using rule 20 (expression -> expression LESS_EQUALS expression .)
    BEGIN           reduce using rule 20 (expression -> expression LESS_EQUALS expression .)
    ELSE            reduce using rule 20 (expression -> expression LESS_EQUALS expression .)
    IN              reduce using rule 20 (expression -> expression LESS_EQUALS expression .)
    PLUS            shift and go to state 29
    MINUS           shift and go to state 30
    TIMES           shift and go to state 31
    DIVIDE          shift and go to state 32
    LPAREN          shift and go to state 47
    DOT             shift and go to state 28

  ! PLUS            [ reduce using rule 20 (expression -> expression LESS_EQUALS expression .) ]
  ! MINUS           [ reduce using rule 20 (expression -> expression LESS_EQUALS expression .) ]
  ! TIMES           [ reduce using rule 20 (expression -> expression LESS_EQUALS expression .) ]
  ! DIVIDE          [ reduce using rule 20 (expression -> expression LESS_EQUALS expression .) ]
  ! LPAREN          [ reduce using rule 20 (expression -> expression LESS_EQUALS expression .) ]
  ! DOT             [ reduce using rule 20 (expression -> expression LESS_EQUALS expression .) ]
  ! LESS_THEN       [ shift and go to state 33 ]
  ! GREATER_THEN    [ shift and go to state 34 ]
  ! LESS_EQUALS     [ shift and go to state 35 ]
  ! GREATER_EQUALS  [ shift and go to state 36 ]
  ! EQUALS          [ shift and go to state 37 ]
  ! NOT_EQUALS      [ shift and go to state 38 ]
  ! AND             [ shift and go to state 39 ]
  ! NAND            [ shift and go to state 40 ]
  ! OR              [ shift and go to state 41 ]
  ! NOR             [ shift and go to state 42 ]
  ! XOR             [ shift and go to state 43 ]
  ! EQ              [ shift and go to state 44 ]
  ! NEQ             [ shift and go to state 45 ]
  ! IMPL            [ shift and go to state 46 ]

    dots                           shift and go to state 48

state 84

    (21) expression -> expression GREATER_EQUALS expression .
    (14) expression -> expression . PLUS expression
    (15) expression -> expression . MINUS expression
    (16) expression -> expression . TIMES expression
    (17) expression -> expression . DIVIDE expression
    (18) expression -> expression . LESS_THEN expression
    (19) expression -> expression . GREATER_THEN expression
    (20) expression -> expression . LESS_EQUALS expression
    (21) expression -> expression . GREATER_EQUALS expression
    (22) expression -> expression . EQUALS expression
    (23) expression -> expression . NOT_EQUALS expression
    (24) expression -> expression . AND expression
    (25) expression -> expression . NAND expression
    (26) expression -> expression . OR expression
    (27) expression -> expression . NOR expression
    (28) expression -> expression . XOR expression
    (29) expression -> expression . EQ expression
    (30) expression -> expression . NEQ expression
    (31) expression -> expression . IMPL expression
    (56) expression -> expression . LPAREN expression_list RPAREN
    (57) expression -> expression . LPAREN RPAREN
    (63) expression -> expression . dots IDENTIFIER
    (58) dots -> . DOT
    (59) dots -> . dots DOT

    LESS_THEN       reduce using rule 21 (expression -> expression GREATER_EQUALS expression .)
    GREATER_THEN    reduce using rule 21 (expression -> expression GREATER_EQUALS expression .)
    LESS_EQUALS     reduce using rule 21 (expression -> expression GREATER_EQUALS expression .)
    GREATER_EQUALS  reduce using rule 21 (expression -> expression GREATER_EQUALS expression .)
    EQUALS          reduce using rule 21 (expression -> expression GREATER_EQUALS expression .)
    NOT_EQUALS      reduce using rule 21 (expression -> expression GREATER_EQUALS expression .)
    AND             reduce using rule 21 (expression -> expression GREATER_EQUALS expression .)
    NAND            reduce using rule 21 (expression -> expression GREATER_EQUALS expression .)
    OR              reduce using rule 21 (expression -> expression GREATER_EQUALS expression .)
    NOR             reduce using rule 21 (expression -> expression GREATER_EQUALS expression .)
    XOR             reduce using rule 21 (expression -> expression GREATER_EQUALS expression .)
    EQ              reduce using rule 21 (expression -> expression GREATER_EQUALS expression .)
    NEQ             reduce using rule 21 (expression -> expression GREATER_EQUALS expression .)
    IMPL            reduce using rule 21 (expression -> expression GREATER_EQUALS expression .)
    $end            reduce using rule 21 (expression -> expression GREATER_EQUALS expression .)
    RPAREN          reduce using rule 21 (expression -> expression GREATER_EQUALS expression .)
    COMMA           reduce using rule 21 (expression -> expression GREATER_EQUALS expression .)
    RBRACKET        reduce using rule 21 (expression -> expression GREATER_EQUALS expression .)
    END             reduce using rule 21 (expression -> expression GREATER_EQUALS expression .)
    SEPARATOR       reduce using rule 21 (expression -> expression GREATER_EQUALS expression .)
    DO              reduce using rule 21 (expression -> expression GREATER_EQUALS expression .)
    THEN            reduce using rule 21 (expression -> expression GREATER_EQUALS expression .)
    BEGIN           reduce using rule 21 (expression -> expression GREATER_EQUALS expression .)
    ELSE            reduce using rule 21 (expression -> expression GREATER_EQUALS expression .)
    IN              reduce using rule 21 (expression -> expression GREATER_EQUALS expression .)
    PLUS            shift and go to state 29
    MINUS           shift and go to state 30
    TIMES           shift and go to state 31
    DIVIDE          shift and go to state 32
    LPAREN          shift and go to state 47
    DOT             shift and go to state 28

  ! PLUS            [ reduce using rule 21 (expression -> expression GREATER_EQUALS expression .) ]
  ! MINUS           [ reduce using rule 21 (expression -> expression GREATER_EQUALS expression .) ]
  ! TIMES           [ reduce using rule 21 (expression -> expression GREATER_EQUALS expression .) ]
  ! DIVIDE          [ reduce using rule 21 (expression -> expression GREATER_EQUALS expression .) ]
  ! LPAREN          [ reduce using rule 21 (expression -> expression GREATER_EQUALS expression .) ]
  ! DOT             [ reduce using rule 21 (expression -> expression GREATER_EQUALS expression .) ]
  ! LESS_THEN       [ shift and go to state 33 ]
  ! GREATER_THEN    [ shift and go to state 34 ]
  ! LESS_EQUALS     [ shift and go to state 35 ]
  ! GREATER_EQUALS  [ shift and go to state 36 ]
  ! EQUALS          [ shift and go to state 37 ]
  ! NOT_EQUALS      [ shift and go to state 38 ]
  ! AND             [ shift and go to state 39 ]
  ! NAND            [ shift and go to state 40 ]
  ! OR              [ shift and go to state 41 ]
  ! NOR             [ shift and go to state 42 ]
  ! XOR             [ shift and go to state 43 ]
  ! EQ              [ shift and go to state 44 ]
  ! NEQ             [ shift and go to state 45 ]
  ! IMPL            [ shift and go to state 46 ]

    dots                           shift and go to state 48

state 85

    (22) expression -> expression EQUALS expression .
    (14) expression -> expression . PLUS expression
    (15) expression -> expression . MINUS expression
    (16) expression -> expression . TIMES expression
    (17) expression -> expression . DIVIDE expression
    (18) expression -> expression . LESS_THEN expression
    (19) expression -> expression . GREATER_THEN expression
    (20) expression -> expression . LESS_EQUALS expression
    (21) expression -> expression . GREATER_EQUALS expression
    (22) expression -> expression . EQUALS expression
    (23) expression -> expression . NOT_EQUALS expression
    (24) expression -> expression . AND expression
    (25) expression -> expression . NAND expression
    (26) expression -> expression . OR expression
    (27) expression -> expression . NOR expression
    (28) expression -> expression . XOR expression
    (29) expression -> expression . EQ expression
    (30) expression -> expression . NEQ expression
    (31) expression -> expression . IMPL expression
    (56) expression -> expression . LPAREN expression_list RPAREN
    (57) expression -> expression . LPAREN RPAREN
    (63) expression -> expression . dots IDENTIFIER
    (58) dots -> . DOT
    (59) dots -> . dots DOT

    EQUALS          reduce using rule 22 (expression -> expression EQUALS expression .)
    NOT_EQUALS      reduce using rule 22 (expression -> expression EQUALS expression .)
    $end            reduce using rule 22 (expression -> expression EQUALS expression .)
    RPAREN          reduce using rule 22 (expression -> expression EQUALS expression .)
    COMMA           reduce using rule 22 (expression -> expression EQUALS expression .)
    RBRACKET        reduce using rule 22 (expression -> expression EQUALS expression .)
    END             reduce using rule 22 (expression -> expression EQUALS expression .)
    SEPARATOR       reduce using rule 22 (expression -> expression EQUALS expression .)
    DO              reduce using rule 22 (expression -> expression EQUALS expression .)
    THEN            reduce using rule 22 (expression -> expression EQUALS expression .)
    BEGIN           reduce using rule 22 (expression -> expression EQUALS expression .)
    ELSE            reduce using rule 22 (expression -> expression EQUALS expression .)
    IN              reduce using rule 22 (expression -> expression EQUALS expression .)
    PLUS            shift and go to state 29
    MINUS           shift and go to state 30
    TIMES           shift and go to state 31
    DIVIDE          shift and go to state 32
    LESS_THEN       shift and go to state 33
    GREATER_THEN    shift and go to state 34
    LESS_EQUALS     shift and go to state 35
    GREATER_EQUALS  shift and go to state 36
    AND             shift and go to state 39
    NAND            shift and go to state 40
    OR              shift and go to state 41
    NOR             shift and go to state 42
    XOR             shift and go to state 43
    EQ              shift and go to state 44
    NEQ             shift and go to state 45
    IMPL            shift and go to state 46
    LPAREN          shift and go to state 47
    DOT             shift and go to state 28

  ! PLUS            [ reduce using rule 22 (expression -> expression EQUALS expression .) ]
  ! MINUS           [ reduce using rule 22 (expression -> expression EQUALS expression .) ]
  ! TIMES           [ reduce using rule 22 (expression -> expression EQUALS expression .) ]
  ! DIVIDE          [ reduce using rule 22 (expression -> expression EQUALS expression .) ]
  ! LESS_THEN       [ reduce using rule 22 (expression -> expression EQUALS expression .) ]
  ! GREATER_THEN    [ reduce using rule 22 (expression -> expression EQUALS expression .) ]
  ! LESS_EQUALS     [ reduce using rule 22 (expression -> expression EQUALS expression .) ]
  ! GREATER_EQUALS  [ reduce using rule 22 (expression -> expression EQUALS expression .) ]
  ! AND             [ reduce using rule 22 (expression -> expression EQUALS expression .) ]
  ! NAND            [ reduce using rule 22 (expression -> expression EQUALS expression .) ]
  ! OR              [ reduce using rule 22 (expression -> expression EQUALS expression .) ]
  ! NOR             [ reduce using rule 22 (expression -> expression EQUALS expression .) ]
  ! XOR             [ reduce using rule 22 (expression -> expression EQUALS expression .) ]
  ! EQ              [ reduce using rule 22 (expression -> expression EQUALS expression .) ]
  ! NEQ             [ reduce using rule 22 (expression -> expression EQUALS expression .) ]
  ! IMPL            [ reduce using rule 22 (expression -> expression EQUALS expression .) ]
  ! LPAREN          [ reduce using rule 22 (expression -> expression EQUALS expression .) ]
  ! DOT             [ reduce using rule 22 (expression -> expression EQUALS expression .) ]
  ! EQUALS          [ shift and go to state 37 ]
  ! NOT_EQUALS      [ shift and go to state 38 ]

    dots                           shift and go to state 48

state 86

    (23) expression -> expression NOT_EQUALS expression .
    (14) expression -> expression . PLUS expression
    (15) expression -> expression . MINUS expression
    (16) expression -> expression . TIMES expression
    (17) expression -> expression . DIVIDE expression
    (18) expression -> expression . LESS_THEN expression
    (19) expression -> expression . GREATER_THEN expression
    (20) expression -> expression . LESS_EQUALS expression
    (21) expression -> expression . GREATER_EQUALS expression
    (22) expression -> expression . EQUALS expression
    (23) expression -> expression . NOT_EQUALS expression
    (24) expression -> expression . AND expression
    (25) expression -> expression . NAND expression
    (26) expression -> expression . OR expression
    (27) expression -> expression . NOR expression
    (28) expression -> expression . XOR expression
    (29) expression -> expression . EQ expression
    (30) expression -> expression . NEQ expression
    (31) expression -> expression . IMPL expression
    (56) expression -> expression . LPAREN expression_list RPAREN
    (57) expression -> expression . LPAREN RPAREN
    (63) expression -> expression . dots IDENTIFIER
    (58) dots -> . DOT
    (59) dots -> . dots DOT

    EQUALS          reduce using rule 23 (expression -> expression NOT_EQUALS expression .)
    NOT_EQUALS      reduce using rule 23 (expression -> expression NOT_EQUALS expression .)
    $end            reduce using rule 23 (expression -> expression NOT_EQUALS expression .)
    RPAREN          reduce using rule 23 (expression -> expression NOT_EQUALS expression .)
    COMMA           reduce using rule 23 (expression -> expression NOT_EQUALS expression .)
    RBRACKET        reduce using rule 23 (expression -> expression NOT_EQUALS expression .)
    END             reduce using rule 23 (expression -> expression NOT_EQUALS expression .)
    SEPARATOR       reduce using rule 23 (expression -> expression NOT_EQUALS expression .)
    DO              reduce using rule 23 (expression -> expression NOT_EQUALS expression .)
    THEN            reduce using rule 23 (expression -> expression NOT_EQUALS expression .)
    BEGIN           reduce using rule 23 (expression -> expression NOT_EQUALS expression .)
    ELSE            reduce using rule 23 (expression -> expression NOT_EQUALS expression .)
    IN              reduce using rule 23 (expression -> expression NOT_EQUALS expression .)
    PLUS            shift and go to state 29
    MINUS           shift and go to state 30
    TIMES           shift and go to state 31
    DIVIDE          shift and go to state 32
    LESS_THEN       shift and go to state 33
    GREATER_THEN    shift and go to state 34
    LESS_EQUALS     shift and go to state 35
    GREATER_EQUALS  shift and go to state 36
    AND             shift and go to state 39
    NAND            shift and go to state 40
    OR              shift and go to state 41
    NOR             shift and go to state 42
    XOR             shift and go to state 43
    EQ              shift and go to state 44
    NEQ             shift and go to state 45
    IMPL            shift and go to state 46
    LPAREN          shift and go to state 47
    DOT             shift and go to state 28

  ! PLUS            [ reduce using rule 23 (expression -> expression NOT_EQUALS expression .) ]
  ! MINUS           [ reduce using rule 23 (expression -> expression NOT_EQUALS expression .) ]
  ! TIMES           [ reduce using rule 23 (expression -> expression NOT_EQUALS expression .) ]
  ! DIVIDE          [ reduce using rule 23 (expression -> expression NOT_EQUALS expression .) ]
  ! LESS_THEN       [ reduce using rule 23 (expression -> expression NOT_EQUALS expression .) ]
  ! GREATER_THEN    [ reduce using rule 23 (expression -> expression NOT_EQUALS expression .) ]
  ! LESS_EQUALS     [ reduce using rule 23 (expression -> expression NOT_EQUALS expression .) ]
  ! GREATER_EQUALS  [ reduce using rule 23 (expression -> expression NOT_EQUALS expression .) ]
  ! AND             [ reduce using rule 23 (expression -> expression NOT_EQUALS expression .) ]
  ! NAND            [ reduce using rule 23 (expression -> expression NOT_EQUALS expression .) ]
  ! OR              [ reduce using rule 23 (expression -> expression NOT_EQUALS expression .) ]
  ! NOR             [ reduce using rule 23 (expression -> expression NOT_EQUALS expression .) ]
  ! XOR             [ reduce using rule 23 (expression -> expression NOT_EQUALS expression .) ]
  ! EQ              [ reduce using rule 23 (expression -> expression NOT_EQUALS expression .) ]
  ! NEQ             [ reduce using rule 23 (expression -> expression NOT_EQUALS expression .) ]
  ! IMPL            [ reduce using rule 23 (expression -> expression NOT_EQUALS expression .) ]
  ! LPAREN          [ reduce using rule 23 (expression -> expression NOT_EQUALS expression .) ]
  ! DOT             [ reduce using rule 23 (expression -> expression NOT_EQUALS expression .) ]
  ! EQUALS          [ shift and go to state 37 ]
  ! NOT_EQUALS      [ shift and go to state 38 ]

    dots                           shift and go to state 48

state 87

    (24) expression -> expression AND expression .
    (14) expression -> expression . PLUS expression
    (15) expression -> expression . MINUS expression
    (16) expression -> expression . TIMES expression
    (17) expression -> expression . DIVIDE expression
    (18) expression -> expression . LESS_THEN expression
    (19) expression -> expression . GREATER_THEN expression
    (20) expression -> expression . LESS_EQUALS expression
    (21) expression -> expression . GREATER_EQUALS expression
    (22) expression -> expression . EQUALS expression
    (23) expression -> expression . NOT_EQUALS expression
    (24) expression -> expression . AND expression
    (25) expression -> expression . NAND expression
    (26) expression -> expression . OR expression
    (27) expression -> expression . NOR expression
    (28) expression -> expression . XOR expression
    (29) expression -> expression . EQ expression
    (30) expression -> expression . NEQ expression
    (31) expression -> expression . IMPL expression
    (56) expression -> expression . LPAREN expression_list RPAREN
    (57) expression -> expression . LPAREN RPAREN
    (63) expression -> expression . dots IDENTIFIER
    (58) dots -> . DOT
    (59) dots -> . dots DOT

    EQUALS          reduce using rule 24 (expression -> expression AND expression .)
    NOT_EQUALS      reduce using rule 24 (expression -> expression AND expression .)
    AND             reduce using rule 24 (expression -> expression AND expression .)
    NAND            reduce using rule 24 (expression -> expression AND expression .)
    OR              reduce using rule 24 (expression -> expression AND expression .)
    NOR             reduce using rule 24 (expression -> expression AND expression .)
    $end            reduce using rule 24 (expression -> expression AND expression .)
    RPAREN          reduce using rule 24 (expression -> expression AND expression .)
    COMMA           reduce using rule 24 (expression -> expression AND expression .)
    RBRACKET        reduce using rule 24 (expression -> expression AND expression .)
    END             reduce using rule 24 (expression -> expression AND expression .)
    SEPARATOR       reduce using rule 24 (expression -> expression AND expression .)
    DO              reduce using rule 24 (expression -> expression AND expression .)
    THEN            reduce using rule 24 (expression -> expression AND expression .)
    BEGIN           reduce using rule 24 (expression -> expression AND expression .)
    ELSE            reduce using rule 24 (expression -> expression AND expression .)
    IN              reduce using rule 24 (expression -> expression AND expression .)
    PLUS            shift and go to state 29
    MINUS           shift and go to state 30
    TIMES           shift and go to state 31
    DIVIDE          shift and go to state 32
    LESS_THEN       shift and go to state 33
    GREATER_THEN    shift and go to state 34
    LESS_EQUALS     shift and go to state 35
    GREATER_EQUALS  shift and go to state 36
    XOR             shift and go to state 43
    EQ              shift and go to state 44
    NEQ             shift and go to state 45
    IMPL            shift and go to state 46
    LPAREN          shift and go to state 47
    DOT             shift and go to state 28

  ! PLUS            [ reduce using rule 24 (expression -> expression AND expression .) ]
  ! MINUS           [ reduce using rule 24 (expression -> expression AND expression .) ]
  ! TIMES           [ reduce using rule 24 (expression -> expression AND expression .) ]
  ! DIVIDE          [ reduce using rule 24 (expression -> expression AND expression .) ]
  ! LESS_THEN       [ reduce using rule 24 (expression -> expression AND expression .) ]
  ! GREATER_THEN    [ reduce using rule 24 (expression -> expression AND expression .) ]
  ! LESS_EQUALS     [ reduce using rule 24 (expression -> expression AND expression .) ]
  ! GREATER_EQUALS  [ reduce using rule 24 (expression -> expression AND expression .) ]
  ! XOR             [ reduce using rule 24 (expression -> expression AND expression .) ]
  ! EQ              [ reduce using rule 24 (expression -> expression AND expression .) ]
  ! NEQ             [ reduce using rule 24 (expression -> expression AND expression .) ]
  ! IMPL            [ reduce using rule 24 (expression -> expression AND expression .) ]
  ! LPAREN          [ reduce using rule 24 (expression -> expression AND expression .) ]
  ! DOT             [ reduce using rule 24 (expression -> expression AND expression .) ]
  ! EQUALS          [ shift and go to state 37 ]
  ! NOT_EQUALS      [ shift and go to state 38 ]
  ! AND             [ shift and go to state 39 ]
  ! NAND            [ shift and go to state 40 ]
  ! OR              [ shift and go to state 41 ]
  ! NOR             [ shift and go to state 42 ]

    dots                           shift and go to state 48

state 88

    (25) expression -> expression NAND expression .
    (14) expression -> expression . PLUS expression
    (15) expression -> expression . MINUS expression
    (16) expression -> expression . TIMES expression
    (17) expression -> expression . DIVIDE expression
    (18) expression -> expression . LESS_THEN expression
    (19) expression -> expression . GREATER_THEN expression
    (20) expression -> expression . LESS_EQUALS expression
    (21) expression -> expression . GREATER_EQUALS expression
    (22) expression -> expression . EQUALS expression
    (23) expression -> expression . NOT_EQUALS expression
    (24) expression -> expression . AND expression
    (25) expression -> expression . NAND expression
    (26) expression -> expression . OR expression
    (27) expression -> expression . NOR expression
    (28) expression -> expression . XOR expression
    (29) expression -> expression . EQ expression
    (30) expression -> expression . NEQ expression
    (31) expression -> expression . IMPL expression
    (56) expression -> expression . LPAREN expression_list RPAREN
    (57) expression -> expression . LPAREN RPAREN
    (63) expression -> expression . dots IDENTIFIER
    (58) dots -> . DOT
    (59) dots -> . dots DOT

    EQUALS          reduce using rule 25 (expression -> expression NAND expression .)
    NOT_EQUALS      reduce using rule 25 (expression -> expression NAND expression .)
    AND             reduce using rule 25 (expression -> expression NAND expression .)
    NAND            reduce using rule 25 (expression -> expression NAND expression .)
    OR              reduce using rule 25 (expression -> expression NAND expression .)
    NOR             reduce using rule 25 (expression -> expression NAND expression .)
    $end            reduce using rule 25 (expression -> expression NAND expression .)
    RPAREN          reduce using rule 25 (expression -> expression NAND expression .)
    COMMA           reduce using rule 25 (expression -> expression NAND expression .)
    RBRACKET        reduce using rule 25 (expression -> expression NAND expression .)
    END             reduce using rule 25 (expression -> expression NAND expression .)
    SEPARATOR       reduce using rule 25 (expression -> expression NAND expression .)
    DO              reduce using rule 25 (expression -> expression NAND expression .)
    THEN            reduce using rule 25 (expression -> expression NAND expression .)
    BEGIN           reduce using rule 25 (expression -> expression NAND expression .)
    ELSE            reduce using rule 25 (expression -> expression NAND expression .)
    IN              reduce using rule 25 (expression -> expression NAND expression .)
    PLUS            shift and go to state 29
    MINUS           shift and go to state 30
    TIMES           shift and go to state 31
    DIVIDE          shift and go to state 32
    LESS_THEN       shift and go to state 33
    GREATER_THEN    shift and go to state 34
    LESS_EQUALS     shift and go to state 35
    GREATER_EQUALS  shift and go to state 36
    XOR             shift and go to state 43
    EQ              shift and go to state 44
    NEQ             shift and go to state 45
    IMPL            shift and go to state 46
    LPAREN          shift and go to state 47
    DOT             shift and go to state 28

  ! PLUS            [ reduce using rule 25 (expression -> expression NAND expression .) ]
  ! MINUS           [ reduce using rule 25 (expression -> expression NAND expression .) ]
  ! TIMES           [ reduce using rule 25 (expression -> expression NAND expression .) ]
  ! DIVIDE          [ reduce using rule 25 (expression -> expression NAND expression .) ]
  ! LESS_THEN       [ reduce using rule 25 (expression -> expression NAND expression .) ]
  ! GREATER_THEN    [ reduce using rule 25 (expression -> expression NAND expression .) ]
  ! LESS_EQUALS     [ reduce using rule 25 (expression -> expression NAND expression .) ]
  ! GREATER_EQUALS  [ reduce using rule 25 (expression -> expression NAND expression .) ]
  ! XOR             [ reduce using rule 25 (expression -> expression NAND expression .) ]
  ! EQ              [ reduce using rule 25 (expression -> expression NAND expression .) ]
  ! NEQ             [ reduce using rule 25 (expression -> expression NAND expression .) ]
  ! IMPL            [ reduce using rule 25 (expression -> expression NAND expression .) ]
  ! LPAREN          [ reduce using rule 25 (expression -> expression NAND expression .) ]
  ! DOT             [ reduce using rule 25 (expression -> expression NAND expression .) ]
  ! EQUALS          [ shift and go to state 37 ]
  ! NOT_EQUALS      [ shift and go to state 38 ]
  ! AND             [ shift and go to state 39 ]
  ! NAND            [ shift and go to state 40 ]
  ! OR              [ shift and go to state 41 ]
  ! NOR             [ shift and go to state 42 ]

    dots                           shift and go to state 48

state 89

    (26) expression -> expression OR expression .
    (14) expression -> expression . PLUS expression
    (15) expression -> expression . MINUS expression
    (16) expression -> expression . TIMES expression
    (17) expression -> expression . DIVIDE expression
    (18) expression -> expression . LESS_THEN expression
    (19) expression -> expression . GREATER_THEN expression
    (20) expression -> expression . LESS_EQUALS expression
    (21) expression -> expression . GREATER_EQUALS expression
    (22) expression -> expression . EQUALS expression
    (23) expression -> expression . NOT_EQUALS expression
    (24) expression -> expression . AND expression
    (25) expression -> expression . NAND expression
    (26) expression -> expression . OR expression
    (27) expression -> expression . NOR expression
    (28) expression -> expression . XOR expression
    (29) expression -> expression . EQ expression
    (30) expression -> expression . NEQ expression
    (31) expression -> expression . IMPL expression
    (56) expression -> expression . LPAREN expression_list RPAREN
    (57) expression -> expression . LPAREN RPAREN
    (63) expression -> expression . dots IDENTIFIER
    (58) dots -> . DOT
    (59) dots -> . dots DOT

    EQUALS          reduce using rule 26 (expression -> expression OR expression .)
    NOT_EQUALS      reduce using rule 26 (expression -> expression OR expression .)
    OR              reduce using rule 26 (expression -> expression OR expression .)
    NOR             reduce using rule 26 (expression -> expression OR expression .)
    $end            reduce using rule 26 (expression -> expression OR expression .)
    RPAREN          reduce using rule 26 (expression -> expression OR expression .)
    COMMA           reduce using rule 26 (expression -> expression OR expression .)
    RBRACKET        reduce using rule 26 (expression -> expression OR expression .)
    END             reduce using rule 26 (expression -> expression OR expression .)
    SEPARATOR       reduce using rule 26 (expression -> expression OR expression .)
    DO              reduce using rule 26 (expression -> expression OR expression .)
    THEN            reduce using rule 26 (expression -> expression OR expression .)
    BEGIN           reduce using rule 26 (expression -> expression OR expression .)
    ELSE            reduce using rule 26 (expression -> expression OR expression .)
    IN              reduce using rule 26 (expression -> expression OR expression .)
    PLUS            shift and go to state 29
    MINUS           shift and go to state 30
    TIMES           shift and go to state 31
    DIVIDE          shift and go to state 32
    LESS_THEN       shift and go to state 33
    GREATER_THEN    shift and go to state 34
    LESS_EQUALS     shift and go to state 35
    GREATER_EQUALS  shift and go to state 36
    AND             shift and go to state 39
    NAND            shift and go to state 40
    XOR             shift and go to state 43
    EQ              shift and go to state 44
    NEQ             shift and go to state 45
    IMPL            shift and go to state 46
    LPAREN          shift and go to state 47
    DOT             shift and go to state 28

  ! PLUS            [ reduce using rule 26 (expression -> expression OR expression .) ]
  ! MINUS           [ reduce using rule 26 (expression -> expression OR expression .) ]
  ! TIMES           [ reduce using rule 26 (expression -> expression OR expression .) ]
  ! DIVIDE          [ reduce using rule 26 (expression -> expression OR expression .) ]
  ! LESS_THEN       [ reduce using rule 26 (expression -> expression OR expression .) ]
  ! GREATER_THEN    [ reduce using rule 26 (expression -> expression OR expression .) ]
  ! LESS_EQUALS     [ reduce using rule 26 (expression -> expression OR expression .) ]
  ! GREATER_EQUALS  [ reduce using rule 26 (expression -> expression OR expression .) ]
  ! AND             [ reduce using rule 26 (expression -> expression OR expression .) ]
  ! NAND            [ reduce using rule 26 (expression -> expression OR expression .) ]
  ! XOR             [ reduce using rule 26 (expression -> expression OR expression .) ]
  ! EQ              [ reduce using rule 26 (expression -> expression OR expression .) ]
  ! NEQ             [ reduce using rule 26 (expression -> expression OR expression .) ]
  ! IMPL            [ reduce using rule 26 (expression -> expression OR expression .) ]
  ! LPAREN          [ reduce using rule 26 (expression -> expression OR expression .) ]
  ! DOT             [ reduce using rule 26 (expression -> expression OR expression .) ]
  ! EQUALS          [ shift and go to state 37 ]
  ! NOT_EQUALS      [ shift and go to state 38 ]
  ! OR              [ shift and go to state 41 ]
  ! NOR             [ shift and go to state 42 ]

    dots                           shift and go to state 48

state 90

    (27) expression -> expression NOR expression .
    (14) expression -> expression . PLUS expression
    (15) expression -> expression . MINUS expression
    (16) expression -> expression . TIMES expression
    (17) expression -> expression . DIVIDE expression
    (18) expression -> expression . LESS_THEN expression
    (19) expression -> expression . GREATER_THEN expression
    (20) expression -> expression . LESS_EQUALS expression
    (21) expression -> expression . GREATER_EQUALS expression
    (22) expression -> expression . EQUALS expression
    (23) expression -> expression . NOT_EQUALS expression
    (24) expression -> expression . AND expression
    (25) expression -> expression . NAND expression
    (26) expression -> expression . OR expression
    (27) expression -> expression . NOR expression
    (28) expression -> expression . XOR expression
    (29) expression -> expression . EQ expression
    (30) expression -> expression . NEQ expression
    (31) expression -> expression . IMPL expression
    (56) expression -> expression . LPAREN expression_list RPAREN
    (57) expression -> expression . LPAREN RPAREN
    (63) expression -> expression . dots IDENTIFIER
    (58) dots -> . DOT
    (59) dots -> . dots DOT

    EQUALS          reduce using rule 27 (expression -> expression NOR expression .)
    NOT_EQUALS      reduce using rule 27 (expression -> expression NOR expression .)
    OR              reduce using rule 27 (expression -> expression NOR expression .)
    NOR             reduce using rule 27 (expression -> expression NOR expression .)
    $end            reduce using rule 27 (expression -> expression NOR expression .)
    RPAREN          reduce using rule 27 (expression -> expression NOR expression .)
    COMMA           reduce using rule 27 (expression -> expression NOR expression .)
    RBRACKET        reduce using rule 27 (expression -> expression NOR expression .)
    END             reduce using rule 27 (expression -> expression NOR expression .)
    SEPARATOR       reduce using rule 27 (expression -> expression NOR expression .)
    DO              reduce using rule 27 (expression -> expression NOR expression .)
    THEN            reduce using rule 27 (expression -> expression NOR expression .)
    BEGIN           reduce using rule 27 (expression -> expression NOR expression .)
    ELSE            reduce using rule 27 (expression -> expression NOR expression .)
    IN              reduce using rule 27 (expression -> expression NOR expression .)
    PLUS            shift and go to state 29
    MINUS           shift and go to state 30
    TIMES           shift and go to state 31
    DIVIDE          shift and go to state 32
    LESS_THEN       shift and go to state 33
    GREATER_THEN    shift and go to state 34
    LESS_EQUALS     shift and go to state 35
    GREATER_EQUALS  shift and go to state 36
    AND             shift and go to state 39
    NAND            shift and go to state 40
    XOR             shift and go to state 43
    EQ              shift and go to state 44
    NEQ             shift and go to state 45
    IMPL            shift and go to state 46
    LPAREN          shift and go to state 47
    DOT             shift and go to state 28

  ! PLUS            [ reduce using rule 27 (expression -> expression NOR expression .) ]
  ! MINUS           [ reduce using rule 27 (expression -> expression NOR expression .) ]
  ! TIMES           [ reduce using rule 27 (expression -> expression NOR expression .) ]
  ! DIVIDE          [ reduce using rule 27 (expression -> expression NOR expression .) ]
  ! LESS_THEN       [ reduce using rule 27 (expression -> expression NOR expression .) ]
  ! GREATER_THEN    [ reduce using rule 27 (expression -> expression NOR expression .) ]
  ! LESS_EQUALS     [ reduce using rule 27 (expression -> expression NOR expression .) ]
  ! GREATER_EQUALS  [ reduce using rule 27 (expression -> expression NOR expression .) ]
  ! AND             [ reduce using rule 27 (expression -> expression NOR expression .) ]
  ! NAND            [ reduce using rule 27 (expression -> expression NOR expression .) ]
  ! XOR             [ reduce using rule 27 (expression -> expression NOR expression .) ]
  ! EQ              [ reduce using rule 27 (expression -> expression NOR expression .) ]
  ! NEQ             [ reduce using rule 27 (expression -> expression NOR expression .) ]
  ! IMPL            [ reduce using rule 27 (expression -> expression NOR expression .) ]
  ! LPAREN          [ reduce using rule 27 (expression -> expression NOR expression .) ]
  ! DOT             [ reduce using rule 27 (expression -> expression NOR expression .) ]
  ! EQUALS          [ shift and go to state 37 ]
  ! NOT_EQUALS      [ shift and go to state 38 ]
  ! OR              [ shift and go to state 41 ]
  ! NOR             [ shift and go to state 42 ]

    dots                           shift and go to state 48

state 91

    (28) expression -> expression XOR expression .
    (14) expression -> expression . PLUS expression
    (15) expression -> expression . MINUS expression
    (16) expression -> expression . TIMES expression
    (17) expression -> expression . DIVIDE expression
    (18) expression -> expression . LESS_THEN expression
    (19) expression -> expression . GREATER_THEN expression
    (20) expression -> expression . LESS_EQUALS expression
    (21) expression -> expression . GREATER_EQUALS expression
    (22) expression -> expression . EQUALS expression
    (23) expression -> expression . NOT_EQUALS expression
    (24) expression -> expression . AND expression
    (25) expression -> expression . NAND expression
    (26) expression -> expression . OR expression
    (27) expression -> expression . NOR expression
    (28) expression -> expression . XOR expression
    (29) expression -> expression . EQ expression
    (30) expression -> expression . NEQ expression
    (31) expression -> expression . IMPL expression
    (56) expression -> expression . LPAREN expression_list RPAREN
    (57) expression -> expression . LPAREN RPAREN
    (63) expression -> expression . dots IDENTIFIER
    (58) dots -> . DOT
    (59) dots -> . dots DOT

    EQUALS          reduce using rule 28 (expression -> expression XOR expression .)
    NOT_EQUALS      reduce using rule 28 (expression -> expression XOR expression .)
    AND             reduce using rule 28 (expression -> expression XOR expression .)
    NAND            reduce using rule 28 (expression -> expression XOR expression .)
    OR              reduce using rule 28 (expression -> expression XOR expression .)
    NOR             reduce using rule 28 (expression -> expression XOR expression .)
    XOR             reduce using rule 28 (expression -> expression XOR expression .)
    EQ              reduce using rule 28 (expression -> expression XOR expression .)
    NEQ             reduce using rule 28 (expression -> expression XOR expression .)
    IMPL            reduce using rule 28 (expression -> expression XOR expression .)
    $end            reduce using rule 28 (expression -> expression XOR expression .)
    RPAREN          reduce using rule 28 (expression -> expression XOR expression .)
    COMMA           reduce using rule 28 (expression -> expression XOR expression .)
    RBRACKET        reduce using rule 28 (expression -> expression XOR expression .)
    END             reduce using rule 28 (expression -> expression XOR expression .)
    SEPARATOR       reduce using rule 28 (expression -> expression XOR expression .)
    DO              reduce using rule 28 (expression -> expression XOR expression .)
    THEN            reduce using rule 28 (expression -> expression XOR expression .)
    BEGIN           reduce using rule 28 (expression -> expression XOR expression .)
    ELSE            reduce using rule 28 (expression -> expression XOR expression .)
    IN              reduce using rule 28 (expression -> expression XOR expression .)
    PLUS            shift and go to state 29
    MINUS           shift and go to state 30
    TIMES           shift and go to state 31
    DIVIDE          shift and go to state 32
    LESS_THEN       shift and go to state 33
    GREATER_THEN    shift and go to state 34
    LESS_EQUALS     shift and go to state 35
    GREATER_EQUALS  shift and go to state 36
    LPAREN          shift and go to state 47
    DOT             shift and go to state 28

  ! PLUS            [ reduce using rule 28 (expression -> expression XOR expression .) ]
  ! MINUS           [ reduce using rule 28 (expression -> expression XOR expression .) ]
  ! TIMES           [ reduce using rule 28 (expression -> expression XOR expression .) ]
  ! DIVIDE          [ reduce using rule 28 (expression -> expression XOR expression .) ]
  ! LESS_THEN       [ reduce using rule 28 (expression -> expression XOR expression .) ]
  ! GREATER_THEN    [ reduce using rule 28 (expression -> expression XOR expression .) ]
  ! LESS_EQUALS     [ reduce using rule 28 (expression -> expression XOR expression .) ]
  ! GREATER_EQUALS  [ reduce using rule 28 (expression -> expression XOR expression .) ]
  ! LPAREN          [ reduce using rule 28 (expression -> expression XOR expression .) ]
  ! DOT             [ reduce using rule 28 (expression -> expression XOR expression .) ]
  ! EQUALS          [ shift and go to state 37 ]
  ! NOT_EQUALS      [ shift and go to state 38 ]
  ! AND             [ shift and go to state 39 ]
  ! NAND            [ shift and go to state 40 ]
  ! OR              [ shift and go to state 41 ]
  ! NOR             [ shift and go to state 42 ]
  ! XOR             [ shift and go to state 43 ]
  ! EQ              [ shift and go to state 44 ]
  ! NEQ             [ shift and go to state 45 ]
  ! IMPL            [ shift and go to state 46 ]

    dots                           shift and go to state 48

state 92

    (29) expression -> expression EQ expression .
    (14) expression -> expression . PLUS expression
    (15) expression -> expression . MINUS expression
    (16) expression -> expression . TIMES expression
    (17) expression -> expression . DIVIDE expression
    (18) expression -> expression . LESS_THEN expression
    (19) expression -> expression . GREATER_THEN expression
    (20) expression -> expression . LESS_EQUALS expression
    (21) expression -> expression . GREATER_EQUALS expression
    (22) expression -> expression . EQUALS expression
    (23) expression -> expression . NOT_EQUALS expression
    (24) expression -> expression . AND expression
    (25) expression -> expression . NAND expression
    (26) expression -> expression . OR expression
    (27) expression -> expression . NOR expression
    (28) expression -> expression . XOR expression
    (29) expression -> expression . EQ expression
    (30) expression -> expression . NEQ expression
    (31) expression -> expression . IMPL expression
    (56) expression -> expression . LPAREN expression_list RPAREN
    (57) expression -> expression . LPAREN RPAREN
    (63) expression -> expression . dots IDENTIFIER
    (58) dots -> . DOT
    (59) dots -> . dots DOT

    EQUALS          reduce using rule 29 (expression -> expression EQ expression .)
    NOT_EQUALS      reduce using rule 29 (expression -> expression EQ expression .)
    AND             reduce using rule 29 (expression -> expression EQ expression .)
    NAND            reduce using rule 29 (expression -> expression EQ expression .)
    OR              reduce using rule 29 (expression -> expression EQ expression .)
    NOR             reduce using rule 29 (expression -> expression EQ expression .)
    XOR             reduce using rule 29 (expression -> expression EQ expression .)
    EQ              reduce using rule 29 (expression -> expression EQ expression .)
    NEQ             reduce using rule 29 (expression -> expression EQ expression .)
    IMPL            reduce using rule 29 (expression -> expression EQ expression .)
    $end            reduce using rule 29 (expression -> expression EQ expression .)
    RPAREN          reduce using rule 29 (expression -> expression EQ expression .)
    COMMA           reduce using rule 29 (expression -> expression EQ expression .)
    RBRACKET        reduce using rule 29 (expression -> expression EQ expression .)
    END             reduce using rule 29 (expression -> expression EQ expression .)
    SEPARATOR       reduce using rule 29 (expression -> expression EQ expression .)
    DO              reduce using rule 29 (expression -> expression EQ expression .)
    THEN            reduce using rule 29 (expression -> expression EQ expression .)
    BEGIN           reduce using rule 29 (expression -> expression EQ expression .)
    ELSE            reduce using rule 29 (expression -> expression EQ expression .)
    IN              reduce using rule 29 (expression -> expression EQ expression .)
    PLUS            shift and go to state 29
    MINUS           shift and go to state 30
    TIMES           shift and go to state 31
    DIVIDE          shift and go to state 32
    LESS_THEN       shift and go to state 33
    GREATER_THEN    shift and go to state 34
    LESS_EQUALS     shift and go to state 35
    GREATER_EQUALS  shift and go to state 36
    LPAREN          shift and go to state 47
    DOT             shift and go to state 28

  ! PLUS            [ reduce using rule 29 (expression -> expression EQ expression .) ]
  ! MINUS           [ reduce using rule 29 (expression -> expression EQ expression .) ]
  ! TIMES           [ reduce using rule 29 (expression -> expression EQ expression .) ]
  ! DIVIDE          [ reduce using rule 29 (expression -> expression EQ expression .) ]
  ! LESS_THEN       [ reduce using rule 29 (expression -> expression EQ expression .) ]
  ! GREATER_THEN    [ reduce using rule 29 (expression -> expression EQ expression .) ]
  ! LESS_EQUALS     [ reduce using rule 29 (expression -> expression EQ expression .) ]
  ! GREATER_EQUALS  [ reduce using rule 29 (expression -> expression EQ expression .) ]
  ! LPAREN          [ reduce using rule 29 (expression -> expression EQ expression .) ]
  ! DOT             [ reduce using rule 29 (expression -> expression EQ expression .) ]
  ! EQUALS          [ shift and go to state 37 ]
  ! NOT_EQUALS      [ shift and go to state 38 ]
  ! AND             [ shift and go to state 39 ]
  ! NAND            [ shift and go to state 40 ]
  ! OR              [ shift and go to state 41 ]
  ! NOR             [ shift and go to state 42 ]
  ! XOR             [ shift and go to state 43 ]
  ! EQ              [ shift and go to state 44 ]
  ! NEQ             [ shift and go to state 45 ]
  ! IMPL            [ shift and go to state 46 ]

    dots                           shift and go to state 48

state 93

    (30) expression -> expression NEQ expression .
    (14) expression -> expression . PLUS expression
    (15) expression -> expression . MINUS expression
    (16) expression -> expression . TIMES expression
    (17) expression -> expression . DIVIDE expression
    (18) expression -> expression . LESS_THEN expression
    (19) expression -> expression . GREATER_THEN expression
    (20) expression -> expression . LESS_EQUALS expression
    (21) expression -> expression . GREATER_EQUALS expression
    (22) expression -> expression . EQUALS expression
    (23) expression -> expression . NOT_EQUALS expression
    (24) expression -> expression . AND expression
    (25) expression -> expression . NAND expression
    (26) expression -> expression . OR expression
    (27) expression -> expression . NOR expression
    (28) expression -> expression . XOR expression
    (29) expression -> expression . EQ expression
    (30) expression -> expression . NEQ expression
    (31) expression -> expression . IMPL expression
    (56) expression -> expression . LPAREN expression_list RPAREN
    (57) expression -> expression . LPAREN RPAREN
    (63) expression -> expression . dots IDENTIFIER
    (58) dots -> . DOT
    (59) dots -> . dots DOT

    EQUALS          reduce using rule 30 (expression -> expression NEQ expression .)
    NOT_EQUALS      reduce using rule 30 (expression -> expression NEQ expression .)
    AND             reduce using rule 30 (expression -> expression NEQ expression .)
    NAND            reduce using rule 30 (expression -> expression NEQ expression .)
    OR              reduce using rule 30 (expression -> expression NEQ expression .)
    NOR             reduce using rule 30 (expression -> expression NEQ expression .)
    XOR             reduce using rule 30 (expression -> expression NEQ expression .)
    EQ              reduce using rule 30 (expression -> expression NEQ expression .)
    NEQ             reduce using rule 30 (expression -> expression NEQ expression .)
    IMPL            reduce using rule 30 (expression -> expression NEQ expression .)
    $end            reduce using rule 30 (expression -> expression NEQ expression .)
    RPAREN          reduce using rule 30 (expression -> expression NEQ expression .)
    COMMA           reduce using rule 30 (expression -> expression NEQ expression .)
    RBRACKET        reduce using rule 30 (expression -> expression NEQ expression .)
    END             reduce using rule 30 (expression -> expression NEQ expression .)
    SEPARATOR       reduce using rule 30 (expression -> expression NEQ expression .)
    DO              reduce using rule 30 (expression -> expression NEQ expression .)
    THEN            reduce using rule 30 (expression -> expression NEQ expression .)
    BEGIN           reduce using rule 30 (expression -> expression NEQ expression .)
    ELSE            reduce using rule 30 (expression -> expression NEQ expression .)
    IN              reduce using rule 30 (expression -> expression NEQ expression .)
    PLUS            shift and go to state 29
    MINUS           shift and go to state 30
    TIMES           shift and go to state 31
    DIVIDE          shift and go to state 32
    LESS_THEN       shift and go to state 33
    GREATER_THEN    shift and go to state 34
    LESS_EQUALS     shift and go to state 35
    GREATER_EQUALS  shift and go to state 36
    LPAREN          shift and go to state 47
    DOT             shift and go to state 28

  ! PLUS            [ reduce using rule 30 (expression -> expression NEQ expression .) ]
  ! MINUS           [ reduce using rule 30 (expression -> expression NEQ expression .) ]
  ! TIMES           [ reduce using rule 30 (expression -> expression NEQ expression .) ]
  ! DIVIDE          [ reduce using rule 30 (expression -> expression NEQ expression .) ]
  ! LESS_THEN       [ reduce using rule 30 (expression -> expression NEQ expression .) ]
  ! GREATER_THEN    [ reduce using rule 30 (expression -> expression NEQ expression .) ]
  ! LESS_EQUALS     [ reduce using rule 30 (expression -> expression NEQ expression .) ]
  ! GREATER_EQUALS  [ reduce using rule 30 (expression -> expression NEQ expression .) ]
  ! LPAREN          [ reduce using rule 30 (expression -> expression NEQ expression .) ]
  ! DOT             [ reduce using rule 30 (expression -> expression NEQ expression .) ]
  ! EQUALS          [ shift and go to state 37 ]
  ! NOT_EQUALS      [ shift and go to state 38 ]
  ! AND             [ shift and go to state 39 ]
  ! NAND            [ shift and go to state 40 ]
  ! OR              [ shift and go to state 41 ]
  ! NOR             [ shift and go to state 42 ]
  ! XOR             [ shift and go to state 43 ]
  ! EQ              [ shift and go to state 44 ]
  ! NEQ             [ shift and go to state 45 ]
  ! IMPL            [ shift and go to state 46 ]

    dots                           shift and go to state 48

state 94

    (31) expression -> expression IMPL expression .
    (14) expression -> expression . PLUS expression
    (15) expression -> expression . MINUS expression
    (16) expression -> expression . TIMES expression
    (17) expression -> expression . DIVIDE expression
    (18) expression -> expression . LESS_THEN expression
    (19) expression -> expression . GREATER_THEN expression
    (20) expression -> expression . LESS_EQUALS expression
    (21) expression -> expression . GREATER_EQUALS expression
    (22) expression -> expression . EQUALS expression
    (23) expression -> expression . NOT_EQUALS expression
    (24) expression -> expression . AND expression
    (25) expression -> expression . NAND expression
    (26) expression -> expression . OR expression
    (27) expression -> expression . NOR expression
    (28) expression -> expression . XOR expression
    (29) expression -> expression . EQ expression
    (30) expression -> expression . NEQ expression
    (31) expression -> expression . IMPL expression
    (56) expression -> expression . LPAREN expression_list RPAREN
    (57) expression -> expression . LPAREN RPAREN
    (63) expression -> expression . dots IDENTIFIER
    (58) dots -> . DOT
    (59) dots -> . dots DOT

    EQUALS          reduce using rule 31 (expression -> expression IMPL expression .)
    NOT_EQUALS      reduce using rule 31 (expression -> expression IMPL expression .)
    AND             reduce using rule 31 (expression -> expression IMPL expression .)
    NAND            reduce using rule 31 (expression -> expression IMPL expression .)
    OR              reduce using rule 31 (expression -> expression IMPL expression .)
    NOR             reduce using rule 31 (expression -> expression IMPL expression .)
    XOR             reduce using rule 31 (expression -> expression IMPL expression .)
    EQ              reduce using rule 31 (expression -> expression IMPL expression .)
    NEQ             reduce using rule 31 (expression -> expression IMPL expression .)
    IMPL            reduce using rule 31 (expression -> expression IMPL expression .)
    $end            reduce using rule 31 (expression -> expression IMPL expression .)
    RPAREN          reduce using rule 31 (expression -> expression IMPL expression .)
    COMMA           reduce using rule 31 (expression -> expression IMPL expression .)
    RBRACKET        reduce using rule 31 (expression -> expression IMPL expression .)
    END             reduce using rule 31 (expression -> expression IMPL expression .)
    SEPARATOR       reduce using rule 31 (expression -> expression IMPL expression .)
    DO              reduce using rule 31 (expression -> expression IMPL expression .)
    THEN            reduce using rule 31 (expression -> expression IMPL expression .)
    BEGIN           reduce using rule 31 (expression -> expression IMPL expression .)
    ELSE            reduce using rule 31 (expression -> expression IMPL expression .)
    IN              reduce using rule 31 (expression -> expression IMPL expression .)
    PLUS            shift and go to state 29
    MINUS           shift and go to state 30
    TIMES           shift and go to state 31
    DIVIDE          shift and go to state 32
    LESS_THEN       shift and go to state 33
    GREATER_THEN    shift and go to state 34
    LESS_EQUALS     shift and go to state 35
    GREATER_EQUALS  shift and go to state 36
    LPAREN          shift and go to state 47
    DOT             shift and go to state 28

  ! PLUS            [ reduce using rule 31 (expression -> expression IMPL expression .) ]
  ! MINUS           [ reduce using rule 31 (expression -> expression IMPL expression .) ]
  ! TIMES           [ reduce using rule 31 (expression -> expression IMPL expression .) ]
  ! DIVIDE          [ reduce using rule 31 (expression -> expression IMPL expression .) ]
  ! LESS_THEN       [ reduce using rule 31 (expression -> expression IMPL expression .) ]
  ! GREATER_THEN    [ reduce using rule 31 (expression -> expression IMPL expression .) ]
  ! LESS_EQUALS     [ reduce using rule 31 (expression -> expression IMPL expression .) ]
  ! GREATER_EQUALS  [ reduce using rule 31 (expression -> expression IMPL expression .) ]
  ! LPAREN          [ reduce using rule 31 (expression -> expression IMPL expression .) ]
  ! DOT             [ reduce using rule 31 (expression -> expression IMPL expression .) ]
  ! EQUALS          [ shift and go to state 37 ]
  ! NOT_EQUALS      [ shift and go to state 38 ]
  ! AND             [ shift and go to state 39 ]
  ! NAND            [ shift and go to state 40 ]
  ! OR              [ shift and go to state 41 ]
  ! NOR             [ shift and go to state 42 ]
  ! XOR             [ shift and go to state 43 ]
  ! EQ              [ shift and go to state 44 ]
  ! NEQ             [ shift and go to state 45 ]
  ! IMPL            [ shift and go to state 46 ]

    dots                           shift and go to state 48

state 95

    (56) expression -> expression LPAREN expression_list . RPAREN

    RPAREN          shift and go to state 126


state 96

    (57) expression -> expression LPAREN RPAREN .

    PLUS            reduce using rule 57 (expression -> expression LPAREN RPAREN .)
    MINUS           reduce using rule 57 (expression -> expression LPAREN RPAREN .)
    TIMES           reduce using rule 57 (expression -> expression LPAREN RPAREN .)
    DIVIDE          reduce using rule 57 (expression -> expression LPAREN RPAREN .)
    LESS_THEN       reduce using rule 57 (expression -> expression LPAREN RPAREN .)
    GREATER_THEN    reduce using rule 57 (expression -> expression LPAREN RPAREN .)
    LESS_EQUALS     reduce using rule 57 (expression -> expression LPAREN RPAREN .)
    GREATER_EQUALS  reduce using rule 57 (expression -> expression LPAREN RPAREN .)
    EQUALS          reduce using rule 57 (expression -> expression LPAREN RPAREN .)
    NOT_EQUALS      reduce using rule 57 (expression -> expression LPAREN RPAREN .)
    AND             reduce using rule 57 (expression -> expression LPAREN RPAREN .)
    NAND            reduce using rule 57 (expression -> expression LPAREN RPAREN .)
    OR              reduce using rule 57 (expression -> expression LPAREN RPAREN .)
    NOR             reduce using rule 57 (expression -> expression LPAREN RPAREN .)
    XOR             reduce using rule 57 (expression -> expression LPAREN RPAREN .)
    EQ              reduce using rule 57 (expression -> expression LPAREN RPAREN .)
    NEQ             reduce using rule 57 (expression -> expression LPAREN RPAREN .)
    IMPL            reduce using rule 57 (expression -> expression LPAREN RPAREN .)
    LPAREN          reduce using rule 57 (expression -> expression LPAREN RPAREN .)
    DOT             reduce using rule 57 (expression -> expression LPAREN RPAREN .)
    $end            reduce using rule 57 (expression -> expression LPAREN RPAREN .)
    RPAREN          reduce using rule 57 (expression -> expression LPAREN RPAREN .)
    COMMA           reduce using rule 57 (expression -> expression LPAREN RPAREN .)
    RBRACKET        reduce using rule 57 (expression -> expression LPAREN RPAREN .)
    END             reduce using rule 57 (expression -> expression LPAREN RPAREN .)
    SEPARATOR       reduce using rule 57 (expression -> expression LPAREN RPAREN .)
    DO              reduce using rule 57 (expression -> expression LPAREN RPAREN .)
    THEN            reduce using rule 57 (expression -> expression LPAREN RPAREN .)
    BEGIN           reduce using rule 57 (expression -> expression LPAREN RPAREN .)
    ELSE            reduce using rule 57 (expression -> expression LPAREN RPAREN .)
    IN              reduce using rule 57 (expression -> expression LPAREN RPAREN .)


state 97

    (63) expression -> expression dots IDENTIFIER .

    PLUS            reduce using rule 63 (expression -> expression dots IDENTIFIER .)
    MINUS           reduce using rule 63 (expression -> expression dots IDENTIFIER .)
    TIMES           reduce using rule 63 (expression -> expression dots IDENTIFIER .)
    DIVIDE          reduce using rule 63 (expression -> expression dots IDENTIFIER .)
    LESS_THEN       reduce using rule 63 (expression -> expression dots IDENTIFIER .)
    GREATER_THEN    reduce using rule 63 (expression -> expression dots IDENTIFIER .)
    LESS_EQUALS     reduce using rule 63 (expression -> expression dots IDENTIFIER .)
    GREATER_EQUALS  reduce using rule 63 (expression -> expression dots IDENTIFIER .)
    EQUALS          reduce using rule 63 (expression -> expression dots IDENTIFIER .)
    NOT_EQUALS      reduce using rule 63 (expression -> expression dots IDENTIFIER .)
    AND             reduce using rule 63 (expression -> expression dots IDENTIFIER .)
    NAND            reduce using rule 63 (expression -> expression dots IDENTIFIER .)
    OR              reduce using rule 63 (expression -> expression dots IDENTIFIER .)
    NOR             reduce using rule 63 (expression -> expression dots IDENTIFIER .)
    XOR             reduce using rule 63 (expression -> expression dots IDENTIFIER .)
    EQ              reduce using rule 63 (expression -> expression dots IDENTIFIER .)
    NEQ             reduce using rule 63 (expression -> expression dots IDENTIFIER .)
    IMPL            reduce using rule 63 (expression -> expression dots IDENTIFIER .)
    LPAREN          reduce using rule 63 (expression -> expression dots IDENTIFIER .)
    DOT             reduce using rule 63 (expression -> expression dots IDENTIFIER .)
    $end            reduce using rule 63 (expression -> expression dots IDENTIFIER .)
    RPAREN          reduce using rule 63 (expression -> expression dots IDENTIFIER .)
    COMMA           reduce using rule 63 (expression -> expression dots IDENTIFIER .)
    RBRACKET        reduce using rule 63 (expression -> expression dots IDENTIFIER .)
    END             reduce using rule 63 (expression -> expression dots IDENTIFIER .)
    SEPARATOR       reduce using rule 63 (expression -> expression dots IDENTIFIER .)
    DO              reduce using rule 63 (expression -> expression dots IDENTIFIER .)
    THEN            reduce using rule 63 (expression -> expression dots IDENTIFIER .)
    BEGIN           reduce using rule 63 (expression -> expression dots IDENTIFIER .)
    ELSE            reduce using rule 63 (expression -> expression dots IDENTIFIER .)
    IN              reduce using rule 63 (expression -> expression dots IDENTIFIER .)


state 98

    (5) expression -> LIST LPAREN expression_list . RPAREN

    RPAREN          shift and go to state 127


state 99

    (6) expression -> LIST LPAREN RPAREN .

    PLUS            reduce using rule 6 (expression -> LIST LPAREN RPAREN .)
    MINUS           reduce using rule 6 (expression -> LIST LPAREN RPAREN .)
    TIMES           reduce using rule 6 (expression -> LIST LPAREN RPAREN .)
    DIVIDE          reduce using rule 6 (expression -> LIST LPAREN RPAREN .)
    LESS_THEN       reduce using rule 6 (expression -> LIST LPAREN RPAREN .)
    GREATER_THEN    reduce using rule 6 (expression -> LIST LPAREN RPAREN .)
    LESS_EQUALS     reduce using rule 6 (expression -> LIST LPAREN RPAREN .)
    GREATER_EQUALS  reduce using rule 6 (expression -> LIST LPAREN RPAREN .)
    EQUALS          reduce using rule 6 (expression -> LIST LPAREN RPAREN .)
    NOT_EQUALS      reduce using rule 6 (expression -> LIST LPAREN RPAREN .)
    AND             reduce using rule 6 (expression -> LIST LPAREN RPAREN .)
    NAND            reduce using rule 6 (expression -> LIST LPAREN RPAREN .)
    OR              reduce using rule 6 (expression -> LIST LPAREN RPAREN .)
    NOR             reduce using rule 6 (expression -> LIST LPAREN RPAREN .)
    XOR             reduce using rule 6 (expression -> LIST LPAREN RPAREN .)
    EQ              reduce using rule 6 (expression -> LIST LPAREN RPAREN .)
    NEQ             reduce using rule 6 (expression -> LIST LPAREN RPAREN .)
    IMPL            reduce using rule 6 (expression -> LIST LPAREN RPAREN .)
    LPAREN          reduce using rule 6 (expression -> LIST LPAREN RPAREN .)
    DOT             reduce using rule 6 (expression -> LIST LPAREN RPAREN .)
    $end            reduce using rule 6 (expression -> LIST LPAREN RPAREN .)
    RPAREN          reduce using rule 6 (expression -> LIST LPAREN RPAREN .)
    COMMA           reduce using rule 6 (expression -> LIST LPAREN RPAREN .)
    RBRACKET        reduce using rule 6 (expression -> LIST LPAREN RPAREN .)
    END             reduce using rule 6 (expression -> LIST LPAREN RPAREN .)
    SEPARATOR       reduce using rule 6 (expression -> LIST LPAREN RPAREN .)
    DO              reduce using rule 6 (expression -> LIST LPAREN RPAREN .)
    THEN            reduce using rule 6 (expression -> LIST LPAREN RPAREN .)
    BEGIN           reduce using rule 6 (expression -> LIST LPAREN RPAREN .)
    ELSE            reduce using rule 6 (expression -> LIST LPAREN RPAREN .)
    IN              reduce using rule 6 (expression -> LIST LPAREN RPAREN .)


state 100

    (32) expression -> LPAREN expression RPAREN .

    PLUS            reduce using rule 32 (expression -> LPAREN expression RPAREN .)
    MINUS           reduce using rule 32 (expression -> LPAREN expression RPAREN .)
    TIMES           reduce using rule 32 (expression -> LPAREN expression RPAREN .)
    DIVIDE          reduce using rule 32 (expression -> LPAREN expression RPAREN .)
    LESS_THEN       reduce using rule 32 (expression -> LPAREN expression RPAREN .)
    GREATER_THEN    reduce using rule 32 (expression -> LPAREN expression RPAREN .)
    LESS_EQUALS     reduce using rule 32 (expression -> LPAREN expression RPAREN .)
    GREATER_EQUALS  reduce using rule 32 (expression -> LPAREN expression RPAREN .)
    EQUALS          reduce using rule 32 (expression -> LPAREN expression RPAREN .)
    NOT_EQUALS      reduce using rule 32 (expression -> LPAREN expression RPAREN .)
    AND             reduce using rule 32 (expression -> LPAREN expression RPAREN .)
    NAND            reduce using rule 32 (expression -> LPAREN expression RPAREN .)
    OR              reduce using rule 32 (expression -> LPAREN expression RPAREN .)
    NOR             reduce using rule 32 (expression -> LPAREN expression RPAREN .)
    XOR             reduce using rule 32 (expression -> LPAREN expression RPAREN .)
    EQ              reduce using rule 32 (expression -> LPAREN expression RPAREN .)
    NEQ             reduce using rule 32 (expression -> LPAREN expression RPAREN .)
    IMPL            reduce using rule 32 (expression -> LPAREN expression RPAREN .)
    LPAREN          reduce using rule 32 (expression -> LPAREN expression RPAREN .)
    DOT             reduce using rule 32 (expression -> LPAREN expression RPAREN .)
    $end            reduce using rule 32 (expression -> LPAREN expression RPAREN .)
    RPAREN          reduce using rule 32 (expression -> LPAREN expression RPAREN .)
    COMMA           reduce using rule 32 (expression -> LPAREN expression RPAREN .)
    RBRACKET        reduce using rule 32 (expression -> LPAREN expression RPAREN .)
    END             reduce using rule 32 (expression -> LPAREN expression RPAREN .)
    SEPARATOR       reduce using rule 32 (expression -> LPAREN expression RPAREN .)
    DO              reduce using rule 32 (expression -> LPAREN expression RPAREN .)
    THEN            reduce using rule 32 (expression -> LPAREN expression RPAREN .)
    BEGIN           reduce using rule 32 (expression -> LPAREN expression RPAREN .)
    ELSE            reduce using rule 32 (expression -> LPAREN expression RPAREN .)
    IN              reduce using rule 32 (expression -> LPAREN expression RPAREN .)


state 101

    (7) expression -> LBRACKET expression_list RBRACKET .

    PLUS            reduce using rule 7 (expression -> LBRACKET expression_list RBRACKET .)
    MINUS           reduce using rule 7 (expression -> LBRACKET expression_list RBRACKET .)
    TIMES           reduce using rule 7 (expression -> LBRACKET expression_list RBRACKET .)
    DIVIDE          reduce using rule 7 (expression -> LBRACKET expression_list RBRACKET .)
    LESS_THEN       reduce using rule 7 (expression -> LBRACKET expression_list RBRACKET .)
    GREATER_THEN    reduce using rule 7 (expression -> LBRACKET expression_list RBRACKET .)
    LESS_EQUALS     reduce using rule 7 (expression -> LBRACKET expression_list RBRACKET .)
    GREATER_EQUALS  reduce using rule 7 (expression -> LBRACKET expression_list RBRACKET .)
    EQUALS          reduce using rule 7 (expression -> LBRACKET expression_list RBRACKET .)
    NOT_EQUALS      reduce using rule 7 (expression -> LBRACKET expression_list RBRACKET .)
    AND             reduce using rule 7 (expression -> LBRACKET expression_list RBRACKET .)
    NAND            reduce using rule 7 (expression -> LBRACKET expression_list RBRACKET .)
    OR              reduce using rule 7 (expression -> LBRACKET expression_list RBRACKET .)
    NOR             reduce using rule 7 (expression -> LBRACKET expression_list RBRACKET .)
    XOR             reduce using rule 7 (expression -> LBRACKET expression_list RBRACKET .)
    EQ              reduce using rule 7 (expression -> LBRACKET expression_list RBRACKET .)
    NEQ             reduce using rule 7 (expression -> LBRACKET expression_list RBRACKET .)
    IMPL            reduce using rule 7 (expression -> LBRACKET expression_list RBRACKET .)
    LPAREN          reduce using rule 7 (expression -> LBRACKET expression_list RBRACKET .)
    DOT             reduce using rule 7 (expression -> LBRACKET expression_list RBRACKET .)
    $end            reduce using rule 7 (expression -> LBRACKET expression_list RBRACKET .)
    RPAREN          reduce using rule 7 (expression -> LBRACKET expression_list RBRACKET .)
    COMMA           reduce using rule 7 (expression -> LBRACKET expression_list RBRACKET .)
    RBRACKET        reduce using rule 7 (expression -> LBRACKET expression_list RBRACKET .)
    END             reduce using rule 7 (expression -> LBRACKET expression_list RBRACKET .)
    SEPARATOR       reduce using rule 7 (expression -> LBRACKET expression_list RBRACKET .)
    DO              reduce using rule 7 (expression -> LBRACKET expression_list RBRACKET .)
    THEN            reduce using rule 7 (expression -> LBRACKET expression_list RBRACKET .)
    BEGIN           reduce using rule 7 (expression -> LBRACKET expression_list RBRACKET .)
    ELSE            reduce using rule 7 (expression -> LBRACKET expression_list RBRACKET .)
    IN              reduce using rule 7 (expression -> LBRACKET expression_list RBRACKET .)


state 102

    (53) expression_list -> expression COMMA . expression_list
    (52) expression_list -> . expression
    (53) expression_list -> . expression COMMA expression_list
    (1) expression -> . NUMBER
    (2) expression -> . FLOAT
    (3) expression -> . CHAR
    (4) expression -> . STRING
    (5) expression -> . LIST LPAREN expression_list RPAREN
    (6) expression -> . LIST LPAREN RPAREN
    (7) expression -> . LBRACKET expression_list RBRACKET
    (8) expression -> . ARRAY LPAREN expression_list RPAREN
    (9) expression -> . LBRACKET RBRACKET
    (10) expression -> . ARRAY LPAREN RPAREN
    (11) expression -> . IDENTIFIER LBRACKET expression RBRACKET
    (12) expression -> . MINUS expression
    (13) expression -> . NOT expression
    (14) expression -> . expression PLUS expression
    (15) expression -> . expression MINUS expression
    (16) expression -> . expression TIMES expression
    (17) expression -> . expression DIVIDE expression
    (18) expression -> . expression LESS_THEN expression
    (19) expression -> . expression GREATER_THEN expression
    (20) expression -> . expression LESS_EQUALS expression
    (21) expression -> . expression GREATER_EQUALS expression
    (22) expression -> . expression EQUALS expression
    (23) expression -> . expression NOT_EQUALS expression
    (24) expression -> . expression AND expression
    (25) expression -> . expression NAND expression
    (26) expression -> . expression OR expression
    (27) expression -> . expression NOR expression
    (28) expression -> . expression XOR expression
    (29) expression -> . expression EQ expression
    (30) expression -> . expression NEQ expression
    (31) expression -> . expression IMPL expression
    (32) expression -> . LPAREN expression RPAREN
    (33) expression -> . TRUE
    (34) expression -> . FALSE
    (35) expression -> . IDENTIFIER
    (36) expression -> . IDENTIFIER ASSIGN expression
    (37) expression -> . BEGIN body END
    (40) expression -> . LOOP expression DO expression
    (41) expression -> . FOR expression SEPARATOR expression SEPARATOR expression DO expression
    (42) expression -> . WHILE expression DO expression
    (43) expression -> . IF expression THEN expression
    (44) expression -> . IF expression THEN expression ELSE expression
    (47) expression -> . LOCK identifier_list IN expression
    (50) expression -> . LET assign_list IN expression
    (51) expression -> . LETREC assign_list IN expression
    (54) expression -> . LAMBDA identifier_list ARROW expression
    (55) expression -> . LAMBDA ARROW expression
    (56) expression -> . expression LPAREN expression_list RPAREN
    (57) expression -> . expression LPAREN RPAREN
    (62) expression -> . STRUCT BEGIN struct_body END
    (63) expression -> . expression dots IDENTIFIER
    (64) expression -> . dots IDENTIFIER
    (65) expression -> . EXTEND expression BEGIN struct_body END
    (66) expression -> . PROC LPAREN identifier_list RPAREN identifier_list ARROW expression
    (67) expression -> . PROC LPAREN RPAREN identifier_list ARROW expression
    (68) expression -> . PROC LPAREN identifier_list RPAREN ARROW expression
    (69) expression -> . PROC LPAREN RPAREN ARROW expression
    (58) dots -> . DOT
    (59) dots -> . dots DOT

    NUMBER          shift and go to state 2
    FLOAT           shift and go to state 3
    CHAR            shift and go to state 4
    STRING          shift and go to state 5
    LIST            shift and go to state 6
    LBRACKET        shift and go to state 8
    ARRAY           shift and go to state 9
    IDENTIFIER      shift and go to state 10
    MINUS           shift and go to state 11
    NOT             shift and go to state 12
    LPAREN          shift and go to state 7
    TRUE            shift and go to state 13
    FALSE           shift and go to state 14
    BEGIN           shift and go to state 15
    LOOP            shift and go to state 16
    FOR             shift and go to state 17
    WHILE           shift and go to state 18
    IF              shift and go to state 19
    LOCK            shift and go to state 20
    LET             shift and go to state 21
    LETREC          shift and go to state 22
    LAMBDA          shift and go to state 23
    STRUCT          shift and go to state 24
    EXTEND          shift and go to state 26
    PROC            shift and go to state 27
    DOT             shift and go to state 28

    expression                     shift and go to state 53
    expression_list                shift and go to state 128
    dots                           shift and go to state 25

state 103

    (8) expression -> ARRAY LPAREN expression_list . RPAREN

    RPAREN          shift and go to state 129


state 104

    (10) expression -> ARRAY LPAREN RPAREN .

    PLUS            reduce using rule 10 (expression -> ARRAY LPAREN RPAREN .)
    MINUS           reduce using rule 10 (expression -> ARRAY LPAREN RPAREN .)
    TIMES           reduce using rule 10 (expression -> ARRAY LPAREN RPAREN .)
    DIVIDE          reduce using rule 10 (expression -> ARRAY LPAREN RPAREN .)
    LESS_THEN       reduce using rule 10 (expression -> ARRAY LPAREN RPAREN .)
    GREATER_THEN    reduce using rule 10 (expression -> ARRAY LPAREN RPAREN .)
    LESS_EQUALS     reduce using rule 10 (expression -> ARRAY LPAREN RPAREN .)
    GREATER_EQUALS  reduce using rule 10 (expression -> ARRAY LPAREN RPAREN .)
    EQUALS          reduce using rule 10 (expression -> ARRAY LPAREN RPAREN .)
    NOT_EQUALS      reduce using rule 10 (expression -> ARRAY LPAREN RPAREN .)
    AND             reduce using rule 10 (expression -> ARRAY LPAREN RPAREN .)
    NAND            reduce using rule 10 (expression -> ARRAY LPAREN RPAREN .)
    OR              reduce using rule 10 (expression -> ARRAY LPAREN RPAREN .)
    NOR             reduce using rule 10 (expression -> ARRAY LPAREN RPAREN .)
    XOR             reduce using rule 10 (expression -> ARRAY LPAREN RPAREN .)
    EQ              reduce using rule 10 (expression -> ARRAY LPAREN RPAREN .)
    NEQ             reduce using rule 10 (expression -> ARRAY LPAREN RPAREN .)
    IMPL            reduce using rule 10 (expression -> ARRAY LPAREN RPAREN .)
    LPAREN          reduce using rule 10 (expression -> ARRAY LPAREN RPAREN .)
    DOT             reduce using rule 10 (expression -> ARRAY LPAREN RPAREN .)
    $end            reduce using rule 10 (expression -> ARRAY LPAREN RPAREN .)
    RPAREN          reduce using rule 10 (expression -> ARRAY LPAREN RPAREN .)
    COMMA           reduce using rule 10 (expression -> ARRAY LPAREN RPAREN .)
    RBRACKET        reduce using rule 10 (expression -> ARRAY LPAREN RPAREN .)
    END             reduce using rule 10 (expression -> ARRAY LPAREN RPAREN .)
    SEPARATOR       reduce using rule 10 (expression -> ARRAY LPAREN RPAREN .)
    DO              reduce using rule 10 (expression -> ARRAY LPAREN RPAREN .)
    THEN            reduce using rule 10 (expression -> ARRAY LPAREN RPAREN .)
    BEGIN           reduce using rule 10 (expression -> ARRAY LPAREN RPAREN .)
    ELSE            reduce using rule 10 (expression -> ARRAY LPAREN RPAREN .)
    IN              reduce using rule 10 (expression -> ARRAY LPAREN RPAREN .)


state 105

    (11) expression -> IDENTIFIER LBRACKET expression . RBRACKET
    (14) expression -> expression . PLUS expression
    (15) expression -> expression . MINUS expression
    (16) expression -> expression . TIMES expression
    (17) expression -> expression . DIVIDE expression
    (18) expression -> expression . LESS_THEN expression
    (19) expression -> expression . GREATER_THEN expression
    (20) expression -> expression . LESS_EQUALS expression
    (21) expression -> expression . GREATER_EQUALS expression
    (22) expression -> expression . EQUALS expression
    (23) expression -> expression . NOT_EQUALS expression
    (24) expression -> expression . AND expression
    (25) expression -> expression . NAND expression
    (26) expression -> expression . OR expression
    (27) expression -> expression . NOR expression
    (28) expression -> expression . XOR expression
    (29) expression -> expression . EQ expression
    (30) expression -> expression . NEQ expression
    (31) expression -> expression . IMPL expression
    (56) expression -> expression . LPAREN expression_list RPAREN
    (57) expression -> expression . LPAREN RPAREN
    (63) expression -> expression . dots IDENTIFIER
    (58) dots -> . DOT
    (59) dots -> . dots DOT

    RBRACKET        shift and go to state 130
    PLUS            shift and go to state 29
    MINUS           shift and go to state 30
    TIMES           shift and go to state 31
    DIVIDE          shift and go to state 32
    LESS_THEN       shift and go to state 33
    GREATER_THEN    shift and go to state 34
    LESS_EQUALS     shift and go to state 35
    GREATER_EQUALS  shift and go to state 36
    EQUALS          shift and go to state 37
    NOT_EQUALS      shift and go to state 38
    AND             shift and go to state 39
    NAND            shift and go to state 40
    OR              shift and go to state 41
    NOR             shift and go to state 42
    XOR             shift and go to state 43
    EQ              shift and go to state 44
    NEQ             shift and go to state 45
    IMPL            shift and go to state 46
    LPAREN          shift and go to state 47
    DOT             shift and go to state 28

    dots                           shift and go to state 48

state 106

    (36) expression -> IDENTIFIER ASSIGN expression .
    (14) expression -> expression . PLUS expression
    (15) expression -> expression . MINUS expression
    (16) expression -> expression . TIMES expression
    (17) expression -> expression . DIVIDE expression
    (18) expression -> expression . LESS_THEN expression
    (19) expression -> expression . GREATER_THEN expression
    (20) expression -> expression . LESS_EQUALS expression
    (21) expression -> expression . GREATER_EQUALS expression
    (22) expression -> expression . EQUALS expression
    (23) expression -> expression . NOT_EQUALS expression
    (24) expression -> expression . AND expression
    (25) expression -> expression . NAND expression
    (26) expression -> expression . OR expression
    (27) expression -> expression . NOR expression
    (28) expression -> expression . XOR expression
    (29) expression -> expression . EQ expression
    (30) expression -> expression . NEQ expression
    (31) expression -> expression . IMPL expression
    (56) expression -> expression . LPAREN expression_list RPAREN
    (57) expression -> expression . LPAREN RPAREN
    (63) expression -> expression . dots IDENTIFIER
    (58) dots -> . DOT
    (59) dots -> . dots DOT

    $end            reduce using rule 36 (expression -> IDENTIFIER ASSIGN expression .)
    RPAREN          reduce using rule 36 (expression -> IDENTIFIER ASSIGN expression .)
    COMMA           reduce using rule 36 (expression -> IDENTIFIER ASSIGN expression .)
    RBRACKET        reduce using rule 36 (expression -> IDENTIFIER ASSIGN expression .)
    END             reduce using rule 36 (expression -> IDENTIFIER ASSIGN expression .)
    SEPARATOR       reduce using rule 36 (expression -> IDENTIFIER ASSIGN expression .)
    DO              reduce using rule 36 (expression -> IDENTIFIER ASSIGN expression .)
    THEN            reduce using rule 36 (expression -> IDENTIFIER ASSIGN expression .)
    BEGIN           reduce using rule 36 (expression -> IDENTIFIER ASSIGN expression .)
    ELSE            reduce using rule 36 (expression -> IDENTIFIER ASSIGN expression .)
    IN              reduce using rule 36 (expression -> IDENTIFIER ASSIGN expression .)
    PLUS            shift and go to state 29
    MINUS           shift and go to state 30
    TIMES           shift and go to state 31
    DIVIDE          shift and go to state 32
    LESS_THEN       shift and go to state 33
    GREATER_THEN    shift and go to state 34
    LESS_EQUALS     shift and go to state 35
    GREATER_EQUALS  shift and go to state 36
    EQUALS          shift and go to state 37
    NOT_EQUALS      shift and go to state 38
    AND             shift and go to state 39
    NAND            shift and go to state 40
    OR              shift and go to state 41
    NOR             shift and go to state 42
    XOR             shift and go to state 43
    EQ              shift and go to state 44
    NEQ             shift and go to state 45
    IMPL            shift and go to state 46
    LPAREN          shift and go to state 47
    DOT             shift and go to state 28

  ! PLUS            [ reduce using rule 36 (expression -> IDENTIFIER ASSIGN expression .) ]
  ! MINUS           [ reduce using rule 36 (expression -> IDENTIFIER ASSIGN expression .) ]
  ! TIMES           [ reduce using rule 36 (expression -> IDENTIFIER ASSIGN expression .) ]
  ! DIVIDE          [ reduce using rule 36 (expression -> IDENTIFIER ASSIGN expression .) ]
  ! LESS_THEN       [ reduce using rule 36 (expression -> IDENTIFIER ASSIGN expression .) ]
  ! GREATER_THEN    [ reduce using rule 36 (expression -> IDENTIFIER ASSIGN expression .) ]
  ! LESS_EQUALS     [ reduce using rule 36 (expression -> IDENTIFIER ASSIGN expression .) ]
  ! GREATER_EQUALS  [ reduce using rule 36 (expression -> IDENTIFIER ASSIGN expression .) ]
  ! EQUALS          [ reduce using rule 36 (expression -> IDENTIFIER ASSIGN expression .) ]
  ! NOT_EQUALS      [ reduce using rule 36 (expression -> IDENTIFIER ASSIGN expression .) ]
  ! AND             [ reduce using rule 36 (expression -> IDENTIFIER ASSIGN expression .) ]
  ! NAND            [ reduce using rule 36 (expression -> IDENTIFIER ASSIGN expression .) ]
  ! OR              [ reduce using rule 36 (expression -> IDENTIFIER ASSIGN expression .) ]
  ! NOR             [ reduce using rule 36 (expression -> IDENTIFIER ASSIGN expression .) ]
  ! XOR             [ reduce using rule 36 (expression -> IDENTIFIER ASSIGN expression .) ]
  ! EQ              [ reduce using rule 36 (expression -> IDENTIFIER ASSIGN expression .) ]
  ! NEQ             [ reduce using rule 36 (expression -> IDENTIFIER ASSIGN expression .) ]
  ! IMPL            [ reduce using rule 36 (expression -> IDENTIFIER ASSIGN expression .) ]
  ! LPAREN          [ reduce using rule 36 (expression -> IDENTIFIER ASSIGN expression .) ]
  ! DOT             [ reduce using rule 36 (expression -> IDENTIFIER ASSIGN expression .) ]

    dots                           shift and go to state 48

state 107

    (37) expression -> BEGIN body END .

    PLUS            reduce using rule 37 (expression -> BEGIN body END .)
    MINUS           reduce using rule 37 (expression -> BEGIN body END .)
    TIMES           reduce using rule 37 (expression -> BEGIN body END .)
    DIVIDE          reduce using rule 37 (expression -> BEGIN body END .)
    LESS_THEN       reduce using rule 37 (expression -> BEGIN body END .)
    GREATER_THEN    reduce using rule 37 (expression -> BEGIN body END .)
    LESS_EQUALS     reduce using rule 37 (expression -> BEGIN body END .)
    GREATER_EQUALS  reduce using rule 37 (expression -> BEGIN body END .)
    EQUALS          reduce using rule 37 (expression -> BEGIN body END .)
    NOT_EQUALS      reduce using rule 37 (expression -> BEGIN body END .)
    AND             reduce using rule 37 (expression -> BEGIN body END .)
    NAND            reduce using rule 37 (expression -> BEGIN body END .)
    OR              reduce using rule 37 (expression -> BEGIN body END .)
    NOR             reduce using rule 37 (expression -> BEGIN body END .)
    XOR             reduce using rule 37 (expression -> BEGIN body END .)
    EQ              reduce using rule 37 (expression -> BEGIN body END .)
    NEQ             reduce using rule 37 (expression -> BEGIN body END .)
    IMPL            reduce using rule 37 (expression -> BEGIN body END .)
    LPAREN          reduce using rule 37 (expression -> BEGIN body END .)
    DOT             reduce using rule 37 (expression -> BEGIN body END .)
    $end            reduce using rule 37 (expression -> BEGIN body END .)
    RPAREN          reduce using rule 37 (expression -> BEGIN body END .)
    COMMA           reduce using rule 37 (expression -> BEGIN body END .)
    RBRACKET        reduce using rule 37 (expression -> BEGIN body END .)
    END             reduce using rule 37 (expression -> BEGIN body END .)
    SEPARATOR       reduce using rule 37 (expression -> BEGIN body END .)
    DO              reduce using rule 37 (expression -> BEGIN body END .)
    THEN            reduce using rule 37 (expression -> BEGIN body END .)
    BEGIN           reduce using rule 37 (expression -> BEGIN body END .)
    ELSE            reduce using rule 37 (expression -> BEGIN body END .)
    IN              reduce using rule 37 (expression -> BEGIN body END .)


state 108

    (39) body -> body SEPARATOR . expression
    (1) expression -> . NUMBER
    (2) expression -> . FLOAT
    (3) expression -> . CHAR
    (4) expression -> . STRING
    (5) expression -> . LIST LPAREN expression_list RPAREN
    (6) expression -> . LIST LPAREN RPAREN
    (7) expression -> . LBRACKET expression_list RBRACKET
    (8) expression -> . ARRAY LPAREN expression_list RPAREN
    (9) expression -> . LBRACKET RBRACKET
    (10) expression -> . ARRAY LPAREN RPAREN
    (11) expression -> . IDENTIFIER LBRACKET expression RBRACKET
    (12) expression -> . MINUS expression
    (13) expression -> . NOT expression
    (14) expression -> . expression PLUS expression
    (15) expression -> . expression MINUS expression
    (16) expression -> . expression TIMES expression
    (17) expression -> . expression DIVIDE expression
    (18) expression -> . expression LESS_THEN expression
    (19) expression -> . expression GREATER_THEN expression
    (20) expression -> . expression LESS_EQUALS expression
    (21) expression -> . expression GREATER_EQUALS expression
    (22) expression -> . expression EQUALS expression
    (23) expression -> . expression NOT_EQUALS expression
    (24) expression -> . expression AND expression
    (25) expression -> . expression NAND expression
    (26) expression -> . expression OR expression
    (27) expression -> . expression NOR expression
    (28) expression -> . expression XOR expression
    (29) expression -> . expression EQ expression
    (30) expression -> . expression NEQ expression
    (31) expression -> . expression IMPL expression
    (32) expression -> . LPAREN expression RPAREN
    (33) expression -> . TRUE
    (34) expression -> . FALSE
    (35) expression -> . IDENTIFIER
    (36) expression -> . IDENTIFIER ASSIGN expression
    (37) expression -> . BEGIN body END
    (40) expression -> . LOOP expression DO expression
    (41) expression -> . FOR expression SEPARATOR expression SEPARATOR expression DO expression
    (42) expression -> . WHILE expression DO expression
    (43) expression -> . IF expression THEN expression
    (44) expression -> . IF expression THEN expression ELSE expression
    (47) expression -> . LOCK identifier_list IN expression
    (50) expression -> . LET assign_list IN expression
    (51) expression -> . LETREC assign_list IN expression
    (54) expression -> . LAMBDA identifier_list ARROW expression
    (55) expression -> . LAMBDA ARROW expression
    (56) expression -> . expression LPAREN expression_list RPAREN
    (57) expression -> . expression LPAREN RPAREN
    (62) expression -> . STRUCT BEGIN struct_body END
    (63) expression -> . expression dots IDENTIFIER
    (64) expression -> . dots IDENTIFIER
    (65) expression -> . EXTEND expression BEGIN struct_body END
    (66) expression -> . PROC LPAREN identifier_list RPAREN identifier_list ARROW expression
    (67) expression -> . PROC LPAREN RPAREN identifier_list ARROW expression
    (68) expression -> . PROC LPAREN identifier_list RPAREN ARROW expression
    (69) expression -> . PROC LPAREN RPAREN ARROW expression
    (58) dots -> . DOT
    (59) dots -> . dots DOT

    NUMBER          shift and go to state 2
    FLOAT           shift and go to state 3
    CHAR            shift and go to state 4
    STRING          shift and go to state 5
    LIST            shift and go to state 6
    LBRACKET        shift and go to state 8
    ARRAY           shift and go to state 9
    IDENTIFIER      shift and go to state 10
    MINUS           shift and go to state 11
    NOT             shift and go to state 12
    LPAREN          shift and go to state 7
    TRUE            shift and go to state 13
    FALSE           shift and go to state 14
    BEGIN           shift and go to state 15
    LOOP            shift and go to state 16
    FOR             shift and go to state 17
    WHILE           shift and go to state 18
    IF              shift and go to state 19
    LOCK            shift and go to state 20
    LET             shift and go to state 21
    LETREC          shift and go to state 22
    LAMBDA          shift and go to state 23
    STRUCT          shift and go to state 24
    EXTEND          shift and go to state 26
    PROC            shift and go to state 27
    DOT             shift and go to state 28

    expression                     shift and go to state 131
    dots                           shift and go to state 25

state 109

    (40) expression -> LOOP expression DO . expression
    (1) expression -> . NUMBER
    (2) expression -> . FLOAT
    (3) expression -> . CHAR
    (4) expression -> . STRING
    (5) expression -> . LIST LPAREN expression_list RPAREN
    (6) expression -> . LIST LPAREN RPAREN
    (7) expression -> . LBRACKET expression_list RBRACKET
    (8) expression -> . ARRAY LPAREN expression_list RPAREN
    (9) expression -> . LBRACKET RBRACKET
    (10) expression -> . ARRAY LPAREN RPAREN
    (11) expression -> . IDENTIFIER LBRACKET expression RBRACKET
    (12) expression -> . MINUS expression
    (13) expression -> . NOT expression
    (14) expression -> . expression PLUS expression
    (15) expression -> . expression MINUS expression
    (16) expression -> . expression TIMES expression
    (17) expression -> . expression DIVIDE expression
    (18) expression -> . expression LESS_THEN expression
    (19) expression -> . expression GREATER_THEN expression
    (20) expression -> . expression LESS_EQUALS expression
    (21) expression -> . expression GREATER_EQUALS expression
    (22) expression -> . expression EQUALS expression
    (23) expression -> . expression NOT_EQUALS expression
    (24) expression -> . expression AND expression
    (25) expression -> . expression NAND expression
    (26) expression -> . expression OR expression
    (27) expression -> . expression NOR expression
    (28) expression -> . expression XOR expression
    (29) expression -> . expression EQ expression
    (30) expression -> . expression NEQ expression
    (31) expression -> . expression IMPL expression
    (32) expression -> . LPAREN expression RPAREN
    (33) expression -> . TRUE
    (34) expression -> . FALSE
    (35) expression -> . IDENTIFIER
    (36) expression -> . IDENTIFIER ASSIGN expression
    (37) expression -> . BEGIN body END
    (40) expression -> . LOOP expression DO expression
    (41) expression -> . FOR expression SEPARATOR expression SEPARATOR expression DO expression
    (42) expression -> . WHILE expression DO expression
    (43) expression -> . IF expression THEN expression
    (44) expression -> . IF expression THEN expression ELSE expression
    (47) expression -> . LOCK identifier_list IN expression
    (50) expression -> . LET assign_list IN expression
    (51) expression -> . LETREC assign_list IN expression
    (54) expression -> . LAMBDA identifier_list ARROW expression
    (55) expression -> . LAMBDA ARROW expression
    (56) expression -> . expression LPAREN expression_list RPAREN
    (57) expression -> . expression LPAREN RPAREN
    (62) expression -> . STRUCT BEGIN struct_body END
    (63) expression -> . expression dots IDENTIFIER
    (64) expression -> . dots IDENTIFIER
    (65) expression -> . EXTEND expression BEGIN struct_body END
    (66) expression -> . PROC LPAREN identifier_list RPAREN identifier_list ARROW expression
    (67) expression -> . PROC LPAREN RPAREN identifier_list ARROW expression
    (68) expression -> . PROC LPAREN identifier_list RPAREN ARROW expression
    (69) expression -> . PROC LPAREN RPAREN ARROW expression
    (58) dots -> . DOT
    (59) dots -> . dots DOT

    NUMBER          shift and go to state 2
    FLOAT           shift and go to state 3
    CHAR            shift and go to state 4
    STRING          shift and go to state 5
    LIST            shift and go to state 6
    LBRACKET        shift and go to state 8
    ARRAY           shift and go to state 9
    IDENTIFIER      shift and go to state 10
    MINUS           shift and go to state 11
    NOT             shift and go to state 12
    LPAREN          shift and go to state 7
    TRUE            shift and go to state 13
    FALSE           shift and go to state 14
    BEGIN           shift and go to state 15
    LOOP            shift and go to state 16
    FOR             shift and go to state 17
    WHILE           shift and go to state 18
    IF              shift and go to state 19
    LOCK            shift and go to state 20
    LET             shift and go to state 21
    LETREC          shift and go to state 22
    LAMBDA          shift and go to state 23
    STRUCT          shift and go to state 24
    EXTEND          shift and go to state 26
    PROC            shift and go to state 27
    DOT             shift and go to state 28

    expression                     shift and go to state 132
    dots                           shift and go to state 25

state 110

    (41) expression -> FOR expression SEPARATOR . expression SEPARATOR expression DO expression
    (1) expression -> . NUMBER
    (2) expression -> . FLOAT
    (3) expression -> . CHAR
    (4) expression -> . STRING
    (5) expression -> . LIST LPAREN expression_list RPAREN
    (6) expression -> . LIST LPAREN RPAREN
    (7) expression -> . LBRACKET expression_list RBRACKET
    (8) expression -> . ARRAY LPAREN expression_list RPAREN
    (9) expression -> . LBRACKET RBRACKET
    (10) expression -> . ARRAY LPAREN RPAREN
    (11) expression -> . IDENTIFIER LBRACKET expression RBRACKET
    (12) expression -> . MINUS expression
    (13) expression -> . NOT expression
    (14) expression -> . expression PLUS expression
    (15) expression -> . expression MINUS expression
    (16) expression -> . expression TIMES expression
    (17) expression -> . expression DIVIDE expression
    (18) expression -> . expression LESS_THEN expression
    (19) expression -> . expression GREATER_THEN expression
    (20) expression -> . expression LESS_EQUALS expression
    (21) expression -> . expression GREATER_EQUALS expression
    (22) expression -> . expression EQUALS expression
    (23) expression -> . expression NOT_EQUALS expression
    (24) expression -> . expression AND expression
    (25) expression -> . expression NAND expression
    (26) expression -> . expression OR expression
    (27) expression -> . expression NOR expression
    (28) expression -> . expression XOR expression
    (29) expression -> . expression EQ expression
    (30) expression -> . expression NEQ expression
    (31) expression -> . expression IMPL expression
    (32) expression -> . LPAREN expression RPAREN
    (33) expression -> . TRUE
    (34) expression -> . FALSE
    (35) expression -> . IDENTIFIER
    (36) expression -> . IDENTIFIER ASSIGN expression
    (37) expression -> . BEGIN body END
    (40) expression -> . LOOP expression DO expression
    (41) expression -> . FOR expression SEPARATOR expression SEPARATOR expression DO expression
    (42) expression -> . WHILE expression DO expression
    (43) expression -> . IF expression THEN expression
    (44) expression -> . IF expression THEN expression ELSE expression
    (47) expression -> . LOCK identifier_list IN expression
    (50) expression -> . LET assign_list IN expression
    (51) expression -> . LETREC assign_list IN expression
    (54) expression -> . LAMBDA identifier_list ARROW expression
    (55) expression -> . LAMBDA ARROW expression
    (56) expression -> . expression LPAREN expression_list RPAREN
    (57) expression -> . expression LPAREN RPAREN
    (62) expression -> . STRUCT BEGIN struct_body END
    (63) expression -> . expression dots IDENTIFIER
    (64) expression -> . dots IDENTIFIER
    (65) expression -> . EXTEND expression BEGIN struct_body END
    (66) expression -> . PROC LPAREN identifier_list RPAREN identifier_list ARROW expression
    (67) expression -> . PROC LPAREN RPAREN identifier_list ARROW expression
    (68) expression -> . PROC LPAREN identifier_list RPAREN ARROW expression
    (69) expression -> . PROC LPAREN RPAREN ARROW expression
    (58) dots -> . DOT
    (59) dots -> . dots DOT

    NUMBER          shift and go to state 2
    FLOAT           shift and go to state 3
    CHAR            shift and go to state 4
    STRING          shift and go to state 5
    LIST            shift and go to state 6
    LBRACKET        shift and go to state 8
    ARRAY           shift and go to state 9
    IDENTIFIER      shift and go to state 10
    MINUS           shift and go to state 11
    NOT             shift and go to state 12
    LPAREN          shift and go to state 7
    TRUE            shift and go to state 13
    FALSE           shift and go to state 14
    BEGIN           shift and go to state 15
    LOOP            shift and go to state 16
    FOR             shift and go to state 17
    WHILE           shift and go to state 18
    IF              shift and go to state 19
    LOCK            shift and go to state 20
    LET             shift and go to state 21
    LETREC          shift and go to state 22
    LAMBDA          shift and go to state 23
    STRUCT          shift and go to state 24
    EXTEND          shift and go to state 26
    PROC            shift and go to state 27
    DOT             shift and go to state 28

    expression                     shift and go to state 133
    dots                           shift and go to state 25

state 111

    (42) expression -> WHILE expression DO . expression
    (1) expression -> . NUMBER
    (2) expression -> . FLOAT
    (3) expression -> . CHAR
    (4) expression -> . STRING
    (5) expression -> . LIST LPAREN expression_list RPAREN
    (6) expression -> . LIST LPAREN RPAREN
    (7) expression -> . LBRACKET expression_list RBRACKET
    (8) expression -> . ARRAY LPAREN expression_list RPAREN
    (9) expression -> . LBRACKET RBRACKET
    (10) expression -> . ARRAY LPAREN RPAREN
    (11) expression -> . IDENTIFIER LBRACKET expression RBRACKET
    (12) expression -> . MINUS expression
    (13) expression -> . NOT expression
    (14) expression -> . expression PLUS expression
    (15) expression -> . expression MINUS expression
    (16) expression -> . expression TIMES expression
    (17) expression -> . expression DIVIDE expression
    (18) expression -> . expression LESS_THEN expression
    (19) expression -> . expression GREATER_THEN expression
    (20) expression -> . expression LESS_EQUALS expression
    (21) expression -> . expression GREATER_EQUALS expression
    (22) expression -> . expression EQUALS expression
    (23) expression -> . expression NOT_EQUALS expression
    (24) expression -> . expression AND expression
    (25) expression -> . expression NAND expression
    (26) expression -> . expression OR expression
    (27) expression -> . expression NOR expression
    (28) expression -> . expression XOR expression
    (29) expression -> . expression EQ expression
    (30) expression -> . expression NEQ expression
    (31) expression -> . expression IMPL expression
    (32) expression -> . LPAREN expression RPAREN
    (33) expression -> . TRUE
    (34) expression -> . FALSE
    (35) expression -> . IDENTIFIER
    (36) expression -> . IDENTIFIER ASSIGN expression
    (37) expression -> . BEGIN body END
    (40) expression -> . LOOP expression DO expression
    (41) expression -> . FOR expression SEPARATOR expression SEPARATOR expression DO expression
    (42) expression -> . WHILE expression DO expression
    (43) expression -> . IF expression THEN expression
    (44) expression -> . IF expression THEN expression ELSE expression
    (47) expression -> . LOCK identifier_list IN expression
    (50) expression -> . LET assign_list IN expression
    (51) expression -> . LETREC assign_list IN expression
    (54) expression -> . LAMBDA identifier_list ARROW expression
    (55) expression -> . LAMBDA ARROW expression
    (56) expression -> . expression LPAREN expression_list RPAREN
    (57) expression -> . expression LPAREN RPAREN
    (62) expression -> . STRUCT BEGIN struct_body END
    (63) expression -> . expression dots IDENTIFIER
    (64) expression -> . dots IDENTIFIER
    (65) expression -> . EXTEND expression BEGIN struct_body END
    (66) expression -> . PROC LPAREN identifier_list RPAREN identifier_list ARROW expression
    (67) expression -> . PROC LPAREN RPAREN identifier_list ARROW expression
    (68) expression -> . PROC LPAREN identifier_list RPAREN ARROW expression
    (69) expression -> . PROC LPAREN RPAREN ARROW expression
    (58) dots -> . DOT
    (59) dots -> . dots DOT

    NUMBER          shift and go to state 2
    FLOAT           shift and go to state 3
    CHAR            shift and go to state 4
    STRING          shift and go to state 5
    LIST            shift and go to state 6
    LBRACKET        shift and go to state 8
    ARRAY           shift and go to state 9
    IDENTIFIER      shift and go to state 10
    MINUS           shift and go to state 11
    NOT             shift and go to state 12
    LPAREN          shift and go to state 7
    TRUE            shift and go to state 13
    FALSE           shift and go to state 14
    BEGIN           shift and go to state 15
    LOOP            shift and go to state 16
    FOR             shift and go to state 17
    WHILE           shift and go to state 18
    IF              shift and go to state 19
    LOCK            shift and go to state 20
    LET             shift and go to state 21
    LETREC          shift and go to state 22
    LAMBDA          shift and go to state 23
    STRUCT          shift and go to state 24
    EXTEND          shift and go to state 26
    PROC            shift and go to state 27
    DOT             shift and go to state 28

    expression                     shift and go to state 134
    dots                           shift and go to state 25

state 112

    (43) expression -> IF expression THEN . expression
    (44) expression -> IF expression THEN . expression ELSE expression
    (1) expression -> . NUMBER
    (2) expression -> . FLOAT
    (3) expression -> . CHAR
    (4) expression -> . STRING
    (5) expression -> . LIST LPAREN expression_list RPAREN
    (6) expression -> . LIST LPAREN RPAREN
    (7) expression -> . LBRACKET expression_list RBRACKET
    (8) expression -> . ARRAY LPAREN expression_list RPAREN
    (9) expression -> . LBRACKET RBRACKET
    (10) expression -> . ARRAY LPAREN RPAREN
    (11) expression -> . IDENTIFIER LBRACKET expression RBRACKET
    (12) expression -> . MINUS expression
    (13) expression -> . NOT expression
    (14) expression -> . expression PLUS expression
    (15) expression -> . expression MINUS expression
    (16) expression -> . expression TIMES expression
    (17) expression -> . expression DIVIDE expression
    (18) expression -> . expression LESS_THEN expression
    (19) expression -> . expression GREATER_THEN expression
    (20) expression -> . expression LESS_EQUALS expression
    (21) expression -> . expression GREATER_EQUALS expression
    (22) expression -> . expression EQUALS expression
    (23) expression -> . expression NOT_EQUALS expression
    (24) expression -> . expression AND expression
    (25) expression -> . expression NAND expression
    (26) expression -> . expression OR expression
    (27) expression -> . expression NOR expression
    (28) expression -> . expression XOR expression
    (29) expression -> . expression EQ expression
    (30) expression -> . expression NEQ expression
    (31) expression -> . expression IMPL expression
    (32) expression -> . LPAREN expression RPAREN
    (33) expression -> . TRUE
    (34) expression -> . FALSE
    (35) expression -> . IDENTIFIER
    (36) expression -> . IDENTIFIER ASSIGN expression
    (37) expression -> . BEGIN body END
    (40) expression -> . LOOP expression DO expression
    (41) expression -> . FOR expression SEPARATOR expression SEPARATOR expression DO expression
    (42) expression -> . WHILE expression DO expression
    (43) expression -> . IF expression THEN expression
    (44) expression -> . IF expression THEN expression ELSE expression
    (47) expression -> . LOCK identifier_list IN expression
    (50) expression -> . LET assign_list IN expression
    (51) expression -> . LETREC assign_list IN expression
    (54) expression -> . LAMBDA identifier_list ARROW expression
    (55) expression -> . LAMBDA ARROW expression
    (56) expression -> . expression LPAREN expression_list RPAREN
    (57) expression -> . expression LPAREN RPAREN
    (62) expression -> . STRUCT BEGIN struct_body END
    (63) expression -> . expression dots IDENTIFIER
    (64) expression -> . dots IDENTIFIER
    (65) expression -> . EXTEND expression BEGIN struct_body END
    (66) expression -> . PROC LPAREN identifier_list RPAREN identifier_list ARROW expression
    (67) expression -> . PROC LPAREN RPAREN identifier_list ARROW expression
    (68) expression -> . PROC LPAREN identifier_list RPAREN ARROW expression
    (69) expression -> . PROC LPAREN RPAREN ARROW expression
    (58) dots -> . DOT
    (59) dots -> . dots DOT

    NUMBER          shift and go to state 2
    FLOAT           shift and go to state 3
    CHAR            shift and go to state 4
    STRING          shift and go to state 5
    LIST            shift and go to state 6
    LBRACKET        shift and go to state 8
    ARRAY           shift and go to state 9
    IDENTIFIER      shift and go to state 10
    MINUS           shift and go to state 11
    NOT             shift and go to state 12
    LPAREN          shift and go to state 7
    TRUE            shift and go to state 13
    FALSE           shift and go to state 14
    BEGIN           shift and go to state 15
    LOOP            shift and go to state 16
    FOR             shift and go to state 17
    WHILE           shift and go to state 18
    IF              shift and go to state 19
    LOCK            shift and go to state 20
    LET             shift and go to state 21
    LETREC          shift and go to state 22
    LAMBDA          shift and go to state 23
    STRUCT          shift and go to state 24
    EXTEND          shift and go to state 26
    PROC            shift and go to state 27
    DOT             shift and go to state 28

    expression                     shift and go to state 135
    dots                           shift and go to state 25

state 113

    (47) expression -> LOCK identifier_list IN . expression
    (1) expression -> . NUMBER
    (2) expression -> . FLOAT
    (3) expression -> . CHAR
    (4) expression -> . STRING
    (5) expression -> . LIST LPAREN expression_list RPAREN
    (6) expression -> . LIST LPAREN RPAREN
    (7) expression -> . LBRACKET expression_list RBRACKET
    (8) expression -> . ARRAY LPAREN expression_list RPAREN
    (9) expression -> . LBRACKET RBRACKET
    (10) expression -> . ARRAY LPAREN RPAREN
    (11) expression -> . IDENTIFIER LBRACKET expression RBRACKET
    (12) expression -> . MINUS expression
    (13) expression -> . NOT expression
    (14) expression -> . expression PLUS expression
    (15) expression -> . expression MINUS expression
    (16) expression -> . expression TIMES expression
    (17) expression -> . expression DIVIDE expression
    (18) expression -> . expression LESS_THEN expression
    (19) expression -> . expression GREATER_THEN expression
    (20) expression -> . expression LESS_EQUALS expression
    (21) expression -> . expression GREATER_EQUALS expression
    (22) expression -> . expression EQUALS expression
    (23) expression -> . expression NOT_EQUALS expression
    (24) expression -> . expression AND expression
    (25) expression -> . expression NAND expression
    (26) expression -> . expression OR expression
    (27) expression -> . expression NOR expression
    (28) expression -> . expression XOR expression
    (29) expression -> . expression EQ expression
    (30) expression -> . expression NEQ expression
    (31) expression -> . expression IMPL expression
    (32) expression -> . LPAREN expression RPAREN
    (33) expression -> . TRUE
    (34) expression -> . FALSE
    (35) expression -> . IDENTIFIER
    (36) expression -> . IDENTIFIER ASSIGN expression
    (37) expression -> . BEGIN body END
    (40) expression -> . LOOP expression DO expression
    (41) expression -> . FOR expression SEPARATOR expression SEPARATOR expression DO expression
    (42) expression -> . WHILE expression DO expression
    (43) expression -> . IF expression THEN expression
    (44) expression -> . IF expression THEN expression ELSE expression
    (47) expression -> . LOCK identifier_list IN expression
    (50) expression -> . LET assign_list IN expression
    (51) expression -> . LETREC assign_list IN expression
    (54) expression -> . LAMBDA identifier_list ARROW expression
    (55) expression -> . LAMBDA ARROW expression
    (56) expression -> . expression LPAREN expression_list RPAREN
    (57) expression -> . expression LPAREN RPAREN
    (62) expression -> . STRUCT BEGIN struct_body END
    (63) expression -> . expression dots IDENTIFIER
    (64) expression -> . dots IDENTIFIER
    (65) expression -> . EXTEND expression BEGIN struct_body END
    (66) expression -> . PROC LPAREN identifier_list RPAREN identifier_list ARROW expression
    (67) expression -> . PROC LPAREN RPAREN identifier_list ARROW expression
    (68) expression -> . PROC LPAREN identifier_list RPAREN ARROW expression
    (69) expression -> . PROC LPAREN RPAREN ARROW expression
    (58) dots -> . DOT
    (59) dots -> . dots DOT

    NUMBER          shift and go to state 2
    FLOAT           shift and go to state 3
    CHAR            shift and go to state 4
    STRING          shift and go to state 5
    LIST            shift and go to state 6
    LBRACKET        shift and go to state 8
    ARRAY           shift and go to state 9
    IDENTIFIER      shift and go to state 10
    MINUS           shift and go to state 11
    NOT             shift and go to state 12
    LPAREN          shift and go to state 7
    TRUE            shift and go to state 13
    FALSE           shift and go to state 14
    BEGIN           shift and go to state 15
    LOOP            shift and go to state 16
    FOR             shift and go to state 17
    WHILE           shift and go to state 18
    IF              shift and go to state 19
    LOCK            shift and go to state 20
    LET             shift and go to state 21
    LETREC          shift and go to state 22
    LAMBDA          shift and go to state 23
    STRUCT          shift and go to state 24
    EXTEND          shift and go to state 26
    PROC            shift and go to state 27
    DOT             shift and go to state 28

    expression                     shift and go to state 136
    dots                           shift and go to state 25

state 114

    (46) identifier_list -> IDENTIFIER COMMA . identifier_list
    (45) identifier_list -> . IDENTIFIER
    (46) identifier_list -> . IDENTIFIER COMMA identifier_list

    IDENTIFIER      shift and go to state 66

    identifier_list                shift and go to state 137

state 115

    (50) expression -> LET assign_list IN . expression
    (1) expression -> . NUMBER
    (2) expression -> . FLOAT
    (3) expression -> . CHAR
    (4) expression -> . STRING
    (5) expression -> . LIST LPAREN expression_list RPAREN
    (6) expression -> . LIST LPAREN RPAREN
    (7) expression -> . LBRACKET expression_list RBRACKET
    (8) expression -> . ARRAY LPAREN expression_list RPAREN
    (9) expression -> . LBRACKET RBRACKET
    (10) expression -> . ARRAY LPAREN RPAREN
    (11) expression -> . IDENTIFIER LBRACKET expression RBRACKET
    (12) expression -> . MINUS expression
    (13) expression -> . NOT expression
    (14) expression -> . expression PLUS expression
    (15) expression -> . expression MINUS expression
    (16) expression -> . expression TIMES expression
    (17) expression -> . expression DIVIDE expression
    (18) expression -> . expression LESS_THEN expression
    (19) expression -> . expression GREATER_THEN expression
    (20) expression -> . expression LESS_EQUALS expression
    (21) expression -> . expression GREATER_EQUALS expression
    (22) expression -> . expression EQUALS expression
    (23) expression -> . expression NOT_EQUALS expression
    (24) expression -> . expression AND expression
    (25) expression -> . expression NAND expression
    (26) expression -> . expression OR expression
    (27) expression -> . expression NOR expression
    (28) expression -> . expression XOR expression
    (29) expression -> . expression EQ expression
    (30) expression -> . expression NEQ expression
    (31) expression -> . expression IMPL expression
    (32) expression -> . LPAREN expression RPAREN
    (33) expression -> . TRUE
    (34) expression -> . FALSE
    (35) expression -> . IDENTIFIER
    (36) expression -> . IDENTIFIER ASSIGN expression
    (37) expression -> . BEGIN body END
    (40) expression -> . LOOP expression DO expression
    (41) expression -> . FOR expression SEPARATOR expression SEPARATOR expression DO expression
    (42) expression -> . WHILE expression DO expression
    (43) expression -> . IF expression THEN expression
    (44) expression -> . IF expression THEN expression ELSE expression
    (47) expression -> . LOCK identifier_list IN expression
    (50) expression -> . LET assign_list IN expression
    (51) expression -> . LETREC assign_list IN expression
    (54) expression -> . LAMBDA identifier_list ARROW expression
    (55) expression -> . LAMBDA ARROW expression
    (56) expression -> . expression LPAREN expression_list RPAREN
    (57) expression -> . expression LPAREN RPAREN
    (62) expression -> . STRUCT BEGIN struct_body END
    (63) expression -> . expression dots IDENTIFIER
    (64) expression -> . dots IDENTIFIER
    (65) expression -> . EXTEND expression BEGIN struct_body END
    (66) expression -> . PROC LPAREN identifier_list RPAREN identifier_list ARROW expression
    (67) expression -> . PROC LPAREN RPAREN identifier_list ARROW expression
    (68) expression -> . PROC LPAREN identifier_list RPAREN ARROW expression
    (69) expression -> . PROC LPAREN RPAREN ARROW expression
    (58) dots -> . DOT
    (59) dots -> . dots DOT

    NUMBER          shift and go to state 2
    FLOAT           shift and go to state 3
    CHAR            shift and go to state 4
    STRING          shift and go to state 5
    LIST            shift and go to state 6
    LBRACKET        shift and go to state 8
    ARRAY           shift and go to state 9
    IDENTIFIER      shift and go to state 10
    MINUS           shift and go to state 11
    NOT             shift and go to state 12
    LPAREN          shift and go to state 7
    TRUE            shift and go to state 13
    FALSE           shift and go to state 14
    BEGIN           shift and go to state 15
    LOOP            shift and go to state 16
    FOR             shift and go to state 17
    WHILE           shift and go to state 18
    IF              shift and go to state 19
    LOCK            shift and go to state 20
    LET             shift and go to state 21
    LETREC          shift and go to state 22
    LAMBDA          shift and go to state 23
    STRUCT          shift and go to state 24
    EXTEND          shift and go to state 26
    PROC            shift and go to state 27
    DOT             shift and go to state 28

    expression                     shift and go to state 138
    dots                           shift and go to state 25

state 116

    (49) assign_list -> assign_list COMMA . IDENTIFIER ASSIGN expression

    IDENTIFIER      shift and go to state 139


state 117

    (48) assign_list -> IDENTIFIER ASSIGN . expression
    (1) expression -> . NUMBER
    (2) expression -> . FLOAT
    (3) expression -> . CHAR
    (4) expression -> . STRING
    (5) expression -> . LIST LPAREN expression_list RPAREN
    (6) expression -> . LIST LPAREN RPAREN
    (7) expression -> . LBRACKET expression_list RBRACKET
    (8) expression -> . ARRAY LPAREN expression_list RPAREN
    (9) expression -> . LBRACKET RBRACKET
    (10) expression -> . ARRAY LPAREN RPAREN
    (11) expression -> . IDENTIFIER LBRACKET expression RBRACKET
    (12) expression -> . MINUS expression
    (13) expression -> . NOT expression
    (14) expression -> . expression PLUS expression
    (15) expression -> . expression MINUS expression
    (16) expression -> . expression TIMES expression
    (17) expression -> . expression DIVIDE expression
    (18) expression -> . expression LESS_THEN expression
    (19) expression -> . expression GREATER_THEN expression
    (20) expression -> . expression LESS_EQUALS expression
    (21) expression -> . expression GREATER_EQUALS expression
    (22) expression -> . expression EQUALS expression
    (23) expression -> . expression NOT_EQUALS expression
    (24) expression -> . expression AND expression
    (25) expression -> . expression NAND expression
    (26) expression -> . expression OR expression
    (27) expression -> . expression NOR expression
    (28) expression -> . expression XOR expression
    (29) expression -> . expression EQ expression
    (30) expression -> . expression NEQ expression
    (31) expression -> . expression IMPL expression
    (32) expression -> . LPAREN expression RPAREN
    (33) expression -> . TRUE
    (34) expression -> . FALSE
    (35) expression -> . IDENTIFIER
    (36) expression -> . IDENTIFIER ASSIGN expression
    (37) expression -> . BEGIN body END
    (40) expression -> . LOOP expression DO expression
    (41) expression -> . FOR expression SEPARATOR expression SEPARATOR expression DO expression
    (42) expression -> . WHILE expression DO expression
    (43) expression -> . IF expression THEN expression
    (44) expression -> . IF expression THEN expression ELSE expression
    (47) expression -> . LOCK identifier_list IN expression
    (50) expression -> . LET assign_list IN expression
    (51) expression -> . LETREC assign_list IN expression
    (54) expression -> . LAMBDA identifier_list ARROW expression
    (55) expression -> . LAMBDA ARROW expression
    (56) expression -> . expression LPAREN expression_list RPAREN
    (57) expression -> . expression LPAREN RPAREN
    (62) expression -> . STRUCT BEGIN struct_body END
    (63) expression -> . expression dots IDENTIFIER
    (64) expression -> . dots IDENTIFIER
    (65) expression -> . EXTEND expression BEGIN struct_body END
    (66) expression -> . PROC LPAREN identifier_list RPAREN identifier_list ARROW expression
    (67) expression -> . PROC LPAREN RPAREN identifier_list ARROW expression
    (68) expression -> . PROC LPAREN identifier_list RPAREN ARROW expression
    (69) expression -> . PROC LPAREN RPAREN ARROW expression
    (58) dots -> . DOT
    (59) dots -> . dots DOT

    NUMBER          shift and go to state 2
    FLOAT           shift and go to state 3
    CHAR            shift and go to state 4
    STRING          shift and go to state 5
    LIST            shift and go to state 6
    LBRACKET        shift and go to state 8
    ARRAY           shift and go to state 9
    IDENTIFIER      shift and go to state 10
    MINUS           shift and go to state 11
    NOT             shift and go to state 12
    LPAREN          shift and go to state 7
    TRUE            shift and go to state 13
    FALSE           shift and go to state 14
    BEGIN           shift and go to state 15
    LOOP            shift and go to state 16
    FOR             shift and go to state 17
    WHILE           shift and go to state 18
    IF              shift and go to state 19
    LOCK            shift and go to state 20
    LET             shift and go to state 21
    LETREC          shift and go to state 22
    LAMBDA          shift and go to state 23
    STRUCT          shift and go to state 24
    EXTEND          shift and go to state 26
    PROC            shift and go to state 27
    DOT             shift and go to state 28

    expression                     shift and go to state 140
    dots                           shift and go to state 25

state 118

    (51) expression -> LETREC assign_list IN . expression
    (1) expression -> . NUMBER
    (2) expression -> . FLOAT
    (3) expression -> . CHAR
    (4) expression -> . STRING
    (5) expression -> . LIST LPAREN expression_list RPAREN
    (6) expression -> . LIST LPAREN RPAREN
    (7) expression -> . LBRACKET expression_list RBRACKET
    (8) expression -> . ARRAY LPAREN expression_list RPAREN
    (9) expression -> . LBRACKET RBRACKET
    (10) expression -> . ARRAY LPAREN RPAREN
    (11) expression -> . IDENTIFIER LBRACKET expression RBRACKET
    (12) expression -> . MINUS expression
    (13) expression -> . NOT expression
    (14) expression -> . expression PLUS expression
    (15) expression -> . expression MINUS expression
    (16) expression -> . expression TIMES expression
    (17) expression -> . expression DIVIDE expression
    (18) expression -> . expression LESS_THEN expression
    (19) expression -> . expression GREATER_THEN expression
    (20) expression -> . expression LESS_EQUALS expression
    (21) expression -> . expression GREATER_EQUALS expression
    (22) expression -> . expression EQUALS expression
    (23) expression -> . expression NOT_EQUALS expression
    (24) expression -> . expression AND expression
    (25) expression -> . expression NAND expression
    (26) expression -> . expression OR expression
    (27) expression -> . expression NOR expression
    (28) expression -> . expression XOR expression
    (29) expression -> . expression EQ expression
    (30) expression -> . expression NEQ expression
    (31) expression -> . expression IMPL expression
    (32) expression -> . LPAREN expression RPAREN
    (33) expression -> . TRUE
    (34) expression -> . FALSE
    (35) expression -> . IDENTIFIER
    (36) expression -> . IDENTIFIER ASSIGN expression
    (37) expression -> . BEGIN body END
    (40) expression -> . LOOP expression DO expression
    (41) expression -> . FOR expression SEPARATOR expression SEPARATOR expression DO expression
    (42) expression -> . WHILE expression DO expression
    (43) expression -> . IF expression THEN expression
    (44) expression -> . IF expression THEN expression ELSE expression
    (47) expression -> . LOCK identifier_list IN expression
    (50) expression -> . LET assign_list IN expression
    (51) expression -> . LETREC assign_list IN expression
    (54) expression -> . LAMBDA identifier_list ARROW expression
    (55) expression -> . LAMBDA ARROW expression
    (56) expression -> . expression LPAREN expression_list RPAREN
    (57) expression -> . expression LPAREN RPAREN
    (62) expression -> . STRUCT BEGIN struct_body END
    (63) expression -> . expression dots IDENTIFIER
    (64) expression -> . dots IDENTIFIER
    (65) expression -> . EXTEND expression BEGIN struct_body END
    (66) expression -> . PROC LPAREN identifier_list RPAREN identifier_list ARROW expression
    (67) expression -> . PROC LPAREN RPAREN identifier_list ARROW expression
    (68) expression -> . PROC LPAREN identifier_list RPAREN ARROW expression
    (69) expression -> . PROC LPAREN RPAREN ARROW expression
    (58) dots -> . DOT
    (59) dots -> . dots DOT

    NUMBER          shift and go to state 2
    FLOAT           shift and go to state 3
    CHAR            shift and go to state 4
    STRING          shift and go to state 5
    LIST            shift and go to state 6
    LBRACKET        shift and go to state 8
    ARRAY           shift and go to state 9
    IDENTIFIER      shift and go to state 10
    MINUS           shift and go to state 11
    NOT             shift and go to state 12
    LPAREN          shift and go to state 7
    TRUE            shift and go to state 13
    FALSE           shift and go to state 14
    BEGIN           shift and go to state 15
    LOOP            shift and go to state 16
    FOR             shift and go to state 17
    WHILE           shift and go to state 18
    IF              shift and go to state 19
    LOCK            shift and go to state 20
    LET             shift and go to state 21
    LETREC          shift and go to state 22
    LAMBDA          shift and go to state 23
    STRUCT          shift and go to state 24
    EXTEND          shift and go to state 26
    PROC            shift and go to state 27
    DOT             shift and go to state 28

    expression                     shift and go to state 141
    dots                           shift and go to state 25

state 119

    (54) expression -> LAMBDA identifier_list ARROW . expression
    (1) expression -> . NUMBER
    (2) expression -> . FLOAT
    (3) expression -> . CHAR
    (4) expression -> . STRING
    (5) expression -> . LIST LPAREN expression_list RPAREN
    (6) expression -> . LIST LPAREN RPAREN
    (7) expression -> . LBRACKET expression_list RBRACKET
    (8) expression -> . ARRAY LPAREN expression_list RPAREN
    (9) expression -> . LBRACKET RBRACKET
    (10) expression -> . ARRAY LPAREN RPAREN
    (11) expression -> . IDENTIFIER LBRACKET expression RBRACKET
    (12) expression -> . MINUS expression
    (13) expression -> . NOT expression
    (14) expression -> . expression PLUS expression
    (15) expression -> . expression MINUS expression
    (16) expression -> . expression TIMES expression
    (17) expression -> . expression DIVIDE expression
    (18) expression -> . expression LESS_THEN expression
    (19) expression -> . expression GREATER_THEN expression
    (20) expression -> . expression LESS_EQUALS expression
    (21) expression -> . expression GREATER_EQUALS expression
    (22) expression -> . expression EQUALS expression
    (23) expression -> . expression NOT_EQUALS expression
    (24) expression -> . expression AND expression
    (25) expression -> . expression NAND expression
    (26) expression -> . expression OR expression
    (27) expression -> . expression NOR expression
    (28) expression -> . expression XOR expression
    (29) expression -> . expression EQ expression
    (30) expression -> . expression NEQ expression
    (31) expression -> . expression IMPL expression
    (32) expression -> . LPAREN expression RPAREN
    (33) expression -> . TRUE
    (34) expression -> . FALSE
    (35) expression -> . IDENTIFIER
    (36) expression -> . IDENTIFIER ASSIGN expression
    (37) expression -> . BEGIN body END
    (40) expression -> . LOOP expression DO expression
    (41) expression -> . FOR expression SEPARATOR expression SEPARATOR expression DO expression
    (42) expression -> . WHILE expression DO expression
    (43) expression -> . IF expression THEN expression
    (44) expression -> . IF expression THEN expression ELSE expression
    (47) expression -> . LOCK identifier_list IN expression
    (50) expression -> . LET assign_list IN expression
    (51) expression -> . LETREC assign_list IN expression
    (54) expression -> . LAMBDA identifier_list ARROW expression
    (55) expression -> . LAMBDA ARROW expression
    (56) expression -> . expression LPAREN expression_list RPAREN
    (57) expression -> . expression LPAREN RPAREN
    (62) expression -> . STRUCT BEGIN struct_body END
    (63) expression -> . expression dots IDENTIFIER
    (64) expression -> . dots IDENTIFIER
    (65) expression -> . EXTEND expression BEGIN struct_body END
    (66) expression -> . PROC LPAREN identifier_list RPAREN identifier_list ARROW expression
    (67) expression -> . PROC LPAREN RPAREN identifier_list ARROW expression
    (68) expression -> . PROC LPAREN identifier_list RPAREN ARROW expression
    (69) expression -> . PROC LPAREN RPAREN ARROW expression
    (58) dots -> . DOT
    (59) dots -> . dots DOT

    NUMBER          shift and go to state 2
    FLOAT           shift and go to state 3
    CHAR            shift and go to state 4
    STRING          shift and go to state 5
    LIST            shift and go to state 6
    LBRACKET        shift and go to state 8
    ARRAY           shift and go to state 9
    IDENTIFIER      shift and go to state 10
    MINUS           shift and go to state 11
    NOT             shift and go to state 12
    LPAREN          shift and go to state 7
    TRUE            shift and go to state 13
    FALSE           shift and go to state 14
    BEGIN           shift and go to state 15
    LOOP            shift and go to state 16
    FOR             shift and go to state 17
    WHILE           shift and go to state 18
    IF              shift and go to state 19
    LOCK            shift and go to state 20
    LET             shift and go to state 21
    LETREC          shift and go to state 22
    LAMBDA          shift and go to state 23
    STRUCT          shift and go to state 24
    EXTEND          shift and go to state 26
    PROC            shift and go to state 27
    DOT             shift and go to state 28

    expression                     shift and go to state 142
    dots                           shift and go to state 25

state 120

    (55) expression -> LAMBDA ARROW expression .
    (14) expression -> expression . PLUS expression
    (15) expression -> expression . MINUS expression
    (16) expression -> expression . TIMES expression
    (17) expression -> expression . DIVIDE expression
    (18) expression -> expression . LESS_THEN expression
    (19) expression -> expression . GREATER_THEN expression
    (20) expression -> expression . LESS_EQUALS expression
    (21) expression -> expression . GREATER_EQUALS expression
    (22) expression -> expression . EQUALS expression
    (23) expression -> expression . NOT_EQUALS expression
    (24) expression -> expression . AND expression
    (25) expression -> expression . NAND expression
    (26) expression -> expression . OR expression
    (27) expression -> expression . NOR expression
    (28) expression -> expression . XOR expression
    (29) expression -> expression . EQ expression
    (30) expression -> expression . NEQ expression
    (31) expression -> expression . IMPL expression
    (56) expression -> expression . LPAREN expression_list RPAREN
    (57) expression -> expression . LPAREN RPAREN
    (63) expression -> expression . dots IDENTIFIER
    (58) dots -> . DOT
    (59) dots -> . dots DOT

    $end            reduce using rule 55 (expression -> LAMBDA ARROW expression .)
    RPAREN          reduce using rule 55 (expression -> LAMBDA ARROW expression .)
    COMMA           reduce using rule 55 (expression -> LAMBDA ARROW expression .)
    RBRACKET        reduce using rule 55 (expression -> LAMBDA ARROW expression .)
    END             reduce using rule 55 (expression -> LAMBDA ARROW expression .)
    SEPARATOR       reduce using rule 55 (expression -> LAMBDA ARROW expression .)
    DO              reduce using rule 55 (expression -> LAMBDA ARROW expression .)
    THEN            reduce using rule 55 (expression -> LAMBDA ARROW expression .)
    BEGIN           reduce using rule 55 (expression -> LAMBDA ARROW expression .)
    ELSE            reduce using rule 55 (expression -> LAMBDA ARROW expression .)
    IN              reduce using rule 55 (expression -> LAMBDA ARROW expression .)
    PLUS            shift and go to state 29
    MINUS           shift and go to state 30
    TIMES           shift and go to state 31
    DIVIDE          shift and go to state 32
    LESS_THEN       shift and go to state 33
    GREATER_THEN    shift and go to state 34
    LESS_EQUALS     shift and go to state 35
    GREATER_EQUALS  shift and go to state 36
    EQUALS          shift and go to state 37
    NOT_EQUALS      shift and go to state 38
    AND             shift and go to state 39
    NAND            shift and go to state 40
    OR              shift and go to state 41
    NOR             shift and go to state 42
    XOR             shift and go to state 43
    EQ              shift and go to state 44
    NEQ             shift and go to state 45
    IMPL            shift and go to state 46
    LPAREN          shift and go to state 47
    DOT             shift and go to state 28

  ! PLUS            [ reduce using rule 55 (expression -> LAMBDA ARROW expression .) ]
  ! MINUS           [ reduce using rule 55 (expression -> LAMBDA ARROW expression .) ]
  ! TIMES           [ reduce using rule 55 (expression -> LAMBDA ARROW expression .) ]
  ! DIVIDE          [ reduce using rule 55 (expression -> LAMBDA ARROW expression .) ]
  ! LESS_THEN       [ reduce using rule 55 (expression -> LAMBDA ARROW expression .) ]
  ! GREATER_THEN    [ reduce using rule 55 (expression -> LAMBDA ARROW expression .) ]
  ! LESS_EQUALS     [ reduce using rule 55 (expression -> LAMBDA ARROW expression .) ]
  ! GREATER_EQUALS  [ reduce using rule 55 (expression -> LAMBDA ARROW expression .) ]
  ! EQUALS          [ reduce using rule 55 (expression -> LAMBDA ARROW expression .) ]
  ! NOT_EQUALS      [ reduce using rule 55 (expression -> LAMBDA ARROW expression .) ]
  ! AND             [ reduce using rule 55 (expression -> LAMBDA ARROW expression .) ]
  ! NAND            [ reduce using rule 55 (expression -> LAMBDA ARROW expression .) ]
  ! OR              [ reduce using rule 55 (expression -> LAMBDA ARROW expression .) ]
  ! NOR             [ reduce using rule 55 (expression -> LAMBDA ARROW expression .) ]
  ! XOR             [ reduce using rule 55 (expression -> LAMBDA ARROW expression .) ]
  ! EQ              [ reduce using rule 55 (expression -> LAMBDA ARROW expression .) ]
  ! NEQ             [ reduce using rule 55 (expression -> LAMBDA ARROW expression .) ]
  ! IMPL            [ reduce using rule 55 (expression -> LAMBDA ARROW expression .) ]
  ! LPAREN          [ reduce using rule 55 (expression -> LAMBDA ARROW expression .) ]
  ! DOT             [ reduce using rule 55 (expression -> LAMBDA ARROW expression .) ]

    dots                           shift and go to state 48

state 121

    (62) expression -> STRUCT BEGIN struct_body . END
    (61) struct_body -> struct_body . SEPARATOR IDENTIFIER ASSIGN expression

    END             shift and go to state 143
    SEPARATOR       shift and go to state 144


state 122

    (60) struct_body -> IDENTIFIER . ASSIGN expression

    ASSIGN          shift and go to state 145


state 123

    (65) expression -> EXTEND expression BEGIN . struct_body END
    (60) struct_body -> . IDENTIFIER ASSIGN expression
    (61) struct_body -> . struct_body SEPARATOR IDENTIFIER ASSIGN expression

    IDENTIFIER      shift and go to state 122

    struct_body                    shift and go to state 146

state 124

    (66) expression -> PROC LPAREN identifier_list . RPAREN identifier_list ARROW expression
    (68) expression -> PROC LPAREN identifier_list . RPAREN ARROW expression

    RPAREN          shift and go to state 147


state 125

    (67) expression -> PROC LPAREN RPAREN . identifier_list ARROW expression
    (69) expression -> PROC LPAREN RPAREN . ARROW expression
    (45) identifier_list -> . IDENTIFIER
    (46) identifier_list -> . IDENTIFIER COMMA identifier_list

    ARROW           shift and go to state 149
    IDENTIFIER      shift and go to state 66

    identifier_list                shift and go to state 148

state 126

    (56) expression -> expression LPAREN expression_list RPAREN .

    PLUS            reduce using rule 56 (expression -> expression LPAREN expression_list RPAREN .)
    MINUS           reduce using rule 56 (expression -> expression LPAREN expression_list RPAREN .)
    TIMES           reduce using rule 56 (expression -> expression LPAREN expression_list RPAREN .)
    DIVIDE          reduce using rule 56 (expression -> expression LPAREN expression_list RPAREN .)
    LESS_THEN       reduce using rule 56 (expression -> expression LPAREN expression_list RPAREN .)
    GREATER_THEN    reduce using rule 56 (expression -> expression LPAREN expression_list RPAREN .)
    LESS_EQUALS     reduce using rule 56 (expression -> expression LPAREN expression_list RPAREN .)
    GREATER_EQUALS  reduce using rule 56 (expression -> expression LPAREN expression_list RPAREN .)
    EQUALS          reduce using rule 56 (expression -> expression LPAREN expression_list RPAREN .)
    NOT_EQUALS      reduce using rule 56 (expression -> expression LPAREN expression_list RPAREN .)
    AND             reduce using rule 56 (expression -> expression LPAREN expression_list RPAREN .)
    NAND            reduce using rule 56 (expression -> expression LPAREN expression_list RPAREN .)
    OR              reduce using rule 56 (expression -> expression LPAREN expression_list RPAREN .)
    NOR             reduce using rule 56 (expression -> expression LPAREN expression_list RPAREN .)
    XOR             reduce using rule 56 (expression -> expression LPAREN expression_list RPAREN .)
    EQ              reduce using rule 56 (expression -> expression LPAREN expression_list RPAREN .)
    NEQ             reduce using rule 56 (expression -> expression LPAREN expression_list RPAREN .)
    IMPL            reduce using rule 56 (expression -> expression LPAREN expression_list RPAREN .)
    LPAREN          reduce using rule 56 (expression -> expression LPAREN expression_list RPAREN .)
    DOT             reduce using rule 56 (expression -> expression LPAREN expression_list RPAREN .)
    $end            reduce using rule 56 (expression -> expression LPAREN expression_list RPAREN .)
    RPAREN          reduce using rule 56 (expression -> expression LPAREN expression_list RPAREN .)
    COMMA           reduce using rule 56 (expression -> expression LPAREN expression_list RPAREN .)
    RBRACKET        reduce using rule 56 (expression -> expression LPAREN expression_list RPAREN .)
    END             reduce using rule 56 (expression -> expression LPAREN expression_list RPAREN .)
    SEPARATOR       reduce using rule 56 (expression -> expression LPAREN expression_list RPAREN .)
    DO              reduce using rule 56 (expression -> expression LPAREN expression_list RPAREN .)
    THEN            reduce using rule 56 (expression -> expression LPAREN expression_list RPAREN .)
    BEGIN           reduce using rule 56 (expression -> expression LPAREN expression_list RPAREN .)
    ELSE            reduce using rule 56 (expression -> expression LPAREN expression_list RPAREN .)
    IN              reduce using rule 56 (expression -> expression LPAREN expression_list RPAREN .)


state 127

    (5) expression -> LIST LPAREN expression_list RPAREN .

    PLUS            reduce using rule 5 (expression -> LIST LPAREN expression_list RPAREN .)
    MINUS           reduce using rule 5 (expression -> LIST LPAREN expression_list RPAREN .)
    TIMES           reduce using rule 5 (expression -> LIST LPAREN expression_list RPAREN .)
    DIVIDE          reduce using rule 5 (expression -> LIST LPAREN expression_list RPAREN .)
    LESS_THEN       reduce using rule 5 (expression -> LIST LPAREN expression_list RPAREN .)
    GREATER_THEN    reduce using rule 5 (expression -> LIST LPAREN expression_list RPAREN .)
    LESS_EQUALS     reduce using rule 5 (expression -> LIST LPAREN expression_list RPAREN .)
    GREATER_EQUALS  reduce using rule 5 (expression -> LIST LPAREN expression_list RPAREN .)
    EQUALS          reduce using rule 5 (expression -> LIST LPAREN expression_list RPAREN .)
    NOT_EQUALS      reduce using rule 5 (expression -> LIST LPAREN expression_list RPAREN .)
    AND             reduce using rule 5 (expression -> LIST LPAREN expression_list RPAREN .)
    NAND            reduce using rule 5 (expression -> LIST LPAREN expression_list RPAREN .)
    OR              reduce using rule 5 (expression -> LIST LPAREN expression_list RPAREN .)
    NOR             reduce using rule 5 (expression -> LIST LPAREN expression_list RPAREN .)
    XOR             reduce using rule 5 (expression -> LIST LPAREN expression_list RPAREN .)
    EQ              reduce using rule 5 (expression -> LIST LPAREN expression_list RPAREN .)
    NEQ             reduce using rule 5 (expression -> LIST LPAREN expression_list RPAREN .)
    IMPL            reduce using rule 5 (expression -> LIST LPAREN expression_list RPAREN .)
    LPAREN          reduce using rule 5 (expression -> LIST LPAREN expression_list RPAREN .)
    DOT             reduce using rule 5 (expression -> LIST LPAREN expression_list RPAREN .)
    $end            reduce using rule 5 (expression -> LIST LPAREN expression_list RPAREN .)
    RPAREN          reduce using rule 5 (expression -> LIST LPAREN expression_list RPAREN .)
    COMMA           reduce using rule 5 (expression -> LIST LPAREN expression_list RPAREN .)
    RBRACKET        reduce using rule 5 (expression -> LIST LPAREN expression_list RPAREN .)
    END             reduce using rule 5 (expression -> LIST LPAREN expression_list RPAREN .)
    SEPARATOR       reduce using rule 5 (expression -> LIST LPAREN expression_list RPAREN .)
    DO              reduce using rule 5 (expression -> LIST LPAREN expression_list RPAREN .)
    THEN            reduce using rule 5 (expression -> LIST LPAREN expression_list RPAREN .)
    BEGIN           reduce using rule 5 (expression -> LIST LPAREN expression_list RPAREN .)
    ELSE            reduce using rule 5 (expression -> LIST LPAREN expression_list RPAREN .)
    IN              reduce using rule 5 (expression -> LIST LPAREN expression_list RPAREN .)


state 128

    (53) expression_list -> expression COMMA expression_list .

    RBRACKET        reduce using rule 53 (expression_list -> expression COMMA expression_list .)
    RPAREN          reduce using rule 53 (expression_list -> expression COMMA expression_list .)


state 129

    (8) expression -> ARRAY LPAREN expression_list RPAREN .

    PLUS            reduce using rule 8 (expression -> ARRAY LPAREN expression_list RPAREN .)
    MINUS           reduce using rule 8 (expression -> ARRAY LPAREN expression_list RPAREN .)
    TIMES           reduce using rule 8 (expression -> ARRAY LPAREN expression_list RPAREN .)
    DIVIDE          reduce using rule 8 (expression -> ARRAY LPAREN expression_list RPAREN .)
    LESS_THEN       reduce using rule 8 (expression -> ARRAY LPAREN expression_list RPAREN .)
    GREATER_THEN    reduce using rule 8 (expression -> ARRAY LPAREN expression_list RPAREN .)
    LESS_EQUALS     reduce using rule 8 (expression -> ARRAY LPAREN expression_list RPAREN .)
    GREATER_EQUALS  reduce using rule 8 (expression -> ARRAY LPAREN expression_list RPAREN .)
    EQUALS          reduce using rule 8 (expression -> ARRAY LPAREN expression_list RPAREN .)
    NOT_EQUALS      reduce using rule 8 (expression -> ARRAY LPAREN expression_list RPAREN .)
    AND             reduce using rule 8 (expression -> ARRAY LPAREN expression_list RPAREN .)
    NAND            reduce using rule 8 (expression -> ARRAY LPAREN expression_list RPAREN .)
    OR              reduce using rule 8 (expression -> ARRAY LPAREN expression_list RPAREN .)
    NOR             reduce using rule 8 (expression -> ARRAY LPAREN expression_list RPAREN .)
    XOR             reduce using rule 8 (expression -> ARRAY LPAREN expression_list RPAREN .)
    EQ              reduce using rule 8 (expression -> ARRAY LPAREN expression_list RPAREN .)
    NEQ             reduce using rule 8 (expression -> ARRAY LPAREN expression_list RPAREN .)
    IMPL            reduce using rule 8 (expression -> ARRAY LPAREN expression_list RPAREN .)
    LPAREN          reduce using rule 8 (expression -> ARRAY LPAREN expression_list RPAREN .)
    DOT             reduce using rule 8 (expression -> ARRAY LPAREN expression_list RPAREN .)
    $end            reduce using rule 8 (expression -> ARRAY LPAREN expression_list RPAREN .)
    RPAREN          reduce using rule 8 (expression -> ARRAY LPAREN expression_list RPAREN .)
    COMMA           reduce using rule 8 (expression -> ARRAY LPAREN expression_list RPAREN .)
    RBRACKET        reduce using rule 8 (expression -> ARRAY LPAREN expression_list RPAREN .)
    END             reduce using rule 8 (expression -> ARRAY LPAREN expression_list RPAREN .)
    SEPARATOR       reduce using rule 8 (expression -> ARRAY LPAREN expression_list RPAREN .)
    DO              reduce using rule 8 (expression -> ARRAY LPAREN expression_list RPAREN .)
    THEN            reduce using rule 8 (expression -> ARRAY LPAREN expression_list RPAREN .)
    BEGIN           reduce using rule 8 (expression -> ARRAY LPAREN expression_list RPAREN .)
    ELSE            reduce using rule 8 (expression -> ARRAY LPAREN expression_list RPAREN .)
    IN              reduce using rule 8 (expression -> ARRAY LPAREN expression_list RPAREN .)


state 130

    (11) expression -> IDENTIFIER LBRACKET expression RBRACKET .

    PLUS            reduce using rule 11 (expression -> IDENTIFIER LBRACKET expression RBRACKET .)
    MINUS           reduce using rule 11 (expression -> IDENTIFIER LBRACKET expression RBRACKET .)
    TIMES           reduce using rule 11 (expression -> IDENTIFIER LBRACKET expression RBRACKET .)
    DIVIDE          reduce using rule 11 (expression -> IDENTIFIER LBRACKET expression RBRACKET .)
    LESS_THEN       reduce using rule 11 (expression -> IDENTIFIER LBRACKET expression RBRACKET .)
    GREATER_THEN    reduce using rule 11 (expression -> IDENTIFIER LBRACKET expression RBRACKET .)
    LESS_EQUALS     reduce using rule 11 (expression -> IDENTIFIER LBRACKET expression RBRACKET .)
    GREATER_EQUALS  reduce using rule 11 (expression -> IDENTIFIER LBRACKET expression RBRACKET .)
    EQUALS          reduce using rule 11 (expression -> IDENTIFIER LBRACKET expression RBRACKET .)
    NOT_EQUALS      reduce using rule 11 (expression -> IDENTIFIER LBRACKET expression RBRACKET .)
    AND             reduce using rule 11 (expression -> IDENTIFIER LBRACKET expression RBRACKET .)
    NAND            reduce using rule 11 (expression -> IDENTIFIER LBRACKET expression RBRACKET .)
    OR              reduce using rule 11 (expression -> IDENTIFIER LBRACKET expression RBRACKET .)
    NOR             reduce using rule 11 (expression -> IDENTIFIER LBRACKET expression RBRACKET .)
    XOR             reduce using rule 11 (expression -> IDENTIFIER LBRACKET expression RBRACKET .)
    EQ              reduce using rule 11 (expression -> IDENTIFIER LBRACKET expression RBRACKET .)
    NEQ             reduce using rule 11 (expression -> IDENTIFIER LBRACKET expression RBRACKET .)
    IMPL            reduce using rule 11 (expression -> IDENTIFIER LBRACKET expression RBRACKET .)
    LPAREN          reduce using rule 11 (expression -> IDENTIFIER LBRACKET expression RBRACKET .)
    DOT             reduce using rule 11 (expression -> IDENTIFIER LBRACKET expression RBRACKET .)
    $end            reduce using rule 11 (expression -> IDENTIFIER LBRACKET expression RBRACKET .)
    RPAREN          reduce using rule 11 (expression -> IDENTIFIER LBRACKET expression RBRACKET .)
    COMMA           reduce using rule 11 (expression -> IDENTIFIER LBRACKET expression RBRACKET .)
    RBRACKET        reduce using rule 11 (expression -> IDENTIFIER LBRACKET expression RBRACKET .)
    END             reduce using rule 11 (expression -> IDENTIFIER LBRACKET expression RBRACKET .)
    SEPARATOR       reduce using rule 11 (expression -> IDENTIFIER LBRACKET expression RBRACKET .)
    DO              reduce using rule 11 (expression -> IDENTIFIER LBRACKET expression RBRACKET .)
    THEN            reduce using rule 11 (expression -> IDENTIFIER LBRACKET expression RBRACKET .)
    BEGIN           reduce using rule 11 (expression -> IDENTIFIER LBRACKET expression RBRACKET .)
    ELSE            reduce using rule 11 (expression -> IDENTIFIER LBRACKET expression RBRACKET .)
    IN              reduce using rule 11 (expression -> IDENTIFIER LBRACKET expression RBRACKET .)


state 131

    (39) body -> body SEPARATOR expression .
    (14) expression -> expression . PLUS expression
    (15) expression -> expression . MINUS expression
    (16) expression -> expression . TIMES expression
    (17) expression -> expression . DIVIDE expression
    (18) expression -> expression . LESS_THEN expression
    (19) expression -> expression . GREATER_THEN expression
    (20) expression -> expression . LESS_EQUALS expression
    (21) expression -> expression . GREATER_EQUALS expression
    (22) expression -> expression . EQUALS expression
    (23) expression -> expression . NOT_EQUALS expression
    (24) expression -> expression . AND expression
    (25) expression -> expression . NAND expression
    (26) expression -> expression . OR expression
    (27) expression -> expression . NOR expression
    (28) expression -> expression . XOR expression
    (29) expression -> expression . EQ expression
    (30) expression -> expression . NEQ expression
    (31) expression -> expression . IMPL expression
    (56) expression -> expression . LPAREN expression_list RPAREN
    (57) expression -> expression . LPAREN RPAREN
    (63) expression -> expression . dots IDENTIFIER
    (58) dots -> . DOT
    (59) dots -> . dots DOT

    END             reduce using rule 39 (body -> body SEPARATOR expression .)
    SEPARATOR       reduce using rule 39 (body -> body SEPARATOR expression .)
    PLUS            shift and go to state 29
    MINUS           shift and go to state 30
    TIMES           shift and go to state 31
    DIVIDE          shift and go to state 32
    LESS_THEN       shift and go to state 33
    GREATER_THEN    shift and go to state 34
    LESS_EQUALS     shift and go to state 35
    GREATER_EQUALS  shift and go to state 36
    EQUALS          shift and go to state 37
    NOT_EQUALS      shift and go to state 38
    AND             shift and go to state 39
    NAND            shift and go to state 40
    OR              shift and go to state 41
    NOR             shift and go to state 42
    XOR             shift and go to state 43
    EQ              shift and go to state 44
    NEQ             shift and go to state 45
    IMPL            shift and go to state 46
    LPAREN          shift and go to state 47
    DOT             shift and go to state 28

    dots                           shift and go to state 48

state 132

    (40) expression -> LOOP expression DO expression .
    (14) expression -> expression . PLUS expression
    (15) expression -> expression . MINUS expression
    (16) expression -> expression . TIMES expression
    (17) expression -> expression . DIVIDE expression
    (18) expression -> expression . LESS_THEN expression
    (19) expression -> expression . GREATER_THEN expression
    (20) expression -> expression . LESS_EQUALS expression
    (21) expression -> expression . GREATER_EQUALS expression
    (22) expression -> expression . EQUALS expression
    (23) expression -> expression . NOT_EQUALS expression
    (24) expression -> expression . AND expression
    (25) expression -> expression . NAND expression
    (26) expression -> expression . OR expression
    (27) expression -> expression . NOR expression
    (28) expression -> expression . XOR expression
    (29) expression -> expression . EQ expression
    (30) expression -> expression . NEQ expression
    (31) expression -> expression . IMPL expression
    (56) expression -> expression . LPAREN expression_list RPAREN
    (57) expression -> expression . LPAREN RPAREN
    (63) expression -> expression . dots IDENTIFIER
    (58) dots -> . DOT
    (59) dots -> . dots DOT

    $end            reduce using rule 40 (expression -> LOOP expression DO expression .)
    RPAREN          reduce using rule 40 (expression -> LOOP expression DO expression .)
    COMMA           reduce using rule 40 (expression -> LOOP expression DO expression .)
    RBRACKET        reduce using rule 40 (expression -> LOOP expression DO expression .)
    END             reduce using rule 40 (expression -> LOOP expression DO expression .)
    SEPARATOR       reduce using rule 40 (expression -> LOOP expression DO expression .)
    DO              reduce using rule 40 (expression -> LOOP expression DO expression .)
    THEN            reduce using rule 40 (expression -> LOOP expression DO expression .)
    BEGIN           reduce using rule 40 (expression -> LOOP expression DO expression .)
    ELSE            reduce using rule 40 (expression -> LOOP expression DO expression .)
    IN              reduce using rule 40 (expression -> LOOP expression DO expression .)
    PLUS            shift and go to state 29
    MINUS           shift and go to state 30
    TIMES           shift and go to state 31
    DIVIDE          shift and go to state 32
    LESS_THEN       shift and go to state 33
    GREATER_THEN    shift and go to state 34
    LESS_EQUALS     shift and go to state 35
    GREATER_EQUALS  shift and go to state 36
    EQUALS          shift and go to state 37
    NOT_EQUALS      shift and go to state 38
    AND             shift and go to state 39
    NAND            shift and go to state 40
    OR              shift and go to state 41
    NOR             shift and go to state 42
    XOR             shift and go to state 43
    EQ              shift and go to state 44
    NEQ             shift and go to state 45
    IMPL            shift and go to state 46
    LPAREN          shift and go to state 47
    DOT             shift and go to state 28

  ! PLUS            [ reduce using rule 40 (expression -> LOOP expression DO expression .) ]
  ! MINUS           [ reduce using rule 40 (expression -> LOOP expression DO expression .) ]
  ! TIMES           [ reduce using rule 40 (expression -> LOOP expression DO expression .) ]
  ! DIVIDE          [ reduce using rule 40 (expression -> LOOP expression DO expression .) ]
  ! LESS_THEN       [ reduce using rule 40 (expression -> LOOP expression DO expression .) ]
  ! GREATER_THEN    [ reduce using rule 40 (expression -> LOOP expression DO expression .) ]
  ! LESS_EQUALS     [ reduce using rule 40 (expression -> LOOP expression DO expression .) ]
  ! GREATER_EQUALS  [ reduce using rule 40 (expression -> LOOP expression DO expression .) ]
  ! EQUALS          [ reduce using rule 40 (expression -> LOOP expression DO expression .) ]
  ! NOT_EQUALS      [ reduce using rule 40 (expression -> LOOP expression DO expression .) ]
  ! AND             [ reduce using rule 40 (expression -> LOOP expression DO expression .) ]
  ! NAND            [ reduce using rule 40 (expression -> LOOP expression DO expression .) ]
  ! OR              [ reduce using rule 40 (expression -> LOOP expression DO expression .) ]
  ! NOR             [ reduce using rule 40 (expression -> LOOP expression DO expression .) ]
  ! XOR             [ reduce using rule 40 (expression -> LOOP expression DO expression .) ]
  ! EQ              [ reduce using rule 40 (expression -> LOOP expression DO expression .) ]
  ! NEQ             [ reduce using rule 40 (expression -> LOOP expression DO expression .) ]
  ! IMPL            [ reduce using rule 40 (expression -> LOOP expression DO expression .) ]
  ! LPAREN          [ reduce using rule 40 (expression -> LOOP expression DO expression .) ]
  ! DOT             [ reduce using rule 40 (expression -> LOOP expression DO expression .) ]

    dots                           shift and go to state 48

state 133

    (41) expression -> FOR expression SEPARATOR expression . SEPARATOR expression DO expression
    (14) expression -> expression . PLUS expression
    (15) expression -> expression . MINUS expression
    (16) expression -> expression . TIMES expression
    (17) expression -> expression . DIVIDE expression
    (18) expression -> expression . LESS_THEN expression
    (19) expression -> expression . GREATER_THEN expression
    (20) expression -> expression . LESS_EQUALS expression
    (21) expression -> expression . GREATER_EQUALS expression
    (22) expression -> expression . EQUALS expression
    (23) expression -> expression . NOT_EQUALS expression
    (24) expression -> expression . AND expression
    (25) expression -> expression . NAND expression
    (26) expression -> expression . OR expression
    (27) expression -> expression . NOR expression
    (28) expression -> expression . XOR expression
    (29) expression -> expression . EQ expression
    (30) expression -> expression . NEQ expression
    (31) expression -> expression . IMPL expression
    (56) expression -> expression . LPAREN expression_list RPAREN
    (57) expression -> expression . LPAREN RPAREN
    (63) expression -> expression . dots IDENTIFIER
    (58) dots -> . DOT
    (59) dots -> . dots DOT

    SEPARATOR       shift and go to state 150
    PLUS            shift and go to state 29
    MINUS           shift and go to state 30
    TIMES           shift and go to state 31
    DIVIDE          shift and go to state 32
    LESS_THEN       shift and go to state 33
    GREATER_THEN    shift and go to state 34
    LESS_EQUALS     shift and go to state 35
    GREATER_EQUALS  shift and go to state 36
    EQUALS          shift and go to state 37
    NOT_EQUALS      shift and go to state 38
    AND             shift and go to state 39
    NAND            shift and go to state 40
    OR              shift and go to state 41
    NOR             shift and go to state 42
    XOR             shift and go to state 43
    EQ              shift and go to state 44
    NEQ             shift and go to state 45
    IMPL            shift and go to state 46
    LPAREN          shift and go to state 47
    DOT             shift and go to state 28

    dots                           shift and go to state 48

state 134

    (42) expression -> WHILE expression DO expression .
    (14) expression -> expression . PLUS expression
    (15) expression -> expression . MINUS expression
    (16) expression -> expression . TIMES expression
    (17) expression -> expression . DIVIDE expression
    (18) expression -> expression . LESS_THEN expression
    (19) expression -> expression . GREATER_THEN expression
    (20) expression -> expression . LESS_EQUALS expression
    (21) expression -> expression . GREATER_EQUALS expression
    (22) expression -> expression . EQUALS expression
    (23) expression -> expression . NOT_EQUALS expression
    (24) expression -> expression . AND expression
    (25) expression -> expression . NAND expression
    (26) expression -> expression . OR expression
    (27) expression -> expression . NOR expression
    (28) expression -> expression . XOR expression
    (29) expression -> expression . EQ expression
    (30) expression -> expression . NEQ expression
    (31) expression -> expression . IMPL expression
    (56) expression -> expression . LPAREN expression_list RPAREN
    (57) expression -> expression . LPAREN RPAREN
    (63) expression -> expression . dots IDENTIFIER
    (58) dots -> . DOT
    (59) dots -> . dots DOT

    $end            reduce using rule 42 (expression -> WHILE expression DO expression .)
    RPAREN          reduce using rule 42 (expression -> WHILE expression DO expression .)
    COMMA           reduce using rule 42 (expression -> WHILE expression DO expression .)
    RBRACKET        reduce using rule 42 (expression -> WHILE expression DO expression .)
    END             reduce using rule 42 (expression -> WHILE expression DO expression .)
    SEPARATOR       reduce using rule 42 (expression -> WHILE expression DO expression .)
    DO              reduce using rule 42 (expression -> WHILE expression DO expression .)
    THEN            reduce using rule 42 (expression -> WHILE expression DO expression .)
    BEGIN           reduce using rule 42 (expression -> WHILE expression DO expression .)
    ELSE            reduce using rule 42 (expression -> WHILE expression DO expression .)
    IN              reduce using rule 42 (expression -> WHILE expression DO expression .)
    PLUS            shift and go to state 29
    MINUS           shift and go to state 30
    TIMES           shift and go to state 31
    DIVIDE          shift and go to state 32
    LESS_THEN       shift and go to state 33
    GREATER_THEN    shift and go to state 34
    LESS_EQUALS     shift and go to state 35
    GREATER_EQUALS  shift and go to state 36
    EQUALS          shift and go to state 37
    NOT_EQUALS      shift and go to state 38
    AND             shift and go to state 39
    NAND            shift and go to state 40
    OR              shift and go to state 41
    NOR             shift and go to state 42
    XOR             shift and go to state 43
    EQ              shift and go to state 44
    NEQ             shift and go to state 45
    IMPL            shift and go to state 46
    LPAREN          shift and go to state 47
    DOT             shift and go to state 28

  ! PLUS            [ reduce using rule 42 (expression -> WHILE expression DO expression .) ]
  ! MINUS           [ reduce using rule 42 (expression -> WHILE expression DO expression .) ]
  ! TIMES           [ reduce using rule 42 (expression -> WHILE expression DO expression .) ]
  ! DIVIDE          [ reduce using rule 42 (expression -> WHILE expression DO expression .) ]
  ! LESS_THEN       [ reduce using rule 42 (expression -> WHILE expression DO expression .) ]
  ! GREATER_THEN    [ reduce using rule 42 (expression -> WHILE expression DO expression .) ]
  ! LESS_EQUALS     [ reduce using rule 42 (expression -> WHILE expression DO expression .) ]
  ! GREATER_EQUALS  [ reduce using rule 42 (expression -> WHILE expression DO expression .) ]
  ! EQUALS          [ reduce using rule 42 (expression -> WHILE expression DO expression .) ]
  ! NOT_EQUALS      [ reduce using rule 42 (expression -> WHILE expression DO expression .) ]
  ! AND             [ reduce using rule 42 (expression -> WHILE expression DO expression .) ]
  ! NAND            [ reduce using rule 42 (expression -> WHILE expression DO expression .) ]
  ! OR              [ reduce using rule 42 (expression -> WHILE expression DO expression .) ]
  ! NOR             [ reduce using rule 42 (expression -> WHILE expression DO expression .) ]
  ! XOR             [ reduce using rule 42 (expression -> WHILE expression DO expression .) ]
  ! EQ              [ reduce using rule 42 (expression -> WHILE expression DO expression .) ]
  ! NEQ             [ reduce using rule 42 (expression -> WHILE expression DO expression .) ]
  ! IMPL            [ reduce using rule 42 (expression -> WHILE expression DO expression .) ]
  ! LPAREN          [ reduce using rule 42 (expression -> WHILE expression DO expression .) ]
  ! DOT             [ reduce using rule 42 (expression -> WHILE expression DO expression .) ]

    dots                           shift and go to state 48

state 135

    (43) expression -> IF expression THEN expression .
    (44) expression -> IF expression THEN expression . ELSE expression
    (14) expression -> expression . PLUS expression
    (15) expression -> expression . MINUS expression
    (16) expression -> expression . TIMES expression
    (17) expression -> expression . DIVIDE expression
    (18) expression -> expression . LESS_THEN expression
    (19) expression -> expression . GREATER_THEN expression
    (20) expression -> expression . LESS_EQUALS expression
    (21) expression -> expression . GREATER_EQUALS expression
    (22) expression -> expression . EQUALS expression
    (23) expression -> expression . NOT_EQUALS expression
    (24) expression -> expression . AND expression
    (25) expression -> expression . NAND expression
    (26) expression -> expression . OR expression
    (27) expression -> expression . NOR expression
    (28) expression -> expression . XOR expression
    (29) expression -> expression . EQ expression
    (30) expression -> expression . NEQ expression
    (31) expression -> expression . IMPL expression
    (56) expression -> expression . LPAREN expression_list RPAREN
    (57) expression -> expression . LPAREN RPAREN
    (63) expression -> expression . dots IDENTIFIER
    (58) dots -> . DOT
    (59) dots -> . dots DOT

    $end            reduce using rule 43 (expression -> IF expression THEN expression .)
    RPAREN          reduce using rule 43 (expression -> IF expression THEN expression .)
    COMMA           reduce using rule 43 (expression -> IF expression THEN expression .)
    RBRACKET        reduce using rule 43 (expression -> IF expression THEN expression .)
    END             reduce using rule 43 (expression -> IF expression THEN expression .)
    SEPARATOR       reduce using rule 43 (expression -> IF expression THEN expression .)
    DO              reduce using rule 43 (expression -> IF expression THEN expression .)
    THEN            reduce using rule 43 (expression -> IF expression THEN expression .)
    BEGIN           reduce using rule 43 (expression -> IF expression THEN expression .)
    IN              reduce using rule 43 (expression -> IF expression THEN expression .)
    ELSE            shift and go to state 151
    PLUS            shift and go to state 29
    MINUS           shift and go to state 30
    TIMES           shift and go to state 31
    DIVIDE          shift and go to state 32
    LESS_THEN       shift and go to state 33
    GREATER_THEN    shift and go to state 34
    LESS_EQUALS     shift and go to state 35
    GREATER_EQUALS  shift and go to state 36
    EQUALS          shift and go to state 37
    NOT_EQUALS      shift and go to state 38
    AND             shift and go to state 39
    NAND            shift and go to state 40
    OR              shift and go to state 41
    NOR             shift and go to state 42
    XOR             shift and go to state 43
    EQ              shift and go to state 44
    NEQ             shift and go to state 45
    IMPL            shift and go to state 46
    LPAREN          shift and go to state 47
    DOT             shift and go to state 28

  ! PLUS            [ reduce using rule 43 (expression -> IF expression THEN expression .) ]
  ! MINUS           [ reduce using rule 43 (expression -> IF expression THEN expression .) ]
  ! TIMES           [ reduce using rule 43 (expression -> IF expression THEN expression .) ]
  ! DIVIDE          [ reduce using rule 43 (expression -> IF expression THEN expression .) ]
  ! LESS_THEN       [ reduce using rule 43 (expression -> IF expression THEN expression .) ]
  ! GREATER_THEN    [ reduce using rule 43 (expression -> IF expression THEN expression .) ]
  ! LESS_EQUALS     [ reduce using rule 43 (expression -> IF expression THEN expression .) ]
  ! GREATER_EQUALS  [ reduce using rule 43 (expression -> IF expression THEN expression .) ]
  ! EQUALS          [ reduce using rule 43 (expression -> IF expression THEN expression .) ]
  ! NOT_EQUALS      [ reduce using rule 43 (expression -> IF expression THEN expression .) ]
  ! AND             [ reduce using rule 43 (expression -> IF expression THEN expression .) ]
  ! NAND            [ reduce using rule 43 (expression -> IF expression THEN expression .) ]
  ! OR              [ reduce using rule 43 (expression -> IF expression THEN expression .) ]
  ! NOR             [ reduce using rule 43 (expression -> IF expression THEN expression .) ]
  ! XOR             [ reduce using rule 43 (expression -> IF expression THEN expression .) ]
  ! EQ              [ reduce using rule 43 (expression -> IF expression THEN expression .) ]
  ! NEQ             [ reduce using rule 43 (expression -> IF expression THEN expression .) ]
  ! IMPL            [ reduce using rule 43 (expression -> IF expression THEN expression .) ]
  ! LPAREN          [ reduce using rule 43 (expression -> IF expression THEN expression .) ]
  ! DOT             [ reduce using rule 43 (expression -> IF expression THEN expression .) ]
  ! ELSE            [ reduce using rule 43 (expression -> IF expression THEN expression .) ]

    dots                           shift and go to state 48

state 136

    (47) expression -> LOCK identifier_list IN expression .
    (14) expression -> expression . PLUS expression
    (15) expression -> expression . MINUS expression
    (16) expression -> expression . TIMES expression
    (17) expression -> expression . DIVIDE expression
    (18) expression -> expression . LESS_THEN expression
    (19) expression -> expression . GREATER_THEN expression
    (20) expression -> expression . LESS_EQUALS expression
    (21) expression -> expression . GREATER_EQUALS expression
    (22) expression -> expression . EQUALS expression
    (23) expression -> expression . NOT_EQUALS expression
    (24) expression -> expression . AND expression
    (25) expression -> expression . NAND expression
    (26) expression -> expression . OR expression
    (27) expression -> expression . NOR expression
    (28) expression -> expression . XOR expression
    (29) expression -> expression . EQ expression
    (30) expression -> expression . NEQ expression
    (31) expression -> expression . IMPL expression
    (56) expression -> expression . LPAREN expression_list RPAREN
    (57) expression -> expression . LPAREN RPAREN
    (63) expression -> expression . dots IDENTIFIER
    (58) dots -> . DOT
    (59) dots -> . dots DOT

    $end            reduce using rule 47 (expression -> LOCK identifier_list IN expression .)
    RPAREN          reduce using rule 47 (expression -> LOCK identifier_list IN expression .)
    COMMA           reduce using rule 47 (expression -> LOCK identifier_list IN expression .)
    RBRACKET        reduce using rule 47 (expression -> LOCK identifier_list IN expression .)
    END             reduce using rule 47 (expression -> LOCK identifier_list IN expression .)
    SEPARATOR       reduce using rule 47 (expression -> LOCK identifier_list IN expression .)
    DO              reduce using rule 47 (expression -> LOCK identifier_list IN expression .)
    THEN            reduce using rule 47 (expression -> LOCK identifier_list IN expression .)
    BEGIN           reduce using rule 47 (expression -> LOCK identifier_list IN expression .)
    ELSE            reduce using rule 47 (expression -> LOCK identifier_list IN expression .)
    IN              reduce using rule 47 (expression -> LOCK identifier_list IN expression .)
    PLUS            shift and go to state 29
    MINUS           shift and go to state 30
    TIMES           shift and go to state 31
    DIVIDE          shift and go to state 32
    LESS_THEN       shift and go to state 33
    GREATER_THEN    shift and go to state 34
    LESS_EQUALS     shift and go to state 35
    GREATER_EQUALS  shift and go to state 36
    EQUALS          shift and go to state 37
    NOT_EQUALS      shift and go to state 38
    AND             shift and go to state 39
    NAND            shift and go to state 40
    OR              shift and go to state 41
    NOR             shift and go to state 42
    XOR             shift and go to state 43
    EQ              shift and go to state 44
    NEQ             shift and go to state 45
    IMPL            shift and go to state 46
    LPAREN          shift and go to state 47
    DOT             shift and go to state 28

  ! PLUS            [ reduce using rule 47 (expression -> LOCK identifier_list IN expression .) ]
  ! MINUS           [ reduce using rule 47 (expression -> LOCK identifier_list IN expression .) ]
  ! TIMES           [ reduce using rule 47 (expression -> LOCK identifier_list IN expression .) ]
  ! DIVIDE          [ reduce using rule 47 (expression -> LOCK identifier_list IN expression .) ]
  ! LESS_THEN       [ reduce using rule 47 (expression -> LOCK identifier_list IN expression .) ]
  ! GREATER_THEN    [ reduce using rule 47 (expression -> LOCK identifier_list IN expression .) ]
  ! LESS_EQUALS     [ reduce using rule 47 (expression -> LOCK identifier_list IN expression .) ]
  ! GREATER_EQUALS  [ reduce using rule 47 (expression -> LOCK identifier_list IN expression .) ]
  ! EQUALS          [ reduce using rule 47 (expression -> LOCK identifier_list IN expression .) ]
  ! NOT_EQUALS      [ reduce using rule 47 (expression -> LOCK identifier_list IN expression .) ]
  ! AND             [ reduce using rule 47 (expression -> LOCK identifier_list IN expression .) ]
  ! NAND            [ reduce using rule 47 (expression -> LOCK identifier_list IN expression .) ]
  ! OR              [ reduce using rule 47 (expression -> LOCK identifier_list IN expression .) ]
  ! NOR             [ reduce using rule 47 (expression -> LOCK identifier_list IN expression .) ]
  ! XOR             [ reduce using rule 47 (expression -> LOCK identifier_list IN expression .) ]
  ! EQ              [ reduce using rule 47 (expression -> LOCK identifier_list IN expression .) ]
  ! NEQ             [ reduce using rule 47 (expression -> LOCK identifier_list IN expression .) ]
  ! IMPL            [ reduce using rule 47 (expression -> LOCK identifier_list IN expression .) ]
  ! LPAREN          [ reduce using rule 47 (expression -> LOCK identifier_list IN expression .) ]
  ! DOT             [ reduce using rule 47 (expression -> LOCK identifier_list IN expression .) ]

    dots                           shift and go to state 48

state 137

    (46) identifier_list -> IDENTIFIER COMMA identifier_list .

    IN              reduce using rule 46 (identifier_list -> IDENTIFIER COMMA identifier_list .)
    ARROW           reduce using rule 46 (identifier_list -> IDENTIFIER COMMA identifier_list .)
    RPAREN          reduce using rule 46 (identifier_list -> IDENTIFIER COMMA identifier_list .)


state 138

    (50) expression -> LET assign_list IN expression .
    (14) expression -> expression . PLUS expression
    (15) expression -> expression . MINUS expression
    (16) expression -> expression . TIMES expression
    (17) expression -> expression . DIVIDE expression
    (18) expression -> expression . LESS_THEN expression
    (19) expression -> expression . GREATER_THEN expression
    (20) expression -> expression . LESS_EQUALS expression
    (21) expression -> expression . GREATER_EQUALS expression
    (22) expression -> expression . EQUALS expression
    (23) expression -> expression . NOT_EQUALS expression
    (24) expression -> expression . AND expression
    (25) expression -> expression . NAND expression
    (26) expression -> expression . OR expression
    (27) expression -> expression . NOR expression
    (28) expression -> expression . XOR expression
    (29) expression -> expression . EQ expression
    (30) expression -> expression . NEQ expression
    (31) expression -> expression . IMPL expression
    (56) expression -> expression . LPAREN expression_list RPAREN
    (57) expression -> expression . LPAREN RPAREN
    (63) expression -> expression . dots IDENTIFIER
    (58) dots -> . DOT
    (59) dots -> . dots DOT

    $end            reduce using rule 50 (expression -> LET assign_list IN expression .)
    RPAREN          reduce using rule 50 (expression -> LET assign_list IN expression .)
    COMMA           reduce using rule 50 (expression -> LET assign_list IN expression .)
    RBRACKET        reduce using rule 50 (expression -> LET assign_list IN expression .)
    END             reduce using rule 50 (expression -> LET assign_list IN expression .)
    SEPARATOR       reduce using rule 50 (expression -> LET assign_list IN expression .)
    DO              reduce using rule 50 (expression -> LET assign_list IN expression .)
    THEN            reduce using rule 50 (expression -> LET assign_list IN expression .)
    BEGIN           reduce using rule 50 (expression -> LET assign_list IN expression .)
    ELSE            reduce using rule 50 (expression -> LET assign_list IN expression .)
    IN              reduce using rule 50 (expression -> LET assign_list IN expression .)
    PLUS            shift and go to state 29
    MINUS           shift and go to state 30
    TIMES           shift and go to state 31
    DIVIDE          shift and go to state 32
    LESS_THEN       shift and go to state 33
    GREATER_THEN    shift and go to state 34
    LESS_EQUALS     shift and go to state 35
    GREATER_EQUALS  shift and go to state 36
    EQUALS          shift and go to state 37
    NOT_EQUALS      shift and go to state 38
    AND             shift and go to state 39
    NAND            shift and go to state 40
    OR              shift and go to state 41
    NOR             shift and go to state 42
    XOR             shift and go to state 43
    EQ              shift and go to state 44
    NEQ             shift and go to state 45
    IMPL            shift and go to state 46
    LPAREN          shift and go to state 47
    DOT             shift and go to state 28

  ! PLUS            [ reduce using rule 50 (expression -> LET assign_list IN expression .) ]
  ! MINUS           [ reduce using rule 50 (expression -> LET assign_list IN expression .) ]
  ! TIMES           [ reduce using rule 50 (expression -> LET assign_list IN expression .) ]
  ! DIVIDE          [ reduce using rule 50 (expression -> LET assign_list IN expression .) ]
  ! LESS_THEN       [ reduce using rule 50 (expression -> LET assign_list IN expression .) ]
  ! GREATER_THEN    [ reduce using rule 50 (expression -> LET assign_list IN expression .) ]
  ! LESS_EQUALS     [ reduce using rule 50 (expression -> LET assign_list IN expression .) ]
  ! GREATER_EQUALS  [ reduce using rule 50 (expression -> LET assign_list IN expression .) ]
  ! EQUALS          [ reduce using rule 50 (expression -> LET assign_list IN expression .) ]
  ! NOT_EQUALS      [ reduce using rule 50 (expression -> LET assign_list IN expression .) ]
  ! AND             [ reduce using rule 50 (expression -> LET assign_list IN expression .) ]
  ! NAND            [ reduce using rule 50 (expression -> LET assign_list IN expression .) ]
  ! OR              [ reduce using rule 50 (expression -> LET assign_list IN expression .) ]
  ! NOR             [ reduce using rule 50 (expression -> LET assign_list IN expression .) ]
  ! XOR             [ reduce using rule 50 (expression -> LET assign_list IN expression .) ]
  ! EQ              [ reduce using rule 50 (expression -> LET assign_list IN expression .) ]
  ! NEQ             [ reduce using rule 50 (expression -> LET assign_list IN expression .) ]
  ! IMPL            [ reduce using rule 50 (expression -> LET assign_list IN expression .) ]
  ! LPAREN          [ reduce using rule 50 (expression -> LET assign_list IN expression .) ]
  ! DOT             [ reduce using rule 50 (expression -> LET assign_list IN expression .) ]

    dots                           shift and go to state 48

state 139

    (49) assign_list -> assign_list COMMA IDENTIFIER . ASSIGN expression

    ASSIGN          shift and go to state 152


state 140

    (48) assign_list -> IDENTIFIER ASSIGN expression .
    (14) expression -> expression . PLUS expression
    (15) expression -> expression . MINUS expression
    (16) expression -> expression . TIMES expression
    (17) expression -> expression . DIVIDE expression
    (18) expression -> expression . LESS_THEN expression
    (19) expression -> expression . GREATER_THEN expression
    (20) expression -> expression . LESS_EQUALS expression
    (21) expression -> expression . GREATER_EQUALS expression
    (22) expression -> expression . EQUALS expression
    (23) expression -> expression . NOT_EQUALS expression
    (24) expression -> expression . AND expression
    (25) expression -> expression . NAND expression
    (26) expression -> expression . OR expression
    (27) expression -> expression . NOR expression
    (28) expression -> expression . XOR expression
    (29) expression -> expression . EQ expression
    (30) expression -> expression . NEQ expression
    (31) expression -> expression . IMPL expression
    (56) expression -> expression . LPAREN expression_list RPAREN
    (57) expression -> expression . LPAREN RPAREN
    (63) expression -> expression . dots IDENTIFIER
    (58) dots -> . DOT
    (59) dots -> . dots DOT

    IN              reduce using rule 48 (assign_list -> IDENTIFIER ASSIGN expression .)
    COMMA           reduce using rule 48 (assign_list -> IDENTIFIER ASSIGN expression .)
    PLUS            shift and go to state 29
    MINUS           shift and go to state 30
    TIMES           shift and go to state 31
    DIVIDE          shift and go to state 32
    LESS_THEN       shift and go to state 33
    GREATER_THEN    shift and go to state 34
    LESS_EQUALS     shift and go to state 35
    GREATER_EQUALS  shift and go to state 36
    EQUALS          shift and go to state 37
    NOT_EQUALS      shift and go to state 38
    AND             shift and go to state 39
    NAND            shift and go to state 40
    OR              shift and go to state 41
    NOR             shift and go to state 42
    XOR             shift and go to state 43
    EQ              shift and go to state 44
    NEQ             shift and go to state 45
    IMPL            shift and go to state 46
    LPAREN          shift and go to state 47
    DOT             shift and go to state 28

    dots                           shift and go to state 48

state 141

    (51) expression -> LETREC assign_list IN expression .
    (14) expression -> expression . PLUS expression
    (15) expression -> expression . MINUS expression
    (16) expression -> expression . TIMES expression
    (17) expression -> expression . DIVIDE expression
    (18) expression -> expression . LESS_THEN expression
    (19) expression -> expression . GREATER_THEN expression
    (20) expression -> expression . LESS_EQUALS expression
    (21) expression -> expression . GREATER_EQUALS expression
    (22) expression -> expression . EQUALS expression
    (23) expression -> expression . NOT_EQUALS expression
    (24) expression -> expression . AND expression
    (25) expression -> expression . NAND expression
    (26) expression -> expression . OR expression
    (27) expression -> expression . NOR expression
    (28) expression -> expression . XOR expression
    (29) expression -> expression . EQ expression
    (30) expression -> expression . NEQ expression
    (31) expression -> expression . IMPL expression
    (56) expression -> expression . LPAREN expression_list RPAREN
    (57) expression -> expression . LPAREN RPAREN
    (63) expression -> expression . dots IDENTIFIER
    (58) dots -> . DOT
    (59) dots -> . dots DOT

    $end            reduce using rule 51 (expression -> LETREC assign_list IN expression .)
    RPAREN          reduce using rule 51 (expression -> LETREC assign_list IN expression .)
    COMMA           reduce using rule 51 (expression -> LETREC assign_list IN expression .)
    RBRACKET        reduce using rule 51 (expression -> LETREC assign_list IN expression .)
    END             reduce using rule 51 (expression -> LETREC assign_list IN expression .)
    SEPARATOR       reduce using rule 51 (expression -> LETREC assign_list IN expression .)
    DO              reduce using rule 51 (expression -> LETREC assign_list IN expression .)
    THEN            reduce using rule 51 (expression -> LETREC assign_list IN expression .)
    BEGIN           reduce using rule 51 (expression -> LETREC assign_list IN expression .)
    ELSE            reduce using rule 51 (expression -> LETREC assign_list IN expression .)
    IN              reduce using rule 51 (expression -> LETREC assign_list IN expression .)
    PLUS            shift and go to state 29
    MINUS           shift and go to state 30
    TIMES           shift and go to state 31
    DIVIDE          shift and go to state 32
    LESS_THEN       shift and go to state 33
    GREATER_THEN    shift and go to state 34
    LESS_EQUALS     shift and go to state 35
    GREATER_EQUALS  shift and go to state 36
    EQUALS          shift and go to state 37
    NOT_EQUALS      shift and go to state 38
    AND             shift and go to state 39
    NAND            shift and go to state 40
    OR              shift and go to state 41
    NOR             shift and go to state 42
    XOR             shift and go to state 43
    EQ              shift and go to state 44
    NEQ             shift and go to state 45
    IMPL            shift and go to state 46
    LPAREN          shift and go to state 47
    DOT             shift and go to state 28

  ! PLUS            [ reduce using rule 51 (expression -> LETREC assign_list IN expression .) ]
  ! MINUS           [ reduce using rule 51 (expression -> LETREC assign_list IN expression .) ]
  ! TIMES           [ reduce using rule 51 (expression -> LETREC assign_list IN expression .) ]
  ! DIVIDE          [ reduce using rule 51 (expression -> LETREC assign_list IN expression .) ]
  ! LESS_THEN       [ reduce using rule 51 (expression -> LETREC assign_list IN expression .) ]
  ! GREATER_THEN    [ reduce using rule 51 (expression -> LETREC assign_list IN expression .) ]
  ! LESS_EQUALS     [ reduce using rule 51 (expression -> LETREC assign_list IN expression .) ]
  ! GREATER_EQUALS  [ reduce using rule 51 (expression -> LETREC assign_list IN expression .) ]
  ! EQUALS          [ reduce using rule 51 (expression -> LETREC assign_list IN expression .) ]
  ! NOT_EQUALS      [ reduce using rule 51 (expression -> LETREC assign_list IN expression .) ]
  ! AND             [ reduce using rule 51 (expression -> LETREC assign_list IN expression .) ]
  ! NAND            [ reduce using rule 51 (expression -> LETREC assign_list IN expression .) ]
  ! OR              [ reduce using rule 51 (expression -> LETREC assign_list IN expression .) ]
  ! NOR             [ reduce using rule 51 (expression -> LETREC assign_list IN expression .) ]
  ! XOR             [ reduce using rule 51 (expression -> LETREC assign_list IN expression .) ]
  ! EQ              [ reduce using rule 51 (expression -> LETREC assign_list IN expression .) ]
  ! NEQ             [ reduce using rule 51 (expression -> LETREC assign_list IN expression .) ]
  ! IMPL            [ reduce using rule 51 (expression -> LETREC assign_list IN expression .) ]
  ! LPAREN          [ reduce using rule 51 (expression -> LETREC assign_list IN expression .) ]
  ! DOT             [ reduce using rule 51 (expression -> LETREC assign_list IN expression .) ]

    dots                           shift and go to state 48

state 142

    (54) expression -> LAMBDA identifier_list ARROW expression .
    (14) expression -> expression . PLUS expression
    (15) expression -> expression . MINUS expression
    (16) expression -> expression . TIMES expression
    (17) expression -> expression . DIVIDE expression
    (18) expression -> expression . LESS_THEN expression
    (19) expression -> expression . GREATER_THEN expression
    (20) expression -> expression . LESS_EQUALS expression
    (21) expression -> expression . GREATER_EQUALS expression
    (22) expression -> expression . EQUALS expression
    (23) expression -> expression . NOT_EQUALS expression
    (24) expression -> expression . AND expression
    (25) expression -> expression . NAND expression
    (26) expression -> expression . OR expression
    (27) expression -> expression . NOR expression
    (28) expression -> expression . XOR expression
    (29) expression -> expression . EQ expression
    (30) expression -> expression . NEQ expression
    (31) expression -> expression . IMPL expression
    (56) expression -> expression . LPAREN expression_list RPAREN
    (57) expression -> expression . LPAREN RPAREN
    (63) expression -> expression . dots IDENTIFIER
    (58) dots -> . DOT
    (59) dots -> . dots DOT

    $end            reduce using rule 54 (expression -> LAMBDA identifier_list ARROW expression .)
    RPAREN          reduce using rule 54 (expression -> LAMBDA identifier_list ARROW expression .)
    COMMA           reduce using rule 54 (expression -> LAMBDA identifier_list ARROW expression .)
    RBRACKET        reduce using rule 54 (expression -> LAMBDA identifier_list ARROW expression .)
    END             reduce using rule 54 (expression -> LAMBDA identifier_list ARROW expression .)
    SEPARATOR       reduce using rule 54 (expression -> LAMBDA identifier_list ARROW expression .)
    DO              reduce using rule 54 (expression -> LAMBDA identifier_list ARROW expression .)
    THEN            reduce using rule 54 (expression -> LAMBDA identifier_list ARROW expression .)
    BEGIN           reduce using rule 54 (expression -> LAMBDA identifier_list ARROW expression .)
    ELSE            reduce using rule 54 (expression -> LAMBDA identifier_list ARROW expression .)
    IN              reduce using rule 54 (expression -> LAMBDA identifier_list ARROW expression .)
    PLUS            shift and go to state 29
    MINUS           shift and go to state 30
    TIMES           shift and go to state 31
    DIVIDE          shift and go to state 32
    LESS_THEN       shift and go to state 33
    GREATER_THEN    shift and go to state 34
    LESS_EQUALS     shift and go to state 35
    GREATER_EQUALS  shift and go to state 36
    EQUALS          shift and go to state 37
    NOT_EQUALS      shift and go to state 38
    AND             shift and go to state 39
    NAND            shift and go to state 40
    OR              shift and go to state 41
    NOR             shift and go to state 42
    XOR             shift and go to state 43
    EQ              shift and go to state 44
    NEQ             shift and go to state 45
    IMPL            shift and go to state 46
    LPAREN          shift and go to state 47
    DOT             shift and go to state 28

  ! PLUS            [ reduce using rule 54 (expression -> LAMBDA identifier_list ARROW expression .) ]
  ! MINUS           [ reduce using rule 54 (expression -> LAMBDA identifier_list ARROW expression .) ]
  ! TIMES           [ reduce using rule 54 (expression -> LAMBDA identifier_list ARROW expression .) ]
  ! DIVIDE          [ reduce using rule 54 (expression -> LAMBDA identifier_list ARROW expression .) ]
  ! LESS_THEN       [ reduce using rule 54 (expression -> LAMBDA identifier_list ARROW expression .) ]
  ! GREATER_THEN    [ reduce using rule 54 (expression -> LAMBDA identifier_list ARROW expression .) ]
  ! LESS_EQUALS     [ reduce using rule 54 (expression -> LAMBDA identifier_list ARROW expression .) ]
  ! GREATER_EQUALS  [ reduce using rule 54 (expression -> LAMBDA identifier_list ARROW expression .) ]
  ! EQUALS          [ reduce using rule 54 (expression -> LAMBDA identifier_list ARROW expression .) ]
  ! NOT_EQUALS      [ reduce using rule 54 (expression -> LAMBDA identifier_list ARROW expression .) ]
  ! AND             [ reduce using rule 54 (expression -> LAMBDA identifier_list ARROW expression .) ]
  ! NAND            [ reduce using rule 54 (expression -> LAMBDA identifier_list ARROW expression .) ]
  ! OR              [ reduce using rule 54 (expression -> LAMBDA identifier_list ARROW expression .) ]
  ! NOR             [ reduce using rule 54 (expression -> LAMBDA identifier_list ARROW expression .) ]
  ! XOR             [ reduce using rule 54 (expression -> LAMBDA identifier_list ARROW expression .) ]
  ! EQ              [ reduce using rule 54 (expression -> LAMBDA identifier_list ARROW expression .) ]
  ! NEQ             [ reduce using rule 54 (expression -> LAMBDA identifier_list ARROW expression .) ]
  ! IMPL            [ reduce using rule 54 (expression -> LAMBDA identifier_list ARROW expression .) ]
  ! LPAREN          [ reduce using rule 54 (expression -> LAMBDA identifier_list ARROW expression .) ]
  ! DOT             [ reduce using rule 54 (expression -> LAMBDA identifier_list ARROW expression .) ]

    dots                           shift and go to state 48

state 143

    (62) expression -> STRUCT BEGIN struct_body END .

    PLUS            reduce using rule 62 (expression -> STRUCT BEGIN struct_body END .)
    MINUS           reduce using rule 62 (expression -> STRUCT BEGIN struct_body END .)
    TIMES           reduce using rule 62 (expression -> STRUCT BEGIN struct_body END .)
    DIVIDE          reduce using rule 62 (expression -> STRUCT BEGIN struct_body END .)
    LESS_THEN       reduce using rule 62 (expression -> STRUCT BEGIN struct_body END .)
    GREATER_THEN    reduce using rule 62 (expression -> STRUCT BEGIN struct_body END .)
    LESS_EQUALS     reduce using rule 62 (expression -> STRUCT BEGIN struct_body END .)
    GREATER_EQUALS  reduce using rule 62 (expression -> STRUCT BEGIN struct_body END .)
    EQUALS          reduce using rule 62 (expression -> STRUCT BEGIN struct_body END .)
    NOT_EQUALS      reduce using rule 62 (expression -> STRUCT BEGIN struct_body END .)
    AND             reduce using rule 62 (expression -> STRUCT BEGIN struct_body END .)
    NAND            reduce using rule 62 (expression -> STRUCT BEGIN struct_body END .)
    OR              reduce using rule 62 (expression -> STRUCT BEGIN struct_body END .)
    NOR             reduce using rule 62 (expression -> STRUCT BEGIN struct_body END .)
    XOR             reduce using rule 62 (expression -> STRUCT BEGIN struct_body END .)
    EQ              reduce using rule 62 (expression -> STRUCT BEGIN struct_body END .)
    NEQ             reduce using rule 62 (expression -> STRUCT BEGIN struct_body END .)
    IMPL            reduce using rule 62 (expression -> STRUCT BEGIN struct_body END .)
    LPAREN          reduce using rule 62 (expression -> STRUCT BEGIN struct_body END .)
    DOT             reduce using rule 62 (expression -> STRUCT BEGIN struct_body END .)
    $end            reduce using rule 62 (expression -> STRUCT BEGIN struct_body END .)
    RPAREN          reduce using rule 62 (expression -> STRUCT BEGIN struct_body END .)
    COMMA           reduce using rule 62 (expression -> STRUCT BEGIN struct_body END .)
    RBRACKET        reduce using rule 62 (expression -> STRUCT BEGIN struct_body END .)
    END             reduce using rule 62 (expression -> STRUCT BEGIN struct_body END .)
    SEPARATOR       reduce using rule 62 (expression -> STRUCT BEGIN struct_body END .)
    DO              reduce using rule 62 (expression -> STRUCT BEGIN struct_body END .)
    THEN            reduce using rule 62 (expression -> STRUCT BEGIN struct_body END .)
    BEGIN           reduce using rule 62 (expression -> STRUCT BEGIN struct_body END .)
    ELSE            reduce using rule 62 (expression -> STRUCT BEGIN struct_body END .)
    IN              reduce using rule 62 (expression -> STRUCT BEGIN struct_body END .)


state 144

    (61) struct_body -> struct_body SEPARATOR . IDENTIFIER ASSIGN expression

    IDENTIFIER      shift and go to state 153


state 145

    (60) struct_body -> IDENTIFIER ASSIGN . expression
    (1) expression -> . NUMBER
    (2) expression -> . FLOAT
    (3) expression -> . CHAR
    (4) expression -> . STRING
    (5) expression -> . LIST LPAREN expression_list RPAREN
    (6) expression -> . LIST LPAREN RPAREN
    (7) expression -> . LBRACKET expression_list RBRACKET
    (8) expression -> . ARRAY LPAREN expression_list RPAREN
    (9) expression -> . LBRACKET RBRACKET
    (10) expression -> . ARRAY LPAREN RPAREN
    (11) expression -> . IDENTIFIER LBRACKET expression RBRACKET
    (12) expression -> . MINUS expression
    (13) expression -> . NOT expression
    (14) expression -> . expression PLUS expression
    (15) expression -> . expression MINUS expression
    (16) expression -> . expression TIMES expression
    (17) expression -> . expression DIVIDE expression
    (18) expression -> . expression LESS_THEN expression
    (19) expression -> . expression GREATER_THEN expression
    (20) expression -> . expression LESS_EQUALS expression
    (21) expression -> . expression GREATER_EQUALS expression
    (22) expression -> . expression EQUALS expression
    (23) expression -> . expression NOT_EQUALS expression
    (24) expression -> . expression AND expression
    (25) expression -> . expression NAND expression
    (26) expression -> . expression OR expression
    (27) expression -> . expression NOR expression
    (28) expression -> . expression XOR expression
    (29) expression -> . expression EQ expression
    (30) expression -> . expression NEQ expression
    (31) expression -> . expression IMPL expression
    (32) expression -> . LPAREN expression RPAREN
    (33) expression -> . TRUE
    (34) expression -> . FALSE
    (35) expression -> . IDENTIFIER
    (36) expression -> . IDENTIFIER ASSIGN expression
    (37) expression -> . BEGIN body END
    (40) expression -> . LOOP expression DO expression
    (41) expression -> . FOR expression SEPARATOR expression SEPARATOR expression DO expression
    (42) expression -> . WHILE expression DO expression
    (43) expression -> . IF expression THEN expression
    (44) expression -> . IF expression THEN expression ELSE expression
    (47) expression -> . LOCK identifier_list IN expression
    (50) expression -> . LET assign_list IN expression
    (51) expression -> . LETREC assign_list IN expression
    (54) expression -> . LAMBDA identifier_list ARROW expression
    (55) expression -> . LAMBDA ARROW expression
    (56) expression -> . expression LPAREN expression_list RPAREN
    (57) expression -> . expression LPAREN RPAREN
    (62) expression -> . STRUCT BEGIN struct_body END
    (63) expression -> . expression dots IDENTIFIER
    (64) expression -> . dots IDENTIFIER
    (65) expression -> . EXTEND expression BEGIN struct_body END
    (66) expression -> . PROC LPAREN identifier_list RPAREN identifier_list ARROW expression
    (67) expression -> . PROC LPAREN RPAREN identifier_list ARROW expression
    (68) expression -> . PROC LPAREN identifier_list RPAREN ARROW expression
    (69) expression -> . PROC LPAREN RPAREN ARROW expression
    (58) dots -> . DOT
    (59) dots -> . dots DOT

    NUMBER          shift and go to state 2
    FLOAT           shift and go to state 3
    CHAR            shift and go to state 4
    STRING          shift and go to state 5
    LIST            shift and go to state 6
    LBRACKET        shift and go to state 8
    ARRAY           shift and go to state 9
    IDENTIFIER      shift and go to state 10
    MINUS           shift and go to state 11
    NOT             shift and go to state 12
    LPAREN          shift and go to state 7
    TRUE            shift and go to state 13
    FALSE           shift and go to state 14
    BEGIN           shift and go to state 15
    LOOP            shift and go to state 16
    FOR             shift and go to state 17
    WHILE           shift and go to state 18
    IF              shift and go to state 19
    LOCK            shift and go to state 20
    LET             shift and go to state 21
    LETREC          shift and go to state 22
    LAMBDA          shift and go to state 23
    STRUCT          shift and go to state 24
    EXTEND          shift and go to state 26
    PROC            shift and go to state 27
    DOT             shift and go to state 28

    expression                     shift and go to state 154
    dots                           shift and go to state 25

state 146

    (65) expression -> EXTEND expression BEGIN struct_body . END
    (61) struct_body -> struct_body . SEPARATOR IDENTIFIER ASSIGN expression

    END             shift and go to state 155
    SEPARATOR       shift and go to state 144


state 147

    (66) expression -> PROC LPAREN identifier_list RPAREN . identifier_list ARROW expression
    (68) expression -> PROC LPAREN identifier_list RPAREN . ARROW expression
    (45) identifier_list -> . IDENTIFIER
    (46) identifier_list -> . IDENTIFIER COMMA identifier_list

    ARROW           shift and go to state 157
    IDENTIFIER      shift and go to state 66

    identifier_list                shift and go to state 156

state 148

    (67) expression -> PROC LPAREN RPAREN identifier_list . ARROW expression

    ARROW           shift and go to state 158


state 149

    (69) expression -> PROC LPAREN RPAREN ARROW . expression
    (1) expression -> . NUMBER
    (2) expression -> . FLOAT
    (3) expression -> . CHAR
    (4) expression -> . STRING
    (5) expression -> . LIST LPAREN expression_list RPAREN
    (6) expression -> . LIST LPAREN RPAREN
    (7) expression -> . LBRACKET expression_list RBRACKET
    (8) expression -> . ARRAY LPAREN expression_list RPAREN
    (9) expression -> . LBRACKET RBRACKET
    (10) expression -> . ARRAY LPAREN RPAREN
    (11) expression -> . IDENTIFIER LBRACKET expression RBRACKET
    (12) expression -> . MINUS expression
    (13) expression -> . NOT expression
    (14) expression -> . expression PLUS expression
    (15) expression -> . expression MINUS expression
    (16) expression -> . expression TIMES expression
    (17) expression -> . expression DIVIDE expression
    (18) expression -> . expression LESS_THEN expression
    (19) expression -> . expression GREATER_THEN expression
    (20) expression -> . expression LESS_EQUALS expression
    (21) expression -> . expression GREATER_EQUALS expression
    (22) expression -> . expression EQUALS expression
    (23) expression -> . expression NOT_EQUALS expression
    (24) expression -> . expression AND expression
    (25) expression -> . expression NAND expression
    (26) expression -> . expression OR expression
    (27) expression -> . expression NOR expression
    (28) expression -> . expression XOR expression
    (29) expression -> . expression EQ expression
    (30) expression -> . expression NEQ expression
    (31) expression -> . expression IMPL expression
    (32) expression -> . LPAREN expression RPAREN
    (33) expression -> . TRUE
    (34) expression -> . FALSE
    (35) expression -> . IDENTIFIER
    (36) expression -> . IDENTIFIER ASSIGN expression
    (37) expression -> . BEGIN body END
    (40) expression -> . LOOP expression DO expression
    (41) expression -> . FOR expression SEPARATOR expression SEPARATOR expression DO expression
    (42) expression -> . WHILE expression DO expression
    (43) expression -> . IF expression THEN expression
    (44) expression -> . IF expression THEN expression ELSE expression
    (47) expression -> . LOCK identifier_list IN expression
    (50) expression -> . LET assign_list IN expression
    (51) expression -> . LETREC assign_list IN expression
    (54) expression -> . LAMBDA identifier_list ARROW expression
    (55) expression -> . LAMBDA ARROW expression
    (56) expression -> . expression LPAREN expression_list RPAREN
    (57) expression -> . expression LPAREN RPAREN
    (62) expression -> . STRUCT BEGIN struct_body END
    (63) expression -> . expression dots IDENTIFIER
    (64) expression -> . dots IDENTIFIER
    (65) expression -> . EXTEND expression BEGIN struct_body END
    (66) expression -> . PROC LPAREN identifier_list RPAREN identifier_list ARROW expression
    (67) expression -> . PROC LPAREN RPAREN identifier_list ARROW expression
    (68) expression -> . PROC LPAREN identifier_list RPAREN ARROW expression
    (69) expression -> . PROC LPAREN RPAREN ARROW expression
    (58) dots -> . DOT
    (59) dots -> . dots DOT

    NUMBER          shift and go to state 2
    FLOAT           shift and go to state 3
    CHAR            shift and go to state 4
    STRING          shift and go to state 5
    LIST            shift and go to state 6
    LBRACKET        shift and go to state 8
    ARRAY           shift and go to state 9
    IDENTIFIER      shift and go to state 10
    MINUS           shift and go to state 11
    NOT             shift and go to state 12
    LPAREN          shift and go to state 7
    TRUE            shift and go to state 13
    FALSE           shift and go to state 14
    BEGIN           shift and go to state 15
    LOOP            shift and go to state 16
    FOR             shift and go to state 17
    WHILE           shift and go to state 18
    IF              shift and go to state 19
    LOCK            shift and go to state 20
    LET             shift and go to state 21
    LETREC          shift and go to state 22
    LAMBDA          shift and go to state 23
    STRUCT          shift and go to state 24
    EXTEND          shift and go to state 26
    PROC            shift and go to state 27
    DOT             shift and go to state 28

    expression                     shift and go to state 159
    dots                           shift and go to state 25

state 150

    (41) expression -> FOR expression SEPARATOR expression SEPARATOR . expression DO expression
    (1) expression -> . NUMBER
    (2) expression -> . FLOAT
    (3) expression -> . CHAR
    (4) expression -> . STRING
    (5) expression -> . LIST LPAREN expression_list RPAREN
    (6) expression -> . LIST LPAREN RPAREN
    (7) expression -> . LBRACKET expression_list RBRACKET
    (8) expression -> . ARRAY LPAREN expression_list RPAREN
    (9) expression -> . LBRACKET RBRACKET
    (10) expression -> . ARRAY LPAREN RPAREN
    (11) expression -> . IDENTIFIER LBRACKET expression RBRACKET
    (12) expression -> . MINUS expression
    (13) expression -> . NOT expression
    (14) expression -> . expression PLUS expression
    (15) expression -> . expression MINUS expression
    (16) expression -> . expression TIMES expression
    (17) expression -> . expression DIVIDE expression
    (18) expression -> . expression LESS_THEN expression
    (19) expression -> . expression GREATER_THEN expression
    (20) expression -> . expression LESS_EQUALS expression
    (21) expression -> . expression GREATER_EQUALS expression
    (22) expression -> . expression EQUALS expression
    (23) expression -> . expression NOT_EQUALS expression
    (24) expression -> . expression AND expression
    (25) expression -> . expression NAND expression
    (26) expression -> . expression OR expression
    (27) expression -> . expression NOR expression
    (28) expression -> . expression XOR expression
    (29) expression -> . expression EQ expression
    (30) expression -> . expression NEQ expression
    (31) expression -> . expression IMPL expression
    (32) expression -> . LPAREN expression RPAREN
    (33) expression -> . TRUE
    (34) expression -> . FALSE
    (35) expression -> . IDENTIFIER
    (36) expression -> . IDENTIFIER ASSIGN expression
    (37) expression -> . BEGIN body END
    (40) expression -> . LOOP expression DO expression
    (41) expression -> . FOR expression SEPARATOR expression SEPARATOR expression DO expression
    (42) expression -> . WHILE expression DO expression
    (43) expression -> . IF expression THEN expression
    (44) expression -> . IF expression THEN expression ELSE expression
    (47) expression -> . LOCK identifier_list IN expression
    (50) expression -> . LET assign_list IN expression
    (51) expression -> . LETREC assign_list IN expression
    (54) expression -> . LAMBDA identifier_list ARROW expression
    (55) expression -> . LAMBDA ARROW expression
    (56) expression -> . expression LPAREN expression_list RPAREN
    (57) expression -> . expression LPAREN RPAREN
    (62) expression -> . STRUCT BEGIN struct_body END
    (63) expression -> . expression dots IDENTIFIER
    (64) expression -> . dots IDENTIFIER
    (65) expression -> . EXTEND expression BEGIN struct_body END
    (66) expression -> . PROC LPAREN identifier_list RPAREN identifier_list ARROW expression
    (67) expression -> . PROC LPAREN RPAREN identifier_list ARROW expression
    (68) expression -> . PROC LPAREN identifier_list RPAREN ARROW expression
    (69) expression -> . PROC LPAREN RPAREN ARROW expression
    (58) dots -> . DOT
    (59) dots -> . dots DOT

    NUMBER          shift and go to state 2
    FLOAT           shift and go to state 3
    CHAR            shift and go to state 4
    STRING          shift and go to state 5
    LIST            shift and go to state 6
    LBRACKET        shift and go to state 8
    ARRAY           shift and go to state 9
    IDENTIFIER      shift and go to state 10
    MINUS           shift and go to state 11
    NOT             shift and go to state 12
    LPAREN          shift and go to state 7
    TRUE            shift and go to state 13
    FALSE           shift and go to state 14
    BEGIN           shift and go to state 15
    LOOP            shift and go to state 16
    FOR             shift and go to state 17
    WHILE           shift and go to state 18
    IF              shift and go to state 19
    LOCK            shift and go to state 20
    LET             shift and go to state 21
    LETREC          shift and go to state 22
    LAMBDA          shift and go to state 23
    STRUCT          shift and go to state 24
    EXTEND          shift and go to state 26
    PROC            shift and go to state 27
    DOT             shift and go to state 28

    expression                     shift and go to state 160
    dots                           shift and go to state 25

state 151

    (44) expression -> IF expression THEN expression ELSE . expression
    (1) expression -> . NUMBER
    (2) expression -> . FLOAT
    (3) expression -> . CHAR
    (4) expression -> . STRING
    (5) expression -> . LIST LPAREN expression_list RPAREN
    (6) expression -> . LIST LPAREN RPAREN
    (7) expression -> . LBRACKET expression_list RBRACKET
    (8) expression -> . ARRAY LPAREN expression_list RPAREN
    (9) expression -> . LBRACKET RBRACKET
    (10) expression -> . ARRAY LPAREN RPAREN
    (11) expression -> . IDENTIFIER LBRACKET expression RBRACKET
    (12) expression -> . MINUS expression
    (13) expression -> . NOT expression
    (14) expression -> . expression PLUS expression
    (15) expression -> . expression MINUS expression
    (16) expression -> . expression TIMES expression
    (17) expression -> . expression DIVIDE expression
    (18) expression -> . expression LESS_THEN expression
    (19) expression -> . expression GREATER_THEN expression
    (20) expression -> . expression LESS_EQUALS expression
    (21) expression -> . expression GREATER_EQUALS expression
    (22) expression -> . expression EQUALS expression
    (23) expression -> . expression NOT_EQUALS expression
    (24) expression -> . expression AND expression
    (25) expression -> . expression NAND expression
    (26) expression -> . expression OR expression
    (27) expression -> . expression NOR expression
    (28) expression -> . expression XOR expression
    (29) expression -> . expression EQ expression
    (30) expression -> . expression NEQ expression
    (31) expression -> . expression IMPL expression
    (32) expression -> . LPAREN expression RPAREN
    (33) expression -> . TRUE
    (34) expression -> . FALSE
    (35) expression -> . IDENTIFIER
    (36) expression -> . IDENTIFIER ASSIGN expression
    (37) expression -> . BEGIN body END
    (40) expression -> . LOOP expression DO expression
    (41) expression -> . FOR expression SEPARATOR expression SEPARATOR expression DO expression
    (42) expression -> . WHILE expression DO expression
    (43) expression -> . IF expression THEN expression
    (44) expression -> . IF expression THEN expression ELSE expression
    (47) expression -> . LOCK identifier_list IN expression
    (50) expression -> . LET assign_list IN expression
    (51) expression -> . LETREC assign_list IN expression
    (54) expression -> . LAMBDA identifier_list ARROW expression
    (55) expression -> . LAMBDA ARROW expression
    (56) expression -> . expression LPAREN expression_list RPAREN
    (57) expression -> . expression LPAREN RPAREN
    (62) expression -> . STRUCT BEGIN struct_body END
    (63) expression -> . expression dots IDENTIFIER
    (64) expression -> . dots IDENTIFIER
    (65) expression -> . EXTEND expression BEGIN struct_body END
    (66) expression -> . PROC LPAREN identifier_list RPAREN identifier_list ARROW expression
    (67) expression -> . PROC LPAREN RPAREN identifier_list ARROW expression
    (68) expression -> . PROC LPAREN identifier_list RPAREN ARROW expression
    (69) expression -> . PROC LPAREN RPAREN ARROW expression
    (58) dots -> . DOT
    (59) dots -> . dots DOT

    NUMBER          shift and go to state 2
    FLOAT           shift and go to state 3
    CHAR            shift and go to state 4
    STRING          shift and go to state 5
    LIST            shift and go to state 6
    LBRACKET        shift and go to state 8
    ARRAY           shift and go to state 9
    IDENTIFIER      shift and go to state 10
    MINUS           shift and go to state 11
    NOT             shift and go to state 12
    LPAREN          shift and go to state 7
    TRUE            shift and go to state 13
    FALSE           shift and go to state 14
    BEGIN           shift and go to state 15
    LOOP            shift and go to state 16
    FOR             shift and go to state 17
    WHILE           shift and go to state 18
    IF              shift and go to state 19
    LOCK            shift and go to state 20
    LET             shift and go to state 21
    LETREC          shift and go to state 22
    LAMBDA          shift and go to state 23
    STRUCT          shift and go to state 24
    EXTEND          shift and go to state 26
    PROC            shift and go to state 27
    DOT             shift and go to state 28

    expression                     shift and go to state 161
    dots                           shift and go to state 25

state 152

    (49) assign_list -> assign_list COMMA IDENTIFIER ASSIGN . expression
    (1) expression -> . NUMBER
    (2) expression -> . FLOAT
    (3) expression -> . CHAR
    (4) expression -> . STRING
    (5) expression -> . LIST LPAREN expression_list RPAREN
    (6) expression -> . LIST LPAREN RPAREN
    (7) expression -> . LBRACKET expression_list RBRACKET
    (8) expression -> . ARRAY LPAREN expression_list RPAREN
    (9) expression -> . LBRACKET RBRACKET
    (10) expression -> . ARRAY LPAREN RPAREN
    (11) expression -> . IDENTIFIER LBRACKET expression RBRACKET
    (12) expression -> . MINUS expression
    (13) expression -> . NOT expression
    (14) expression -> . expression PLUS expression
    (15) expression -> . expression MINUS expression
    (16) expression -> . expression TIMES expression
    (17) expression -> . expression DIVIDE expression
    (18) expression -> . expression LESS_THEN expression
    (19) expression -> . expression GREATER_THEN expression
    (20) expression -> . expression LESS_EQUALS expression
    (21) expression -> . expression GREATER_EQUALS expression
    (22) expression -> . expression EQUALS expression
    (23) expression -> . expression NOT_EQUALS expression
    (24) expression -> . expression AND expression
    (25) expression -> . expression NAND expression
    (26) expression -> . expression OR expression
    (27) expression -> . expression NOR expression
    (28) expression -> . expression XOR expression
    (29) expression -> . expression EQ expression
    (30) expression -> . expression NEQ expression
    (31) expression -> . expression IMPL expression
    (32) expression -> . LPAREN expression RPAREN
    (33) expression -> . TRUE
    (34) expression -> . FALSE
    (35) expression -> . IDENTIFIER
    (36) expression -> . IDENTIFIER ASSIGN expression
    (37) expression -> . BEGIN body END
    (40) expression -> . LOOP expression DO expression
    (41) expression -> . FOR expression SEPARATOR expression SEPARATOR expression DO expression
    (42) expression -> . WHILE expression DO expression
    (43) expression -> . IF expression THEN expression
    (44) expression -> . IF expression THEN expression ELSE expression
    (47) expression -> . LOCK identifier_list IN expression
    (50) expression -> . LET assign_list IN expression
    (51) expression -> . LETREC assign_list IN expression
    (54) expression -> . LAMBDA identifier_list ARROW expression
    (55) expression -> . LAMBDA ARROW expression
    (56) expression -> . expression LPAREN expression_list RPAREN
    (57) expression -> . expression LPAREN RPAREN
    (62) expression -> . STRUCT BEGIN struct_body END
    (63) expression -> . expression dots IDENTIFIER
    (64) expression -> . dots IDENTIFIER
    (65) expression -> . EXTEND expression BEGIN struct_body END
    (66) expression -> . PROC LPAREN identifier_list RPAREN identifier_list ARROW expression
    (67) expression -> . PROC LPAREN RPAREN identifier_list ARROW expression
    (68) expression -> . PROC LPAREN identifier_list RPAREN ARROW expression
    (69) expression -> . PROC LPAREN RPAREN ARROW expression
    (58) dots -> . DOT
    (59) dots -> . dots DOT

    NUMBER          shift and go to state 2
    FLOAT           shift and go to state 3
    CHAR            shift and go to state 4
    STRING          shift and go to state 5
    LIST            shift and go to state 6
    LBRACKET        shift and go to state 8
    ARRAY           shift and go to state 9
    IDENTIFIER      shift and go to state 10
    MINUS           shift and go to state 11
    NOT             shift and go to state 12
    LPAREN          shift and go to state 7
    TRUE            shift and go to state 13
    FALSE           shift and go to state 14
    BEGIN           shift and go to state 15
    LOOP            shift and go to state 16
    FOR             shift and go to state 17
    WHILE           shift and go to state 18
    IF              shift and go to state 19
    LOCK            shift and go to state 20
    LET             shift and go to state 21
    LETREC          shift and go to state 22
    LAMBDA          shift and go to state 23
    STRUCT          shift and go to state 24
    EXTEND          shift and go to state 26
    PROC            shift and go to state 27
    DOT             shift and go to state 28

    expression                     shift and go to state 162
    dots                           shift and go to state 25

state 153

    (61) struct_body -> struct_body SEPARATOR IDENTIFIER . ASSIGN expression

    ASSIGN          shift and go to state 163


state 154

    (60) struct_body -> IDENTIFIER ASSIGN expression .
    (14) expression -> expression . PLUS expression
    (15) expression -> expression . MINUS expression
    (16) expression -> expression . TIMES expression
    (17) expression -> expression . DIVIDE expression
    (18) expression -> expression . LESS_THEN expression
    (19) expression -> expression . GREATER_THEN expression
    (20) expression -> expression . LESS_EQUALS expression
    (21) expression -> expression . GREATER_EQUALS expression
    (22) expression -> expression . EQUALS expression
    (23) expression -> expression . NOT_EQUALS expression
    (24) expression -> expression . AND expression
    (25) expression -> expression . NAND expression
    (26) expression -> expression . OR expression
    (27) expression -> expression . NOR expression
    (28) expression -> expression . XOR expression
    (29) expression -> expression . EQ expression
    (30) expression -> expression . NEQ expression
    (31) expression -> expression . IMPL expression
    (56) expression -> expression . LPAREN expression_list RPAREN
    (57) expression -> expression . LPAREN RPAREN
    (63) expression -> expression . dots IDENTIFIER
    (58) dots -> . DOT
    (59) dots -> . dots DOT

    END             reduce using rule 60 (struct_body -> IDENTIFIER ASSIGN expression .)
    SEPARATOR       reduce using rule 60 (struct_body -> IDENTIFIER ASSIGN expression .)
    PLUS            shift and go to state 29
    MINUS           shift and go to state 30
    TIMES           shift and go to state 31
    DIVIDE          shift and go to state 32
    LESS_THEN       shift and go to state 33
    GREATER_THEN    shift and go to state 34
    LESS_EQUALS     shift and go to state 35
    GREATER_EQUALS  shift and go to state 36
    EQUALS          shift and go to state 37
    NOT_EQUALS      shift and go to state 38
    AND             shift and go to state 39
    NAND            shift and go to state 40
    OR              shift and go to state 41
    NOR             shift and go to state 42
    XOR             shift and go to state 43
    EQ              shift and go to state 44
    NEQ             shift and go to state 45
    IMPL            shift and go to state 46
    LPAREN          shift and go to state 47
    DOT             shift and go to state 28

    dots                           shift and go to state 48

state 155

    (65) expression -> EXTEND expression BEGIN struct_body END .

    PLUS            reduce using rule 65 (expression -> EXTEND expression BEGIN struct_body END .)
    MINUS           reduce using rule 65 (expression -> EXTEND expression BEGIN struct_body END .)
    TIMES           reduce using rule 65 (expression -> EXTEND expression BEGIN struct_body END .)
    DIVIDE          reduce using rule 65 (expression -> EXTEND expression BEGIN struct_body END .)
    LESS_THEN       reduce using rule 65 (expression -> EXTEND expression BEGIN struct_body END .)
    GREATER_THEN    reduce using rule 65 (expression -> EXTEND expression BEGIN struct_body END .)
    LESS_EQUALS     reduce using rule 65 (expression -> EXTEND expression BEGIN struct_body END .)
    GREATER_EQUALS  reduce using rule 65 (expression -> EXTEND expression BEGIN struct_body END .)
    EQUALS          reduce using rule 65 (expression -> EXTEND expression BEGIN struct_body END .)
    NOT_EQUALS      reduce using rule 65 (expression -> EXTEND expression BEGIN struct_body END .)
    AND             reduce using rule 65 (expression -> EXTEND expression BEGIN struct_body END .)
    NAND            reduce using rule 65 (expression -> EXTEND expression BEGIN struct_body END .)
    OR              reduce using rule 65 (expression -> EXTEND expression BEGIN struct_body END .)
    NOR             reduce using rule 65 (expression -> EXTEND expression BEGIN struct_body END .)
    XOR             reduce using rule 65 (expression -> EXTEND expression BEGIN struct_body END .)
    EQ              reduce using rule 65 (expression -> EXTEND expression BEGIN struct_body END .)
    NEQ             reduce using rule 65 (expression -> EXTEND expression BEGIN struct_body END .)
    IMPL            reduce using rule 65 (expression -> EXTEND expression BEGIN struct_body END .)
    LPAREN          reduce using rule 65 (expression -> EXTEND expression BEGIN struct_body END .)
    DOT             reduce using rule 65 (expression -> EXTEND expression BEGIN struct_body END .)
    $end            reduce using rule 65 (expression -> EXTEND expression BEGIN struct_body END .)
    RPAREN          reduce using rule 65 (expression -> EXTEND expression BEGIN struct_body END .)
    COMMA           reduce using rule 65 (expression -> EXTEND expression BEGIN struct_body END .)
    RBRACKET        reduce using rule 65 (expression -> EXTEND expression BEGIN struct_body END .)
    END             reduce using rule 65 (expression -> EXTEND expression BEGIN struct_body END .)
    SEPARATOR       reduce using rule 65 (expression -> EXTEND expression BEGIN struct_body END .)
    DO              reduce using rule 65 (expression -> EXTEND expression BEGIN struct_body END .)
    THEN            reduce using rule 65 (expression -> EXTEND expression BEGIN struct_body END .)
    BEGIN           reduce using rule 65 (expression -> EXTEND expression BEGIN struct_body END .)
    ELSE            reduce using rule 65 (expression -> EXTEND expression BEGIN struct_body END .)
    IN              reduce using rule 65 (expression -> EXTEND expression BEGIN struct_body END .)


state 156

    (66) expression -> PROC LPAREN identifier_list RPAREN identifier_list . ARROW expression

    ARROW           shift and go to state 164


state 157

    (68) expression -> PROC LPAREN identifier_list RPAREN ARROW . expression
    (1) expression -> . NUMBER
    (2) expression -> . FLOAT
    (3) expression -> . CHAR
    (4) expression -> . STRING
    (5) expression -> . LIST LPAREN expression_list RPAREN
    (6) expression -> . LIST LPAREN RPAREN
    (7) expression -> . LBRACKET expression_list RBRACKET
    (8) expression -> . ARRAY LPAREN expression_list RPAREN
    (9) expression -> . LBRACKET RBRACKET
    (10) expression -> . ARRAY LPAREN RPAREN
    (11) expression -> . IDENTIFIER LBRACKET expression RBRACKET
    (12) expression -> . MINUS expression
    (13) expression -> . NOT expression
    (14) expression -> . expression PLUS expression
    (15) expression -> . expression MINUS expression
    (16) expression -> . expression TIMES expression
    (17) expression -> . expression DIVIDE expression
    (18) expression -> . expression LESS_THEN expression
    (19) expression -> . expression GREATER_THEN expression
    (20) expression -> . expression LESS_EQUALS expression
    (21) expression -> . expression GREATER_EQUALS expression
    (22) expression -> . expression EQUALS expression
    (23) expression -> . expression NOT_EQUALS expression
    (24) expression -> . expression AND expression
    (25) expression -> . expression NAND expression
    (26) expression -> . expression OR expression
    (27) expression -> . expression NOR expression
    (28) expression -> . expression XOR expression
    (29) expression -> . expression EQ expression
    (30) expression -> . expression NEQ expression
    (31) expression -> . expression IMPL expression
    (32) expression -> . LPAREN expression RPAREN
    (33) expression -> . TRUE
    (34) expression -> . FALSE
    (35) expression -> . IDENTIFIER
    (36) expression -> . IDENTIFIER ASSIGN expression
    (37) expression -> . BEGIN body END
    (40) expression -> . LOOP expression DO expression
    (41) expression -> . FOR expression SEPARATOR expression SEPARATOR expression DO expression
    (42) expression -> . WHILE expression DO expression
    (43) expression -> . IF expression THEN expression
    (44) expression -> . IF expression THEN expression ELSE expression
    (47) expression -> . LOCK identifier_list IN expression
    (50) expression -> . LET assign_list IN expression
    (51) expression -> . LETREC assign_list IN expression
    (54) expression -> . LAMBDA identifier_list ARROW expression
    (55) expression -> . LAMBDA ARROW expression
    (56) expression -> . expression LPAREN expression_list RPAREN
    (57) expression -> . expression LPAREN RPAREN
    (62) expression -> . STRUCT BEGIN struct_body END
    (63) expression -> . expression dots IDENTIFIER
    (64) expression -> . dots IDENTIFIER
    (65) expression -> . EXTEND expression BEGIN struct_body END
    (66) expression -> . PROC LPAREN identifier_list RPAREN identifier_list ARROW expression
    (67) expression -> . PROC LPAREN RPAREN identifier_list ARROW expression
    (68) expression -> . PROC LPAREN identifier_list RPAREN ARROW expression
    (69) expression -> . PROC LPAREN RPAREN ARROW expression
    (58) dots -> . DOT
    (59) dots -> . dots DOT

    NUMBER          shift and go to state 2
    FLOAT           shift and go to state 3
    CHAR            shift and go to state 4
    STRING          shift and go to state 5
    LIST            shift and go to state 6
    LBRACKET        shift and go to state 8
    ARRAY           shift and go to state 9
    IDENTIFIER      shift and go to state 10
    MINUS           shift and go to state 11
    NOT             shift and go to state 12
    LPAREN          shift and go to state 7
    TRUE            shift and go to state 13
    FALSE           shift and go to state 14
    BEGIN           shift and go to state 15
    LOOP            shift and go to state 16
    FOR             shift and go to state 17
    WHILE           shift and go to state 18
    IF              shift and go to state 19
    LOCK            shift and go to state 20
    LET             shift and go to state 21
    LETREC          shift and go to state 22
    LAMBDA          shift and go to state 23
    STRUCT          shift and go to state 24
    EXTEND          shift and go to state 26
    PROC            shift and go to state 27
    DOT             shift and go to state 28

    expression                     shift and go to state 165
    dots                           shift and go to state 25

state 158

    (67) expression -> PROC LPAREN RPAREN identifier_list ARROW . expression
    (1) expression -> . NUMBER
    (2) expression -> . FLOAT
    (3) expression -> . CHAR
    (4) expression -> . STRING
    (5) expression -> . LIST LPAREN expression_list RPAREN
    (6) expression -> . LIST LPAREN RPAREN
    (7) expression -> . LBRACKET expression_list RBRACKET
    (8) expression -> . ARRAY LPAREN expression_list RPAREN
    (9) expression -> . LBRACKET RBRACKET
    (10) expression -> . ARRAY LPAREN RPAREN
    (11) expression -> . IDENTIFIER LBRACKET expression RBRACKET
    (12) expression -> . MINUS expression
    (13) expression -> . NOT expression
    (14) expression -> . expression PLUS expression
    (15) expression -> . expression MINUS expression
    (16) expression -> . expression TIMES expression
    (17) expression -> . expression DIVIDE expression
    (18) expression -> . expression LESS_THEN expression
    (19) expression -> . expression GREATER_THEN expression
    (20) expression -> . expression LESS_EQUALS expression
    (21) expression -> . expression GREATER_EQUALS expression
    (22) expression -> . expression EQUALS expression
    (23) expression -> . expression NOT_EQUALS expression
    (24) expression -> . expression AND expression
    (25) expression -> . expression NAND expression
    (26) expression -> . expression OR expression
    (27) expression -> . expression NOR expression
    (28) expression -> . expression XOR expression
    (29) expression -> . expression EQ expression
    (30) expression -> . expression NEQ expression
    (31) expression -> . expression IMPL expression
    (32) expression -> . LPAREN expression RPAREN
    (33) expression -> . TRUE
    (34) expression -> . FALSE
    (35) expression -> . IDENTIFIER
    (36) expression -> . IDENTIFIER ASSIGN expression
    (37) expression -> . BEGIN body END
    (40) expression -> . LOOP expression DO expression
    (41) expression -> . FOR expression SEPARATOR expression SEPARATOR expression DO expression
    (42) expression -> . WHILE expression DO expression
    (43) expression -> . IF expression THEN expression
    (44) expression -> . IF expression THEN expression ELSE expression
    (47) expression -> . LOCK identifier_list IN expression
    (50) expression -> . LET assign_list IN expression
    (51) expression -> . LETREC assign_list IN expression
    (54) expression -> . LAMBDA identifier_list ARROW expression
    (55) expression -> . LAMBDA ARROW expression
    (56) expression -> . expression LPAREN expression_list RPAREN
    (57) expression -> . expression LPAREN RPAREN
    (62) expression -> . STRUCT BEGIN struct_body END
    (63) expression -> . expression dots IDENTIFIER
    (64) expression -> . dots IDENTIFIER
    (65) expression -> . EXTEND expression BEGIN struct_body END
    (66) expression -> . PROC LPAREN identifier_list RPAREN identifier_list ARROW expression
    (67) expression -> . PROC LPAREN RPAREN identifier_list ARROW expression
    (68) expression -> . PROC LPAREN identifier_list RPAREN ARROW expression
    (69) expression -> . PROC LPAREN RPAREN ARROW expression
    (58) dots -> . DOT
    (59) dots -> . dots DOT

    NUMBER          shift and go to state 2
    FLOAT           shift and go to state 3
    CHAR            shift and go to state 4
    STRING          shift and go to state 5
    LIST            shift and go to state 6
    LBRACKET        shift and go to state 8
    ARRAY           shift and go to state 9
    IDENTIFIER      shift and go to state 10
    MINUS           shift and go to state 11
    NOT             shift and go to state 12
    LPAREN          shift and go to state 7
    TRUE            shift and go to state 13
    FALSE           shift and go to state 14
    BEGIN           shift and go to state 15
    LOOP            shift and go to state 16
    FOR             shift and go to state 17
    WHILE           shift and go to state 18
    IF              shift and go to state 19
    LOCK            shift and go to state 20
    LET             shift and go to state 21
    LETREC          shift and go to state 22
    LAMBDA          shift and go to state 23
    STRUCT          shift and go to state 24
    EXTEND          shift and go to state 26
    PROC            shift and go to state 27
    DOT             shift and go to state 28

    expression                     shift and go to state 166
    dots                           shift and go to state 25

state 159

    (69) expression -> PROC LPAREN RPAREN ARROW expression .
    (14) expression -> expression . PLUS expression
    (15) expression -> expression . MINUS expression
    (16) expression -> expression . TIMES expression
    (17) expression -> expression . DIVIDE expression
    (18) expression -> expression . LESS_THEN expression
    (19) expression -> expression . GREATER_THEN expression
    (20) expression -> expression . LESS_EQUALS expression
    (21) expression -> expression . GREATER_EQUALS expression
    (22) expression -> expression . EQUALS expression
    (23) expression -> expression . NOT_EQUALS expression
    (24) expression -> expression . AND expression
    (25) expression -> expression . NAND expression
    (26) expression -> expression . OR expression
    (27) expression -> expression . NOR expression
    (28) expression -> expression . XOR expression
    (29) expression -> expression . EQ expression
    (30) expression -> expression . NEQ expression
    (31) expression -> expression . IMPL expression
    (56) expression -> expression . LPAREN expression_list RPAREN
    (57) expression -> expression . LPAREN RPAREN
    (63) expression -> expression . dots IDENTIFIER
    (58) dots -> . DOT
    (59) dots -> . dots DOT

    $end            reduce using rule 69 (expression -> PROC LPAREN RPAREN ARROW expression .)
    RPAREN          reduce using rule 69 (expression -> PROC LPAREN RPAREN ARROW expression .)
    COMMA           reduce using rule 69 (expression -> PROC LPAREN RPAREN ARROW expression .)
    RBRACKET        reduce using rule 69 (expression -> PROC LPAREN RPAREN ARROW expression .)
    END             reduce using rule 69 (expression -> PROC LPAREN RPAREN ARROW expression .)
    SEPARATOR       reduce using rule 69 (expression -> PROC LPAREN RPAREN ARROW expression .)
    DO              reduce using rule 69 (expression -> PROC LPAREN RPAREN ARROW expression .)
    THEN            reduce using rule 69 (expression -> PROC LPAREN RPAREN ARROW expression .)
    BEGIN           reduce using rule 69 (expression -> PROC LPAREN RPAREN ARROW expression .)
    ELSE            reduce using rule 69 (expression -> PROC LPAREN RPAREN ARROW expression .)
    IN              reduce using rule 69 (expression -> PROC LPAREN RPAREN ARROW expression .)
    PLUS            shift and go to state 29
    MINUS           shift and go to state 30
    TIMES           shift and go to state 31
    DIVIDE          shift and go to state 32
    LESS_THEN       shift and go to state 33
    GREATER_THEN    shift and go to state 34
    LESS_EQUALS     shift and go to state 35
    GREATER_EQUALS  shift and go to state 36
    EQUALS          shift and go to state 37
    NOT_EQUALS      shift and go to state 38
    AND             shift and go to state 39
    NAND            shift and go to state 40
    OR              shift and go to state 41
    NOR             shift and go to state 42
    XOR             shift and go to state 43
    EQ              shift and go to state 44
    NEQ             shift and go to state 45
    IMPL            shift and go to state 46
    LPAREN          shift and go to state 47
    DOT             shift and go to state 28

  ! PLUS            [ reduce using rule 69 (expression -> PROC LPAREN RPAREN ARROW expression .) ]
  ! MINUS           [ reduce using rule 69 (expression -> PROC LPAREN RPAREN ARROW expression .) ]
  ! TIMES           [ reduce using rule 69 (expression -> PROC LPAREN RPAREN ARROW expression .) ]
  ! DIVIDE          [ reduce using rule 69 (expression -> PROC LPAREN RPAREN ARROW expression .) ]
  ! LESS_THEN       [ reduce using rule 69 (expression -> PROC LPAREN RPAREN ARROW expression .) ]
  ! GREATER_THEN    [ reduce using rule 69 (expression -> PROC LPAREN RPAREN ARROW expression .) ]
  ! LESS_EQUALS     [ reduce using rule 69 (expression -> PROC LPAREN RPAREN ARROW expression .) ]
  ! GREATER_EQUALS  [ reduce using rule 69 (expression -> PROC LPAREN RPAREN ARROW expression .) ]
  ! EQUALS          [ reduce using rule 69 (expression -> PROC LPAREN RPAREN ARROW expression .) ]
  ! NOT_EQUALS      [ reduce using rule 69 (expression -> PROC LPAREN RPAREN ARROW expression .) ]
  ! AND             [ reduce using rule 69 (expression -> PROC LPAREN RPAREN ARROW expression .) ]
  ! NAND            [ reduce using rule 69 (expression -> PROC LPAREN RPAREN ARROW expression .) ]
  ! OR              [ reduce using rule 69 (expression -> PROC LPAREN RPAREN ARROW expression .) ]
  ! NOR             [ reduce using rule 69 (expression -> PROC LPAREN RPAREN ARROW expression .) ]
  ! XOR             [ reduce using rule 69 (expression -> PROC LPAREN RPAREN ARROW expression .) ]
  ! EQ              [ reduce using rule 69 (expression -> PROC LPAREN RPAREN ARROW expression .) ]
  ! NEQ             [ reduce using rule 69 (expression -> PROC LPAREN RPAREN ARROW expression .) ]
  ! IMPL            [ reduce using rule 69 (expression -> PROC LPAREN RPAREN ARROW expression .) ]
  ! LPAREN          [ reduce using rule 69 (expression -> PROC LPAREN RPAREN ARROW expression .) ]
  ! DOT             [ reduce using rule 69 (expression -> PROC LPAREN RPAREN ARROW expression .) ]

    dots                           shift and go to state 48

state 160

    (41) expression -> FOR expression SEPARATOR expression SEPARATOR expression . DO expression
    (14) expression -> expression . PLUS expression
    (15) expression -> expression . MINUS expression
    (16) expression -> expression . TIMES expression
    (17) expression -> expression . DIVIDE expression
    (18) expression -> expression . LESS_THEN expression
    (19) expression -> expression . GREATER_THEN expression
    (20) expression -> expression . LESS_EQUALS expression
    (21) expression -> expression . GREATER_EQUALS expression
    (22) expression -> expression . EQUALS expression
    (23) expression -> expression . NOT_EQUALS expression
    (24) expression -> expression . AND expression
    (25) expression -> expression . NAND expression
    (26) expression -> expression . OR expression
    (27) expression -> expression . NOR expression
    (28) expression -> expression . XOR expression
    (29) expression -> expression . EQ expression
    (30) expression -> expression . NEQ expression
    (31) expression -> expression . IMPL expression
    (56) expression -> expression . LPAREN expression_list RPAREN
    (57) expression -> expression . LPAREN RPAREN
    (63) expression -> expression . dots IDENTIFIER
    (58) dots -> . DOT
    (59) dots -> . dots DOT

    DO              shift and go to state 167
    PLUS            shift and go to state 29
    MINUS           shift and go to state 30
    TIMES           shift and go to state 31
    DIVIDE          shift and go to state 32
    LESS_THEN       shift and go to state 33
    GREATER_THEN    shift and go to state 34
    LESS_EQUALS     shift and go to state 35
    GREATER_EQUALS  shift and go to state 36
    EQUALS          shift and go to state 37
    NOT_EQUALS      shift and go to state 38
    AND             shift and go to state 39
    NAND            shift and go to state 40
    OR              shift and go to state 41
    NOR             shift and go to state 42
    XOR             shift and go to state 43
    EQ              shift and go to state 44
    NEQ             shift and go to state 45
    IMPL            shift and go to state 46
    LPAREN          shift and go to state 47
    DOT             shift and go to state 28

    dots                           shift and go to state 48

state 161

    (44) expression -> IF expression THEN expression ELSE expression .
    (14) expression -> expression . PLUS expression
    (15) expression -> expression . MINUS expression
    (16) expression -> expression . TIMES expression
    (17) expression -> expression . DIVIDE expression
    (18) expression -> expression . LESS_THEN expression
    (19) expression -> expression . GREATER_THEN expression
    (20) expression -> expression . LESS_EQUALS expression
    (21) expression -> expression . GREATER_EQUALS expression
    (22) expression -> expression . EQUALS expression
    (23) expression -> expression . NOT_EQUALS expression
    (24) expression -> expression . AND expression
    (25) expression -> expression . NAND expression
    (26) expression -> expression . OR expression
    (27) expression -> expression . NOR expression
    (28) expression -> expression . XOR expression
    (29) expression -> expression . EQ expression
    (30) expression -> expression . NEQ expression
    (31) expression -> expression . IMPL expression
    (56) expression -> expression . LPAREN expression_list RPAREN
    (57) expression -> expression . LPAREN RPAREN
    (63) expression -> expression . dots IDENTIFIER
    (58) dots -> . DOT
    (59) dots -> . dots DOT

    $end            reduce using rule 44 (expression -> IF expression THEN expression ELSE expression .)
    RPAREN          reduce using rule 44 (expression -> IF expression THEN expression ELSE expression .)
    COMMA           reduce using rule 44 (expression -> IF expression THEN expression ELSE expression .)
    RBRACKET        reduce using rule 44 (expression -> IF expression THEN expression ELSE expression .)
    END             reduce using rule 44 (expression -> IF expression THEN expression ELSE expression .)
    SEPARATOR       reduce using rule 44 (expression -> IF expression THEN expression ELSE expression .)
    DO              reduce using rule 44 (expression -> IF expression THEN expression ELSE expression .)
    THEN            reduce using rule 44 (expression -> IF expression THEN expression ELSE expression .)
    BEGIN           reduce using rule 44 (expression -> IF expression THEN expression ELSE expression .)
    ELSE            reduce using rule 44 (expression -> IF expression THEN expression ELSE expression .)
    IN              reduce using rule 44 (expression -> IF expression THEN expression ELSE expression .)
    PLUS            shift and go to state 29
    MINUS           shift and go to state 30
    TIMES           shift and go to state 31
    DIVIDE          shift and go to state 32
    LESS_THEN       shift and go to state 33
    GREATER_THEN    shift and go to state 34
    LESS_EQUALS     shift and go to state 35
    GREATER_EQUALS  shift and go to state 36
    EQUALS          shift and go to state 37
    NOT_EQUALS      shift and go to state 38
    AND             shift and go to state 39
    NAND            shift and go to state 40
    OR              shift and go to state 41
    NOR             shift and go to state 42
    XOR             shift and go to state 43
    EQ              shift and go to state 44
    NEQ             shift and go to state 45
    IMPL            shift and go to state 46
    LPAREN          shift and go to state 47
    DOT             shift and go to state 28

  ! PLUS            [ reduce using rule 44 (expression -> IF expression THEN expression ELSE expression .) ]
  ! MINUS           [ reduce using rule 44 (expression -> IF expression THEN expression ELSE expression .) ]
  ! TIMES           [ reduce using rule 44 (expression -> IF expression THEN expression ELSE expression .) ]
  ! DIVIDE          [ reduce using rule 44 (expression -> IF expression THEN expression ELSE expression .) ]
  ! LESS_THEN       [ reduce using rule 44 (expression -> IF expression THEN expression ELSE expression .) ]
  ! GREATER_THEN    [ reduce using rule 44 (expression -> IF expression THEN expression ELSE expression .) ]
  ! LESS_EQUALS     [ reduce using rule 44 (expression -> IF expression THEN expression ELSE expression .) ]
  ! GREATER_EQUALS  [ reduce using rule 44 (expression -> IF expression THEN expression ELSE expression .) ]
  ! EQUALS          [ reduce using rule 44 (expression -> IF expression THEN expression ELSE expression .) ]
  ! NOT_EQUALS      [ reduce using rule 44 (expression -> IF expression THEN expression ELSE expression .) ]
  ! AND             [ reduce using rule 44 (expression -> IF expression THEN expression ELSE expression .) ]
  ! NAND            [ reduce using rule 44 (expression -> IF expression THEN expression ELSE expression .) ]
  ! OR              [ reduce using rule 44 (expression -> IF expression THEN expression ELSE expression .) ]
  ! NOR             [ reduce using rule 44 (expression -> IF expression THEN expression ELSE expression .) ]
  ! XOR             [ reduce using rule 44 (expression -> IF expression THEN expression ELSE expression .) ]
  ! EQ              [ reduce using rule 44 (expression -> IF expression THEN expression ELSE expression .) ]
  ! NEQ             [ reduce using rule 44 (expression -> IF expression THEN expression ELSE expression .) ]
  ! IMPL            [ reduce using rule 44 (expression -> IF expression THEN expression ELSE expression .) ]
  ! LPAREN          [ reduce using rule 44 (expression -> IF expression THEN expression ELSE expression .) ]
  ! DOT             [ reduce using rule 44 (expression -> IF expression THEN expression ELSE expression .) ]

    dots                           shift and go to state 48

state 162

    (49) assign_list -> assign_list COMMA IDENTIFIER ASSIGN expression .
    (14) expression -> expression . PLUS expression
    (15) expression -> expression . MINUS expression
    (16) expression -> expression . TIMES expression
    (17) expression -> expression . DIVIDE expression
    (18) expression -> expression . LESS_THEN expression
    (19) expression -> expression . GREATER_THEN expression
    (20) expression -> expression . LESS_EQUALS expression
    (21) expression -> expression . GREATER_EQUALS expression
    (22) expression -> expression . EQUALS expression
    (23) expression -> expression . NOT_EQUALS expression
    (24) expression -> expression . AND expression
    (25) expression -> expression . NAND expression
    (26) expression -> expression . OR expression
    (27) expression -> expression . NOR expression
    (28) expression -> expression . XOR expression
    (29) expression -> expression . EQ expression
    (30) expression -> expression . NEQ expression
    (31) expression -> expression . IMPL expression
    (56) expression -> expression . LPAREN expression_list RPAREN
    (57) expression -> expression . LPAREN RPAREN
    (63) expression -> expression . dots IDENTIFIER
    (58) dots -> . DOT
    (59) dots -> . dots DOT

    IN              reduce using rule 49 (assign_list -> assign_list COMMA IDENTIFIER ASSIGN expression .)
    COMMA           reduce using rule 49 (assign_list -> assign_list COMMA IDENTIFIER ASSIGN expression .)
    PLUS            shift and go to state 29
    MINUS           shift and go to state 30
    TIMES           shift and go to state 31
    DIVIDE          shift and go to state 32
    LESS_THEN       shift and go to state 33
    GREATER_THEN    shift and go to state 34
    LESS_EQUALS     shift and go to state 35
    GREATER_EQUALS  shift and go to state 36
    EQUALS          shift and go to state 37
    NOT_EQUALS      shift and go to state 38
    AND             shift and go to state 39
    NAND            shift and go to state 40
    OR              shift and go to state 41
    NOR             shift and go to state 42
    XOR             shift and go to state 43
    EQ              shift and go to state 44
    NEQ             shift and go to state 45
    IMPL            shift and go to state 46
    LPAREN          shift and go to state 47
    DOT             shift and go to state 28

    dots                           shift and go to state 48

state 163

    (61) struct_body -> struct_body SEPARATOR IDENTIFIER ASSIGN . expression
    (1) expression -> . NUMBER
    (2) expression -> . FLOAT
    (3) expression -> . CHAR
    (4) expression -> . STRING
    (5) expression -> . LIST LPAREN expression_list RPAREN
    (6) expression -> . LIST LPAREN RPAREN
    (7) expression -> . LBRACKET expression_list RBRACKET
    (8) expression -> . ARRAY LPAREN expression_list RPAREN
    (9) expression -> . LBRACKET RBRACKET
    (10) expression -> . ARRAY LPAREN RPAREN
    (11) expression -> . IDENTIFIER LBRACKET expression RBRACKET
    (12) expression -> . MINUS expression
    (13) expression -> . NOT expression
    (14) expression -> . expression PLUS expression
    (15) expression -> . expression MINUS expression
    (16) expression -> . expression TIMES expression
    (17) expression -> . expression DIVIDE expression
    (18) expression -> . expression LESS_THEN expression
    (19) expression -> . expression GREATER_THEN expression
    (20) expression -> . expression LESS_EQUALS expression
    (21) expression -> . expression GREATER_EQUALS expression
    (22) expression -> . expression EQUALS expression
    (23) expression -> . expression NOT_EQUALS expression
    (24) expression -> . expression AND expression
    (25) expression -> . expression NAND expression
    (26) expression -> . expression OR expression
    (27) expression -> . expression NOR expression
    (28) expression -> . expression XOR expression
    (29) expression -> . expression EQ expression
    (30) expression -> . expression NEQ expression
    (31) expression -> . expression IMPL expression
    (32) expression -> . LPAREN expression RPAREN
    (33) expression -> . TRUE
    (34) expression -> . FALSE
    (35) expression -> . IDENTIFIER
    (36) expression -> . IDENTIFIER ASSIGN expression
    (37) expression -> . BEGIN body END
    (40) expression -> . LOOP expression DO expression
    (41) expression -> . FOR expression SEPARATOR expression SEPARATOR expression DO expression
    (42) expression -> . WHILE expression DO expression
    (43) expression -> . IF expression THEN expression
    (44) expression -> . IF expression THEN expression ELSE expression
    (47) expression -> . LOCK identifier_list IN expression
    (50) expression -> . LET assign_list IN expression
    (51) expression -> . LETREC assign_list IN expression
    (54) expression -> . LAMBDA identifier_list ARROW expression
    (55) expression -> . LAMBDA ARROW expression
    (56) expression -> . expression LPAREN expression_list RPAREN
    (57) expression -> . expression LPAREN RPAREN
    (62) expression -> . STRUCT BEGIN struct_body END
    (63) expression -> . expression dots IDENTIFIER
    (64) expression -> . dots IDENTIFIER
    (65) expression -> . EXTEND expression BEGIN struct_body END
    (66) expression -> . PROC LPAREN identifier_list RPAREN identifier_list ARROW expression
    (67) expression -> . PROC LPAREN RPAREN identifier_list ARROW expression
    (68) expression -> . PROC LPAREN identifier_list RPAREN ARROW expression
    (69) expression -> . PROC LPAREN RPAREN ARROW expression
    (58) dots -> . DOT
    (59) dots -> . dots DOT

    NUMBER          shift and go to state 2
    FLOAT           shift and go to state 3
    CHAR            shift and go to state 4
    STRING          shift and go to state 5
    LIST            shift and go to state 6
    LBRACKET        shift and go to state 8
    ARRAY           shift and go to state 9
    IDENTIFIER      shift and go to state 10
    MINUS           shift and go to state 11
    NOT             shift and go to state 12
    LPAREN          shift and go to state 7
    TRUE            shift and go to state 13
    FALSE           shift and go to state 14
    BEGIN           shift and go to state 15
    LOOP            shift and go to state 16
    FOR             shift and go to state 17
    WHILE           shift and go to state 18
    IF              shift and go to state 19
    LOCK            shift and go to state 20
    LET             shift and go to state 21
    LETREC          shift and go to state 22
    LAMBDA          shift and go to state 23
    STRUCT          shift and go to state 24
    EXTEND          shift and go to state 26
    PROC            shift and go to state 27
    DOT             shift and go to state 28

    expression                     shift and go to state 168
    dots                           shift and go to state 25

state 164

    (66) expression -> PROC LPAREN identifier_list RPAREN identifier_list ARROW . expression
    (1) expression -> . NUMBER
    (2) expression -> . FLOAT
    (3) expression -> . CHAR
    (4) expression -> . STRING
    (5) expression -> . LIST LPAREN expression_list RPAREN
    (6) expression -> . LIST LPAREN RPAREN
    (7) expression -> . LBRACKET expression_list RBRACKET
    (8) expression -> . ARRAY LPAREN expression_list RPAREN
    (9) expression -> . LBRACKET RBRACKET
    (10) expression -> . ARRAY LPAREN RPAREN
    (11) expression -> . IDENTIFIER LBRACKET expression RBRACKET
    (12) expression -> . MINUS expression
    (13) expression -> . NOT expression
    (14) expression -> . expression PLUS expression
    (15) expression -> . expression MINUS expression
    (16) expression -> . expression TIMES expression
    (17) expression -> . expression DIVIDE expression
    (18) expression -> . expression LESS_THEN expression
    (19) expression -> . expression GREATER_THEN expression
    (20) expression -> . expression LESS_EQUALS expression
    (21) expression -> . expression GREATER_EQUALS expression
    (22) expression -> . expression EQUALS expression
    (23) expression -> . expression NOT_EQUALS expression
    (24) expression -> . expression AND expression
    (25) expression -> . expression NAND expression
    (26) expression -> . expression OR expression
    (27) expression -> . expression NOR expression
    (28) expression -> . expression XOR expression
    (29) expression -> . expression EQ expression
    (30) expression -> . expression NEQ expression
    (31) expression -> . expression IMPL expression
    (32) expression -> . LPAREN expression RPAREN
    (33) expression -> . TRUE
    (34) expression -> . FALSE
    (35) expression -> . IDENTIFIER
    (36) expression -> . IDENTIFIER ASSIGN expression
    (37) expression -> . BEGIN body END
    (40) expression -> . LOOP expression DO expression
    (41) expression -> . FOR expression SEPARATOR expression SEPARATOR expression DO expression
    (42) expression -> . WHILE expression DO expression
    (43) expression -> . IF expression THEN expression
    (44) expression -> . IF expression THEN expression ELSE expression
    (47) expression -> . LOCK identifier_list IN expression
    (50) expression -> . LET assign_list IN expression
    (51) expression -> . LETREC assign_list IN expression
    (54) expression -> . LAMBDA identifier_list ARROW expression
    (55) expression -> . LAMBDA ARROW expression
    (56) expression -> . expression LPAREN expression_list RPAREN
    (57) expression -> . expression LPAREN RPAREN
    (62) expression -> . STRUCT BEGIN struct_body END
    (63) expression -> . expression dots IDENTIFIER
    (64) expression -> . dots IDENTIFIER
    (65) expression -> . EXTEND expression BEGIN struct_body END
    (66) expression -> . PROC LPAREN identifier_list RPAREN identifier_list ARROW expression
    (67) expression -> . PROC LPAREN RPAREN identifier_list ARROW expression
    (68) expression -> . PROC LPAREN identifier_list RPAREN ARROW expression
    (69) expression -> . PROC LPAREN RPAREN ARROW expression
    (58) dots -> . DOT
    (59) dots -> . dots DOT

    NUMBER          shift and go to state 2
    FLOAT           shift and go to state 3
    CHAR            shift and go to state 4
    STRING          shift and go to state 5
    LIST            shift and go to state 6
    LBRACKET        shift and go to state 8
    ARRAY           shift and go to state 9
    IDENTIFIER      shift and go to state 10
    MINUS           shift and go to state 11
    NOT             shift and go to state 12
    LPAREN          shift and go to state 7
    TRUE            shift and go to state 13
    FALSE           shift and go to state 14
    BEGIN           shift and go to state 15
    LOOP            shift and go to state 16
    FOR             shift and go to state 17
    WHILE           shift and go to state 18
    IF              shift and go to state 19
    LOCK            shift and go to state 20
    LET             shift and go to state 21
    LETREC          shift and go to state 22
    LAMBDA          shift and go to state 23
    STRUCT          shift and go to state 24
    EXTEND          shift and go to state 26
    PROC            shift and go to state 27
    DOT             shift and go to state 28

    expression                     shift and go to state 169
    dots                           shift and go to state 25

state 165

    (68) expression -> PROC LPAREN identifier_list RPAREN ARROW expression .
    (14) expression -> expression . PLUS expression
    (15) expression -> expression . MINUS expression
    (16) expression -> expression . TIMES expression
    (17) expression -> expression . DIVIDE expression
    (18) expression -> expression . LESS_THEN expression
    (19) expression -> expression . GREATER_THEN expression
    (20) expression -> expression . LESS_EQUALS expression
    (21) expression -> expression . GREATER_EQUALS expression
    (22) expression -> expression . EQUALS expression
    (23) expression -> expression . NOT_EQUALS expression
    (24) expression -> expression . AND expression
    (25) expression -> expression . NAND expression
    (26) expression -> expression . OR expression
    (27) expression -> expression . NOR expression
    (28) expression -> expression . XOR expression
    (29) expression -> expression . EQ expression
    (30) expression -> expression . NEQ expression
    (31) expression -> expression . IMPL expression
    (56) expression -> expression . LPAREN expression_list RPAREN
    (57) expression -> expression . LPAREN RPAREN
    (63) expression -> expression . dots IDENTIFIER
    (58) dots -> . DOT
    (59) dots -> . dots DOT

    $end            reduce using rule 68 (expression -> PROC LPAREN identifier_list RPAREN ARROW expression .)
    RPAREN          reduce using rule 68 (expression -> PROC LPAREN identifier_list RPAREN ARROW expression .)
    COMMA           reduce using rule 68 (expression -> PROC LPAREN identifier_list RPAREN ARROW expression .)
    RBRACKET        reduce using rule 68 (expression -> PROC LPAREN identifier_list RPAREN ARROW expression .)
    END             reduce using rule 68 (expression -> PROC LPAREN identifier_list RPAREN ARROW expression .)
    SEPARATOR       reduce using rule 68 (expression -> PROC LPAREN identifier_list RPAREN ARROW expression .)
    DO              reduce using rule 68 (expression -> PROC LPAREN identifier_list RPAREN ARROW expression .)
    THEN            reduce using rule 68 (expression -> PROC LPAREN identifier_list RPAREN ARROW expression .)
    BEGIN           reduce using rule 68 (expression -> PROC LPAREN identifier_list RPAREN ARROW expression .)
    ELSE            reduce using rule 68 (expression -> PROC LPAREN identifier_list RPAREN ARROW expression .)
    IN              reduce using rule 68 (expression -> PROC LPAREN identifier_list RPAREN ARROW expression .)
    PLUS            shift and go to state 29
    MINUS           shift and go to state 30
    TIMES           shift and go to state 31
    DIVIDE          shift and go to state 32
    LESS_THEN       shift and go to state 33
    GREATER_THEN    shift and go to state 34
    LESS_EQUALS     shift and go to state 35
    GREATER_EQUALS  shift and go to state 36
    EQUALS          shift and go to state 37
    NOT_EQUALS      shift and go to state 38
    AND             shift and go to state 39
    NAND            shift and go to state 40
    OR              shift and go to state 41
    NOR             shift and go to state 42
    XOR             shift and go to state 43
    EQ              shift and go to state 44
    NEQ             shift and go to state 45
    IMPL            shift and go to state 46
    LPAREN          shift and go to state 47
    DOT             shift and go to state 28

  ! PLUS            [ reduce using rule 68 (expression -> PROC LPAREN identifier_list RPAREN ARROW expression .) ]
  ! MINUS           [ reduce using rule 68 (expression -> PROC LPAREN identifier_list RPAREN ARROW expression .) ]
  ! TIMES           [ reduce using rule 68 (expression -> PROC LPAREN identifier_list RPAREN ARROW expression .) ]
  ! DIVIDE          [ reduce using rule 68 (expression -> PROC LPAREN identifier_list RPAREN ARROW expression .) ]
  ! LESS_THEN       [ reduce using rule 68 (expression -> PROC LPAREN identifier_list RPAREN ARROW expression .) ]
  ! GREATER_THEN    [ reduce using rule 68 (expression -> PROC LPAREN identifier_list RPAREN ARROW expression .) ]
  ! LESS_EQUALS     [ reduce using rule 68 (expression -> PROC LPAREN identifier_list RPAREN ARROW expression .) ]
  ! GREATER_EQUALS  [ reduce using rule 68 (expression -> PROC LPAREN identifier_list RPAREN ARROW expression .) ]
  ! EQUALS          [ reduce using rule 68 (expression -> PROC LPAREN identifier_list RPAREN ARROW expression .) ]
  ! NOT_EQUALS      [ reduce using rule 68 (expression -> PROC LPAREN identifier_list RPAREN ARROW expression .) ]
  ! AND             [ reduce using rule 68 (expression -> PROC LPAREN identifier_list RPAREN ARROW expression .) ]
  ! NAND            [ reduce using rule 68 (expression -> PROC LPAREN identifier_list RPAREN ARROW expression .) ]
  ! OR              [ reduce using rule 68 (expression -> PROC LPAREN identifier_list RPAREN ARROW expression .) ]
  ! NOR             [ reduce using rule 68 (expression -> PROC LPAREN identifier_list RPAREN ARROW expression .) ]
  ! XOR             [ reduce using rule 68 (expression -> PROC LPAREN identifier_list RPAREN ARROW expression .) ]
  ! EQ              [ reduce using rule 68 (expression -> PROC LPAREN identifier_list RPAREN ARROW expression .) ]
  ! NEQ             [ reduce using rule 68 (expression -> PROC LPAREN identifier_list RPAREN ARROW expression .) ]
  ! IMPL            [ reduce using rule 68 (expression -> PROC LPAREN identifier_list RPAREN ARROW expression .) ]
  ! LPAREN          [ reduce using rule 68 (expression -> PROC LPAREN identifier_list RPAREN ARROW expression .) ]
  ! DOT             [ reduce using rule 68 (expression -> PROC LPAREN identifier_list RPAREN ARROW expression .) ]

    dots                           shift and go to state 48

state 166

    (67) expression -> PROC LPAREN RPAREN identifier_list ARROW expression .
    (14) expression -> expression . PLUS expression
    (15) expression -> expression . MINUS expression
    (16) expression -> expression . TIMES expression
    (17) expression -> expression . DIVIDE expression
    (18) expression -> expression . LESS_THEN expression
    (19) expression -> expression . GREATER_THEN expression
    (20) expression -> expression . LESS_EQUALS expression
    (21) expression -> expression . GREATER_EQUALS expression
    (22) expression -> expression . EQUALS expression
    (23) expression -> expression . NOT_EQUALS expression
    (24) expression -> expression . AND expression
    (25) expression -> expression . NAND expression
    (26) expression -> expression . OR expression
    (27) expression -> expression . NOR expression
    (28) expression -> expression . XOR expression
    (29) expression -> expression . EQ expression
    (30) expression -> expression . NEQ expression
    (31) expression -> expression . IMPL expression
    (56) expression -> expression . LPAREN expression_list RPAREN
    (57) expression -> expression . LPAREN RPAREN
    (63) expression -> expression . dots IDENTIFIER
    (58) dots -> . DOT
    (59) dots -> . dots DOT

    $end            reduce using rule 67 (expression -> PROC LPAREN RPAREN identifier_list ARROW expression .)
    RPAREN          reduce using rule 67 (expression -> PROC LPAREN RPAREN identifier_list ARROW expression .)
    COMMA           reduce using rule 67 (expression -> PROC LPAREN RPAREN identifier_list ARROW expression .)
    RBRACKET        reduce using rule 67 (expression -> PROC LPAREN RPAREN identifier_list ARROW expression .)
    END             reduce using rule 67 (expression -> PROC LPAREN RPAREN identifier_list ARROW expression .)
    SEPARATOR       reduce using rule 67 (expression -> PROC LPAREN RPAREN identifier_list ARROW expression .)
    DO              reduce using rule 67 (expression -> PROC LPAREN RPAREN identifier_list ARROW expression .)
    THEN            reduce using rule 67 (expression -> PROC LPAREN RPAREN identifier_list ARROW expression .)
    BEGIN           reduce using rule 67 (expression -> PROC LPAREN RPAREN identifier_list ARROW expression .)
    ELSE            reduce using rule 67 (expression -> PROC LPAREN RPAREN identifier_list ARROW expression .)
    IN              reduce using rule 67 (expression -> PROC LPAREN RPAREN identifier_list ARROW expression .)
    PLUS            shift and go to state 29
    MINUS           shift and go to state 30
    TIMES           shift and go to state 31
    DIVIDE          shift and go to state 32
    LESS_THEN       shift and go to state 33
    GREATER_THEN    shift and go to state 34
    LESS_EQUALS     shift and go to state 35
    GREATER_EQUALS  shift and go to state 36
    EQUALS          shift and go to state 37
    NOT_EQUALS      shift and go to state 38
    AND             shift and go to state 39
    NAND            shift and go to state 40
    OR              shift and go to state 41
    NOR             shift and go to state 42
    XOR             shift and go to state 43
    EQ              shift and go to state 44
    NEQ             shift and go to state 45
    IMPL            shift and go to state 46
    LPAREN          shift and go to state 47
    DOT             shift and go to state 28

  ! PLUS            [ reduce using rule 67 (expression -> PROC LPAREN RPAREN identifier_list ARROW expression .) ]
  ! MINUS           [ reduce using rule 67 (expression -> PROC LPAREN RPAREN identifier_list ARROW expression .) ]
  ! TIMES           [ reduce using rule 67 (expression -> PROC LPAREN RPAREN identifier_list ARROW expression .) ]
  ! DIVIDE          [ reduce using rule 67 (expression -> PROC LPAREN RPAREN identifier_list ARROW expression .) ]
  ! LESS_THEN       [ reduce using rule 67 (expression -> PROC LPAREN RPAREN identifier_list ARROW expression .) ]
  ! GREATER_THEN    [ reduce using rule 67 (expression -> PROC LPAREN RPAREN identifier_list ARROW expression .) ]
  ! LESS_EQUALS     [ reduce using rule 67 (expression -> PROC LPAREN RPAREN identifier_list ARROW expression .) ]
  ! GREATER_EQUALS  [ reduce using rule 67 (expression -> PROC LPAREN RPAREN identifier_list ARROW expression .) ]
  ! EQUALS          [ reduce using rule 67 (expression -> PROC LPAREN RPAREN identifier_list ARROW expression .) ]
  ! NOT_EQUALS      [ reduce using rule 67 (expression -> PROC LPAREN RPAREN identifier_list ARROW expression .) ]
  ! AND             [ reduce using rule 67 (expression -> PROC LPAREN RPAREN identifier_list ARROW expression .) ]
  ! NAND            [ reduce using rule 67 (expression -> PROC LPAREN RPAREN identifier_list ARROW expression .) ]
  ! OR              [ reduce using rule 67 (expression -> PROC LPAREN RPAREN identifier_list ARROW expression .) ]
  ! NOR             [ reduce using rule 67 (expression -> PROC LPAREN RPAREN identifier_list ARROW expression .) ]
  ! XOR             [ reduce using rule 67 (expression -> PROC LPAREN RPAREN identifier_list ARROW expression .) ]
  ! EQ              [ reduce using rule 67 (expression -> PROC LPAREN RPAREN identifier_list ARROW expression .) ]
  ! NEQ             [ reduce using rule 67 (expression -> PROC LPAREN RPAREN identifier_list ARROW expression .) ]
  ! IMPL            [ reduce using rule 67 (expression -> PROC LPAREN RPAREN identifier_list ARROW expression .) ]
  ! LPAREN          [ reduce using rule 67 (expression -> PROC LPAREN RPAREN identifier_list ARROW expression .) ]
  ! DOT             [ reduce using rule 67 (expression -> PROC LPAREN RPAREN identifier_list ARROW expression .) ]

    dots                           shift and go to state 48

state 167

    (41) expression -> FOR expression SEPARATOR expression SEPARATOR expression DO . expression
    (1) expression -> . NUMBER
    (2) expression -> . FLOAT
    (3) expression -> . CHAR
    (4) expression -> . STRING
    (5) expression -> . LIST LPAREN expression_list RPAREN
    (6) expression -> . LIST LPAREN RPAREN
    (7) expression -> . LBRACKET expression_list RBRACKET
    (8) expression -> . ARRAY LPAREN expression_list RPAREN
    (9) expression -> . LBRACKET RBRACKET
    (10) expression -> . ARRAY LPAREN RPAREN
    (11) expression -> . IDENTIFIER LBRACKET expression RBRACKET
    (12) expression -> . MINUS expression
    (13) expression -> . NOT expression
    (14) expression -> . expression PLUS expression
    (15) expression -> . expression MINUS expression
    (16) expression -> . expression TIMES expression
    (17) expression -> . expression DIVIDE expression
    (18) expression -> . expression LESS_THEN expression
    (19) expression -> . expression GREATER_THEN expression
    (20) expression -> . expression LESS_EQUALS expression
    (21) expression -> . expression GREATER_EQUALS expression
    (22) expression -> . expression EQUALS expression
    (23) expression -> . expression NOT_EQUALS expression
    (24) expression -> . expression AND expression
    (25) expression -> . expression NAND expression
    (26) expression -> . expression OR expression
    (27) expression -> . expression NOR expression
    (28) expression -> . expression XOR expression
    (29) expression -> . expression EQ expression
    (30) expression -> . expression NEQ expression
    (31) expression -> . expression IMPL expression
    (32) expression -> . LPAREN expression RPAREN
    (33) expression -> . TRUE
    (34) expression -> . FALSE
    (35) expression -> . IDENTIFIER
    (36) expression -> . IDENTIFIER ASSIGN expression
    (37) expression -> . BEGIN body END
    (40) expression -> . LOOP expression DO expression
    (41) expression -> . FOR expression SEPARATOR expression SEPARATOR expression DO expression
    (42) expression -> . WHILE expression DO expression
    (43) expression -> . IF expression THEN expression
    (44) expression -> . IF expression THEN expression ELSE expression
    (47) expression -> . LOCK identifier_list IN expression
    (50) expression -> . LET assign_list IN expression
    (51) expression -> . LETREC assign_list IN expression
    (54) expression -> . LAMBDA identifier_list ARROW expression
    (55) expression -> . LAMBDA ARROW expression
    (56) expression -> . expression LPAREN expression_list RPAREN
    (57) expression -> . expression LPAREN RPAREN
    (62) expression -> . STRUCT BEGIN struct_body END
    (63) expression -> . expression dots IDENTIFIER
    (64) expression -> . dots IDENTIFIER
    (65) expression -> . EXTEND expression BEGIN struct_body END
    (66) expression -> . PROC LPAREN identifier_list RPAREN identifier_list ARROW expression
    (67) expression -> . PROC LPAREN RPAREN identifier_list ARROW expression
    (68) expression -> . PROC LPAREN identifier_list RPAREN ARROW expression
    (69) expression -> . PROC LPAREN RPAREN ARROW expression
    (58) dots -> . DOT
    (59) dots -> . dots DOT

    NUMBER          shift and go to state 2
    FLOAT           shift and go to state 3
    CHAR            shift and go to state 4
    STRING          shift and go to state 5
    LIST            shift and go to state 6
    LBRACKET        shift and go to state 8
    ARRAY           shift and go to state 9
    IDENTIFIER      shift and go to state 10
    MINUS           shift and go to state 11
    NOT             shift and go to state 12
    LPAREN          shift and go to state 7
    TRUE            shift and go to state 13
    FALSE           shift and go to state 14
    BEGIN           shift and go to state 15
    LOOP            shift and go to state 16
    FOR             shift and go to state 17
    WHILE           shift and go to state 18
    IF              shift and go to state 19
    LOCK            shift and go to state 20
    LET             shift and go to state 21
    LETREC          shift and go to state 22
    LAMBDA          shift and go to state 23
    STRUCT          shift and go to state 24
    EXTEND          shift and go to state 26
    PROC            shift and go to state 27
    DOT             shift and go to state 28

    expression                     shift and go to state 170
    dots                           shift and go to state 25

state 168

    (61) struct_body -> struct_body SEPARATOR IDENTIFIER ASSIGN expression .
    (14) expression -> expression . PLUS expression
    (15) expression -> expression . MINUS expression
    (16) expression -> expression . TIMES expression
    (17) expression -> expression . DIVIDE expression
    (18) expression -> expression . LESS_THEN expression
    (19) expression -> expression . GREATER_THEN expression
    (20) expression -> expression . LESS_EQUALS expression
    (21) expression -> expression . GREATER_EQUALS expression
    (22) expression -> expression . EQUALS expression
    (23) expression -> expression . NOT_EQUALS expression
    (24) expression -> expression . AND expression
    (25) expression -> expression . NAND expression
    (26) expression -> expression . OR expression
    (27) expression -> expression . NOR expression
    (28) expression -> expression . XOR expression
    (29) expression -> expression . EQ expression
    (30) expression -> expression . NEQ expression
    (31) expression -> expression . IMPL expression
    (56) expression -> expression . LPAREN expression_list RPAREN
    (57) expression -> expression . LPAREN RPAREN
    (63) expression -> expression . dots IDENTIFIER
    (58) dots -> . DOT
    (59) dots -> . dots DOT

    END             reduce using rule 61 (struct_body -> struct_body SEPARATOR IDENTIFIER ASSIGN expression .)
    SEPARATOR       reduce using rule 61 (struct_body -> struct_body SEPARATOR IDENTIFIER ASSIGN expression .)
    PLUS            shift and go to state 29
    MINUS           shift and go to state 30
    TIMES           shift and go to state 31
    DIVIDE          shift and go to state 32
    LESS_THEN       shift and go to state 33
    GREATER_THEN    shift and go to state 34
    LESS_EQUALS     shift and go to state 35
    GREATER_EQUALS  shift and go to state 36
    EQUALS          shift and go to state 37
    NOT_EQUALS      shift and go to state 38
    AND             shift and go to state 39
    NAND            shift and go to state 40
    OR              shift and go to state 41
    NOR             shift and go to state 42
    XOR             shift and go to state 43
    EQ              shift and go to state 44
    NEQ             shift and go to state 45
    IMPL            shift and go to state 46
    LPAREN          shift and go to state 47
    DOT             shift and go to state 28

    dots                           shift and go to state 48

state 169

    (66) expression -> PROC LPAREN identifier_list RPAREN identifier_list ARROW expression .
    (14) expression -> expression . PLUS expression
    (15) expression -> expression . MINUS expression
    (16) expression -> expression . TIMES expression
    (17) expression -> expression . DIVIDE expression
    (18) expression -> expression . LESS_THEN expression
    (19) expression -> expression . GREATER_THEN expression
    (20) expression -> expression . LESS_EQUALS expression
    (21) expression -> expression . GREATER_EQUALS expression
    (22) expression -> expression . EQUALS expression
    (23) expression -> expression . NOT_EQUALS expression
    (24) expression -> expression . AND expression
    (25) expression -> expression . NAND expression
    (26) expression -> expression . OR expression
    (27) expression -> expression . NOR expression
    (28) expression -> expression . XOR expression
    (29) expression -> expression . EQ expression
    (30) expression -> expression . NEQ expression
    (31) expression -> expression . IMPL expression
    (56) expression -> expression . LPAREN expression_list RPAREN
    (57) expression -> expression . LPAREN RPAREN
    (63) expression -> expression . dots IDENTIFIER
    (58) dots -> . DOT
    (59) dots -> . dots DOT

    $end            reduce using rule 66 (expression -> PROC LPAREN identifier_list RPAREN identifier_list ARROW expression .)
    RPAREN          reduce using rule 66 (expression -> PROC LPAREN identifier_list RPAREN identifier_list ARROW expression .)
    COMMA           reduce using rule 66 (expression -> PROC LPAREN identifier_list RPAREN identifier_list ARROW expression .)
    RBRACKET        reduce using rule 66 (expression -> PROC LPAREN identifier_list RPAREN identifier_list ARROW expression .)
    END             reduce using rule 66 (expression -> PROC LPAREN identifier_list RPAREN identifier_list ARROW expression .)
    SEPARATOR       reduce using rule 66 (expression -> PROC LPAREN identifier_list RPAREN identifier_list ARROW expression .)
    DO              reduce using rule 66 (expression -> PROC LPAREN identifier_list RPAREN identifier_list ARROW expression .)
    THEN            reduce using rule 66 (expression -> PROC LPAREN identifier_list RPAREN identifier_list ARROW expression .)
    BEGIN           reduce using rule 66 (expression -> PROC LPAREN identifier_list RPAREN identifier_list ARROW expression .)
    ELSE            reduce using rule 66 (expression -> PROC LPAREN identifier_list RPAREN identifier_list ARROW expression .)
    IN              reduce using rule 66 (expression -> PROC LPAREN identifier_list RPAREN identifier_list ARROW expression .)
    PLUS            shift and go to state 29
    MINUS           shift and go to state 30
    TIMES           shift and go to state 31
    DIVIDE          shift and go to state 32
    LESS_THEN       shift and go to state 33
    GREATER_THEN    shift and go to state 34
    LESS_EQUALS     shift and go to state 35
    GREATER_EQUALS  shift and go to state 36
    EQUALS          shift and go to state 37
    NOT_EQUALS      shift and go to state 38
    AND             shift and go to state 39
    NAND            shift and go to state 40
    OR              shift and go to state 41
    NOR             shift and go to state 42
    XOR             shift and go to state 43
    EQ              shift and go to state 44
    NEQ             shift and go to state 45
    IMPL            shift and go to state 46
    LPAREN          shift and go to state 47
    DOT             shift and go to state 28

  ! PLUS            [ reduce using rule 66 (expression -> PROC LPAREN identifier_list RPAREN identifier_list ARROW expression .) ]
  ! MINUS           [ reduce using rule 66 (expression -> PROC LPAREN identifier_list RPAREN identifier_list ARROW expression .) ]
  ! TIMES           [ reduce using rule 66 (expression -> PROC LPAREN identifier_list RPAREN identifier_list ARROW expression .) ]
  ! DIVIDE          [ reduce using rule 66 (expression -> PROC LPAREN identifier_list RPAREN identifier_list ARROW expression .) ]
  ! LESS_THEN       [ reduce using rule 66 (expression -> PROC LPAREN identifier_list RPAREN identifier_list ARROW expression .) ]
  ! GREATER_THEN    [ reduce using rule 66 (expression -> PROC LPAREN identifier_list RPAREN identifier_list ARROW expression .) ]
  ! LESS_EQUALS     [ reduce using rule 66 (expression -> PROC LPAREN identifier_list RPAREN identifier_list ARROW expression .) ]
  ! GREATER_EQUALS  [ reduce using rule 66 (expression -> PROC LPAREN identifier_list RPAREN identifier_list ARROW expression .) ]
  ! EQUALS          [ reduce using rule 66 (expression -> PROC LPAREN identifier_list RPAREN identifier_list ARROW expression .) ]
  ! NOT_EQUALS      [ reduce using rule 66 (expression -> PROC LPAREN identifier_list RPAREN identifier_list ARROW expression .) ]
  ! AND             [ reduce using rule 66 (expression -> PROC LPAREN identifier_list RPAREN identifier_list ARROW expression .) ]
  ! NAND            [ reduce using rule 66 (expression -> PROC LPAREN identifier_list RPAREN identifier_list ARROW expression .) ]
  ! OR              [ reduce using rule 66 (expression -> PROC LPAREN identifier_list RPAREN identifier_list ARROW expression .) ]
  ! NOR             [ reduce using rule 66 (expression -> PROC LPAREN identifier_list RPAREN identifier_list ARROW expression .) ]
  ! XOR             [ reduce using rule 66 (expression -> PROC LPAREN identifier_list RPAREN identifier_list ARROW expression .) ]
  ! EQ              [ reduce using rule 66 (expression -> PROC LPAREN identifier_list RPAREN identifier_list ARROW expression .) ]
  ! NEQ             [ reduce using rule 66 (expression -> PROC LPAREN identifier_list RPAREN identifier_list ARROW expression .) ]
  ! IMPL            [ reduce using rule 66 (expression -> PROC LPAREN identifier_list RPAREN identifier_list ARROW expression .) ]
  ! LPAREN          [ reduce using rule 66 (expression -> PROC LPAREN identifier_list RPAREN identifier_list ARROW expression .) ]
  ! DOT             [ reduce using rule 66 (expression -> PROC LPAREN identifier_list RPAREN identifier_list ARROW expression .) ]

    dots                           shift and go to state 48

state 170

    (41) expression -> FOR expression SEPARATOR expression SEPARATOR expression DO expression .
    (14) expression -> expression . PLUS expression
    (15) expression -> expression . MINUS expression
    (16) expression -> expression . TIMES expression
    (17) expression -> expression . DIVIDE expression
    (18) expression -> expression . LESS_THEN expression
    (19) expression -> expression . GREATER_THEN expression
    (20) expression -> expression . LESS_EQUALS expression
    (21) expression -> expression . GREATER_EQUALS expression
    (22) expression -> expression . EQUALS expression
    (23) expression -> expression . NOT_EQUALS expression
    (24) expression -> expression . AND expression
    (25) expression -> expression . NAND expression
    (26) expression -> expression . OR expression
    (27) expression -> expression . NOR expression
    (28) expression -> expression . XOR expression
    (29) expression -> expression . EQ expression
    (30) expression -> expression . NEQ expression
    (31) expression -> expression . IMPL expression
    (56) expression -> expression . LPAREN expression_list RPAREN
    (57) expression -> expression . LPAREN RPAREN
    (63) expression -> expression . dots IDENTIFIER
    (58) dots -> . DOT
    (59) dots -> . dots DOT

    $end            reduce using rule 41 (expression -> FOR expression SEPARATOR expression SEPARATOR expression DO expression .)
    RPAREN          reduce using rule 41 (expression -> FOR expression SEPARATOR expression SEPARATOR expression DO expression .)
    COMMA           reduce using rule 41 (expression -> FOR expression SEPARATOR expression SEPARATOR expression DO expression .)
    RBRACKET        reduce using rule 41 (expression -> FOR expression SEPARATOR expression SEPARATOR expression DO expression .)
    END             reduce using rule 41 (expression -> FOR expression SEPARATOR expression SEPARATOR expression DO expression .)
    SEPARATOR       reduce using rule 41 (expression -> FOR expression SEPARATOR expression SEPARATOR expression DO expression .)
    DO              reduce using rule 41 (expression -> FOR expression SEPARATOR expression SEPARATOR expression DO expression .)
    THEN            reduce using rule 41 (expression -> FOR expression SEPARATOR expression SEPARATOR expression DO expression .)
    BEGIN           reduce using rule 41 (expression -> FOR expression SEPARATOR expression SEPARATOR expression DO expression .)
    ELSE            reduce using rule 41 (expression -> FOR expression SEPARATOR expression SEPARATOR expression DO expression .)
    IN              reduce using rule 41 (expression -> FOR expression SEPARATOR expression SEPARATOR expression DO expression .)
    PLUS            shift and go to state 29
    MINUS           shift and go to state 30
    TIMES           shift and go to state 31
    DIVIDE          shift and go to state 32
    LESS_THEN       shift and go to state 33
    GREATER_THEN    shift and go to state 34
    LESS_EQUALS     shift and go to state 35
    GREATER_EQUALS  shift and go to state 36
    EQUALS          shift and go to state 37
    NOT_EQUALS      shift and go to state 38
    AND             shift and go to state 39
    NAND            shift and go to state 40
    OR              shift and go to state 41
    NOR             shift and go to state 42
    XOR             shift and go to state 43
    EQ              shift and go to state 44
    NEQ             shift and go to state 45
    IMPL            shift and go to state 46
    LPAREN          shift and go to state 47
    DOT             shift and go to state 28

  ! PLUS            [ reduce using rule 41 (expression -> FOR expression SEPARATOR expression SEPARATOR expression DO expression .) ]
  ! MINUS           [ reduce using rule 41 (expression -> FOR expression SEPARATOR expression SEPARATOR expression DO expression .) ]
  ! TIMES           [ reduce using rule 41 (expression -> FOR expression SEPARATOR expression SEPARATOR expression DO expression .) ]
  ! DIVIDE          [ reduce using rule 41 (expression -> FOR expression SEPARATOR expression SEPARATOR expression DO expression .) ]
  ! LESS_THEN       [ reduce using rule 41 (expression -> FOR expression SEPARATOR expression SEPARATOR expression DO expression .) ]
  ! GREATER_THEN    [ reduce using rule 41 (expression -> FOR expression SEPARATOR expression SEPARATOR expression DO expression .) ]
  ! LESS_EQUALS     [ reduce using rule 41 (expression -> FOR expression SEPARATOR expression SEPARATOR expression DO expression .) ]
  ! GREATER_EQUALS  [ reduce using rule 41 (expression -> FOR expression SEPARATOR expression SEPARATOR expression DO expression .) ]
  ! EQUALS          [ reduce using rule 41 (expression -> FOR expression SEPARATOR expression SEPARATOR expression DO expression .) ]
  ! NOT_EQUALS      [ reduce using rule 41 (expression -> FOR expression SEPARATOR expression SEPARATOR expression DO expression .) ]
  ! AND             [ reduce using rule 41 (expression -> FOR expression SEPARATOR expression SEPARATOR expression DO expression .) ]
  ! NAND            [ reduce using rule 41 (expression -> FOR expression SEPARATOR expression SEPARATOR expression DO expression .) ]
  ! OR              [ reduce using rule 41 (expression -> FOR expression SEPARATOR expression SEPARATOR expression DO expression .) ]
  ! NOR             [ reduce using rule 41 (expression -> FOR expression SEPARATOR expression SEPARATOR expression DO expression .) ]
  ! XOR             [ reduce using rule 41 (expression -> FOR expression SEPARATOR expression SEPARATOR expression DO expression .) ]
  ! EQ              [ reduce using rule 41 (expression -> FOR expression SEPARATOR expression SEPARATOR expression DO expression .) ]
  ! NEQ             [ reduce using rule 41 (expression -> FOR expression SEPARATOR expression SEPARATOR expression DO expression .) ]
  ! IMPL            [ reduce using rule 41 (expression -> FOR expression SEPARATOR expression SEPARATOR expression DO expression .) ]
  ! LPAREN          [ reduce using rule 41 (expression -> FOR expression SEPARATOR expression SEPARATOR expression DO expression .) ]
  ! DOT             [ reduce using rule 41 (expression -> FOR expression SEPARATOR expression SEPARATOR expression DO expression .) ]

    dots                           shift and go to state 48
